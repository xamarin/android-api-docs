<Type Name="Paint" FullName="Android.Graphics.Paint">
  <TypeSignature Language="C#" Value="public class Paint : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Paint extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Paint" />
  <TypeSignature Language="F#" Value="type Paint = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/Paint", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/Paint", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The Paint class holds the style and color information about how to draw
            geometries, text and bitmaps.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/Paint" title="Reference documentation">Java documentation for <code>android.graphics.Paint</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new paint with default settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#Paint()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.Paint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint (Android.Graphics.Paint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.#ctor(Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Paint : Android.Graphics.Paint -&gt; Android.Graphics.Paint" Usage="new Android.Graphics.Paint paint" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/Paint;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/graphics/Paint;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="paint">To be added.</param>
        <summary>Create a new paint with default settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#Paint()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.Paint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Paint (Android.Graphics.PaintFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Graphics.PaintFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.#ctor(Android.Graphics.PaintFlags)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Paint : Android.Graphics.PaintFlags -&gt; Android.Graphics.Paint" Usage="new Android.Graphics.Paint flags" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="Android.Graphics.PaintFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>Create a new paint with default settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#Paint()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.Paint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Paint (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Paint : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Paint" Usage="new Android.Graphics.Paint (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual int Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Alpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Alpha" />
      <MemberSignature Language="F#" Value="member this.Alpha : int with get, set" Usage="Android.Graphics.Paint.Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlpha", "()I", "GetGetAlphaHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAlpha", "(I)V", "GetSetAlpha_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="a">set the alpha component [0..255] of the paint's color.</param>
        <summary>Helper to getColor() that just returns the color's alpha value. -or- Helper to setColor(), that only assigns the color's alpha value,
            leaving its r,g,b values unchanged.</summary>
        <value>the alpha component of the paint's color.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getAlpha()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setAlpha(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setAlpha(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AntiAlias">
      <MemberSignature Language="C#" Value="public bool AntiAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AntiAlias" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.AntiAlias" />
      <MemberSignature Language="F#" Value="member this.AntiAlias : bool with get, set" Usage="Android.Graphics.Paint.AntiAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAntiAlias", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAntiAlias", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="aa">true to set the antialias bit in the flags, false to clear it</param>
        <summary>Helper for getFlags(), returning true if ANTI_ALIAS_FLAG bit is set
            AntiAliasing smooths out the edges of what is being drawn, but is has
            no impact on the interior of the shape. -or- Helper for setFlags(), setting or clearing the ANTI_ALIAS_FLAG bit
            AntiAliasing smooths out the edges of what is being drawn, but is has
            no impact on the interior of the shape.</summary>
        <value>true if the antialias bit is set in the paint's flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isAntiAlias()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isAntiAlias()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setAntiAlias(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setAntiAlias(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ascent">
      <MemberSignature Language="C#" Value="public virtual float Ascent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Ascent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.Ascent" />
      <MemberSignature Language="F#" Value="abstract member Ascent : unit -&gt; single&#xA;override this.Ascent : unit -&gt; single" Usage="paint.Ascent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ascent", "()F", "GetAscentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ascent", "()F", "GetAscentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the distance above (negative) the baseline (ascent) based on the
            current typeface and text size.</summary>
        <returns>the distance above (negative) the baseline (ascent) based on the
                    current typeface and text size.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#ascent()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.ascent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BlendMode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.BlendMode? BlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.BlendMode BlendMode" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.BlendMode" />
      <MemberSignature Language="F#" Value="member this.BlendMode : Android.Graphics.BlendMode with get, set" Usage="Android.Graphics.Paint.BlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBlendModeHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBlendModeHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="blendmode">May be null. The blend mode to be installed in the paint</param>
        <summary>Get the paint's blend mode object. -or- Set or clear the blend mode.</summary>
        <value>the paint's blend mode (or null)</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getBlendMode()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getBlendMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setBlendMode(android.graphics.BlendMode)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setBlendMode(android.graphics.BlendMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (string? text, bool measureForwards, float maxWidth, float[]? measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(string text, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.BreakText(System.String,System.Boolean,System.Single,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member BreakText : string * bool * single * single[] -&gt; int&#xA;override this.BreakText : string * bool * single * single[] -&gt; int" Usage="paint.BreakText (text, measureForwards, maxWidth, measuredWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("breakText", "(Ljava/lang/String;ZF[F)I", "GetBreakText_Ljava_lang_String_ZFarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("breakText", "(Ljava/lang/String;ZF[F)I", "GetBreakText_Ljava_lang_String_ZFarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="measureForwards">If true, measure forwards, starting with the
                        first character in the string. Otherwise,
                        measure backwards, starting with the
                        last character in the string.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (char[]? text, int index, int count, float maxWidth, float[]? measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(char[] text, int32 index, int32 count, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.BreakText(System.Char[],System.Int32,System.Int32,System.Single,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member BreakText : char[] * int * int * single * single[] -&gt; int&#xA;override this.BreakText : char[] * int * int * single * single[] -&gt; int" Usage="paint.BreakText (text, index, count, maxWidth, measuredWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("breakText", "([CIIF[F)I", "GetBreakText_arrayCIIFarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("breakText", "([CIIF[F)I", "GetBreakText_arrayCIIFarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="index">The offset into text to begin measuring at</param>
        <param name="count">The number of maximum number of entries to measure. If count
              is negative, then the characters are measured in reverse order.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public virtual int BreakText (Java.Lang.ICharSequence? text, int start, int end, bool measureForwards, float maxWidth, float[]? measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BreakText(class Java.Lang.ICharSequence text, int32 start, int32 end, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.BreakText(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Boolean,System.Single,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member BreakText : Java.Lang.ICharSequence * int * int * bool * single * single[] -&gt; int&#xA;override this.BreakText : Java.Lang.ICharSequence * int * int * bool * single * single[] -&gt; int" Usage="paint.BreakText (text, start, end, measureForwards, maxWidth, measuredWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("breakText", "(Ljava/lang/CharSequence;IIZF[F)I", "GetBreakText_Ljava_lang_CharSequence_IIZFarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("breakText", "(Ljava/lang/CharSequence;IIZF[F)I", "GetBreakText_Ljava_lang_CharSequence_IIZFarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The offset into text to begin measuring at</param>
        <param name="end">The end of the text slice to measure.</param>
        <param name="measureForwards">If true, measure forwards, starting at start.
                        Otherwise, measure backwards, starting with end.</param>
        <param name="maxWidth">The maximum width to accumulate.</param>
        <param name="measuredWidth">Optional. If not null, returns the actual width
                     measured.</param>
        <summary>Measure the text, stopping early if the measured width exceeds maxWidth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BreakText">
      <MemberSignature Language="C#" Value="public int BreakText (string? text, int start, int end, bool measureForwards, float maxWidth, float[]? measuredWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 BreakText(string text, int32 start, int32 end, bool measureForwards, float32 maxWidth, float32[] measuredWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.BreakText(System.String,System.Int32,System.Int32,System.Boolean,System.Single,System.Single[])" />
      <MemberSignature Language="F#" Value="member this.BreakText : string * int * int * bool * single * single[] -&gt; int" Usage="paint.BreakText (text, start, end, measureForwards, maxWidth, measuredWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="measureForwards" Type="System.Boolean" />
        <Parameter Name="maxWidth" Type="System.Single" />
        <Parameter Name="measuredWidth" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="measureForwards">To be added.</param>
        <param name="maxWidth">To be added.</param>
        <param name="measuredWidth">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void ClearShadowLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearShadowLayer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.ClearShadowLayer" />
      <MemberSignature Language="F#" Value="abstract member ClearShadowLayer : unit -&gt; unit&#xA;override this.ClearShadowLayer : unit -&gt; unit" Usage="paint.ClearShadowLayer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearShadowLayer", "()V", "GetClearShadowLayerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearShadowLayer", "()V", "GetClearShadowLayerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear the shadow layer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#clearShadowLayer()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.clearShadowLayer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Color">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color Color { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color Color" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Color" />
      <MemberSignature Language="F#" Value="member this.Color : Android.Graphics.Color with get, set" Usage="Android.Graphics.Paint.Color" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColor", "()I", "GetGetColorHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setColor", "(I)V", "GetSetColor_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="color">The new color (including alpha) to set in the paint.</param>
        <summary>Return the paint's color in sRGB. -or- Set the paint's color.</summary>
        <value>the paint's color (and alpha).</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getColor()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getColor()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setColor(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter? ColorFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorFilter ColorFilter" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ColorFilter" />
      <MemberSignature Language="F#" Value="member this.ColorFilter : Android.Graphics.ColorFilter" Usage="Android.Graphics.Paint.ColorFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's colorfilter (maybe be null).</summary>
        <value>the paint's colorfilter (maybe be null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getColorFilter()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getColorFilter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorLong">
      <MemberSignature Language="C#" Value="public virtual long ColorLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ColorLong" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ColorLong" />
      <MemberSignature Language="F#" Value="member this.ColorLong : int64" Usage="Android.Graphics.Paint.ColorLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorLong", "()J", "GetGetColorLongHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColorLong", "()J", "GetGetColorLongHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's color.</summary>
        <value>the paint's color, alpha, and <c>ColorSpace</c> encoded as a
                 <c>ColorLong</c></value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getColorLong()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getColorLong()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorAfter">
      <MemberSignature Language="C#" Value="public const Android.Graphics.Cursor CursorAfter = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Cursor CursorAfter = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.CursorAfter" />
      <MemberSignature Language="F#" Value="val mutable CursorAfter : Android.Graphics.Cursor" Usage="Android.Graphics.Paint.CursorAfter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURSOR_AFTER", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURSOR_AFTER", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Cursor</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Option for getTextRunCursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#CURSOR_AFTER" title="Reference documentation">Java documentation for <code>android.graphics.Paint.CURSOR_AFTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorAt">
      <MemberSignature Language="C#" Value="public const Android.Graphics.Cursor CursorAt = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Cursor CursorAt = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.CursorAt" />
      <MemberSignature Language="F#" Value="val mutable CursorAt : Android.Graphics.Cursor" Usage="Android.Graphics.Paint.CursorAt" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURSOR_AT", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURSOR_AT", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Cursor</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Option for getTextRunCursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#CURSOR_AT" title="Reference documentation">Java documentation for <code>android.graphics.Paint.CURSOR_AT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorAtOrAfter">
      <MemberSignature Language="C#" Value="public const Android.Graphics.Cursor CursorAtOrAfter = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Cursor CursorAtOrAfter = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.CursorAtOrAfter" />
      <MemberSignature Language="F#" Value="val mutable CursorAtOrAfter : Android.Graphics.Cursor" Usage="Android.Graphics.Paint.CursorAtOrAfter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURSOR_AT_OR_AFTER", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURSOR_AT_OR_AFTER", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Cursor</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Option for getTextRunCursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#CURSOR_AT_OR_AFTER" title="Reference documentation">Java documentation for <code>android.graphics.Paint.CURSOR_AT_OR_AFTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorAtOrBefore">
      <MemberSignature Language="C#" Value="public const Android.Graphics.Cursor CursorAtOrBefore = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Cursor CursorAtOrBefore = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.CursorAtOrBefore" />
      <MemberSignature Language="F#" Value="val mutable CursorAtOrBefore : Android.Graphics.Cursor" Usage="Android.Graphics.Paint.CursorAtOrBefore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURSOR_AT_OR_BEFORE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURSOR_AT_OR_BEFORE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Cursor</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Option for getTextRunCursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#CURSOR_AT_OR_BEFORE" title="Reference documentation">Java documentation for <code>android.graphics.Paint.CURSOR_AT_OR_BEFORE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorBefore">
      <MemberSignature Language="C#" Value="public const Android.Graphics.Cursor CursorBefore = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Cursor CursorBefore = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.CursorBefore" />
      <MemberSignature Language="F#" Value="val mutable CursorBefore : Android.Graphics.Cursor" Usage="Android.Graphics.Paint.CursorBefore" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CURSOR_BEFORE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CURSOR_BEFORE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Cursor enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Cursor</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Option for getTextRunCursor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#CURSOR_BEFORE" title="Reference documentation">Java documentation for <code>android.graphics.Paint.CURSOR_BEFORE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Descent">
      <MemberSignature Language="C#" Value="public virtual float Descent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 Descent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.Descent" />
      <MemberSignature Language="F#" Value="abstract member Descent : unit -&gt; single&#xA;override this.Descent : unit -&gt; single" Usage="paint.Descent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("descent", "()F", "GetDescentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("descent", "()F", "GetDescentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the distance below (positive) the baseline (descent) based on the
            current typeface and text size.</summary>
        <returns>the distance below (positive) the baseline (descent) based on
                    the current typeface and text size.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#descent()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.descent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dither">
      <MemberSignature Language="C#" Value="public bool Dither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Dither" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Dither" />
      <MemberSignature Language="F#" Value="member this.Dither : bool with get, set" Usage="Android.Graphics.Paint.Dither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDither", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDither", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDither", "(Z)V", "GetSetDither_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="dither">true to set the dithering bit in flags, false to clear it</param>
        <summary>Helper for getFlags(), returning true if DITHER_FLAG bit is set
            Dithering affects how colors that are higher precision than the device
            are down-sampled. -or- Helper for setFlags(), setting or clearing the DITHER_FLAG bit
            Dithering affects how colors that are higher precision than the device
            are down-sampled.</summary>
        <value>true if the dithering bit is set in the paint's flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isDither()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isDither()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setDither(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setDither(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElegantTextHeight">
      <MemberSignature Language="C#" Value="public virtual bool ElegantTextHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ElegantTextHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ElegantTextHeight" />
      <MemberSignature Language="F#" Value="member this.ElegantTextHeight : bool with get, set" Usage="Android.Graphics.Paint.ElegantTextHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isElegantTextHeight", "()Z", "GetIsElegantTextHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isElegantTextHeight", "()Z", "GetIsElegantTextHeightHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setElegantTextHeight", "(Z)V", "GetSetElegantTextHeight_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setElegantTextHeight", "(Z)V", "GetSetElegantTextHeight_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="elegant">set the paint's elegant metrics flag for drawing text.</param>
        <summary>Get the elegant metrics flag. -or- Set the paint's elegant height metrics flag.</summary>
        <value>true if elegant metrics are enabled for text drawing.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isElegantTextHeight()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isElegantTextHeight()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setElegantTextHeight(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setElegantTextHeight(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEdit">
      <MemberSignature Language="C#" Value="public virtual int EndHyphenEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndHyphenEdit" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.EndHyphenEdit" />
      <MemberSignature Language="F#" Value="member this.EndHyphenEdit : int with get, set" Usage="Android.Graphics.Paint.EndHyphenEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEndHyphenEdit", "()I", "GetGetEndHyphenEditHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEndHyphenEdit", "()I", "GetGetEndHyphenEditHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setEndHyphenEdit", "(I)V", "GetSetEndHyphenEdit_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setEndHyphenEdit", "(I)V", "GetSetEndHyphenEdit_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="endHyphen">a end hyphen edit value.</param>
        <summary>Get the current value of end hyphen edit. -or- Set a end hyphen edit on the paint.</summary>
        <value>the current starting hyphen edit value</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getEndHyphenEdit()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getEndHyphenEdit()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setEndHyphenEdit(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setEndHyphenEdit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditInsertArmenianHyphen">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditInsertArmenianHyphen = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditInsertArmenianHyphen = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditInsertArmenianHyphen" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditInsertArmenianHyphen : int" Usage="Android.Graphics.Paint.EndHyphenEditInsertArmenianHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has Armentian hyphen (U+058A).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_INSERT_ARMENIAN_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditInsertHyphen">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditInsertHyphen = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditInsertHyphen = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditInsertHyphen" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditInsertHyphen : int" Usage="Android.Graphics.Paint.EndHyphenEditInsertHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has normal hyphen character (U+002D).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_INSERT_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_INSERT_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditInsertMaqaf">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditInsertMaqaf = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditInsertMaqaf = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditInsertMaqaf" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditInsertMaqaf : int" Usage="Android.Graphics.Paint.EndHyphenEditInsertMaqaf" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_MAQAF", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_MAQAF", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has maqaf (Hebrew hyphen, U+05BE).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_INSERT_MAQAF" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_INSERT_MAQAF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditInsertUcasHyphen">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditInsertUcasHyphen = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditInsertUcasHyphen = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditInsertUcasHyphen" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditInsertUcasHyphen : int" Usage="Android.Graphics.Paint.EndHyphenEditInsertUcasHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has Canadian Syllabics hyphen (U+1400).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_INSERT_UCAS_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditInsertZwjAndHyphen">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditInsertZwjAndHyphen = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditInsertZwjAndHyphen = (6)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditInsertZwjAndHyphen" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditInsertZwjAndHyphen : int" Usage="Android.Graphics.Paint.EndHyphenEditInsertZwjAndHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has Zero-Width-Joiner (U+200D) followed by normal
            hyphen character (U+002D).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_INSERT_ZWJ_AND_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditNoEdit">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditNoEdit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditNoEdit = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditNoEdit" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditNoEdit : int" Usage="Android.Graphics.Paint.EndHyphenEditNoEdit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_NO_EDIT", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_NO_EDIT", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>An integer representing the end of the line has no modification for hyphenation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_NO_EDIT" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_NO_EDIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHyphenEditReplaceWithHyphen">
      <MemberSignature Language="C#" Value="public const int EndHyphenEditReplaceWithHyphen = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 EndHyphenEditReplaceWithHyphen = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.EndHyphenEditReplaceWithHyphen" />
      <MemberSignature Language="F#" Value="val mutable EndHyphenEditReplaceWithHyphen : int" Usage="Android.Graphics.Paint.EndHyphenEditReplaceWithHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>An integer representing the character at the end of the line is replaced with hyphen
            character (U+002D).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.END_HYPHEN_EDIT_REPLACE_WITH_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualsForTextMeasurement">
      <MemberSignature Language="C#" Value="public virtual bool EqualsForTextMeasurement (Android.Graphics.Paint other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EqualsForTextMeasurement(class Android.Graphics.Paint other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.EqualsForTextMeasurement(Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member EqualsForTextMeasurement : Android.Graphics.Paint -&gt; bool&#xA;override this.EqualsForTextMeasurement : Android.Graphics.Paint -&gt; bool" Usage="paint.EqualsForTextMeasurement other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equalsForTextMeasurement", "(Landroid/graphics/Paint;)Z", "GetEqualsForTextMeasurement_Landroid_graphics_Paint_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equalsForTextMeasurement", "(Landroid/graphics/Paint;)Z", "GetEqualsForTextMeasurement_Landroid_graphics_Paint_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="other">A <c>Paint</c> object.</param>
        <summary>Returns true of the passed <c>Paint</c> will have the same effect on text measurement</summary>
        <returns>true if the other <c>Paint</c> has the same effect on text measurement.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#equalsForTextMeasurement(android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.equalsForTextMeasurement(android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FakeBoldText">
      <MemberSignature Language="C#" Value="public bool FakeBoldText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FakeBoldText" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.FakeBoldText" />
      <MemberSignature Language="F#" Value="member this.FakeBoldText : bool with get, set" Usage="Android.Graphics.Paint.FakeBoldText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFakeBoldText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFakeBoldText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFakeBoldText", "(Z)V", "GetSetFakeBoldText_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFakeBoldText", "(Z)V", "GetSetFakeBoldText_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="fakeBoldText">true to set the fakeBoldText bit in the paint's
                                flags, false to clear it.</param>
        <summary>Helper for getFlags(), returning true if FAKE_BOLD_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the FAKE_BOLD_TEXT_FLAG bit</summary>
        <value>true if the fakeBoldText bit is set in the paint's flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isFakeBoldText()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isFakeBoldText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setFakeBoldText(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setFakeBoldText(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FilterBitmap">
      <MemberSignature Language="C#" Value="public bool FilterBitmap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterBitmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.FilterBitmap" />
      <MemberSignature Language="F#" Value="member this.FilterBitmap : bool with get, set" Usage="Android.Graphics.Paint.FilterBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFilterBitmap", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFilterBitmap", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="filter">true to set the FILTER_BITMAP_FLAG bit in the paint's
                          flags, false to clear it.</param>
        <summary>Whether or not the bitmap filter is activated. -or- Helper for setFlags(), setting or clearing the FILTER_BITMAP_FLAG bit.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isFilterBitmap()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isFilterBitmap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setFilterBitmap(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setFilterBitmap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.Paint.FilterBitmap" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PaintFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.PaintFlags Flags" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Flags" />
      <MemberSignature Language="F#" Value="member this.Flags : Android.Graphics.PaintFlags with get, set" Usage="Android.Graphics.Paint.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFlags", "(I)V", "GetSetFlags_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFlags", "(I)V", "GetSetFlags_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="flags">The new flag bits for the paint</param>
        <summary>Return the paint's flags. -or- Set the paint's flags.</summary>
        <value>the paint's flags (see enums ending in _Flag for bit masks)</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFlags()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFlags()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setFlags(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setFlags(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FontFeatureSettings">
      <MemberSignature Language="C#" Value="public virtual string? FontFeatureSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontFeatureSettings" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.FontFeatureSettings" />
      <MemberSignature Language="F#" Value="member this.FontFeatureSettings : string with get, set" Usage="Android.Graphics.Paint.FontFeatureSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFontFeatureSettings", "()Ljava/lang/String;", "GetGetFontFeatureSettingsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFontFeatureSettings", "()Ljava/lang/String;", "GetGetFontFeatureSettingsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFontFeatureSettings", "(Ljava/lang/String;)V", "GetSetFontFeatureSettings_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFontFeatureSettings", "(Ljava/lang/String;)V", "GetSetFontFeatureSettings_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="settings">the font feature settings string to use, may be null.</param>
        <summary>Returns the font feature settings. -or- Set font feature settings.</summary>
        <value>the paint's currently set font feature settings. Default is null.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontFeatureSettings()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontFeatureSettings()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setFontFeatureSettings(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setFontFeatureSettings(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSpacing">
      <MemberSignature Language="C#" Value="public virtual float FontSpacing { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 FontSpacing" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.FontSpacing" />
      <MemberSignature Language="F#" Value="member this.FontSpacing : single" Usage="Android.Graphics.Paint.FontSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFontSpacing", "()F", "GetGetFontSpacingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFontSpacing", "()F", "GetGetFontSpacingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the recommend line spacing based on the current typeface and
            text size.</summary>
        <value>recommend line spacing based on the current typeface and
                     text size.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontSpacing()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontSpacing()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FontVariationSettings">
      <MemberSignature Language="C#" Value="public virtual string? FontVariationSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FontVariationSettings" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.FontVariationSettings" />
      <MemberSignature Language="F#" Value="member this.FontVariationSettings : string" Usage="Android.Graphics.Paint.FontVariationSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFontVariationSettings", "()Ljava/lang/String;", "GetGetFontVariationSettingsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFontVariationSettings", "()Ljava/lang/String;", "GetGetFontVariationSettingsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the font variation settings.</summary>
        <value>the paint's currently set font variation settings. Default is null.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontVariationSettings()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontVariationSettings()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFillPath">
      <MemberSignature Language="C#" Value="public virtual bool GetFillPath (Android.Graphics.Path? src, Android.Graphics.Path? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFillPath(class Android.Graphics.Path src, class Android.Graphics.Path dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetFillPath(Android.Graphics.Path,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member GetFillPath : Android.Graphics.Path * Android.Graphics.Path -&gt; bool&#xA;override this.GetFillPath : Android.Graphics.Path * Android.Graphics.Path -&gt; bool" Usage="paint.GetFillPath (src, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFillPath", "(Landroid/graphics/Path;Landroid/graphics/Path;)Z", "GetGetFillPath_Landroid_graphics_Path_Landroid_graphics_Path_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFillPath", "(Landroid/graphics/Path;Landroid/graphics/Path;)Z", "GetGetFillPath_Landroid_graphics_Path_Landroid_graphics_Path_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Path" />
        <Parameter Name="dst" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="src">input path</param>
        <param name="dst">output path (may be the same as src)</param>
        <summary>Applies any/all effects (patheffect, stroking) to src, returning the
            result in dst.</summary>
        <returns>true if the path should be filled, or false if it should be
                            drawn with a hairline (width == 0)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFillPath(android.graphics.Path,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFillPath(android.graphics.Path, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetrics">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.FontMetrics? GetFontMetrics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/FontMetrics GetFontMetrics() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetFontMetrics" />
      <MemberSignature Language="F#" Value="abstract member GetFontMetrics : unit -&gt; Android.Graphics.Paint.FontMetrics&#xA;override this.GetFontMetrics : unit -&gt; Android.Graphics.Paint.FontMetrics" Usage="paint.GetFontMetrics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFontMetrics", "()Landroid/graphics/Paint$FontMetrics;", "GetGetFontMetricsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFontMetrics", "()Landroid/graphics/Paint$FontMetrics;", "GetGetFontMetricsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+FontMetrics</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Allocates a new FontMetrics object, and then calls getFontMetrics(fm)
            with it, returning the object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontMetrics()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetrics">
      <MemberSignature Language="C#" Value="public virtual float GetFontMetrics (Android.Graphics.Paint.FontMetrics? metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFontMetrics(class Android.Graphics.Paint/FontMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetFontMetrics(Android.Graphics.Paint.FontMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetFontMetrics : Android.Graphics.Paint.FontMetrics -&gt; single&#xA;override this.GetFontMetrics : Android.Graphics.Paint.FontMetrics -&gt; single" Usage="paint.GetFontMetrics metrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFontMetrics", "(Landroid/graphics/Paint$FontMetrics;)F", "GetGetFontMetrics_Landroid_graphics_Paint_FontMetrics_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFontMetrics", "(Landroid/graphics/Paint$FontMetrics;)F", "GetGetFontMetrics_Landroid_graphics_Paint_FontMetrics_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Graphics.Paint+FontMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">If this object is not null, its fields are filled with
                the appropriate values given the paint's text attributes.</param>
        <summary>Allocates a new FontMetrics object, and then calls getFontMetrics(fm)
            with it, returning the object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontMetrics()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetricsInt">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.FontMetricsInt? GetFontMetricsInt ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/FontMetricsInt GetFontMetricsInt() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetFontMetricsInt" />
      <MemberSignature Language="F#" Value="abstract member GetFontMetricsInt : unit -&gt; Android.Graphics.Paint.FontMetricsInt&#xA;override this.GetFontMetricsInt : unit -&gt; Android.Graphics.Paint.FontMetricsInt" Usage="paint.GetFontMetricsInt " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFontMetricsInt", "()Landroid/graphics/Paint$FontMetricsInt;", "GetGetFontMetricsIntHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFontMetricsInt", "()Landroid/graphics/Paint$FontMetricsInt;", "GetGetFontMetricsIntHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+FontMetricsInt</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the font's interline spacing, given the Paint's settings for
            typeface, textSize, etc.</summary>
        <returns>the font's interline spacing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontMetricsInt(android.graphics.FontMetricsInt)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontMetricsInt(android.graphics.FontMetricsInt)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFontMetricsInt">
      <MemberSignature Language="C#" Value="public virtual int GetFontMetricsInt (Android.Graphics.Paint.FontMetricsInt? fmi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetFontMetricsInt(class Android.Graphics.Paint/FontMetricsInt fmi) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetFontMetricsInt(Android.Graphics.Paint.FontMetricsInt)" />
      <MemberSignature Language="F#" Value="abstract member GetFontMetricsInt : Android.Graphics.Paint.FontMetricsInt -&gt; int&#xA;override this.GetFontMetricsInt : Android.Graphics.Paint.FontMetricsInt -&gt; int" Usage="paint.GetFontMetricsInt fmi" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFontMetricsInt", "(Landroid/graphics/Paint$FontMetricsInt;)I", "GetGetFontMetricsInt_Landroid_graphics_Paint_FontMetricsInt_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFontMetricsInt", "(Landroid/graphics/Paint$FontMetricsInt;)I", "GetGetFontMetricsInt_Landroid_graphics_Paint_FontMetricsInt_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fmi" Type="Android.Graphics.Paint+FontMetricsInt" />
      </Parameters>
      <Docs>
        <param name="fmi">To be added.</param>
        <summary>Return the font's interline spacing, given the Paint's settings for
            typeface, textSize, etc.</summary>
        <returns>the font's interline spacing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getFontMetricsInt(android.graphics.FontMetricsInt)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getFontMetricsInt(android.graphics.FontMetricsInt)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForAdvance">
      <MemberSignature Language="C#" Value="public virtual int GetOffsetForAdvance (Java.Lang.ICharSequence? text, int start, int end, int contextStart, int contextEnd, bool isRtl, float advance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetForAdvance(class Java.Lang.ICharSequence text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, float32 advance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetOffsetForAdvance(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member GetOffsetForAdvance : Java.Lang.ICharSequence * int * int * int * int * bool * single -&gt; int&#xA;override this.GetOffsetForAdvance : Java.Lang.ICharSequence * int * int * int * int * bool * single -&gt; int" Usage="paint.GetOffsetForAdvance (text, start, end, contextStart, contextEnd, isRtl, advance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOffsetForAdvance", "(Ljava/lang/CharSequence;IIIIZF)I", "GetGetOffsetForAdvance_Ljava_lang_CharSequence_IIIIZFHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOffsetForAdvance", "(Ljava/lang/CharSequence;IIIIZF)I", "GetGetOffsetForAdvance_Ljava_lang_CharSequence_IIIIZFHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="advance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the range to measure</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="advance">width relative to start of run</param>
        <summary>To be added.</summary>
        <returns>index of offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getOffsetForAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getOffsetForAdvance(java.lang.CharSequence, int, int, int, int, boolean, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForAdvance">
      <MemberSignature Language="C#" Value="public virtual int GetOffsetForAdvance (char[]? text, int start, int end, int contextStart, int contextEnd, bool isRtl, float advance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetForAdvance(char[] text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, float32 advance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetOffsetForAdvance(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member GetOffsetForAdvance : char[] * int * int * int * int * bool * single -&gt; int&#xA;override this.GetOffsetForAdvance : char[] * int * int * int * int * bool * single -&gt; int" Usage="paint.GetOffsetForAdvance (text, start, end, contextStart, contextEnd, isRtl, advance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOffsetForAdvance", "([CIIIIZF)I", "GetGetOffsetForAdvance_arrayCIIIIZFHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOffsetForAdvance", "([CIIIIZF)I", "GetGetOffsetForAdvance_arrayCIIIIZFHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="advance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the range to measure</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="advance">width relative to start of run</param>
        <summary>To be added.</summary>
        <returns>index of offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getOffsetForAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getOffsetForAdvance(java.lang.CharSequence, int, int, int, int, boolean, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForAdvance">
      <MemberSignature Language="C#" Value="public int GetOffsetForAdvance (string? text, int start, int end, int contextStart, int contextEnd, bool isRtl, float advance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetForAdvance(string text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, float32 advance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetOffsetForAdvance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Single)" />
      <MemberSignature Language="F#" Value="member this.GetOffsetForAdvance : string * int * int * int * int * bool * single -&gt; int" Usage="paint.GetOffsetForAdvance (text, start, end, contextStart, contextEnd, isRtl, advance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="advance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the range to measure</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="advance">width relative to start of run</param>
        <summary>To be added.</summary>
        <returns>index of offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getOffsetForAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getOffsetForAdvance(java.lang.CharSequence, int, int, int, int, boolean, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunAdvance">
      <MemberSignature Language="C#" Value="public virtual float GetRunAdvance (Java.Lang.ICharSequence? text, int start, int end, int contextStart, int contextEnd, bool isRtl, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetRunAdvance(class Java.Lang.ICharSequence text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetRunAdvance(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRunAdvance : Java.Lang.ICharSequence * int * int * int * int * bool * int -&gt; single&#xA;override this.GetRunAdvance : Java.Lang.ICharSequence * int * int * int * int * bool * int -&gt; single" Usage="paint.GetRunAdvance (text, start, end, contextStart, contextEnd, isRtl, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunAdvance", "(Ljava/lang/CharSequence;IIIIZI)F", "GetGetRunAdvance_Ljava_lang_CharSequence_IIIIZIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunAdvance", "(Ljava/lang/CharSequence;IIIIZI)F", "GetGetRunAdvance_Ljava_lang_CharSequence_IIIIZIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the shaping context</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="offset">index of caret position</param>
        <summary>To be added.</summary>
        <returns>width measurement between start and offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getRunAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getRunAdvance(java.lang.CharSequence, int, int, int, int, boolean, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunAdvance">
      <MemberSignature Language="C#" Value="public virtual float GetRunAdvance (char[]? text, int start, int end, int contextStart, int contextEnd, bool isRtl, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetRunAdvance(char[] text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetRunAdvance(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRunAdvance : char[] * int * int * int * int * bool * int -&gt; single&#xA;override this.GetRunAdvance : char[] * int * int * int * int * bool * int -&gt; single" Usage="paint.GetRunAdvance (text, start, end, contextStart, contextEnd, isRtl, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunAdvance", "([CIIIIZI)F", "GetGetRunAdvance_arrayCIIIIZIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunAdvance", "([CIIIIZI)F", "GetGetRunAdvance_arrayCIIIIZIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the shaping context</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="offset">index of caret position</param>
        <summary>To be added.</summary>
        <returns>width measurement between start and offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getRunAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getRunAdvance(java.lang.CharSequence, int, int, int, int, boolean, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunAdvance">
      <MemberSignature Language="C#" Value="public float GetRunAdvance (string? text, int start, int end, int contextStart, int contextEnd, bool isRtl, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetRunAdvance(string text, int32 start, int32 end, int32 contextStart, int32 contextEnd, bool isRtl, int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetRunAdvance(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunAdvance : string * int * int * int * int * bool * int -&gt; single" Usage="paint.GetRunAdvance (text, start, end, contextStart, contextEnd, isRtl, offset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the text to measure. Cannot be null.</param>
        <param name="start">the index of the start of the range to measure</param>
        <param name="end">the index + 1 of the end of the range to measure</param>
        <param name="contextStart">the index of the start of the shaping context</param>
        <param name="contextEnd">the index + 1 of the end of the shaping context</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="offset">index of caret position</param>
        <summary>To be added.</summary>
        <returns>width measurement between start and offset</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getRunAdvance(java.lang.CharSequence,%20int,%20int,%20int,%20int,%20boolean,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getRunAdvance(java.lang.CharSequence, int, int, int, int, boolean, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStyle">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Style? GetStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Paint/Style GetStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetStyle" />
      <MemberSignature Language="F#" Value="abstract member GetStyle : unit -&gt; Android.Graphics.Paint.Style&#xA;override this.GetStyle : unit -&gt; Android.Graphics.Paint.Style" Usage="paint.GetStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStyle", "()Landroid/graphics/Paint$Style;", "GetGetStyleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStyle", "()Landroid/graphics/Paint$Style;", "GetGetStyleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the paint's style, used for controlling how primitives'
            geometries are interpreted (except for drawBitmap, which always assumes
            FILL_STYLE).</summary>
        <returns>the paint's style setting (Fill, Stroke, StrokeAndFill)</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStyle()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStyle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public virtual void GetTextBounds (Java.Lang.ICharSequence text, int start, int end, Android.Graphics.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextBounds(class Java.Lang.ICharSequence text, int32 start, int32 end, class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextBounds(Java.Lang.ICharSequence,System.Int32,System.Int32,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetTextBounds : Java.Lang.ICharSequence * int * int * Android.Graphics.Rect -&gt; unit&#xA;override this.GetTextBounds : Java.Lang.ICharSequence * int * int * Android.Graphics.Rect -&gt; unit" Usage="paint.GetTextBounds (text, start, end, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextBounds", "(Ljava/lang/CharSequence;IILandroid/graphics/Rect;)V", "GetGetTextBounds_Ljava_lang_CharSequence_IILandroid_graphics_Rect_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextBounds", "(Ljava/lang/CharSequence;IILandroid/graphics/Rect;)V", "GetGetTextBounds_Ljava_lang_CharSequence_IILandroid_graphics_Rect_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="text">text to measure and return its bounds</param>
        <param name="start">index of the first char in the text to measure</param>
        <param name="end">1 past the last char in the text to measure</param>
        <param name="bounds">returns the unioned bounds of all the text. Must be allocated by the caller</param>
        <summary>Retrieve the text boundary box and store to bounds.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextBounds(java.lang.CharSequence,%20int,%20int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextBounds(java.lang.CharSequence, int, int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public virtual void GetTextBounds (char[]? text, int index, int count, Android.Graphics.Rect? bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextBounds(char[] text, int32 index, int32 count, class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextBounds(System.Char[],System.Int32,System.Int32,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetTextBounds : char[] * int * int * Android.Graphics.Rect -&gt; unit&#xA;override this.GetTextBounds : char[] * int * int * Android.Graphics.Rect -&gt; unit" Usage="paint.GetTextBounds (text, index, count, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextBounds", "([CIILandroid/graphics/Rect;)V", "GetGetTextBounds_arrayCIILandroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextBounds", "([CIILandroid/graphics/Rect;)V", "GetGetTextBounds_arrayCIILandroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="index">Index of the first char in the array to measure</param>
        <param name="count">The number of chars, beginning at index, to measure</param>
        <param name="text">text to measure and return its bounds</param>
        <param name="start">index of the first char in the text to measure</param>
        <param name="end">1 past the last char in the text to measure</param>
        <param name="bounds">returns the unioned bounds of all the text. Must be allocated by the caller</param>
        <summary>Retrieve the text boundary box and store to bounds.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextBounds(java.lang.CharSequence,%20int,%20int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextBounds(java.lang.CharSequence, int, int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextBounds">
      <MemberSignature Language="C#" Value="public virtual void GetTextBounds (string? text, int start, int end, Android.Graphics.Rect? bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextBounds(string text, int32 start, int32 end, class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextBounds(System.String,System.Int32,System.Int32,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetTextBounds : string * int * int * Android.Graphics.Rect -&gt; unit&#xA;override this.GetTextBounds : string * int * int * Android.Graphics.Rect -&gt; unit" Usage="paint.GetTextBounds (text, start, end, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextBounds", "(Ljava/lang/String;IILandroid/graphics/Rect;)V", "GetGetTextBounds_Ljava_lang_String_IILandroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextBounds", "(Ljava/lang/String;IILandroid/graphics/Rect;)V", "GetGetTextBounds_Ljava_lang_String_IILandroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="text">text to measure and return its bounds</param>
        <param name="start">index of the first char in the text to measure</param>
        <param name="end">1 past the last char in the text to measure</param>
        <param name="bounds">returns the unioned bounds of all the text. Must be allocated by the caller</param>
        <summary>Retrieve the text boundary box and store to bounds.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextBounds(java.lang.CharSequence,%20int,%20int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextBounds(java.lang.CharSequence, int, int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public virtual void GetTextPath (char[]? text, int index, int count, float x, float y, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextPath(char[] text, int32 index, int32 count, float32 x, float32 y, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextPath(System.Char[],System.Int32,System.Int32,System.Single,System.Single,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member GetTextPath : char[] * int * int * single * single * Android.Graphics.Path -&gt; unit&#xA;override this.GetTextPath : char[] * int * int * single * single * Android.Graphics.Path -&gt; unit" Usage="paint.GetTextPath (text, index, count, x, y, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextPath", "([CIIFFLandroid/graphics/Path;)V", "GetGetTextPath_arrayCIIFFLandroid_graphics_Path_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextPath", "([CIIFFLandroid/graphics/Path;)V", "GetGetTextPath_arrayCIIFFLandroid_graphics_Path_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="index">The index of the first character in text</param>
        <param name="count">The number of characterss starting with index</param>
        <param name="text">the text to retrieve the path from</param>
        <param name="start">the first character in the text</param>
        <param name="end">1 past the last character in the text</param>
        <param name="x">the x coordinate of the text's origin</param>
        <param name="y">the y coordinate of the text's origin</param>
        <param name="path">the path to receive the data describing the text. Must be allocated by the caller</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextPath(java.lang.String,%20int,%20int,%20float,%20float,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextPath(java.lang.String, int, int, float, float, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextPath">
      <MemberSignature Language="C#" Value="public virtual void GetTextPath (string? text, int start, int end, float x, float y, Android.Graphics.Path? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTextPath(string text, int32 start, int32 end, float32 x, float32 y, class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextPath(System.String,System.Int32,System.Int32,System.Single,System.Single,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member GetTextPath : string * int * int * single * single * Android.Graphics.Path -&gt; unit&#xA;override this.GetTextPath : string * int * int * single * single * Android.Graphics.Path -&gt; unit" Usage="paint.GetTextPath (text, start, end, x, y, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextPath", "(Ljava/lang/String;IIFFLandroid/graphics/Path;)V", "GetGetTextPath_Ljava_lang_String_IIFFLandroid_graphics_Path_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextPath", "(Ljava/lang/String;IIFFLandroid/graphics/Path;)V", "GetGetTextPath_Ljava_lang_String_IIFFLandroid_graphics_Path_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="text">the text to retrieve the path from</param>
        <param name="start">the first character in the text</param>
        <param name="end">1 past the last character in the text</param>
        <param name="x">the x coordinate of the text's origin</param>
        <param name="y">the y coordinate of the text's origin</param>
        <param name="path">the path to receive the data describing the text. Must be allocated by the caller</param>
        <summary>Return the path (outline) for the specified text.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextPath(java.lang.String,%20int,%20int,%20float,%20float,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextPath(java.lang.String, int, int, float, float, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunAdvances">
      <MemberSignature Language="C#" Value="public virtual float GetTextRunAdvances (char[] chars, int index, int count, int contextIndex, int contextCount, bool isRtl, float[]? advances, int advancesIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetTextRunAdvances(char[] chars, int32 index, int32 count, int32 contextIndex, int32 contextCount, bool isRtl, float32[] advances, int32 advancesIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextRunAdvances(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Single[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetTextRunAdvances : char[] * int * int * int * int * bool * single[] * int -&gt; single&#xA;override this.GetTextRunAdvances : char[] * int * int * int * int * bool * single[] * int -&gt; single" Usage="paint.GetTextRunAdvances (chars, index, count, contextIndex, contextCount, isRtl, advances, advancesIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextRunAdvances", "([CIIIIZ[FI)F", "GetGetTextRunAdvances_arrayCIIIIZarrayFIHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextRunAdvances", "([CIIIIZ[FI)F", "GetGetTextRunAdvances_arrayCIIIIZarrayFIHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="contextIndex" Type="System.Int32" />
        <Parameter Name="contextCount" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="advances" Type="System.Single[]" />
        <Parameter Name="advancesIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">the text to measure.</param>
        <param name="index">the index of the first character to measure</param>
        <param name="count">the number of characters to measure</param>
        <param name="contextIndex">the index of the first character to use for shaping context.
                                Context must cover the measureing target.</param>
        <param name="contextCount">the number of character to use for shaping context.
                                Context must cover the measureing target.</param>
        <param name="isRtl">whether the run is in RTL direction</param>
        <param name="advances">array to receive the advances, must have room for all advances.
                            This can be null if only total advance is needed</param>
        <param name="advancesIndex">the position in advances at which to put the advance corresponding to
                                 the character at start</param>
        <summary>Retrieve the character advances of the text.</summary>
        <returns>the total advance in pixels</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextRunAdvances(char[],%20int,%20int,%20int,%20int,%20boolean,%20float[],%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextRunAdvances(char[], int, int, int, int, boolean, float[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRunCursor">
      <MemberSignature Language="C#" Value="public virtual int GetTextRunCursor (Java.Lang.ICharSequence text, int contextStart, int contextEnd, bool isRtl, int offset, int cursorOpt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextRunCursor(class Java.Lang.ICharSequence text, int32 contextStart, int32 contextEnd, bool isRtl, int32 offset, int32 cursorOpt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextRunCursor(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetTextRunCursor : Java.Lang.ICharSequence * int * int * bool * int * int -&gt; int&#xA;override this.GetTextRunCursor : Java.Lang.ICharSequence * int * int * bool * int * int -&gt; int" Usage="paint.GetTextRunCursor (text, contextStart, contextEnd, isRtl, offset, cursorOpt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextRunCursor", "(Ljava/lang/CharSequence;IIZII)I", "GetGetTextRunCursor_Ljava_lang_CharSequence_IIZIIHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextRunCursor", "(Ljava/lang/CharSequence;IIZII)I", "GetGetTextRunCursor_Ljava_lang_CharSequence_IIZIIHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="cursorOpt" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">the text</param>
        <param name="contextStart">the start of the context</param>
        <param name="contextEnd">the end of the context</param>
        <param name="isRtl">true if the paragraph context is RTL, otherwise false</param>
        <param name="offset">the cursor position to move from</param>
        <param name="cursorOpt">how to move the cursor</param>
        <summary>Returns the next cursor position in the run.</summary>
        <returns>the offset of the next position, or -1</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextRunCursor(java.lang.CharSequence,%20int,%20int,%20boolean,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextRunCursor(java.lang.CharSequence, int, int, boolean, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRunCursor">
      <MemberSignature Language="C#" Value="public virtual int GetTextRunCursor (char[] text, int contextStart, int contextLength, bool isRtl, int offset, int cursorOpt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextRunCursor(char[] text, int32 contextStart, int32 contextLength, bool isRtl, int32 offset, int32 cursorOpt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextRunCursor(System.Char[],System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetTextRunCursor : char[] * int * int * bool * int * int -&gt; int&#xA;override this.GetTextRunCursor : char[] * int * int * bool * int * int -&gt; int" Usage="paint.GetTextRunCursor (text, contextStart, contextLength, isRtl, offset, cursorOpt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextRunCursor", "([CIIZII)I", "GetGetTextRunCursor_arrayCIIZIIHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextRunCursor", "([CIIZII)I", "GetGetTextRunCursor_arrayCIIZIIHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextLength" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="cursorOpt" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="contextLength">To be added.</param>
        <param name="text">the text</param>
        <param name="contextStart">the start of the context</param>
        <param name="contextEnd">the end of the context</param>
        <param name="isRtl">true if the paragraph context is RTL, otherwise false</param>
        <param name="offset">the cursor position to move from</param>
        <param name="cursorOpt">how to move the cursor</param>
        <summary>Returns the next cursor position in the run.</summary>
        <returns>the offset of the next position, or -1</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextRunCursor(java.lang.CharSequence,%20int,%20int,%20boolean,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextRunCursor(java.lang.CharSequence, int, int, boolean, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRunCursor">
      <MemberSignature Language="C#" Value="public int GetTextRunCursor (string text, int contextStart, int contextEnd, bool isRtl, int offset, int cursorOpt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunCursor(string text, int32 contextStart, int32 contextEnd, bool isRtl, int32 offset, int32 cursorOpt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextRunCursor(System.String,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetTextRunCursor : string * int * int * bool * int * int -&gt; int" Usage="paint.GetTextRunCursor (text, contextStart, contextEnd, isRtl, offset, cursorOpt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="isRtl" Type="System.Boolean" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="cursorOpt" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "CursorAfter", "CursorAtOrAfter", "CursorBefore", "CursorAtOrBefore" }, Type="Android.Graphics.Paint")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">the text</param>
        <param name="contextStart">the start of the context</param>
        <param name="contextEnd">the end of the context</param>
        <param name="isRtl">true if the paragraph context is RTL, otherwise false</param>
        <param name="offset">the cursor position to move from</param>
        <param name="cursorOpt">how to move the cursor</param>
        <summary>Returns the next cursor position in the run.</summary>
        <returns>the offset of the next position, or -1</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextRunCursor(java.lang.CharSequence,%20int,%20int,%20boolean,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextRunCursor(java.lang.CharSequence, int, int, boolean, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (string? text, float[]? widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(string text, float32[] widths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextWidths(System.String,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTextWidths : string * single[] -&gt; int&#xA;override this.GetTextWidths : string * single[] -&gt; int" Usage="paint.GetTextWidths (text, widths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;[F)I", "GetGetTextWidths_Ljava_lang_String_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;[F)I", "GetGetTextWidths_Ljava_lang_String_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                            Must be at least a large as (end - start).</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>the actual number of widths returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextWidths(java.lang.CharSequence,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextWidths(java.lang.CharSequence, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (Java.Lang.ICharSequence? text, int start, int end, float[]? widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(class Java.Lang.ICharSequence text, int32 start, int32 end, float32[] widths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextWidths(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTextWidths : Java.Lang.ICharSequence * int * int * single[] -&gt; int&#xA;override this.GetTextWidths : Java.Lang.ICharSequence * int * int * single[] -&gt; int" Usage="paint.GetTextWidths (text, start, end, widths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextWidths", "(Ljava/lang/CharSequence;II[F)I", "GetGetTextWidths_Ljava_lang_CharSequence_IIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextWidths", "(Ljava/lang/CharSequence;II[F)I", "GetGetTextWidths_Ljava_lang_CharSequence_IIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                            Must be at least a large as (end - start).</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>the actual number of widths returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextWidths(java.lang.CharSequence,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextWidths(java.lang.CharSequence, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (char[]? text, int index, int count, float[]? widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(char[] text, int32 index, int32 count, float32[] widths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextWidths(System.Char[],System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTextWidths : char[] * int * int * single[] -&gt; int&#xA;override this.GetTextWidths : char[] * int * int * single[] -&gt; int" Usage="paint.GetTextWidths (text, index, count, widths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextWidths", "([CII[F)I", "GetGetTextWidths_arrayCIIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextWidths", "([CII[F)I", "GetGetTextWidths_arrayCIIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="index">The index of the first char to to measure</param>
        <param name="count">The number of chars starting with index to measure</param>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                            Must be at least a large as (end - start).</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>the actual number of widths returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextWidths(java.lang.CharSequence,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextWidths(java.lang.CharSequence, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextWidths">
      <MemberSignature Language="C#" Value="public virtual int GetTextWidths (string? text, int start, int end, float[]? widths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextWidths(string text, int32 start, int32 end, float32[] widths) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.GetTextWidths(System.String,System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTextWidths : string * int * int * single[] -&gt; int&#xA;override this.GetTextWidths : string * int * int * single[] -&gt; int" Usage="paint.GetTextWidths (text, start, end, widths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;II[F)I", "GetGetTextWidths_Ljava_lang_String_IIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextWidths", "(Ljava/lang/String;II[F)I", "GetGetTextWidths_Ljava_lang_String_IIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="widths" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure. Cannot be null.</param>
        <param name="start">The index of the first char to to measure</param>
        <param name="end">The end of the text slice to measure</param>
        <param name="widths">array to receive the advance widths of the characters.
                            Must be at least a large as (end - start).</param>
        <summary>Return the advance widths for the characters in the string.</summary>
        <returns>the actual number of widths returned.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextWidths(java.lang.CharSequence,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextWidths(java.lang.CharSequence, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasGlyph">
      <MemberSignature Language="C#" Value="public virtual bool HasGlyph (string? string);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasGlyph(string string) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.HasGlyph(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HasGlyph : string -&gt; bool&#xA;override this.HasGlyph : string -&gt; bool" Usage="paint.HasGlyph string" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasGlyph", "(Ljava/lang/String;)Z", "GetHasGlyph_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasGlyph", "(Ljava/lang/String;)Z", "GetHasGlyph_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="string" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="string">the string to test whether there is glyph support</param>
        <summary>Determine whether the typeface set on the paint has a glyph supporting the string.</summary>
        <returns>true if the typeface has a glyph for the string</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#hasGlyph(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.hasGlyph(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hinting">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PaintHinting Hinting { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.PaintHinting Hinting" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Hinting" />
      <MemberSignature Language="F#" Value="member this.Hinting : Android.Graphics.PaintHinting with get, set" Usage="Android.Graphics.Paint.Hinting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHinting", "()I", "GetGetHintingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHinting", "()I", "GetGetHintingHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHinting", "(I)V", "GetSetHinting_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHinting", "(I)V", "GetSetHinting_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's hinting mode. -or- Set the paint's hinting mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getHinting()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getHinting()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setHinting(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setHinting(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="HintingOff">
      <MemberSignature Language="C#" Value="public const Android.Graphics.PaintHinting HintingOff = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.PaintHinting HintingOff = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.HintingOff" />
      <MemberSignature Language="F#" Value="val mutable HintingOff : Android.Graphics.PaintHinting" Usage="Android.Graphics.Paint.HintingOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HINTING_OFF")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HINTING_OFF")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Font hinter option that disables font hinting.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#HINTING_OFF" title="Reference documentation">Java documentation for <code>android.graphics.Paint.HINTING_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Graphics.Paint.Hinting" />
      </Docs>
    </Member>
    <Member MemberName="HintingOn">
      <MemberSignature Language="C#" Value="public const Android.Graphics.PaintHinting HintingOn = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.PaintHinting HintingOn = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.HintingOn" />
      <MemberSignature Language="F#" Value="val mutable HintingOn : Android.Graphics.PaintHinting" Usage="Android.Graphics.Paint.HintingOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HINTING_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HINTING_ON")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.PaintHinting enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PaintHinting</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Font hinter option that enables font hinting.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#HINTING_ON" title="Reference documentation">Java documentation for <code>android.graphics.Paint.HINTING_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Graphics.Paint.Hinting" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Paint.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LetterSpacing">
      <MemberSignature Language="C#" Value="public virtual float LetterSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LetterSpacing" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.LetterSpacing" />
      <MemberSignature Language="F#" Value="member this.LetterSpacing : single with get, set" Usage="Android.Graphics.Paint.LetterSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLetterSpacing", "()F", "GetGetLetterSpacingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLetterSpacing", "()F", "GetGetLetterSpacingHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLetterSpacing", "(F)V", "GetSetLetterSpacing_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLetterSpacing", "(F)V", "GetSetLetterSpacing_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="letterSpacing">set the paint's letter-spacing for drawing text.</param>
        <summary>Return the paint's letter-spacing for text. -or- Set the paint's letter-spacing for text.</summary>
        <value>the paint's letter-spacing for drawing text.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getLetterSpacing()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getLetterSpacing()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setLetterSpacing(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setLetterSpacing(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinearText">
      <MemberSignature Language="C#" Value="public bool LinearText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LinearText" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.LinearText" />
      <MemberSignature Language="F#" Value="member this.LinearText : bool with get, set" Usage="Android.Graphics.Paint.LinearText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLinearText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLinearText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLinearText", "(Z)V", "GetSetLinearText_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLinearText", "(Z)V", "GetSetLinearText_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="linearText">true to set the linearText bit in the paint's flags,
                              false to clear it.</param>
        <summary>Helper for getFlags(), returning true if LINEAR_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the LINEAR_TEXT_FLAG bit</summary>
        <value>true if the lineartext bit is set in the paint's flags</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isLinearText()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isLinearText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setLinearText(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setLinearText(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaskFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.MaskFilter? MaskFilter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.MaskFilter MaskFilter" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.MaskFilter" />
      <MemberSignature Language="F#" Value="member this.MaskFilter : Android.Graphics.MaskFilter" Usage="Android.Graphics.Paint.MaskFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaskFilter", "()Landroid/graphics/MaskFilter;", "GetGetMaskFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaskFilter", "()Landroid/graphics/MaskFilter;", "GetGetMaskFilterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.MaskFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's maskfilter object.</summary>
        <value>the paint's maskfilter (or null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getMaskFilter()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getMaskFilter()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.MeasureText(System.String)" />
      <MemberSignature Language="F#" Value="abstract member MeasureText : string -&gt; single&#xA;override this.MeasureText : string -&gt; single" Usage="paint.MeasureText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("measureText", "(Ljava/lang/String;)F", "GetMeasureText_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("measureText", "(Ljava/lang/String;)F", "GetMeasureText_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>The width of the text</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#measureText(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.measureText(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (Java.Lang.ICharSequence? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.MeasureText(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MeasureText : Java.Lang.ICharSequence * int * int -&gt; single&#xA;override this.MeasureText : Java.Lang.ICharSequence * int * int -&gt; single" Usage="paint.MeasureText (text, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("measureText", "(Ljava/lang/CharSequence;II)F", "GetMeasureText_Ljava_lang_CharSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("measureText", "(Ljava/lang/CharSequence;II)F", "GetMeasureText_Ljava_lang_CharSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>The width of the text</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#measureText(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.measureText(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (char[]? text, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(char[] text, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.MeasureText(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MeasureText : char[] * int * int -&gt; single&#xA;override this.MeasureText : char[] * int * int -&gt; single" Usage="paint.MeasureText (text, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("measureText", "([CII)F", "GetMeasureText_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("measureText", "([CII)F", "GetMeasureText_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of the first character to start measuring</param>
        <param name="count">THe number of characters to measure, beginning with start</param>
        <param name="text">The text to measure</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>The width of the text</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#measureText(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.measureText(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public virtual float MeasureText (string? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 MeasureText(string text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.MeasureText(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member MeasureText : string * int * int -&gt; single&#xA;override this.MeasureText : string * int * int -&gt; single" Usage="paint.MeasureText (text, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("measureText", "(Ljava/lang/String;II)F", "GetMeasureText_Ljava_lang_String_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("measureText", "(Ljava/lang/String;II)F", "GetMeasureText_Ljava_lang_String_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">The text to measure</param>
        <param name="start">The index of the first character to start measuring</param>
        <param name="end">1 beyond the index of the last character to measure</param>
        <summary>Return the width of the text.</summary>
        <returns>The width of the text</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#measureText(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.measureText(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PathEffect">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PathEffect? PathEffect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.PathEffect PathEffect" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.PathEffect" />
      <MemberSignature Language="F#" Value="member this.PathEffect : Android.Graphics.PathEffect" Usage="Android.Graphics.Paint.PathEffect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPathEffect", "()Landroid/graphics/PathEffect;", "GetGetPathEffectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPathEffect", "()Landroid/graphics/PathEffect;", "GetGetPathEffectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PathEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's patheffect object.</summary>
        <value>the paint's patheffect (or null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getPathEffect()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getPathEffect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Rasterizer">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rasterizer? Rasterizer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rasterizer Rasterizer" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Rasterizer" />
      <MemberSignature Language="F#" Value="member this.Rasterizer : Android.Graphics.Rasterizer" Usage="Android.Graphics.Paint.Rasterizer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRasterizer", "()Landroid/graphics/Rasterizer;", "GetGetRasterizerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRasterizer", "()Landroid/graphics/Rasterizer;", "GetGetRasterizerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rasterizer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's rasterizer (or null).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="paint.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restores the paint to its default settings.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#reset()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Android.Graphics.Paint? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Android.Graphics.Paint src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.Set(Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.Graphics.Paint -&gt; unit&#xA;override this.Set : Android.Graphics.Paint -&gt; unit" Usage="paint.Set src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Landroid/graphics/Paint;)V", "GetSet_Landroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Landroid/graphics/Paint;)V", "GetSet_Landroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Copy the fields from src into this paint.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#set(android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.set(android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetARGB">
      <MemberSignature Language="C#" Value="public virtual void SetARGB (int a, int r, int g, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetARGB(int32 a, int32 r, int32 g, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetARGB(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetARGB : int * int * int * int -&gt; unit&#xA;override this.SetARGB : int * int * int * int -&gt; unit" Usage="paint.SetARGB (a, r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setARGB", "(IIII)V", "GetSetARGB_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setARGB", "(IIII)V", "GetSetARGB_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="g" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">The new alpha component (0..255) of the paint's color.</param>
        <param name="r">The new red component (0..255) of the paint's color.</param>
        <param name="g">The new green component (0..255) of the paint's color.</param>
        <param name="b">The new blue component (0..255) of the paint's color.</param>
        <summary>Helper to setColor(), that takes a,r,g,b and constructs the color int</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setARGB(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setARGB(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetColorFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorFilter? SetColorFilter (Android.Graphics.ColorFilter? filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.ColorFilter SetColorFilter(class Android.Graphics.ColorFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetColorFilter(Android.Graphics.ColorFilter)" />
      <MemberSignature Language="F#" Value="abstract member SetColorFilter : Android.Graphics.ColorFilter -&gt; Android.Graphics.ColorFilter&#xA;override this.SetColorFilter : Android.Graphics.ColorFilter -&gt; Android.Graphics.ColorFilter" Usage="paint.SetColorFilter filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setColorFilter", "(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Android.Graphics.ColorFilter" />
      </Parameters>
      <Docs>
        <param name="filter">May be null. The new filter to be installed in the paint</param>
        <summary>Set or clear the paint's colorfilter, returning the parameter.</summary>
        <returns>filter</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setColorFilter(android.graphics.ColorFilter)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setColorFilter(android.graphics.ColorFilter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFontVariationSettings">
      <MemberSignature Language="C#" Value="public virtual bool SetFontVariationSettings (string? fontVariationSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetFontVariationSettings(string fontVariationSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetFontVariationSettings(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetFontVariationSettings : string -&gt; bool&#xA;override this.SetFontVariationSettings : string -&gt; bool" Usage="paint.SetFontVariationSettings fontVariationSettings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFontVariationSettings", "(Ljava/lang/String;)Z", "GetSetFontVariationSettings_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFontVariationSettings", "(Ljava/lang/String;)Z", "GetSetFontVariationSettings_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fontVariationSettings" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fontVariationSettings">font variation settings. You can pass null or empty string as
                                         no variation settings.</param>
        <summary>Sets TrueType or OpenType font variation settings.</summary>
        <returns>true if the given settings is effective to at least one font file underlying this
                    typeface. This function also returns true for empty settings string. Otherwise
                    returns false</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setFontVariationSettings(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setFontVariationSettings(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaskFilter">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.MaskFilter? SetMaskFilter (Android.Graphics.MaskFilter? maskfilter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.MaskFilter SetMaskFilter(class Android.Graphics.MaskFilter maskfilter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetMaskFilter(Android.Graphics.MaskFilter)" />
      <MemberSignature Language="F#" Value="abstract member SetMaskFilter : Android.Graphics.MaskFilter -&gt; Android.Graphics.MaskFilter&#xA;override this.SetMaskFilter : Android.Graphics.MaskFilter -&gt; Android.Graphics.MaskFilter" Usage="paint.SetMaskFilter maskfilter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaskFilter", "(Landroid/graphics/MaskFilter;)Landroid/graphics/MaskFilter;", "GetSetMaskFilter_Landroid_graphics_MaskFilter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaskFilter", "(Landroid/graphics/MaskFilter;)Landroid/graphics/MaskFilter;", "GetSetMaskFilter_Landroid_graphics_MaskFilter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.MaskFilter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maskfilter" Type="Android.Graphics.MaskFilter" />
      </Parameters>
      <Docs>
        <param name="maskfilter">May be null. The maskfilter to be installed in the
                              paint</param>
        <summary>Set or clear the maskfilter object.</summary>
        <returns>maskfilter</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setMaskFilter(android.graphics.MaskFilter)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setMaskFilter(android.graphics.MaskFilter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPathEffect">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PathEffect? SetPathEffect (Android.Graphics.PathEffect? effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.PathEffect SetPathEffect(class Android.Graphics.PathEffect effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetPathEffect(Android.Graphics.PathEffect)" />
      <MemberSignature Language="F#" Value="abstract member SetPathEffect : Android.Graphics.PathEffect -&gt; Android.Graphics.PathEffect&#xA;override this.SetPathEffect : Android.Graphics.PathEffect -&gt; Android.Graphics.PathEffect" Usage="paint.SetPathEffect effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPathEffect", "(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;", "GetSetPathEffect_Landroid_graphics_PathEffect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPathEffect", "(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;", "GetSetPathEffect_Landroid_graphics_PathEffect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PathEffect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Android.Graphics.PathEffect" />
      </Parameters>
      <Docs>
        <param name="effect">May be null. The patheffect to be installed in the paint</param>
        <summary>Set or clear the patheffect object.</summary>
        <returns>effect</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setPathEffect(android.graphics.PathEffect)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setPathEffect(android.graphics.PathEffect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRasterizer">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rasterizer? SetRasterizer (Android.Graphics.Rasterizer? rasterizer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Rasterizer SetRasterizer(class Android.Graphics.Rasterizer rasterizer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetRasterizer(Android.Graphics.Rasterizer)" />
      <MemberSignature Language="F#" Value="abstract member SetRasterizer : Android.Graphics.Rasterizer -&gt; Android.Graphics.Rasterizer&#xA;override this.SetRasterizer : Android.Graphics.Rasterizer -&gt; Android.Graphics.Rasterizer" Usage="paint.SetRasterizer rasterizer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRasterizer", "(Landroid/graphics/Rasterizer;)Landroid/graphics/Rasterizer;", "GetSetRasterizer_Landroid_graphics_Rasterizer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRasterizer", "(Landroid/graphics/Rasterizer;)Landroid/graphics/Rasterizer;", "GetSetRasterizer_Landroid_graphics_Rasterizer_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rasterizer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rasterizer" Type="Android.Graphics.Rasterizer" />
      </Parameters>
      <Docs>
        <param name="rasterizer">May be null. The new rasterizer to be installed in
                   the paint.</param>
        <summary>Set or clear the rasterizer object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShader">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Shader? SetShader (Android.Graphics.Shader? shader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Shader SetShader(class Android.Graphics.Shader shader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetShader(Android.Graphics.Shader)" />
      <MemberSignature Language="F#" Value="abstract member SetShader : Android.Graphics.Shader -&gt; Android.Graphics.Shader&#xA;override this.SetShader : Android.Graphics.Shader -&gt; Android.Graphics.Shader" Usage="paint.SetShader shader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShader", "(Landroid/graphics/Shader;)Landroid/graphics/Shader;", "GetSetShader_Landroid_graphics_Shader_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShader", "(Landroid/graphics/Shader;)Landroid/graphics/Shader;", "GetSetShader_Landroid_graphics_Shader_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shader" Type="Android.Graphics.Shader" />
      </Parameters>
      <Docs>
        <param name="shader">May be null. the new shader to be installed in the paint</param>
        <summary>Set or clear the shader object.</summary>
        <returns>shader</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setShader(android.graphics.Shader)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setShader(android.graphics.Shader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void SetShadowLayer (float radius, float dx, float dy, Android.Graphics.Color shadowColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowLayer(float32 radius, float32 dx, float32 dy, valuetype Android.Graphics.Color shadowColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetShadowLayer(System.Single,System.Single,System.Single,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetShadowLayer : single * single * single * Android.Graphics.Color -&gt; unit&#xA;override this.SetShadowLayer : single * single * single * Android.Graphics.Color -&gt; unit" Usage="paint.SetShadowLayer (radius, dx, dy, shadowColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShadowLayer", "(FFFI)V", "GetSetShadowLayer_FFFIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShadowLayer", "(FFFI)V", "GetSetShadowLayer_FFFIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="shadowColor" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="radius">To be added.</param>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <param name="shadowColor">To be added.</param>
        <summary>This draws a shadow layer below the main layer, with the specified
            offset and color, and blur radius.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setShadowLayer(float,%20float,%20float,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setShadowLayer(float, float, float, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetShadowLayer">
      <MemberSignature Language="C#" Value="public virtual void SetShadowLayer (float radius, float dx, float dy, long shadowColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShadowLayer(float32 radius, float32 dx, float32 dy, int64 shadowColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetShadowLayer(System.Single,System.Single,System.Single,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetShadowLayer : single * single * single * int64 -&gt; unit&#xA;override this.SetShadowLayer : single * single * single * int64 -&gt; unit" Usage="paint.SetShadowLayer (radius, dx, dy, shadowColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShadowLayer", "(FFFJ)V", "GetSetShadowLayer_FFFJHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShadowLayer", "(FFFJ)V", "GetSetShadowLayer_FFFJHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radius" Type="System.Single" />
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
        <Parameter Name="shadowColor" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="radius">To be added.</param>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <param name="shadowColor">To be added.</param>
        <summary>This draws a shadow layer below the main layer, with the specified
            offset and color, and blur radius.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setShadowLayer(float,%20float,%20float,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setShadowLayer(float, float, float, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStyle">
      <MemberSignature Language="C#" Value="public virtual void SetStyle (Android.Graphics.Paint.Style? style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStyle(class Android.Graphics.Paint/Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetStyle(Android.Graphics.Paint.Style)" />
      <MemberSignature Language="F#" Value="abstract member SetStyle : Android.Graphics.Paint.Style -&gt; unit&#xA;override this.SetStyle : Android.Graphics.Paint.Style -&gt; unit" Usage="paint.SetStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStyle", "(Landroid/graphics/Paint$Style;)V", "GetSetStyle_Landroid_graphics_Paint_Style_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStyle", "(Landroid/graphics/Paint$Style;)V", "GetSetStyle_Landroid_graphics_Paint_Style_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="Android.Graphics.Paint+Style" />
      </Parameters>
      <Docs>
        <param name="style">The new style to set in the paint</param>
        <summary>Set the paint's style, used for controlling how primitives'
            geometries are interpreted (except for drawBitmap, which always assumes
            Fill).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStyle(android.graphics.Style)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStyle(android.graphics.Style)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTypeface">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Typeface? SetTypeface (Android.Graphics.Typeface? typeface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Typeface SetTypeface(class Android.Graphics.Typeface typeface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetTypeface(Android.Graphics.Typeface)" />
      <MemberSignature Language="F#" Value="abstract member SetTypeface : Android.Graphics.Typeface -&gt; Android.Graphics.Typeface&#xA;override this.SetTypeface : Android.Graphics.Typeface -&gt; Android.Graphics.Typeface" Usage="paint.SetTypeface typeface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTypeface", "(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;", "GetSetTypeface_Landroid_graphics_Typeface_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTypeface", "(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;", "GetSetTypeface_Landroid_graphics_Typeface_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Typeface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeface" Type="Android.Graphics.Typeface" />
      </Parameters>
      <Docs>
        <param name="typeface">May be null. The typeface to be installed in the paint</param>
        <summary>Set or clear the typeface object.</summary>
        <returns>typeface</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTypeface(android.graphics.Typeface)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTypeface(android.graphics.Typeface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetXfermode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Xfermode? SetXfermode (Android.Graphics.Xfermode? xfermode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Xfermode SetXfermode(class Android.Graphics.Xfermode xfermode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Paint.SetXfermode(Android.Graphics.Xfermode)" />
      <MemberSignature Language="F#" Value="abstract member SetXfermode : Android.Graphics.Xfermode -&gt; Android.Graphics.Xfermode&#xA;override this.SetXfermode : Android.Graphics.Xfermode -&gt; Android.Graphics.Xfermode" Usage="paint.SetXfermode xfermode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setXfermode", "(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;", "GetSetXfermode_Landroid_graphics_Xfermode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setXfermode", "(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;", "GetSetXfermode_Landroid_graphics_Xfermode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Xfermode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xfermode" Type="Android.Graphics.Xfermode" />
      </Parameters>
      <Docs>
        <param name="xfermode">May be null. The xfermode to be installed in the paint</param>
        <summary>Set or clear the transfer mode object.</summary>
        <returns>xfermode</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setXfermode(android.graphics.Xfermode)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setXfermode(android.graphics.Xfermode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Shader">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Shader? Shader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Shader Shader" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Shader" />
      <MemberSignature Language="F#" Value="member this.Shader : Android.Graphics.Shader" Usage="Android.Graphics.Paint.Shader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShader", "()Landroid/graphics/Shader;", "GetGetShaderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShader", "()Landroid/graphics/Shader;", "GetGetShaderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Shader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's shader object.</summary>
        <value>the paint's shader (or null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShader()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShadowLayerColor">
      <MemberSignature Language="C#" Value="public virtual int ShadowLayerColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowLayerColor" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ShadowLayerColor" />
      <MemberSignature Language="F#" Value="member this.ShadowLayerColor : int" Usage="Android.Graphics.Paint.ShadowLayerColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShadowLayerColor", "()I", "GetGetShadowLayerColorHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShadowLayerColor", "()I", "GetGetShadowLayerColorHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the color of the shadow layer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShadowLayerColor()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShadowLayerColor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowLayerColorLong">
      <MemberSignature Language="C#" Value="public virtual long ShadowLayerColorLong { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ShadowLayerColorLong" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ShadowLayerColorLong" />
      <MemberSignature Language="F#" Value="member this.ShadowLayerColorLong : int64" Usage="Android.Graphics.Paint.ShadowLayerColorLong" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShadowLayerColorLong", "()J", "GetGetShadowLayerColorLongHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShadowLayerColorLong", "()J", "GetGetShadowLayerColorLongHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the color of the shadow layer.</summary>
        <value>the shadow layer's color encoded as a <c>ColorLong</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShadowLayerColorLong()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShadowLayerColorLong()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowLayerDx">
      <MemberSignature Language="C#" Value="public virtual float ShadowLayerDx { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowLayerDx" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ShadowLayerDx" />
      <MemberSignature Language="F#" Value="member this.ShadowLayerDx : single" Usage="Android.Graphics.Paint.ShadowLayerDx" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShadowLayerDx", "()F", "GetGetShadowLayerDxHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShadowLayerDx", "()F", "GetGetShadowLayerDxHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the x offset of the shadow layer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShadowLayerDx()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShadowLayerDx()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowLayerDy">
      <MemberSignature Language="C#" Value="public virtual float ShadowLayerDy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowLayerDy" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ShadowLayerDy" />
      <MemberSignature Language="F#" Value="member this.ShadowLayerDy : single" Usage="Android.Graphics.Paint.ShadowLayerDy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShadowLayerDy", "()F", "GetGetShadowLayerDyHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShadowLayerDy", "()F", "GetGetShadowLayerDyHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the y offset of the shadow layer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShadowLayerDy()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShadowLayerDy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowLayerRadius">
      <MemberSignature Language="C#" Value="public virtual float ShadowLayerRadius { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ShadowLayerRadius" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ShadowLayerRadius" />
      <MemberSignature Language="F#" Value="member this.ShadowLayerRadius : single" Usage="Android.Graphics.Paint.ShadowLayerRadius" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShadowLayerRadius", "()F", "GetGetShadowLayerRadiusHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShadowLayerRadius", "()F", "GetGetShadowLayerRadiusHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the blur radius of the shadow layer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getShadowLayerRadius()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getShadowLayerRadius()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartHyphenEdit">
      <MemberSignature Language="C#" Value="public virtual int StartHyphenEdit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartHyphenEdit" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StartHyphenEdit" />
      <MemberSignature Language="F#" Value="member this.StartHyphenEdit : int with get, set" Usage="Android.Graphics.Paint.StartHyphenEdit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartHyphenEdit", "()I", "GetGetStartHyphenEditHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartHyphenEdit", "()I", "GetGetStartHyphenEditHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStartHyphenEdit", "(I)V", "GetSetStartHyphenEdit_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStartHyphenEdit", "(I)V", "GetSetStartHyphenEdit_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="startHyphen">a start hyphen edit value.</param>
        <summary>Get the current value of start hyphen edit. -or- Set a start hyphen edit on the paint.</summary>
        <value>the current starting hyphen edit value</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStartHyphenEdit()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStartHyphenEdit()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStartHyphenEdit(int)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStartHyphenEdit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartHyphenEditInsertHyphen">
      <MemberSignature Language="C#" Value="public const int StartHyphenEditInsertHyphen = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StartHyphenEditInsertHyphen = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.StartHyphenEditInsertHyphen" />
      <MemberSignature Language="F#" Value="val mutable StartHyphenEditInsertHyphen : int" Usage="Android.Graphics.Paint.StartHyphenEditInsertHyphen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("START_HYPHEN_EDIT_INSERT_HYPHEN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("START_HYPHEN_EDIT_INSERT_HYPHEN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>An integer representing the starting of the line has normal hyphen character (U+002D).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#START_HYPHEN_EDIT_INSERT_HYPHEN" title="Reference documentation">Java documentation for <code>android.graphics.Paint.START_HYPHEN_EDIT_INSERT_HYPHEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartHyphenEditInsertZwj">
      <MemberSignature Language="C#" Value="public const int StartHyphenEditInsertZwj = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StartHyphenEditInsertZwj = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.StartHyphenEditInsertZwj" />
      <MemberSignature Language="F#" Value="val mutable StartHyphenEditInsertZwj : int" Usage="Android.Graphics.Paint.StartHyphenEditInsertZwj" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("START_HYPHEN_EDIT_INSERT_ZWJ", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("START_HYPHEN_EDIT_INSERT_ZWJ", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>An integer representing the starting of the line has Zero-Width-Joiner (U+200D).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#START_HYPHEN_EDIT_INSERT_ZWJ" title="Reference documentation">Java documentation for <code>android.graphics.Paint.START_HYPHEN_EDIT_INSERT_ZWJ</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartHyphenEditNoEdit">
      <MemberSignature Language="C#" Value="public const int StartHyphenEditNoEdit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StartHyphenEditNoEdit = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Paint.StartHyphenEditNoEdit" />
      <MemberSignature Language="F#" Value="val mutable StartHyphenEditNoEdit : int" Usage="Android.Graphics.Paint.StartHyphenEditNoEdit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("START_HYPHEN_EDIT_NO_EDIT", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("START_HYPHEN_EDIT_NO_EDIT", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>An integer representing the starting of the line has no modification for hyphenation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#START_HYPHEN_EDIT_NO_EDIT" title="Reference documentation">Java documentation for <code>android.graphics.Paint.START_HYPHEN_EDIT_NO_EDIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikeThruPosition">
      <MemberSignature Language="C#" Value="public virtual float StrikeThruPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrikeThruPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrikeThruPosition" />
      <MemberSignature Language="F#" Value="member this.StrikeThruPosition : single" Usage="Android.Graphics.Paint.StrikeThruPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrikeThruPosition", "()F", "GetGetStrikeThruPositionHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrikeThruPosition", "()F", "GetGetStrikeThruPositionHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Distance from top of the strike-through line to the baseline in pixels.</summary>
        <value>the position of the strike-through line in pixels</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrikeThruPosition()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrikeThruPosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrikeThruText">
      <MemberSignature Language="C#" Value="public bool StrikeThruText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StrikeThruText" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrikeThruText" />
      <MemberSignature Language="F#" Value="member this.StrikeThruText : bool with get, set" Usage="Android.Graphics.Paint.StrikeThruText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStrikeThruText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStrikeThruText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrikeThruText", "(Z)V", "GetSetStrikeThruText_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrikeThruText", "(Z)V", "GetSetStrikeThruText_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="strikeThruText">true to set the strikeThruText bit in the paint's
                                  flags, false to clear it.</param>
        <summary>Helper for getFlags(), returning true if STRIKE_THRU_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the STRIKE_THRU_TEXT_FLAG bit</summary>
        <value>true if the <c>#STRIKE_THRU_TEXT_FLAG</c> bit is set in the paint's flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isStrikeThruText()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isStrikeThruText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStrikeThruText(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStrikeThruText(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrikeThruThickness">
      <MemberSignature Language="C#" Value="public virtual float StrikeThruThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrikeThruThickness" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrikeThruThickness" />
      <MemberSignature Language="F#" Value="member this.StrikeThruThickness : single" Usage="Android.Graphics.Paint.StrikeThruThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrikeThruThickness", "()F", "GetGetStrikeThruThicknessHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrikeThruThickness", "()F", "GetGetStrikeThruThicknessHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thickness of the strike-through line in pixels.</summary>
        <value>the position of the strike-through line in pixels</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrikeThruThickness()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrikeThruThickness()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeCap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Cap? StrokeCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Cap StrokeCap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrokeCap" />
      <MemberSignature Language="F#" Value="member this.StrokeCap : Android.Graphics.Paint.Cap with get, set" Usage="Android.Graphics.Paint.StrokeCap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrokeCap", "()Landroid/graphics/Paint$Cap;", "GetGetStrokeCapHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrokeCap", "()Landroid/graphics/Paint$Cap;", "GetGetStrokeCapHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrokeCap", "(Landroid/graphics/Paint$Cap;)V", "GetSetStrokeCap_Landroid_graphics_Paint_Cap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrokeCap", "(Landroid/graphics/Paint$Cap;)V", "GetSetStrokeCap_Landroid_graphics_Paint_Cap_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Cap</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="cap">set the paint's line cap style, used whenever the paint's
                       style is Stroke or StrokeAndFill.</param>
        <summary>Return the paint's Cap, controlling how the start and end of stroked
            lines and paths are treated. -or- Set the paint's Cap.</summary>
        <value>the line cap style for the paint, used whenever the paint's
                    style is Stroke or StrokeAndFill.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrokeCap()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrokeCap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStrokeCap(android.graphics.Cap)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStrokeCap(android.graphics.Cap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Join? StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Join StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrokeJoin" />
      <MemberSignature Language="F#" Value="member this.StrokeJoin : Android.Graphics.Paint.Join with get, set" Usage="Android.Graphics.Paint.StrokeJoin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrokeJoin", "()Landroid/graphics/Paint$Join;", "GetGetStrokeJoinHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrokeJoin", "()Landroid/graphics/Paint$Join;", "GetGetStrokeJoinHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrokeJoin", "(Landroid/graphics/Paint$Join;)V", "GetSetStrokeJoin_Landroid_graphics_Paint_Join_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrokeJoin", "(Landroid/graphics/Paint$Join;)V", "GetSetStrokeJoin_Landroid_graphics_Paint_Join_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Join</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="join">set the paint's Join, used whenever the paint's style is
                        Stroke or StrokeAndFill.</param>
        <summary>Return the paint's stroke join type. -or- Set the paint's Join.</summary>
        <value>the paint's Join.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrokeJoin()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrokeJoin()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStrokeJoin(android.graphics.Join)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStrokeJoin(android.graphics.Join)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeMiter">
      <MemberSignature Language="C#" Value="public virtual float StrokeMiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeMiter" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrokeMiter" />
      <MemberSignature Language="F#" Value="member this.StrokeMiter : single with get, set" Usage="Android.Graphics.Paint.StrokeMiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrokeMiter", "()F", "GetGetStrokeMiterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrokeMiter", "()F", "GetGetStrokeMiterHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrokeMiter", "(F)V", "GetSetStrokeMiter_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrokeMiter", "(F)V", "GetSetStrokeMiter_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="miter">set the miter limit on the paint, used whenever the paint's
                         style is Stroke or StrokeAndFill.</param>
        <summary>Return the paint's stroke miter value. -or- Set the paint's stroke miter value.</summary>
        <value>the paint's miter limit, used whenever the paint's style is
                    Stroke or StrokeAndFill.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrokeMiter()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrokeMiter()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStrokeMiter(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStrokeMiter(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrokeWidth">
      <MemberSignature Language="C#" Value="public virtual float StrokeWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 StrokeWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.StrokeWidth" />
      <MemberSignature Language="F#" Value="member this.StrokeWidth : single with get, set" Usage="Android.Graphics.Paint.StrokeWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrokeWidth", "()F", "GetGetStrokeWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrokeWidth", "()F", "GetGetStrokeWidthHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrokeWidth", "(F)V", "GetSetStrokeWidth_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrokeWidth", "(F)V", "GetSetStrokeWidth_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="width">set the paint's stroke width, used whenever the paint's
                         style is Stroke or StrokeAndFill.</param>
        <summary>Return the width for stroking. -or- Set the width for stroking.</summary>
        <value>the paint's stroke width, used whenever the paint's style is
                    Stroke or StrokeAndFill.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getStrokeWidth()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getStrokeWidth()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setStrokeWidth(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setStrokeWidth(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SubpixelText">
      <MemberSignature Language="C#" Value="public bool SubpixelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubpixelText" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.SubpixelText" />
      <MemberSignature Language="F#" Value="member this.SubpixelText : bool with get, set" Usage="Android.Graphics.Paint.SubpixelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSubpixelText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSubpixelText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSubpixelText", "(Z)V", "GetSetSubpixelText_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSubpixelText", "(Z)V", "GetSetSubpixelText_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="subpixelText">true to set the subpixelText bit in the paint's
                                flags, false to clear it.</param>
        <summary>Helper for getFlags(), returning true if SUBPIXEL_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the SUBPIXEL_TEXT_FLAG bit</summary>
        <value>true if the subpixel bit is set in the paint's flags</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isSubpixelText()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isSubpixelText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setSubpixelText(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setSubpixelText(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint.Align? TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint/Align TextAlign" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextAlign" />
      <MemberSignature Language="F#" Value="member this.TextAlign : Android.Graphics.Paint.Align with get, set" Usage="Android.Graphics.Paint.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextAlign", "()Landroid/graphics/Paint$Align;", "GetGetTextAlignHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextAlign", "()Landroid/graphics/Paint$Align;", "GetGetTextAlignHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextAlign", "(Landroid/graphics/Paint$Align;)V", "GetSetTextAlign_Landroid_graphics_Paint_Align_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextAlign", "(Landroid/graphics/Paint$Align;)V", "GetSetTextAlign_Landroid_graphics_Paint_Align_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint+Align</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="align">set the paint's Align value for drawing text.</param>
        <summary>Return the paint's Align value for drawing text. -or- Set the paint's text alignment.</summary>
        <value>the paint's Align value for drawing text.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextAlign()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextAlign()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTextAlign(android.graphics.Align)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTextAlign(android.graphics.Align)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextLocale">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Locale TextLocale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Locale TextLocale" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextLocale" />
      <MemberSignature Language="F#" Value="member this.TextLocale : Java.Util.Locale with get, set" Usage="Android.Graphics.Paint.TextLocale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextLocale", "()Ljava/util/Locale;", "GetGetTextLocaleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextLocale", "()Ljava/util/Locale;", "GetGetTextLocaleHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextLocale", "(Ljava/util/Locale;)V", "GetSetTextLocale_Ljava_util_Locale_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextLocale", "(Ljava/util/Locale;)V", "GetSetTextLocale_Ljava_util_Locale_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="locale">the paint's locale value for drawing text, must not be null.</param>
        <summary>Get the text's primary Locale. -or- Set the text locale list to a one-member list consisting of just the locale.</summary>
        <value>the paint's primary Locale used for drawing text, never null.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextLocale()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextLocale()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTextLocale(java.util.Locale)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTextLocale(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextLocales">
      <MemberSignature Language="C#" Value="public virtual Android.OS.LocaleList TextLocales { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.LocaleList TextLocales" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextLocales" />
      <MemberSignature Language="F#" Value="member this.TextLocales : Android.OS.LocaleList with get, set" Usage="Android.Graphics.Paint.TextLocales" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextLocales", "()Landroid/os/LocaleList;", "GetGetTextLocalesHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextLocales", "()Landroid/os/LocaleList;", "GetGetTextLocalesHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextLocales", "(Landroid/os/LocaleList;)V", "GetSetTextLocales_Landroid_os_LocaleList_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextLocales", "(Landroid/os/LocaleList;)V", "GetSetTextLocales_Landroid_os_LocaleList_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.LocaleList</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="locales">the paint's locale list for drawing text, must not be null or empty.</param>
        <summary>Get the text locale list. -or- Set the text locale list.</summary>
        <value>the paint's LocaleList used for drawing text, never null or empty.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextLocales()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextLocales()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTextLocales(android.os.LocaleList)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTextLocales(android.os.LocaleList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextScaleX">
      <MemberSignature Language="C#" Value="public virtual float TextScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextScaleX" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextScaleX" />
      <MemberSignature Language="F#" Value="member this.TextScaleX : single with get, set" Usage="Android.Graphics.Paint.TextScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextScaleX", "()F", "GetGetTextScaleXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextScaleX", "()F", "GetGetTextScaleXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextScaleX", "(F)V", "GetSetTextScaleX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextScaleX", "(F)V", "GetSetTextScaleX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the paint's horizontal scale factor for text.</summary>
        <value>the paint's scale factor in X for drawing/measuring text</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextScaleX()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextScaleX()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextSize">
      <MemberSignature Language="C#" Value="public virtual float TextSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSize" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextSize" />
      <MemberSignature Language="F#" Value="member this.TextSize : single with get, set" Usage="Android.Graphics.Paint.TextSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextSize", "()F", "GetGetTextSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextSize", "()F", "GetGetTextSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextSize", "(F)V", "GetSetTextSize_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextSize", "(F)V", "GetSetTextSize_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="textSize">set the paint's text size in pixel units.</param>
        <summary>Return the paint's text size. -or- Set the paint's text size.</summary>
        <value>the paint's text size in pixel units.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextSize()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTextSize(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTextSize(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TextSkewX">
      <MemberSignature Language="C#" Value="public virtual float TextSkewX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TextSkewX" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.TextSkewX" />
      <MemberSignature Language="F#" Value="member this.TextSkewX : single with get, set" Usage="Android.Graphics.Paint.TextSkewX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextSkewX", "()F", "GetGetTextSkewXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextSkewX", "()F", "GetGetTextSkewXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextSkewX", "(F)V", "GetSetTextSkewX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextSkewX", "(F)V", "GetSetTextSkewX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="skewX">set the paint's skew factor in X for drawing text.</param>
        <summary>Return the paint's horizontal skew factor for text. -or- Set the paint's horizontal skew factor for text.</summary>
        <value>the paint's skew factor in X for drawing text.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTextSkewX()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTextSkewX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setTextSkewX(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setTextSkewX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Paint.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Paint.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Typeface">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Typeface? Typeface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Typeface Typeface" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Typeface" />
      <MemberSignature Language="F#" Value="member this.Typeface : Android.Graphics.Typeface" Usage="Android.Graphics.Paint.Typeface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Typeface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's typeface object.</summary>
        <value>the paint's typeface (or null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getTypeface()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getTypeface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnderlinePosition">
      <MemberSignature Language="C#" Value="public virtual float UnderlinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 UnderlinePosition" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.UnderlinePosition" />
      <MemberSignature Language="F#" Value="member this.UnderlinePosition : single" Usage="Android.Graphics.Paint.UnderlinePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUnderlinePosition", "()F", "GetGetUnderlinePositionHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUnderlinePosition", "()F", "GetGetUnderlinePositionHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the distance from top of the underline to the baseline in pixels.</summary>
        <value>the position of the underline in pixels</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getUnderlinePosition()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getUnderlinePosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlineText">
      <MemberSignature Language="C#" Value="public bool UnderlineText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnderlineText" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.UnderlineText" />
      <MemberSignature Language="F#" Value="member this.UnderlineText : bool with get, set" Usage="Android.Graphics.Paint.UnderlineText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUnderlineText", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUnderlineText", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUnderlineText", "(Z)V", "GetSetUnderlineText_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUnderlineText", "(Z)V", "GetSetUnderlineText_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="underlineText">true to set the underlineText bit in the paint's
                                 flags, false to clear it.</param>
        <summary>Helper for getFlags(), returning true if UNDERLINE_TEXT_FLAG bit is set -or- Helper for setFlags(), setting or clearing the UNDERLINE_TEXT_FLAG bit</summary>
        <value>true if the underlineText bit is set in the paint's flags.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#isUnderlineText()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.isUnderlineText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setUnderlineText(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setUnderlineText(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnderlineThickness">
      <MemberSignature Language="C#" Value="public virtual float UnderlineThickness { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 UnderlineThickness" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.UnderlineThickness" />
      <MemberSignature Language="F#" Value="member this.UnderlineThickness : single" Usage="Android.Graphics.Paint.UnderlineThickness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUnderlineThickness", "()F", "GetGetUnderlineThicknessHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUnderlineThickness", "()F", "GetGetUnderlineThicknessHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thickness of the underline in pixels.</summary>
        <value>the thickness of the underline in pixels</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getUnderlineThickness()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getUnderlineThickness()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WordSpacing">
      <MemberSignature Language="C#" Value="public virtual float WordSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WordSpacing" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.WordSpacing" />
      <MemberSignature Language="F#" Value="member this.WordSpacing : single with get, set" Usage="Android.Graphics.Paint.WordSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWordSpacing", "()F", "GetGetWordSpacingHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWordSpacing", "()F", "GetGetWordSpacingHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWordSpacing", "(F)V", "GetSetWordSpacing_FHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setWordSpacing", "(F)V", "GetSetWordSpacing_FHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="wordSpacing">set the paint's extra word-spacing for drawing text in pixels.</param>
        <summary>Return the paint's extra word-spacing for text. -or- Set the paint's extra word-spacing for text.</summary>
        <value>the paint's extra word-spacing for drawing text in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getWordSpacing()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getWordSpacing()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#setWordSpacing(float)" title="Reference documentation">Java documentation for <code>android.graphics.Paint.setWordSpacing(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xfermode">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Xfermode? Xfermode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Xfermode Xfermode" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Paint.Xfermode" />
      <MemberSignature Language="F#" Value="member this.Xfermode : Android.Graphics.Xfermode" Usage="Android.Graphics.Paint.Xfermode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getXfermode", "()Landroid/graphics/Xfermode;", "GetGetXfermodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getXfermode", "()Landroid/graphics/Xfermode;", "GetGetXfermodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Xfermode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the paint's transfer mode object.</summary>
        <value>the paint's transfer mode (or null)</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Paint#getXfermode()" title="Reference documentation">Java documentation for <code>android.graphics.Paint.getXfermode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
