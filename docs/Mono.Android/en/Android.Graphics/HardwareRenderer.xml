<Type Name="HardwareRenderer" FullName="Android.Graphics.HardwareRenderer">
  <TypeSignature Language="VB.NET" Value="Public Class HardwareRenderer&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class HardwareRenderer : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class HardwareRenderer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HardwareRenderer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.HardwareRenderer" />
  <TypeSignature Language="F#" Value="type HardwareRenderer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/HardwareRenderer", ApiSince=29, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/HardwareRenderer", ApiSince=29, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Creates an instance of a hardware-accelerated renderer.</summary>
    <remarks>
      <para>Creates an instance of a hardware-accelerated renderer. This is used to render a scene built
            from <c>RenderNode</c>'s to an output <c>android.view.Surface</c>. There can be as many
            HardwareRenderer instances as desired.</para>
      <para>&lt;h3&gt;Resources &amp; lifecycle&lt;/h3&gt;</para>
      <para>All HardwareRenderer instances share a common render thread. The render thread contains
            the GPU context &amp; resources necessary to do GPU-accelerated rendering. As such, the first
            HardwareRenderer created comes with the cost of also creating the associated GPU contexts,
            however each incremental HardwareRenderer thereafter is fairly cheap. The expected usage
            is to have a HardwareRenderer instance for every active <c>Surface</c>. For example
            when an Activity shows a Dialog the system internally will use 2 hardware renderers, both
            of which may be drawing at the same time.</para>
      <para>NOTE: Due to the shared, cooperative nature of the render thread it is critical that
            any <c>Surface</c> used must have a prompt, reliable consuming side. System-provided
            consumers such as <c>android.view.SurfaceView</c>,
            <c>android.view.Window#takeSurface(SurfaceHolder.Callback2)</c>,
            or <c>android.view.TextureView</c> all fit this requirement. However if custom consumers
            are used such as when using <c>SurfaceTexture</c> or <c>android.media.ImageReader</c>
            it is the app's responsibility to ensure that they consume updates promptly and rapidly.
            Failure to do so will cause the render thread to stall on that surface, blocking all
            HardwareRenderer instances.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HardwareRenderer();" />
      <MemberSignature Language="C#" Value="public HardwareRenderer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of a HardwareRenderer.</summary>
        <remarks>
          <para>Creates a new instance of a HardwareRenderer. The HardwareRenderer will default
            to opaque with no light source configured.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#HardwareRenderer()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.HardwareRenderer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HardwareRenderer(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected HardwareRenderer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.HardwareRenderer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.HardwareRenderer" Usage="new Android.Graphics.HardwareRenderer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearContent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearContent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearContent();" />
      <MemberSignature Language="C#" Value="public virtual void ClearContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.ClearContent" />
      <MemberSignature Language="F#" Value="abstract member ClearContent : unit -&gt; unit&#xA;override this.ClearContent : unit -&gt; unit" Usage="hardwareRenderer.ClearContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearContent", "()V", "GetClearContentHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearContent", "()V", "GetClearContentHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys all the display lists associated with the current rendering content.</summary>
        <remarks>
          <para>Destroys all the display lists associated with the current rendering content.
            This includes releasing a reference to the current content root RenderNode. It will
            therefore be necessary to call <c>#setContentRoot(RenderNode)</c> in order to resume
            rendering after calling this, along with re-recording the display lists for the
            RenderNode tree.</para>
          <para>It is recommended, but not necessary, to use this in combination with lifecycle events
            such as <c>Activity#onStop()</c> and <c>Activity#onStart()</c> or in response to
            <c>android.content.ComponentCallbacks2#onTrimMemory(int)</c> signals such as
            <c>android.content.ComponentCallbacks2#TRIM_MEMORY_UI_HIDDEN</c>
            
            See also <c>#stop()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#clearContent()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.clearContent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRenderRequest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateRenderRequest () As HardwareRenderer.FrameRenderRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Graphics::HardwareRenderer::FrameRenderRequest ^ CreateRenderRequest();" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.HardwareRenderer.FrameRenderRequest CreateRenderRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.HardwareRenderer/FrameRenderRequest CreateRenderRequest() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.CreateRenderRequest" />
      <MemberSignature Language="F#" Value="abstract member CreateRenderRequest : unit -&gt; Android.Graphics.HardwareRenderer.FrameRenderRequest&#xA;override this.CreateRenderRequest : unit -&gt; Android.Graphics.HardwareRenderer.FrameRenderRequest" Usage="hardwareRenderer.CreateRenderRequest " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createRenderRequest", "()Landroid/graphics/HardwareRenderer$FrameRenderRequest;", "GetCreateRenderRequestHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createRenderRequest", "()Landroid/graphics/HardwareRenderer$FrameRenderRequest;", "GetCreateRenderRequestHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.HardwareRenderer+FrameRenderRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>FrameRenderRequest</c> that can be used to render a new frame.</summary>
        <returns>An instance of <c>FrameRenderRequest</c>. The instance may be reused for every
            frame, so the caller should not hold onto it for longer than a single render request.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#createRenderRequest()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.createRenderRequest()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Destroy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Destroy();" />
      <MemberSignature Language="C#" Value="public virtual void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Destroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.Destroy" />
      <MemberSignature Language="F#" Value="abstract member Destroy : unit -&gt; unit&#xA;override this.Destroy : unit -&gt; unit" Usage="hardwareRenderer.Destroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("destroy", "()V", "GetDestroyHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("destroy", "()V", "GetDestroyHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys the rendering context of this HardwareRenderer.</summary>
        <remarks>
          <para>Destroys the rendering context of this HardwareRenderer. This destroys the resources
            associated with this renderer and releases the currently set <c>Surface</c>. This must
            be called when this HardwareRenderer is no longer needed.</para>
          <para>The renderer may be restored from this state by setting a new <c>Surface</c>, setting
            new rendering content with <c>#setContentRoot(RenderNode)</c>, and resuming
            rendering by issuing a new <c>FrameRenderRequest</c>.</para>
          <para>It is recommended to call this in response to callbacks such as
            <c>android.view.SurfaceHolder.Callback#surfaceDestroyed(SurfaceHolder)</c>.</para>
          <para>Note that if there are any outstanding frame commit callbacks they may never being
            invoked if the frame was deferred to a later vsync.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#destroy()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.destroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Shared Property DrawingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DrawingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public static bool DrawingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DrawingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.HardwareRenderer.DrawingEnabled" />
      <MemberSignature Language="F#" Value="member this.DrawingEnabled : bool with get, set" Usage="Android.Graphics.HardwareRenderer.DrawingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDrawingEnabled", "()Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDrawingEnabled", "()Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDrawingEnabled", "(Z)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDrawingEnabled", "(Z)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if HardwareRender will produce output. -or- Toggles whether or not HardwareRenderer will produce drawing output globally in the current
            process.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if HardwareRender will produce output.
            
            This value is global to the process and affects all uses of HardwareRenderer,
            including
            those created by the system such as those used by the View tree when using hardware
            accelerated rendering.
            
            Default is true in all production environments, but may be false in testing-focused
            emulators or if <c>#setDrawingEnabled(boolean)</c> is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#isDrawingEnabled()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.isDrawingEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Toggles whether or not HardwareRenderer will produce drawing output globally in the current
            process.</para>
          <para>This applies to all HardwareRenderer instances, including those created by the platform such
            as those used by the system for hardware accelerated View rendering.</para>
          <para>The capability to disable drawing output is intended for test environments, primarily
            headless ones. By setting this to false, tests that launch activities or interact with Views
            can be quicker with less RAM usage by skipping the final step of View drawing. All View
            lifecycle events will occur as normal, only the final step of rendering on the GPU to the
            display will be skipped.</para>
          <para>This can be toggled on and off at will, so screenshot tests can also run in this same
            environment by toggling drawing back on and forcing a frame to be drawn such as by calling
            view#invalidate(). Once drawn and the screenshot captured, this can then be turned back off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setDrawingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setDrawingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.HardwareRenderer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.HardwareRenderer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyFramePending">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyFramePending ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyFramePending();" />
      <MemberSignature Language="C#" Value="public virtual void NotifyFramePending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyFramePending() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.NotifyFramePending" />
      <MemberSignature Language="F#" Value="abstract member NotifyFramePending : unit -&gt; unit&#xA;override this.NotifyFramePending : unit -&gt; unit" Usage="hardwareRenderer.NotifyFramePending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyFramePending", "()V", "GetNotifyFramePendingHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyFramePending", "()V", "GetNotifyFramePendingHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the hardware renderer that a call to <c>FrameRenderRequest#syncAndDraw()</c> will
            be coming soon.</summary>
        <remarks>
          <para>Notifies the hardware renderer that a call to <c>FrameRenderRequest#syncAndDraw()</c> will
            be coming soon. This is used to help schedule when RenderThread-driven animations will
            happen as the renderer wants to avoid producing more than one frame per vsync signal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#notifyFramePending()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.notifyFramePending()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Opaque As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Opaque { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Opaque { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Opaque" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.HardwareRenderer.Opaque" />
      <MemberSignature Language="F#" Value="member this.Opaque : bool with get, set" Usage="Android.Graphics.HardwareRenderer.Opaque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOpaque", "()Z", "GetIsOpaqueHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOpaque", "()Z", "GetIsOpaqueHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOpaque", "(Z)V", "GetSetOpaque_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOpaque", "(Z)V", "GetSetOpaque_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="opaque">true if the content rendered is opaque, false if the renderer should clear
                          to transparent before rendering</param>
        <summary>Whether or not the renderer is set to be opaque. -or- Change the HardwareRenderer's opacity.</summary>
        <value>true if the renderer is opaque, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Whether or not the renderer is set to be opaque. See <c>#setOpaque(boolean)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#isOpaque()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.isOpaque()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Change the HardwareRenderer's opacity. Will take effect on the next frame produced.</para>
          <para>If the renderer is set to opaque it is the app's responsibility to ensure that the
            content renders to every pixel of the Surface, otherwise corruption may result. Note that
            this includes ensuring that the first draw of any given pixel does not attempt to blend
            against the destination. If this is false then the hardware renderer will clear to
            transparent at the start of every frame.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setOpaque(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setOpaque(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentRoot">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetContentRoot (content As RenderNode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetContentRoot(Android::Graphics::RenderNode ^ content);" />
      <MemberSignature Language="C#" Value="public virtual void SetContentRoot (Android.Graphics.RenderNode? content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentRoot(class Android.Graphics.RenderNode content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.SetContentRoot(Android.Graphics.RenderNode)" />
      <MemberSignature Language="F#" Value="abstract member SetContentRoot : Android.Graphics.RenderNode -&gt; unit&#xA;override this.SetContentRoot : Android.Graphics.RenderNode -&gt; unit" Usage="hardwareRenderer.SetContentRoot content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentRoot", "(Landroid/graphics/RenderNode;)V", "GetSetContentRoot_Landroid_graphics_RenderNode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentRoot", "(Landroid/graphics/RenderNode;)V", "GetSetContentRoot_Landroid_graphics_RenderNode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="Android.Graphics.RenderNode" />
      </Parameters>
      <Docs>
        <param name="content">The content to set as the root RenderNode. If null the content root is removed
                           and the renderer will draw nothing.</param>
        <summary>Sets the content root to render.</summary>
        <remarks>
          <para>Sets the content root to render. It is not necessary to call this whenever the content
            recording changes. Any mutations to the RenderNode content, or any of the RenderNode's
            contained within the content node, will be applied whenever a new <c>FrameRenderRequest</c>
            is issued via <c>#createRenderRequest()</c> and <c>FrameRenderRequest#syncAndDraw()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setContentRoot(android.graphics.RenderNode)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setContentRoot(android.graphics.RenderNode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLightSourceAlpha">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLightSourceAlpha (ambientShadowAlpha As Single, spotShadowAlpha As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLightSourceAlpha(float ambientShadowAlpha, float spotShadowAlpha);" />
      <MemberSignature Language="C#" Value="public virtual void SetLightSourceAlpha (float ambientShadowAlpha, float spotShadowAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLightSourceAlpha(float32 ambientShadowAlpha, float32 spotShadowAlpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.SetLightSourceAlpha(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetLightSourceAlpha : single * single -&gt; unit&#xA;override this.SetLightSourceAlpha : single * single -&gt; unit" Usage="hardwareRenderer.SetLightSourceAlpha (ambientShadowAlpha, spotShadowAlpha)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLightSourceAlpha", "(FF)V", "GetSetLightSourceAlpha_FFHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLightSourceAlpha", "(FF)V", "GetSetLightSourceAlpha_FFHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ambientShadowAlpha" Type="System.Single" />
        <Parameter Name="spotShadowAlpha" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="ambientShadowAlpha">The alpha for the ambient shadow. If unsure, a reasonable default
                                      is 0.039f.</param>
        <param name="spotShadowAlpha">The alpha for the spot shadow. If unsure, a reasonable default is
                                      0.19f.</param>
        <summary>Configures the ambient &amp; spot shadow alphas.</summary>
        <remarks>
          <para>Configures the ambient &amp; spot shadow alphas. This is the alpha used when the shadow
            has max alpha, and ramps down from the values provided to zero.</para>
          <para>These values are typically provided by the current theme, see
            <c>android.R.attr#spotShadowAlpha</c> and <c>android.R.attr#ambientShadowAlpha</c>.</para>
          <para>This must be set at least once along with
            <c>#setLightSourceGeometry(float, float, float, float)</c> before shadows will work.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setLightSourceAlpha(float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setLightSourceAlpha(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLightSourceGeometry">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLightSourceGeometry (lightX As Single, lightY As Single, lightZ As Single, lightRadius As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLightSourceGeometry(float lightX, float lightY, float lightZ, float lightRadius);" />
      <MemberSignature Language="C#" Value="public virtual void SetLightSourceGeometry (float lightX, float lightY, float lightZ, float lightRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLightSourceGeometry(float32 lightX, float32 lightY, float32 lightZ, float32 lightRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.SetLightSourceGeometry(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetLightSourceGeometry : single * single * single * single -&gt; unit&#xA;override this.SetLightSourceGeometry : single * single * single * single -&gt; unit" Usage="hardwareRenderer.SetLightSourceGeometry (lightX, lightY, lightZ, lightRadius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLightSourceGeometry", "(FFFF)V", "GetSetLightSourceGeometry_FFFFHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLightSourceGeometry", "(FFFF)V", "GetSetLightSourceGeometry_FFFFHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lightX" Type="System.Single" />
        <Parameter Name="lightY" Type="System.Single" />
        <Parameter Name="lightZ" Type="System.Single" />
        <Parameter Name="lightRadius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="lightX">The X position of the light source</param>
        <param name="lightY">The Y position of the light source</param>
        <param name="lightZ">The Z position of the light source. Must be &gt;= 0.</param>
        <param name="lightRadius">The radius of the light source. Smaller radius will have sharper edges,
                               larger radius will have softer shadows.</param>
        <summary>Sets the center of the light source.</summary>
        <remarks>
          <para>Sets the center of the light source. The light source point controls the directionality
            and shape of shadows rendered by RenderNode Z &amp; elevation.</para>
          <para>The platform's recommendation is to set lightX to 'displayWidth / 2f - windowLeft', set
            lightY to 0 - windowTop, lightZ set to 600dp, and lightRadius to 800dp.</para>
          <para>The light source should be setup both as part of initial configuration, and whenever
            the window moves to ensure the light source stays anchored in display space instead
            of in window space.</para>
          <para>This must be set at least once along with <c>#setLightSourceAlpha(float, float)</c>
            before shadows will work.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setLightSourceGeometry(float,%20float,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setLightSourceGeometry(float, float, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetName(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual void SetName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.SetName(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetName : string -&gt; unit&#xA;override this.SetName : string -&gt; unit" Usage="hardwareRenderer.SetName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The debug name to use for this HardwareRenderer instance</param>
        <summary>Sets a name for this renderer.</summary>
        <remarks>
          <para>Sets a name for this renderer. This is used to identify this renderer instance
            when reporting debug information such as the per-window frame time metrics
            reported by 'adb shell dumpsys gfxinfo [package] framestats'</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSurface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSurface (surface As Surface)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSurface(Android::Views::Surface ^ surface);" />
      <MemberSignature Language="C#" Value="public virtual void SetSurface (Android.Views.Surface? surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.SetSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetSurface : Android.Views.Surface -&gt; unit&#xA;override this.SetSurface : Android.Views.Surface -&gt; unit" Usage="hardwareRenderer.SetSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">The surface to render into. If null then rendering will be stopped. If
                           non-null then <c>Surface#isValid()</c> must be true.</param>
        <summary>The surface to render into.</summary>
        <remarks>
          <para>The surface to render into. The surface is assumed to be associated with the display and
            as such is still driven by vsync signals such as those from
            <c>android.view.Choreographer</c> and that it has a native refresh rate matching that of
            the display's (typically 60hz).</para>
          <para>NOTE: Due to the shared, cooperative nature of the render thread it is critical that
            any <c>Surface</c> used must have a prompt, reliable consuming side. System-provided
            consumers such as <c>android.view.SurfaceView</c>,
            <c>android.view.Window#takeSurface(SurfaceHolder.Callback2)</c>,
            or <c>android.view.TextureView</c> all fit this requirement. However if custom consumers
            are used such as when using <c>SurfaceTexture</c> or <c>android.media.ImageReader</c>
            it is the app's responsibility to ensure that they consume updates promptly and rapidly.
            Failure to do so will cause the render thread to stall on that surface, blocking all
            HardwareRenderer instances.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#setSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.setSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Start();" />
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="hardwareRenderer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes rendering into the surface.</summary>
        <remarks>
          <para>Resumes rendering into the surface. Any pending rendering requests
            will produce a new frame at the next vsync signal.</para>
          <para>This is useful in combination with lifecycle events such as <c>Activity#onStart()</c>.
            See <c>#stop()</c> for stopping rendering.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#start()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Stop();" />
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.HardwareRenderer.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="hardwareRenderer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hard stops rendering into the surface.</summary>
        <remarks>
          <para>Hard stops rendering into the surface. If the renderer is stopped it will
            block any attempt to render. Calls to <c>FrameRenderRequest#syncAndDraw()</c> will
            still sync over the latest rendering content, however they will not render and instead
            <c>#SYNC_CONTEXT_IS_STOPPED</c> will be returned.</para>
          <para>This is useful in combination with lifecycle events such as <c>Activity#onStop()</c>.
            See <c>#start()</c> for resuming rendering.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#stop()" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncContextIsStopped">
      <MemberSignature Language="VB.NET" Value="Public Const SyncContextIsStopped As Sync  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::Sync SyncContextIsStopped = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.Sync SyncContextIsStopped = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Sync SyncContextIsStopped = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.HardwareRenderer.SyncContextIsStopped" />
      <MemberSignature Language="F#" Value="val mutable SyncContextIsStopped : Android.Graphics.Sync" Usage="Android.Graphics.HardwareRenderer.SyncContextIsStopped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYNC_CONTEXT_IS_STOPPED", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYNC_CONTEXT_IS_STOPPED", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Sync</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The hardware renderer has been set to a "stopped" state.</summary>
        <remarks>
          <para>The hardware renderer has been set to a "stopped" state. If this is returned then the
            rendering content has been synced, however a frame was not produced.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#SYNC_CONTEXT_IS_STOPPED" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.SYNC_CONTEXT_IS_STOPPED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncFrameDropped">
      <MemberSignature Language="VB.NET" Value="Public Const SyncFrameDropped As Sync  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::Sync SyncFrameDropped = 8;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.Sync SyncFrameDropped = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Sync SyncFrameDropped = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.HardwareRenderer.SyncFrameDropped" />
      <MemberSignature Language="F#" Value="val mutable SyncFrameDropped : Android.Graphics.Sync" Usage="Android.Graphics.HardwareRenderer.SyncFrameDropped" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYNC_FRAME_DROPPED", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYNC_FRAME_DROPPED", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Sync</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>The content was synced but the renderer has declined to produce a frame in this vsync
            interval.</summary>
        <remarks>
          <para>The content was synced but the renderer has declined to produce a frame in this vsync
            interval. This can happen if a frame was already drawn in this vsync or if the renderer
            is outrunning the frame consumer. The renderer will internally re-schedule itself
            to render a frame in the next vsync signal, so the caller does not need to do anything
            in response to this signal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#SYNC_FRAME_DROPPED" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.SYNC_FRAME_DROPPED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncLostSurfaceRewardIfFound">
      <MemberSignature Language="VB.NET" Value="Public Const SyncLostSurfaceRewardIfFound As Sync  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::Sync SyncLostSurfaceRewardIfFound = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.Sync SyncLostSurfaceRewardIfFound = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Sync SyncLostSurfaceRewardIfFound = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.HardwareRenderer.SyncLostSurfaceRewardIfFound" />
      <MemberSignature Language="F#" Value="val mutable SyncLostSurfaceRewardIfFound : Android.Graphics.Sync" Usage="Android.Graphics.HardwareRenderer.SyncLostSurfaceRewardIfFound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYNC_LOST_SURFACE_REWARD_IF_FOUND", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYNC_LOST_SURFACE_REWARD_IF_FOUND", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Sync</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The hardware renderer no longer has a valid <c>android.view.Surface</c> to render to.</summary>
        <remarks>
          <para>The hardware renderer no longer has a valid <c>android.view.Surface</c> to render to.
            This can happen if <c>Surface#release()</c> was called. The user should no longer
            attempt to call syncAndDraw until a new surface has been provided by calling
            setSurface.</para>
          <para>Spoiler: the reward is GPU-accelerated drawing, better find that Surface!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#SYNC_LOST_SURFACE_REWARD_IF_FOUND" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.SYNC_LOST_SURFACE_REWARD_IF_FOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncOk">
      <MemberSignature Language="VB.NET" Value="Public Const SyncOk As Sync  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::Sync SyncOk = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.Sync SyncOk = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Sync SyncOk = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.HardwareRenderer.SyncOk" />
      <MemberSignature Language="F#" Value="val mutable SyncOk : Android.Graphics.Sync" Usage="Android.Graphics.HardwareRenderer.SyncOk" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYNC_OK", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYNC_OK", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Sync</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Nothing interesting to report.</summary>
        <remarks>
          <para>Nothing interesting to report. Sync &amp; draw kicked off</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#SYNC_OK" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.SYNC_OK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncRedrawRequested">
      <MemberSignature Language="VB.NET" Value="Public Const SyncRedrawRequested As Sync  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::Sync SyncRedrawRequested = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.Sync SyncRedrawRequested = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.Sync SyncRedrawRequested = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.HardwareRenderer.SyncRedrawRequested" />
      <MemberSignature Language="F#" Value="val mutable SyncRedrawRequested : Android.Graphics.Sync" Usage="Android.Graphics.HardwareRenderer.SyncRedrawRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYNC_REDRAW_REQUESTED", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYNC_REDRAW_REQUESTED", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.Sync enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Sync</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The renderer is requesting a redraw.</summary>
        <remarks>
          <para>The renderer is requesting a redraw. This can occur if there's an animation that's running
            in the RenderNode tree and the hardware renderer is unable to self-animate.</para>
          <para>If this is returned from syncAndDraw the expectation is that syncAndDraw
            will be called again on the next vsync signal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/HardwareRenderer#SYNC_REDRAW_REQUESTED" title="Reference documentation">Java documentation for <code>android.graphics.HardwareRenderer.SYNC_REDRAW_REQUESTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.HardwareRenderer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.HardwareRenderer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.HardwareRenderer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.HardwareRenderer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
