<Type Name="BitmapFactory+Options" FullName="Android.Graphics.BitmapFactory+Options">
  <TypeSignature Language="C#" Value="public class BitmapFactory.Options : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit BitmapFactory/Options extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.BitmapFactory.Options" />
  <TypeSignature Language="F#" Value="type BitmapFactory.Options = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/BitmapFactory$Options", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/BitmapFactory$Options", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/BitmapFactory$Options" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Options ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.Options.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a default Options object, which if left unchanged will give
            the same result from the decoder as if null were passed.</summary>
        <remarks>
          <para>Create a default Options object, which if left unchanged will give
            the same result from the decoder as if null were passed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#BitmapFactory$Options()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.BitmapFactory$Options()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Options (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.Options.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.BitmapFactory.Options : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.BitmapFactory.Options" Usage="new Android.Graphics.BitmapFactory.Options (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InBitmap">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap InBitmap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap InBitmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InBitmap" />
      <MemberSignature Language="F#" Value="member this.InBitmap : Android.Graphics.Bitmap with get, set" Usage="Android.Graphics.BitmapFactory.Options.InBitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inBitmap")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inBitmap")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, decode methods that take the Options object will attempt to
            reuse this bitmap when loading content.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If set, decode methods that take the Options object will attempt to
            reuse this bitmap when loading content. If the decode operation
            cannot use this bitmap, the decode method will throw an
            <c>java.lang.IllegalArgumentException</c>. The
            current implementation necessitates that the reused bitmap be
            mutable, and the resulting reused bitmap will continue to remain
            mutable even when decoding a resource which would normally result in
            an immutable bitmap.&lt;/p&gt;</para>
          <para>You should still always use the returned Bitmap of the decode
            method and not assume that reusing the bitmap worked, due to the
            constraints outlined above and failure situations that can occur.
            Checking whether the return value matches the value of the inBitmap
            set in the Options structure will indicate if the bitmap was reused,
            but in all cases you should use the Bitmap returned by the decoding
            function to ensure that you are using the bitmap that was used as the
            decode destination.</para>
          <para>&lt;h3&gt;Usage with BitmapFactory&lt;/h3&gt;</para>
          <para>As of <c>android.os.Build.VERSION_CODES#KITKAT</c>, any
            mutable bitmap can be reused by <c>BitmapFactory</c> to decode any
            other bitmaps as long as the resulting <c>Bitmap#getByteCount()
            byte count</c> of the decoded bitmap is less than or equal to the <c>Bitmap#getAllocationByteCount() allocated byte count</c> of the reused
            bitmap. This can be because the intrinsic size is smaller, or its
            size post scaling (for density / sample size) is smaller.</para>
          <para>&lt;p class="note"&gt;Prior to <c>android.os.Build.VERSION_CODES#KITKAT</c>
            additional constraints apply: The image being decoded (whether as a
            resource or as a stream) must be in jpeg or png format. Only equal
            sized bitmaps are supported, with <c>#inSampleSize</c> set to 1.
            Additionally, the <c>android.graphics.Bitmap.Config
            configuration</c> of the reused bitmap will override the setting of
            <c>#inPreferredConfig</c>, if set.&lt;/p&gt;
            
            &lt;h3&gt;Usage with BitmapRegionDecoder&lt;/h3&gt;</para>
          <para>BitmapRegionDecoder will draw its requested content into the Bitmap
            provided, clipping if the output content size (post scaling) is larger
            than the provided Bitmap. The provided Bitmap's width, height, and
            <c>Bitmap.Config</c> will not be changed.
            
            &lt;p class="note"&gt;BitmapRegionDecoder support for <c>#inBitmap</c> was
            introduced in <c>android.os.Build.VERSION_CODES#JELLY_BEAN</c>. All
            formats supported by BitmapRegionDecoder support Bitmap reuse via
            <c>#inBitmap</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inBitmap" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inBitmap</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InDensity">
      <MemberSignature Language="C#" Value="public int InDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InDensity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InDensity" />
      <MemberSignature Language="F#" Value="member this.InDensity : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.InDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inDensity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inDensity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density to use for the bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The pixel density to use for the bitmap.  This will always result
            in the returned bitmap having a density set for it (see
            <c>Bitmap#setDensity(int) Bitmap.setDensity(int)</c>).  In addition,
            if <c>#inScaled</c> is set (which it is by default} and this
            density does not match <c>#inTargetDensity</c>, then the bitmap
            will be scaled to the target density before being returned.</para>
          <para>If this is 0,
            <c>BitmapFactory#decodeResource(Resources, int)</c>, 
            <c>BitmapFactory#decodeResource(Resources, int, android.graphics.BitmapFactory.Options)</c>,
            and <c>BitmapFactory#decodeResourceStream</c>
            will fill in the density associated with the resource.  The other
            functions will leave it as-is and no density will be applied.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inDensity" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inDensity</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScreenDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InDither">
      <MemberSignature Language="C#" Value="public bool InDither { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InDither" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InDither" />
      <MemberSignature Language="F#" Value="member this.InDither : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InDither" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inDither")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inDither")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#N</c>, this is
            ignored.
            
            In <c>android.os.Build.VERSION_CODES#M</c> and below, if dither is
            true, the decoder will attempt to dither the decoded image.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inDither" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inDither</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InInputShareable">
      <MemberSignature Language="C#" Value="public bool InInputShareable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InInputShareable" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InInputShareable" />
      <MemberSignature Language="F#" Value="member this.InInputShareable : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InInputShareable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inInputShareable")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inInputShareable")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this is
            ignored.
            
            In <c>android.os.Build.VERSION_CODES#KITKAT</c> and below, this
            field works in conjuction with inPurgeable. If inPurgeable is false,
            then this field is ignored. If inPurgeable is true, then this field
            determines whether the bitmap can share a reference to the input
            data (inputstream, array, etc.) or if it must make a deep copy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inInputShareable" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inInputShareable</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InJustDecodeBounds">
      <MemberSignature Language="C#" Value="public bool InJustDecodeBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InJustDecodeBounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InJustDecodeBounds" />
      <MemberSignature Language="F#" Value="member this.InJustDecodeBounds : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InJustDecodeBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inJustDecodeBounds")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inJustDecodeBounds")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to true, the decoder will return null (no bitmap), but
            the <c>out...</c> fields will still be set, allowing the caller to
            query the bitmap without having to allocate the memory for its pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If set to true, the decoder will return null (no bitmap), but
            the <c>out...</c> fields will still be set, allowing the caller to
            query the bitmap without having to allocate the memory for its pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inJustDecodeBounds" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inJustDecodeBounds</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InMutable">
      <MemberSignature Language="C#" Value="public bool InMutable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InMutable" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InMutable" />
      <MemberSignature Language="F#" Value="member this.InMutable : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inMutable")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inMutable")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set, decode methods will always return a mutable Bitmap instead of
            an immutable one.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If set, decode methods will always return a mutable Bitmap instead of
            an immutable one. This can be used for instance to programmatically apply
            effects to a Bitmap loaded through BitmapFactory.</para>
          <para>Can not be set simultaneously with inPreferredConfig =
            <c>android.graphics.Bitmap.Config#HARDWARE</c>,
            because hardware bitmaps are always immutable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inMutable" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inMutable</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="InPreferQualityOverSpeed">
      <MemberSignature Language="C#" Value="public bool InPreferQualityOverSpeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPreferQualityOverSpeed" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InPreferQualityOverSpeed" />
      <MemberSignature Language="F#" Value="member this.InPreferQualityOverSpeed : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InPreferQualityOverSpeed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inPreferQualityOverSpeed")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inPreferQualityOverSpeed")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#N</c>, this is
            ignored.  The output will always be high quality.
            
            In <c>android.os.Build.VERSION_CODES#M</c> and below, if
            inPreferQualityOverSpeed is set to true, the decoder will try to
            decode the reconstructed image to a higher quality even at the
            expense of the decoding speed. Currently the field only affects JPEG
            decode, in the case of which a more accurate, but slightly slower,
            IDCT method will be used instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inPreferQualityOverSpeed" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inPreferQualityOverSpeed</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="InPreferredColorSpace">
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorSpace InPreferredColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorSpace InPreferredColorSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InPreferredColorSpace" />
      <MemberSignature Language="F#" Value="member this.InPreferredColorSpace : Android.Graphics.ColorSpace with get, set" Usage="Android.Graphics.BitmapFactory.Options.InPreferredColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inPreferredColorSpace", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inPreferredColorSpace", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this is non-null, the decoder will try to decode into this
            color space.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If this is non-null, the decoder will try to decode into this
            color space. If it is null, or the request cannot be met,
            the decoder will pick either the color space embedded in the image
            or the color space best suited for the requested image configuration
            (for instance <c>ColorSpace.Named#SRGB sRGB</c> for
            <c>Bitmap.Config#ARGB_8888</c> configuration and
            <c>ColorSpace.Named#EXTENDED_SRGB EXTENDED_SRGB</c> for
            <c>Bitmap.Config#RGBA_F16</c>).</para>
          <para>&lt;p class="note"&gt;Only <c>ColorSpace.Model#RGB</c> color spaces are
            currently supported. An <c>IllegalArgumentException</c> will
            be thrown by the decode methods when setting a non-RGB color space
            such as <c>ColorSpace.Named#CIE_LAB Lab</c>.&lt;/p&gt;
            
            &lt;p class="note"&gt;
            Prior to <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            the specified color space's transfer function must be
            an <c>ColorSpace.Rgb.TransferParameters ICC parametric curve</c>. An
            <c>IllegalArgumentException</c> will be thrown by the decode methods
            if calling <c>ColorSpace.Rgb#getTransferParameters()</c> on the
            specified color space returns null.
            
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            non ICC parametric curve transfer function is allowed.
            E.g., <c>ColorSpace.Named#BT2020_HLG BT2020_HLG</c>.&lt;/p&gt;</para>
          <para>After decode, the bitmap's color space is stored in
            <c>#outColorSpace</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inPreferredColorSpace" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inPreferredColorSpace</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPreferredConfig">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config InPreferredConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap/Config InPreferredConfig" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InPreferredConfig" />
      <MemberSignature Language="F#" Value="member this.InPreferredConfig : Android.Graphics.Bitmap.Config with get, set" Usage="Android.Graphics.BitmapFactory.Options.InPreferredConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inPreferredConfig")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inPreferredConfig")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this is non-null, the decoder will try to decode into this
 internal configuration.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InPremultiplied">
      <MemberSignature Language="C#" Value="public bool InPremultiplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPremultiplied" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InPremultiplied" />
      <MemberSignature Language="F#" Value="member this.InPremultiplied : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InPremultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inPremultiplied")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inPremultiplied")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If true (which is the default), the resulting bitmap will have its
            color channels pre-multipled by the alpha channel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If true (which is the default), the resulting bitmap will have its
            color channels pre-multipled by the alpha channel.</para>
          <para>This should NOT be set to false for images to be directly drawn by
            the view system or through a <c>Canvas</c>. The view system and
            <c>Canvas</c> assume all drawn images are pre-multiplied to simplify
            draw-time blending, and will throw a RuntimeException when
            un-premultiplied are drawn.</para>
          <para>This is likely only useful if you want to manipulate raw encoded
            image data, e.g. with RenderScript or custom OpenGL.</para>
          <para>This does not affect bitmaps without an alpha channel.</para>
          <para>Setting this flag to false while setting <c>#inScaled</c> to true
            may result in incorrect colors.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inPremultiplied" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inPremultiplied</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InPurgeable">
      <MemberSignature Language="C#" Value="public bool InPurgeable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InPurgeable" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InPurgeable" />
      <MemberSignature Language="F#" Value="member this.InPurgeable : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InPurgeable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inPurgeable")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inPurgeable")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this is
            ignored.
            
            In <c>android.os.Build.VERSION_CODES#KITKAT</c> and below, if this
            is set to true, then the resulting bitmap will allocate its
            pixels such that they can be purged if the system needs to reclaim
            memory. In that instance, when the pixels need to be accessed again
            (e.g. the bitmap is drawn, getPixels() is called), they will be
            automatically re-decoded.
            
            &lt;p&gt;For the re-decode to happen, the bitmap must have access to the
            encoded data, either by sharing a reference to the input
            or by making a copy of it. This distinction is controlled by
            inInputShareable. If this is true, then the bitmap may keep a shallow
            reference to the input. If this is false, then the bitmap will
            explicitly make a copy of the input data, and keep that. Even if
            sharing is allowed, the implementation may still decide to make a
            deep copy of the input data.&lt;/p&gt;
            
            &lt;p&gt;While inPurgeable can help avoid big Dalvik heap allocations (from
            API level 11 onward), it sacrifices performance predictability since any
            image that the view system tries to draw may incur a decode delay which
            can lead to dropped frames. Therefore, most apps should avoid using
            inPurgeable to allow for a fast and fluid UI. To minimize Dalvik heap
            allocations use the <c>#inBitmap</c> flag instead.&lt;/p&gt;
            
            &lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; This flag is ignored when used
            with <c>#decodeResource(Resources, int,
            android.graphics.BitmapFactory.Options)</c> or <c>#decodeFile(String,
            android.graphics.BitmapFactory.Options)</c>.&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inPurgeable" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inPurgeable</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InSampleSize">
      <MemberSignature Language="C#" Value="public int InSampleSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InSampleSize" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InSampleSize" />
      <MemberSignature Language="F#" Value="member this.InSampleSize : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.InSampleSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inSampleSize")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inSampleSize")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If set to a value &gt; 1, requests the decoder to subsample the original
            image, returning a smaller image to save memory.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If set to a value &gt; 1, requests the decoder to subsample the original
            image, returning a smaller image to save memory. The sample size is
            the number of pixels in either dimension that correspond to a single
            pixel in the decoded bitmap. For example, inSampleSize == 4 returns
            an image that is 1/4 the width/height of the original, and 1/16 the
            number of pixels. Any value &lt;= 1 is treated the same as 1. Note: the
            decoder uses a final value based on powers of 2, any other value will
            be rounded down to the nearest power of 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inSampleSize" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inSampleSize</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InScaled">
      <MemberSignature Language="C#" Value="public bool InScaled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InScaled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InScaled" />
      <MemberSignature Language="F#" Value="member this.InScaled : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.InScaled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inScaled")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inScaled")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When this flag is set, if <c>#inDensity</c> and
            <c>#inTargetDensity</c> are not 0, the
            bitmap will be scaled to match <c>#inTargetDensity</c> when loaded,
            rather than relying on the graphics system scaling it each time it
            is drawn to a Canvas.</summary>
        <value>To be added.</value>
        <remarks>
          <para>When this flag is set, if <c>#inDensity</c> and
            <c>#inTargetDensity</c> are not 0, the
            bitmap will be scaled to match <c>#inTargetDensity</c> when loaded,
            rather than relying on the graphics system scaling it each time it
            is drawn to a Canvas.</para>
          <para>BitmapRegionDecoder ignores this flag, and will not scale output
            based on density. (though <c>#inSampleSize</c> is supported)</para>
          <para>This flag is turned on by default and should be turned off if you need
            a non-scaled version of the bitmap.  Nine-patch bitmaps ignore this
            flag and are always scaled.</para>
          <para>If <c>#inPremultiplied</c> is set to false, and the image has alpha,
            setting this flag to true may result in incorrect colors.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inScaled" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inScaled</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="InScreenDensity">
      <MemberSignature Language="C#" Value="public int InScreenDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InScreenDensity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InScreenDensity" />
      <MemberSignature Language="F#" Value="member this.InScreenDensity : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.InScreenDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inScreenDensity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inScreenDensity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density of the actual screen that is being used.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The pixel density of the actual screen that is being used.  This is
            purely for applications running in density compatibility code, where
            <c>#inTargetDensity</c> is actually the density the application
            sees rather than the real screen density.</para>
          <para>By setting this, you
            allow the loading code to avoid scaling a bitmap that is currently
            in the screen density up/down to the compatibility density.  Instead,
            if <c>#inDensity</c> is the same as <c>#inScreenDensity</c>, the
            bitmap will be left as-is.  Anything using the resulting bitmap
            must also used <c>Bitmap#getScaledWidth(int)
            Bitmap.getScaledWidth</c> and <c>Bitmap#getScaledHeight
            Bitmap.getScaledHeight</c> to account for any different between the
            bitmap's density and the target's density.</para>
          <para>This is never set automatically for the caller by
            <c>BitmapFactory</c> itself.  It must be explicitly set, since the
            caller must deal with the resulting bitmap in a density-aware way.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inScreenDensity" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inScreenDensity</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InTargetDensity">
      <MemberSignature Language="C#" Value="public int InTargetDensity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InTargetDensity" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InTargetDensity" />
      <MemberSignature Language="F#" Value="member this.InTargetDensity : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.InTargetDensity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inTargetDensity")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inTargetDensity")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The pixel density of the destination this bitmap will be drawn to.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The pixel density of the destination this bitmap will be drawn to.
            This is used in conjunction with <c>#inDensity</c> and
            <c>#inScaled</c> to determine if and how to scale the bitmap before
            returning it.</para>
          <para>If this is 0,
            <c>BitmapFactory#decodeResource(Resources, int)</c>, 
            <c>BitmapFactory#decodeResource(Resources, int, android.graphics.BitmapFactory.Options)</c>,
            and <c>BitmapFactory#decodeResourceStream</c>
            will fill in the density associated the Resources object's
            DisplayMetrics.  The other
            functions will leave it as-is and no scaling for density will be
            performed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inTargetDensity" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inTargetDensity</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScreenDensity" />
        <altmember cref="P:Android.Graphics.BitmapFactory.Options.InScaled" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
      </Docs>
    </Member>
    <Member MemberName="InTempStorage">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;byte&gt; InTempStorage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int8&gt; InTempStorage" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.InTempStorage" />
      <MemberSignature Language="F#" Value="member this.InTempStorage : System.Collections.Generic.IList&lt;byte&gt; with get, set" Usage="Android.Graphics.BitmapFactory.Options.InTempStorage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inTempStorage")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inTempStorage")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Temp storage to use for decoding.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Temp storage to use for decoding.  Suggest 16K or so.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#inTempStorage" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.inTempStorage</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.BitmapFactory.Options.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MCancel">
      <MemberSignature Language="C#" Value="public bool MCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MCancel" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.MCancel" />
      <MemberSignature Language="F#" Value="member this.MCancel : bool with get, set" Usage="Android.Graphics.BitmapFactory.Options.MCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mCancel")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mCancel")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#N</c>, see
            comments on <c>#requestCancelDecode()</c>.
            
            Flag to indicate that cancel has been called on this object.  This
            is useful if there's an intermediary that wants to first decode the
            bounds and then decode the image.  In that case the intermediary
            can check, inbetween the bounds decode and the image decode, to see
            if the operation is canceled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#mCancel" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.mCancel</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutColorSpace">
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorSpace OutColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorSpace OutColorSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.OutColorSpace" />
      <MemberSignature Language="F#" Value="member this.OutColorSpace : Android.Graphics.ColorSpace with get, set" Usage="Android.Graphics.BitmapFactory.Options.OutColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("outColorSpace", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("outColorSpace", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If known, the color space the decoded bitmap will have.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If known, the color space the decoded bitmap will have. Note that the
            output color space is not guaranteed to be the color space the bitmap
            is encoded with. If not known (when the config is
            <c>Bitmap.Config#ALPHA_8</c> for instance), or there is an error,
            it is set to null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#outColorSpace" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.outColorSpace</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutConfig">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config OutConfig { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap/Config OutConfig" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.OutConfig" />
      <MemberSignature Language="F#" Value="member this.OutConfig : Android.Graphics.Bitmap.Config with get, set" Usage="Android.Graphics.BitmapFactory.Options.OutConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("outConfig", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("outConfig", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutHeight">
      <MemberSignature Language="C#" Value="public int OutHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.OutHeight" />
      <MemberSignature Language="F#" Value="member this.OutHeight : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.OutHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("outHeight")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("outHeight")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The resulting height of the bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The resulting height of the bitmap. If <c>#inJustDecodeBounds</c> is
            set to false, this will be height of the output bitmap after any
            scaling is applied. If true, it will be the height of the input image
            without any accounting for scaling.</para>
          <para>outHeight will be set to -1 if there is an error trying to decode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#outHeight" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.outHeight</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutMimeType">
      <MemberSignature Language="C#" Value="public string OutMimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutMimeType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.OutMimeType" />
      <MemberSignature Language="F#" Value="member this.OutMimeType : string with get, set" Usage="Android.Graphics.BitmapFactory.Options.OutMimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("outMimeType")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("outMimeType")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If known, this string is set to the mimetype of the decoded image.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If known, this string is set to the mimetype of the decoded image.
            If not known, or there is an error, it is set to null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#outMimeType" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.outMimeType</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutWidth">
      <MemberSignature Language="C#" Value="public int OutWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.OutWidth" />
      <MemberSignature Language="F#" Value="member this.OutWidth : int with get, set" Usage="Android.Graphics.BitmapFactory.Options.OutWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("outWidth")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("outWidth")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The resulting width of the bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The resulting width of the bitmap. If <c>#inJustDecodeBounds</c> is
            set to false, this will be width of the output bitmap after any
            scaling is applied. If true, it will be the width of the input image
            without any accounting for scaling.</para>
          <para>outWidth will be set to -1 if there is an error trying to decode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#outWidth" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.outWidth</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestCancelDecode">
      <MemberSignature Language="C#" Value="public virtual void RequestCancelDecode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestCancelDecode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapFactory.Options.RequestCancelDecode" />
      <MemberSignature Language="F#" Value="abstract member RequestCancelDecode : unit -&gt; unit&#xA;override this.RequestCancelDecode : unit -&gt; unit" Usage="options.RequestCancelDecode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestCancelDecode", "()V", "GetRequestCancelDecodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestCancelDecode", "()V", "GetRequestCancelDecodeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. As of <c>android.os.Build.VERSION_CODES#N</c>, this
             will not affect the decode, though it will still set mCancel.
            
             In <c>android.os.Build.VERSION_CODES#M</c> and below, if this can
             be called from another thread while this options object is inside
             a decode... call. Calling this will notify the decoder that it
             should cancel its operation. This is not guaranteed to cancel the
             decode, but if it does, the decoder... operation will return null,
             or if inJustDecodeBounds is true, will set outWidth/outHeight
             to -1</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapFactory.Options#requestCancelDecode()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapFactory.Options.requestCancelDecode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.BitmapFactory.Options.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapFactory.Options.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.BitmapFactory.Options.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
