<Type Name="NinePatch" FullName="Android.Graphics.NinePatch">
  <TypeSignature Language="C#" Value="public class NinePatch : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NinePatch extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.NinePatch" />
  <TypeSignature Language="F#" Value="type NinePatch = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/NinePatch", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/NinePatch", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The NinePatch class permits drawing a bitmap in nine or more sections.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/NinePatch" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NinePatch (Android.Graphics.Bitmap? bitmap, byte[]? chunk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Bitmap bitmap, unsigned int8[] chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.#ctor(Android.Graphics.Bitmap,System.Byte[])" />
      <MemberSignature Language="F#" Value="new Android.Graphics.NinePatch : Android.Graphics.Bitmap * byte[] -&gt; Android.Graphics.NinePatch" Usage="new Android.Graphics.NinePatch (bitmap, chunk)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[B)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[B)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="chunk" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="bitmap">The bitmap describing the patches.</param>
        <param name="chunk">The 9-patch data chunk describing how the underlying bitmap
                         is split apart and drawn.</param>
        <summary>Create a drawable projection from a bitmap to nine patches.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#NinePatch(android.graphics.Bitmap,%20byte[])" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.NinePatch(android.graphics.Bitmap, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NinePatch (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.NinePatch : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.NinePatch" Usage="new Android.Graphics.NinePatch (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NinePatch (Android.Graphics.Bitmap? bitmap, byte[]? chunk, string? srcName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Bitmap bitmap, unsigned int8[] chunk, string srcName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.#ctor(Android.Graphics.Bitmap,System.Byte[],System.String)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.NinePatch : Android.Graphics.Bitmap * byte[] * string -&gt; Android.Graphics.NinePatch" Usage="new Android.Graphics.NinePatch (bitmap, chunk, srcName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[BLjava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/graphics/Bitmap;[BLjava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
        <Parameter Name="chunk" Type="System.Byte[]" />
        <Parameter Name="srcName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="srcName">To be added.</param>
        <param name="bitmap">The bitmap describing the patches.</param>
        <param name="chunk">The 9-patch data chunk describing how the underlying bitmap
                         is split apart and drawn.</param>
        <summary>Create a drawable projection from a bitmap to nine patches.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#NinePatch(android.graphics.Bitmap,%20byte[])" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.NinePatch(android.graphics.Bitmap, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap? Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Bitmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Bitmap" />
      <MemberSignature Language="F#" Value="member this.Bitmap : Android.Graphics.Bitmap" Usage="Android.Graphics.NinePatch.Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap used to draw this NinePatch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getBitmap()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getBitmap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public virtual int Density { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Density" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Density" />
      <MemberSignature Language="F#" Value="member this.Density : int" Usage="Android.Graphics.NinePatch.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDensity", "()I", "GetGetDensityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDensity", "()I", "GetGetDensityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the underlying bitmap's density, as per
            <c>Bitmap#getDensity() Bitmap.getDensity()</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getDensity()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getDensity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas? canvas, Android.Graphics.Rect? location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.Rect location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas * Android.Graphics.Rect -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas * Android.Graphics.Rect -&gt; unit" Usage="ninePatch.Draw (canvas, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.</param>
        <summary>Draws the NinePatch.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#draw(android.graphics.Canvas,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas? canvas, Android.Graphics.RectF? location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.RectF location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas,Android.Graphics.RectF)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas * Android.Graphics.RectF -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas * Android.Graphics.RectF -&gt; unit" Usage="ninePatch.Draw (canvas, location)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_RectF_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_RectF_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.RectF" />
      </Parameters>
      <Docs>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.</param>
        <summary>Draws the NinePatch.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#draw(android.graphics.Canvas,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas? canvas, Android.Graphics.Rect? location, Android.Graphics.Paint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.Rect location, class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas,Android.Graphics.Rect,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas * Android.Graphics.Rect * Android.Graphics.Paint -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas * Android.Graphics.Rect * Android.Graphics.Paint -&gt; unit" Usage="ninePatch.Draw (canvas, location, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;Landroid/graphics/Paint;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Landroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Rect;Landroid/graphics/Paint;)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Rect_Landroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="location" Type="Android.Graphics.Rect" />
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="paint">The Paint to draw through.
</param>
        <param name="canvas">A container for the current matrix and clip used to draw the NinePatch.</param>
        <param name="location">Where to draw the NinePatch.</param>
        <summary>Draws the NinePatch.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#draw(android.graphics.Canvas,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.draw(android.graphics.Canvas, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTransparentRegion">
      <MemberSignature Language="C#" Value="public Android.Graphics.Region? GetTransparentRegion (Android.Graphics.Rect? bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Region GetTransparentRegion(class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.GetTransparentRegion(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.GetTransparentRegion : Android.Graphics.Rect -&gt; Android.Graphics.Region" Usage="ninePatch.GetTransparentRegion bounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransparentRegion", "(Landroid/graphics/Rect;)Landroid/graphics/Region;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransparentRegion", "(Landroid/graphics/Rect;)Landroid/graphics/Region;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">The location and size of the NinePatch.</param>
        <summary>Returns a <c>Region</c> representing the parts of the NinePatch that are
            completely transparent.</summary>
        <returns>null if the NinePatch has no transparent region to
            report, else a <c>Region</c> holding the parts of the specified bounds
            that are transparent.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getTransparentRegion(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getTransparentRegion(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasAlpha">
      <MemberSignature Language="C#" Value="public bool HasAlpha { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAlpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.HasAlpha" />
      <MemberSignature Language="F#" Value="member this.HasAlpha : bool" Usage="Android.Graphics.NinePatch.HasAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasAlpha", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasAlpha", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this NinePatch contains transparent or translucent pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#hasAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.hasAlpha()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Graphics.NinePatch.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the intrinsic height, in pixels, of this NinePatch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getHeight()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNinePatchChunk">
      <MemberSignature Language="C#" Value="public static bool IsNinePatchChunk (byte[]? chunk);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNinePatchChunk(unsigned int8[] chunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.IsNinePatchChunk(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member IsNinePatchChunk : byte[] -&gt; bool" Usage="Android.Graphics.NinePatch.IsNinePatchChunk chunk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNinePatchChunk", "([B)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNinePatchChunk", "([B)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chunk" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="chunk">A byte array representing a 9-patch data chunk.</param>
        <summary>Verifies that the specified byte array is a valid 9-patch data chunk.</summary>
        <returns>True if the specified byte array represents a 9-patch data chunk,
                    false otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#isNinePatchChunk(byte[])" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.isNinePatchChunk(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.NinePatch.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Android.Graphics.NinePatch.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this NinePatch object if one was specified
            when calling the constructor.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getName()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Paint? Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Paint Paint" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Paint" />
      <MemberSignature Language="F#" Value="member this.Paint : Android.Graphics.Paint" Usage="Android.Graphics.NinePatch.Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Paint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the paint used to draw this NinePatch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getPaint()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getPaint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.NinePatch.SetPaint(Android.Graphics.Paint)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.Rect)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.RectF)" />
      </Docs>
    </Member>
    <Member MemberName="SetPaint">
      <MemberSignature Language="C#" Value="public virtual void SetPaint (Android.Graphics.Paint? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPaint(class Android.Graphics.Paint p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.NinePatch.SetPaint(Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member SetPaint : Android.Graphics.Paint -&gt; unit&#xA;override this.SetPaint : Android.Graphics.Paint -&gt; unit" Usage="ninePatch.SetPaint p" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPaint", "(Landroid/graphics/Paint;)V", "GetSetPaint_Landroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPaint", "(Landroid/graphics/Paint;)V", "GetSetPaint_Landroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="p">The paint that will be used to draw this NinePatch.</param>
        <summary>Sets the paint to use when drawing the NinePatch.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#setPaint(android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.setPaint(android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Graphics.NinePatch.Paint" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.Rect)" />
        <altmember cref="M:Android.Graphics.NinePatch.Draw(Android.Graphics.Canvas, Android.Graphics.RectF)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.NinePatch.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.NinePatch.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.NinePatch.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Graphics.NinePatch.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the intrinsic width, in pixels, of this NinePatch.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/NinePatch#getWidth()" title="Reference documentation">Java documentation for <code>android.graphics.NinePatch.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
