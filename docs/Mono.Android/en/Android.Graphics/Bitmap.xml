<Type Name="Bitmap" FullName="Android.Graphics.Bitmap">
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <TypeSignature Language="C#" Value="public sealed class Bitmap : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Bitmap extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Bitmap" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/Bitmap", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/Bitmap" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocationByteCount">
      <MemberSignature Language="F#" Value="member this.AllocationByteCount : int" Usage="Android.Graphics.Bitmap.AllocationByteCount" />
      <MemberSignature Language="C#" Value="public int AllocationByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AllocationByteCount" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.AllocationByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllocationByteCount", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the allocated memory used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getAllocationByteCount()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getAllocationByteCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="AsShared">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap AsShared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap AsShared() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.AsShared" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asShared", "()Landroid/graphics/Bitmap;", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an immutable bitmap backed by shared memory which can be
            efficiently passed between processes via Parcelable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#asShared()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.asShared()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteCount">
      <MemberSignature Language="F#" Value="member this.ByteCount : int" Usage="Android.Graphics.Bitmap.ByteCount" />
      <MemberSignature Language="C#" Value="public int ByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ByteCount" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getByteCount", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum number of bytes that can be used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getByteCount()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getByteCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ColorSpace">
      <MemberSignature Language="F#" Value="member this.ColorSpace : Android.Graphics.ColorSpace" Usage="Android.Graphics.Bitmap.ColorSpace" />
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorSpace? ColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorSpace ColorSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorSpace", "()Landroid/graphics/ColorSpace;", "", ApiSince=26)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setColorSpace", "(Landroid/graphics/ColorSpace;)V", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="colorSpace">to assign to the bitmap</param>
        <summary>Returns the color space associated with this bitmap. -or- Modifies the bitmap to have the specified <c>ColorSpace</c>, without
            affecting the underlying allocation backing the bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getColorSpace()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getColorSpace()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setColorSpace(android.graphics.ColorSpace)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setColorSpace(android.graphics.ColorSpace)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compress">
      <MemberSignature Language="F#" Value="member this.Compress : Android.Graphics.Bitmap.CompressFormat * int * System.IO.Stream -&gt; bool" Usage="bitmap.Compress (format, quality, stream)" />
      <MemberSignature Language="C#" Value="public bool Compress (Android.Graphics.Bitmap.CompressFormat? format, int quality, System.IO.Stream? stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Compress(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Compress(Android.Graphics.Bitmap.CompressFormat,System.Int32,System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compress", "(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">The format of the compressed image</param>
        <param name="quality">Hint to the compressor, 0-100. The value is interpreted
                            differently depending on the <c>CompressFormat</c>.</param>
        <param name="stream">The outputstream to write the compressed data.</param>
        <summary>Write a compressed version of the bitmap to the specified outputstream.</summary>
        <returns>true if successfully compressed to the specified stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#compress(android.graphics.CompressFormat,%20int,%20java.io.OutputStream)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.compress(android.graphics.CompressFormat, int, java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompressAsync">
      <MemberSignature Language="F#" Value="member this.CompressAsync : Android.Graphics.Bitmap.CompressFormat * int * System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="bitmap.CompressAsync (format, quality, stream)" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; CompressAsync (Android.Graphics.Bitmap.CompressFormat? format, int quality, System.IO.Stream? stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; CompressAsync(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CompressAsync(Android.Graphics.Bitmap.CompressFormat,System.Int32,System.IO.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="quality">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="F#" Value="member this.Copy : Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="bitmap.Copy (config, isMutable)" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? Copy (Android.Graphics.Bitmap.Config? config, bool isMutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap Copy(class Android.Graphics.Bitmap/Config config, bool isMutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Copy(Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy", "(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="isMutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="config">The desired config for the resulting bitmap</param>
        <param name="isMutable">True if the resulting bitmap should be mutable (i.e.
                             its pixels can be modified)</param>
        <summary>Tries to make a new bitmap based on the dimensions of this bitmap,
            setting the new bitmap's config to the one specified, and then copying
            this bitmap's pixels into the new bitmap.</summary>
        <returns>the new bitmap, or null if the copy could not be made.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copy(android.graphics.Config,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copy(android.graphics.Config, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBuffer">
      <MemberSignature Language="F#" Value="member this.CopyPixelsFromBuffer : Java.Nio.Buffer -&gt; unit" Usage="bitmap.CopyPixelsFromBuffer src" />
      <MemberSignature Language="C#" Value="public void CopyPixelsFromBuffer (Java.Nio.Buffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsFromBuffer(class Java.Nio.Buffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsFromBuffer(Java.Nio.Buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyPixelsFromBuffer", "(Ljava/nio/Buffer;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Copy the pixels from the buffer, beginning at the current position,
            overwriting the bitmap's pixels.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copyPixelsFromBuffer(java.nio.Buffer)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBufferAsync">
      <MemberSignature Language="F#" Value="member this.CopyPixelsFromBufferAsync : Java.Nio.Buffer -&gt; System.Threading.Tasks.Task" Usage="bitmap.CopyPixelsFromBufferAsync src" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsFromBufferAsync (Java.Nio.Buffer? src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsFromBufferAsync(class Java.Nio.Buffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsFromBufferAsync(Java.Nio.Buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBuffer">
      <MemberSignature Language="F#" Value="member this.CopyPixelsToBuffer : Java.Nio.Buffer -&gt; unit" Usage="bitmap.CopyPixelsToBuffer dst" />
      <MemberSignature Language="C#" Value="public void CopyPixelsToBuffer (Java.Nio.Buffer? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsToBuffer(class Java.Nio.Buffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsToBuffer(Java.Nio.Buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyPixelsToBuffer", "(Ljava/nio/Buffer;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>Copy the bitmap's pixels into the specified buffer (allocated by the
            caller).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copyPixelsToBuffer(java.nio.Buffer)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBufferAsync">
      <MemberSignature Language="F#" Value="member this.CopyPixelsToBufferAsync : Java.Nio.Buffer -&gt; System.Threading.Tasks.Task" Usage="bitmap.CopyPixelsToBufferAsync dst" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsToBufferAsync (Java.Nio.Buffer? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsToBufferAsync(class Java.Nio.Buffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsToBufferAsync(Java.Nio.Buffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap src" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Graphics.Bitmap src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary tool="true">Returns an immutable bitmap from the source bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Picture source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Picture source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Picture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Picture" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Picture source, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Picture source, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Picture,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Picture" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config, hasAlpha)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : int[] * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (colors, width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (int[] colors, int width, int height, Android.Graphics.Bitmap.Config? config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32[],System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap * int * int * int * int -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (source, x, y, width, height)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <summary>Returns an immutable bitmap from the specified subset of the source
 bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config, hasAlpha)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="display">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int[] * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, colors, width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Util.DisplayMetrics? display, int[] colors, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32[],System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config * bool * Android.Graphics.ColorSpace -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config, hasAlpha, colorSpace)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha, Android.Graphics.ColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean,Android.Graphics.ColorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config * bool * Android.Graphics.ColorSpace -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config, hasAlpha, colorSpace)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha, Android.Graphics.ColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean,Android.Graphics.ColorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="display">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : int[] * int * int * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (colors, offset, stride, width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap * int * int * int * int * Android.Graphics.Matrix * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (source, x, y, width, height, m, filter)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height, Android.Graphics.Matrix? m, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height, class Android.Graphics.Matrix m, bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Matrix,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="m" Type="Android.Graphics.Matrix" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <param name="m">Optional matrix to be applied to the pixels</param>
        <param name="filter">true if the source should be filtered.
                   Only applies if the matrix contains more than just
                   translation.</param>
        <summary>Returns an immutable bitmap from subset of the source bitmap,
 transformed by the optional matrix.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int[] * int * int * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, colors, offset, stride, width, height, config)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateBitmap (Android.Util.DisplayMetrics display, int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateScaledBitmap">
      <MemberSignature Language="F#" Value="static member CreateScaledBitmap : Android.Graphics.Bitmap * int * int * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateScaledBitmap (src, dstWidth, dstHeight, filter)" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? CreateScaledBitmap (Android.Graphics.Bitmap src, int dstWidth, int dstHeight, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateScaledBitmap(class Android.Graphics.Bitmap src, int32 dstWidth, int32 dstHeight, bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateScaledBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createScaledBitmap", "(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
        <Parameter Name="dstWidth" Type="System.Int32" />
        <Parameter Name="dstHeight" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="src">The source bitmap.</param>
        <param name="dstWidth">The new bitmap's desired width.</param>
        <param name="dstHeight">The new bitmap's desired height.</param>
        <param name="filter">true if the source should be filtered.</param>
        <summary>Creates a new bitmap, scaled from an existing bitmap, when possible.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if width is &lt;= 0, or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.Graphics.Bitmap.Creator" />
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Density">
      <MemberSignature Language="F#" Value="member this.Density : int with get, set" Usage="Android.Graphics.Bitmap.Density" />
      <MemberSignature Language="C#" Value="public int Density { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Density" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDensity", "()I", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDensity", "(I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="density">The density scaling factor to use with this bitmap or
                   <c>#DENSITY_NONE</c> if the density is unknown.</param>
        <summary>Returns the density for this bitmap. -or- Specifies the density for this bitmap.</summary>
        <value>A scaling factor of the default density or <c>#DENSITY_NONE</c>
                    if the scaling factor is unknown.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getDensity()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getDensity()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setDensity(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setDensity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="F:Android.Util.DisplayMetrics.DensityDefault" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
        <altmember cref="F:Android.Graphics.Bitmap.DensityNone" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="F:Android.Util.DisplayMetrics.DensityDefault" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
        <altmember cref="F:Android.Graphics.Bitmap.DensityNone" />
        <c>#DENSITY_NONE</c>
      </Docs>
    </Member>
    <Member MemberName="DensityNone">
      <MemberSignature Language="F#" Value="val mutable DensityNone : int" Usage="Android.Graphics.Bitmap.DensityNone" />
      <MemberSignature Language="C#" Value="public const int DensityNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DensityNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Bitmap.DensityNone" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DENSITY_NONE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the bitmap was created for an unknown pixel density.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#DENSITY_NONE" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.DENSITY_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="bitmap.DescribeContents " />
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.DescribeContents" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No special parcel contents.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#describeContents()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.describeContents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EraseColor">
      <MemberSignature Language="F#" Value="member this.EraseColor : int -&gt; unit" Usage="bitmap.EraseColor c" />
      <MemberSignature Language="C#" Value="public void EraseColor (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EraseColor(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.EraseColor(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eraseColor", "(I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Fills the bitmap's pixels with the specified <c>Color</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#eraseColor(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.eraseColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EraseColor">
      <MemberSignature Language="C#" Value="public void EraseColor (long color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EraseColor(int64 color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.EraseColor(System.Int64)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eraseColor", "(J)V", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Fills the bitmap's pixels with the specified <c>Color</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#eraseColor(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.eraseColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="F#" Value="member this.ExtractAlpha : unit -&gt; Android.Graphics.Bitmap" Usage="bitmap.ExtractAlpha " />
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? ExtractAlpha ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.ExtractAlpha" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extractAlpha", "()Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>new bitmap containing the alpha channel of the original bitmap.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#extractAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.extractAlpha()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="F#" Value="member this.ExtractAlpha : Android.Graphics.Paint * int[] -&gt; Android.Graphics.Bitmap" Usage="bitmap.ExtractAlpha (paint, offsetXY)" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? ExtractAlpha (Android.Graphics.Paint? paint, int[]? offsetXY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha(class Android.Graphics.Paint paint, int32[] offsetXY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.ExtractAlpha(Android.Graphics.Paint,System.Int32[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extractAlpha", "(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
        <Parameter Name="offsetXY" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="paint">Optional paint used to modify the alpha values in the
              resulting bitmap. Pass null for default behavior.</param>
        <param name="offsetXY">Optional array that returns the X (index 0) and Y
                 (index 1) offset needed to position the returned bitmap
                 so that it visually lines up with the original.</param>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>new bitmap containing the alpha channel of the original bitmap.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#extractAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.extractAlpha()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GenerationId">
      <MemberSignature Language="F#" Value="member this.GenerationId : int" Usage="Android.Graphics.Bitmap.GenerationId" />
      <MemberSignature Language="C#" Value="public int GenerationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenerationId" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.GenerationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGenerationId", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the generation ID of this bitmap.</summary>
        <value>The current generation ID for this bitmap.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getGenerationId()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getGenerationId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetBitmapInfo">
      <MemberSignature Language="F#" Value="member this.GetBitmapInfo : unit -&gt; Android.Graphics.AndroidBitmapInfo" Usage="bitmap.GetBitmapInfo " />
      <MemberSignature Language="C#" Value="public Android.Graphics.AndroidBitmapInfo GetBitmapInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Android.Graphics.AndroidBitmapInfo GetBitmapInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetBitmapInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Graphics.AndroidBitmapInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorObject GetColor (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.ColorObject GetColor(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetColor(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getColor", "(II)Landroid/graphics/Color;", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate (0...width-1) of the pixel to return</param>
        <param name="y">The y coordinate (0...height-1) of the pixel to return</param>
        <summary>Returns the <c>Color</c> at the specified location.</summary>
        <returns>The <c>Color</c> at the specified coordinate</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getColor(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getColor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="F#" Value="member this.GetConfig : unit -&gt; Android.Graphics.Bitmap.Config" Usage="bitmap.GetConfig " />
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config? GetConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap/Config GetConfig() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getConfig", "()Landroid/graphics/Bitmap$Config;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If the bitmap's internal config is in one of the public formats, return
            that config, otherwise return null.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getConfig()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getConfig()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNinePatchChunk">
      <MemberSignature Language="F#" Value="member this.GetNinePatchChunk : unit -&gt; byte[]" Usage="bitmap.GetNinePatchChunk " />
      <MemberSignature Language="C#" Value="public byte[]? GetNinePatchChunk ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetNinePatchChunk() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetNinePatchChunk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNinePatchChunk", "()[B", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an optional array of private data, used by the UI system for
            some bitmaps.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getNinePatchChunk()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getNinePatchChunk()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; int" Usage="bitmap.GetPixel (x, y)" />
      <MemberSignature Language="C#" Value="public int GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPixel", "(II)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate (0...width-1) of the pixel to return</param>
        <param name="y">The y coordinate (0...height-1) of the pixel to return</param>
        <summary>Returns the <c>Color</c> at the specified location.</summary>
        <returns>The argb <c>Color</c> at the specified coordinate</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getPixel(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getPixel(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y exceed the bitmap's bounds
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPixels">
      <MemberSignature Language="F#" Value="member this.GetPixels : int[] * int * int * int * int * int * int -&gt; unit" Usage="bitmap.GetPixels (pixels, offset, stride, x, y, width, height)" />
      <MemberSignature Language="C#" Value="public void GetPixels (int[]? pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetPixels(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPixels", "([IIIIIII)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The array to receive the bitmap's colors</param>
        <param name="offset">The first index to write into pixels[]</param>
        <param name="stride">The number of entries in pixels[] to skip between
                 rows (must be &gt;= bitmap's width). Can be negative.</param>
        <param name="x">The x coordinate of the first pixel to read from
                 the bitmap</param>
        <param name="y">The y coordinate of the first pixel to read from
                 the bitmap</param>
        <param name="width">The number of pixels to read from each row</param>
        <param name="height">The number of rows to read</param>
        <summary>Returns in pixels[] a copy of the data in the bitmap.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height exceed the
         bounds of the bitmap, or if abs(stride) </exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : Android.Graphics.Canvas -&gt; int" Usage="bitmap.GetScaledHeight canvas" />
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Graphics.Canvas? canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(Android.Graphics.Canvas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(Landroid/graphics/Canvas;)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the height of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : Android.Util.DisplayMetrics -&gt; int" Usage="bitmap.GetScaledHeight metrics" />
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Util.DisplayMetrics? metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(Android.Util.DisplayMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(Landroid/util/DisplayMetrics;)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the height of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : int -&gt; int" Usage="bitmap.GetScaledHeight targetDensity" />
      <MemberSignature Language="C#" Value="public int GetScaledHeight (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(int32 targetDensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(I)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the height of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : Android.Graphics.Canvas -&gt; int" Usage="bitmap.GetScaledWidth canvas" />
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Graphics.Canvas? canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(Android.Graphics.Canvas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(Landroid/graphics/Canvas;)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the width of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : Android.Util.DisplayMetrics -&gt; int" Usage="bitmap.GetScaledWidth metrics" />
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Util.DisplayMetrics? metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(Android.Util.DisplayMetrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(Landroid/util/DisplayMetrics;)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the width of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : int -&gt; int" Usage="bitmap.GetScaledWidth targetDensity" />
      <MemberSignature Language="C#" Value="public int GetScaledWidth (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(int32 targetDensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(I)I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the width of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="HardwareBuffer">
      <MemberSignature Language="C#" Value="public Android.Hardware.HardwareBuffer HardwareBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Hardware.HardwareBuffer HardwareBuffer" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HardwareBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHardwareBuffer", "()Landroid/hardware/HardwareBuffer;", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.HardwareBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <c>HardwareBuffer</c> which is internally used by hardware bitmap
            
            Note: the HardwareBuffer does *not* have an associated <c>ColorSpace</c>.
            To render this object the same as its rendered with this Bitmap, you
            should also call <c>#getColorSpace()</c>.&lt;/p&gt;
            
            Must not be modified while a wrapped Bitmap is accessing it. Doing so will
            result in undefined behavior.&lt;/p&gt;</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getHardwareBuffer()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getHardwareBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAlpha">
      <MemberSignature Language="F#" Value="member this.HasAlpha : bool with get, set" Usage="Android.Graphics.Bitmap.HasAlpha" />
      <MemberSignature Language="C#" Value="public bool HasAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAlpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HasAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasAlpha", "()Z", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHasAlpha", "(Z)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the bitmap's config supports per-pixel alpha, and
            if the pixels may contain non-opaque alpha values. -or- Tell the bitmap if all of the pixels are known to be opaque (false)
            or if some of the pixels may contain non-opaque alpha values (true).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#hasAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.hasAlpha()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHasAlpha(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHasAlpha(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasMipMap">
      <MemberSignature Language="F#" Value="member this.HasMipMap : bool with get, set" Usage="Android.Graphics.Bitmap.HasMipMap" />
      <MemberSignature Language="C#" Value="public bool HasMipMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMipMap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HasMipMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasMipMap", "()Z", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHasMipMap", "(Z)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hasMipMap">indicates whether the renderer should attempt
                             to use mipmaps</param>
        <summary>Indicates whether the renderer responsible for drawing this
            bitmap should attempt to use mipmaps when this bitmap is drawn
            scaled down. -or- Set a hint for the renderer responsible for drawing this bitmap
            indicating that it should attempt to use mipmaps when this bitmap
            is drawn scaled down.</summary>
        <value>true if the renderer should attempt to use mipmaps,
                    false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#hasMipMap()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.hasMipMap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHasMipMap(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHasMipMap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Graphics.Bitmap.HasMipMap" />
        <altmember cref="P:Android.Graphics.Bitmap.HasMipMap" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="Android.Graphics.Bitmap.Height" />
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHeight", "(I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's height -or- Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current width and config.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getHeight()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getHeight()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="IsMutable">
      <MemberSignature Language="F#" Value="member this.IsMutable : bool" Usage="Android.Graphics.Bitmap.IsMutable" />
      <MemberSignature Language="C#" Value="public bool IsMutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutable" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMutable", "()Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the bitmap is marked as mutable (i.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isMutable()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isMutable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsPremultiplied">
      <MemberSignature Language="F#" Value="member this.IsPremultiplied : bool" Usage="Android.Graphics.Bitmap.IsPremultiplied" />
      <MemberSignature Language="C#" Value="public bool IsPremultiplied { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPremultiplied" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsPremultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPremultiplied", "()Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether pixels stored in this bitmaps are stored pre-multiplied.</summary>
        <value>true if the underlying pixels have been pre-multiplied, false
                    otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isPremultiplied()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isPremultiplied()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="F#" Value="member this.IsRecycled : bool" Usage="Android.Graphics.Bitmap.IsRecycled" />
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRecycled", "()Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this bitmap has been recycled.</summary>
        <value>true if the bitmap has been recycled</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isRecycled()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isRecycled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Bitmap.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockPixels">
      <MemberSignature Language="F#" Value="member this.LockPixels : unit -&gt; nativeint" Usage="bitmap.LockPixels " />
      <MemberSignature Language="C#" Value="public IntPtr LockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int LockPixels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.LockPixels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Premultiplied">
      <MemberSignature Language="F#" Value="member this.Premultiplied : bool with get, set" Usage="Android.Graphics.Bitmap.Premultiplied" />
      <MemberSignature Language="C#" Value="public bool Premultiplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Premultiplied" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Premultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use the IsPremultiplied property getter or the SetPremultiplied(bool) method.")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Indicates whether pixels stored in this bitmaps are stored pre-multiplied.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Graphics.Bitmap.Premultiplied" />
        <altmember cref="P:Android.Graphics.Bitmap.Premultiplied" />
      </Docs>
    </Member>
    <Member MemberName="PrepareToDraw">
      <MemberSignature Language="F#" Value="member this.PrepareToDraw : unit -&gt; unit" Usage="bitmap.PrepareToDraw " />
      <MemberSignature Language="C#" Value="public void PrepareToDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareToDraw() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.PrepareToDraw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepareToDraw", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Builds caches associated with the bitmap that are used for drawing it.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#prepareToDraw()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.prepareToDraw()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Reconfigure">
      <MemberSignature Language="F#" Value="member this.Reconfigure : int * int * Android.Graphics.Bitmap.Config -&gt; unit" Usage="bitmap.Reconfigure (width, height, config)" />
      <MemberSignature Language="C#" Value="public void Reconfigure (int width, int height, Android.Graphics.Bitmap.Config? config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reconfigure(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Reconfigure(System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reconfigure", "(IILandroid/graphics/Bitmap$Config;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="F#" Value="member this.Recycle : unit -&gt; unit" Usage="bitmap.Recycle " />
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Recycle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recycle", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free the native object associated with this bitmap, and clear the
            reference to the pixel data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#recycle()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.recycle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RowBytes">
      <MemberSignature Language="F#" Value="member this.RowBytes : int" Usage="Android.Graphics.Bitmap.RowBytes" />
      <MemberSignature Language="C#" Value="public int RowBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowBytes" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.RowBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRowBytes", "()I", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of bytes between rows in the bitmap's pixels.</summary>
        <value>number of bytes between rows of the native bitmap pixels.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getRowBytes()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getRowBytes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SameAs">
      <MemberSignature Language="F#" Value="member this.SameAs : Android.Graphics.Bitmap -&gt; bool" Usage="bitmap.SameAs other" />
      <MemberSignature Language="C#" Value="public bool SameAs (Android.Graphics.Bitmap? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SameAs(class Android.Graphics.Bitmap other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SameAs(Android.Graphics.Bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sameAs", "(Landroid/graphics/Bitmap;)Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Given another bitmap, return true if it has the same dimensions, config,
             and pixel data as this bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#sameAs(android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.sameAs(android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetConfig">
      <MemberSignature Language="F#" Value="member this.SetConfig : Android.Graphics.Bitmap.Config -&gt; unit" Usage="bitmap.SetConfig config" />
      <MemberSignature Language="C#" Value="public void SetConfig (Android.Graphics.Bitmap.Config? config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfig(class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetConfig(Android.Graphics.Bitmap.Config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setConfig", "(Landroid/graphics/Bitmap$Config;)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <summary>Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current height and width.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setConfig(android.graphics.Config)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setConfig(android.graphics.Config)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * Android.Graphics.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPixel(System.Int32,System.Int32,Android.Graphics.Color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPixel", "(III)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate of the pixel to replace (0...width-1)</param>
        <param name="y">The y coordinate of the pixel to replace (0...height-1)</param>
        <param name="color">The ARGB color to write into the bitmap</param>
        <summary>Write the specified <c>Color</c> into the bitmap (assuming it is
            mutable) at the x,y coordinate.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPixel(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPixel(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y are outside of the bitmap's
         bounds.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixels">
      <MemberSignature Language="F#" Value="member this.SetPixels : int[] * int * int * int * int * int * int -&gt; unit" Usage="bitmap.SetPixels (pixels, offset, stride, x, y, width, height)" />
      <MemberSignature Language="C#" Value="public void SetPixels (int[]? pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPixels(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPixels", "([IIIIIII)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The colors to write to the bitmap</param>
        <param name="offset">The index of the first color to read from pixels[]</param>
        <param name="stride">The number of colors in pixels[] to skip between rows.
                            Normally this value will be the same as the width of
                            the bitmap, but it can be larger (or negative).</param>
        <param name="x">The x coordinate of the first pixel to write to in
                            the bitmap.</param>
        <param name="y">The y coordinate of the first pixel to write to in
                            the bitmap.</param>
        <param name="width">The number of colors to copy from pixels[] per row</param>
        <param name="height">The number of rows to write to the bitmap</param>
        <summary>Replace pixels in the bitmap with the colors in the array.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPixels(int[],%20int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPixels(int[], int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height are outside of
         the bitmap's bounds.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPremultiplied">
      <MemberSignature Language="F#" Value="member this.SetPremultiplied : bool -&gt; unit" Usage="bitmap.SetPremultiplied premultiplied" />
      <MemberSignature Language="C#" Value="public void SetPremultiplied (bool premultiplied);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPremultiplied(bool premultiplied) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPremultiplied(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPremultiplied", "(Z)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premultiplied" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="premultiplied">To be added.</param>
        <summary>Sets whether the bitmap should treat its data as pre-multiplied.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPremultiplied(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPremultiplied(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Bitmap.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Bitmap.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockPixels">
      <MemberSignature Language="F#" Value="member this.UnlockPixels : unit -&gt; unit" Usage="bitmap.UnlockPixels " />
      <MemberSignature Language="C#" Value="public void UnlockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockPixels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.UnlockPixels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="Android.Graphics.Bitmap.Width" />
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWidth", "(I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's width -or- Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current height and config.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getWidth()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getWidth()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="WrapHardwareBuffer">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? WrapHardwareBuffer (Android.Hardware.HardwareBuffer hardwareBuffer, Android.Graphics.ColorSpace? colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap WrapHardwareBuffer(class Android.Hardware.HardwareBuffer hardwareBuffer, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.WrapHardwareBuffer(Android.Hardware.HardwareBuffer,Android.Graphics.ColorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrapHardwareBuffer", "(Landroid/hardware/HardwareBuffer;Landroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hardwareBuffer" Type="Android.Hardware.HardwareBuffer" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="hardwareBuffer">The HardwareBuffer to wrap.</param>
        <param name="colorSpace">The color space of the bitmap. Must be a <c>ColorSpace.Rgb</c> colorspace.
                              If null, SRGB is assumed.</param>
        <summary>Create a hardware bitmap backed by a <c>HardwareBuffer</c>.</summary>
        <returns>A bitmap wrapping the buffer, or null if there was a problem creating the bitmap.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#wrapHardwareBuffer(android.hardware.HardwareBuffer,%20android.graphics.ColorSpace)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.wrapHardwareBuffer(android.hardware.HardwareBuffer, android.graphics.ColorSpace)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="bitmap.WriteToParcel (p, flags)" />
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel? p, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel p, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <param name="p">Parcel object to write the bitmap data into</param>
        <summary>Write the bitmap and its pixels to the parcel.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#writeToParcel(android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.writeToParcel(android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
