<Type Name="Bitmap" FullName="Android.Graphics.Bitmap">
  <TypeSignature Language="C#" Value="public sealed class Bitmap : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Bitmap extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Bitmap" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/Bitmap", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/Bitmap", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/Bitmap" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocationByteCount">
      <MemberSignature Language="C#" Value="public int AllocationByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AllocationByteCount" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.AllocationByteCount" />
      <MemberSignature Language="F#" Value="member this.AllocationByteCount : int" Usage="Android.Graphics.Bitmap.AllocationByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllocationByteCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllocationByteCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the allocated memory used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the size of the allocated memory used to store this bitmap's pixels.</para>
          <para>This can be larger than the result of <c>#getByteCount()</c> if a bitmap is reused to
            decode other bitmaps of smaller size, or by manual reconfiguration. See <c>#reconfigure(int, int, Config)</c>, <c>#setWidth(int)</c>, <c>#setHeight(int)</c>, <c>#setConfig(Bitmap.Config)</c>, and <c>BitmapFactory.Options#inBitmap
            BitmapFactory.Options.inBitmap</c>. If a bitmap is not modified in this way, this value will be
            the same as that returned by <c>#getByteCount()</c>.</para>
          <para>This value will not change over the lifetime of a Bitmap.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getAllocationByteCount()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getAllocationByteCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="AsShared">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap AsShared ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap AsShared() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.AsShared" />
      <MemberSignature Language="F#" Value="member this.AsShared : unit -&gt; Android.Graphics.Bitmap" Usage="bitmap.AsShared " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asShared", "()Landroid/graphics/Bitmap;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asShared", "()Landroid/graphics/Bitmap;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an immutable bitmap backed by shared memory which can be
            efficiently passed between processes via Parcelable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return an immutable bitmap backed by shared memory which can be
            efficiently passed between processes via Parcelable.</para>
          <para>If this bitmap already meets these criteria it will return itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#asShared()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.asShared()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteCount">
      <MemberSignature Language="C#" Value="public int ByteCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ByteCount" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ByteCount" />
      <MemberSignature Language="F#" Value="member this.ByteCount : int" Usage="Android.Graphics.Bitmap.ByteCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getByteCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getByteCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum number of bytes that can be used to store this bitmap's pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the minimum number of bytes that can be used to store this bitmap's pixels.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#KITKAT</c>, the result of this method can
            no longer be used to determine memory usage of a bitmap. See <c>#getAllocationByteCount()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getByteCount()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getByteCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="ColorSpace">
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorSpace? ColorSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorSpace ColorSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ColorSpace" />
      <MemberSignature Language="F#" Value="member this.ColorSpace : Android.Graphics.ColorSpace with get, set" Usage="Android.Graphics.Bitmap.ColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorSpace", "()Landroid/graphics/ColorSpace;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColorSpace", "()Landroid/graphics/ColorSpace;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setColorSpace", "(Landroid/graphics/ColorSpace;)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setColorSpace", "(Landroid/graphics/ColorSpace;)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="colorSpace">to assign to the bitmap</param>
        <summary>Returns the color space associated with this bitmap. -or- Modifies the bitmap to have the specified <c>ColorSpace</c>, without
            affecting the underlying allocation backing the bitmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the color space associated with this bitmap. If the color
            space is unknown, this method returns null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getColorSpace()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getColorSpace()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Modifies the bitmap to have the specified <c>ColorSpace</c>, without
            affecting the underlying allocation backing the bitmap.</para>
          <para>This affects how the framework will interpret the color at each pixel. A bitmap
            with <c>Config#ALPHA_8</c> never has a color space, since a color space does not
            affect the alpha channel. Other <c>Config</c>s must always have a non-null
            <c>ColorSpace</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setColorSpace(android.graphics.ColorSpace)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setColorSpace(android.graphics.ColorSpace)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compress">
      <MemberSignature Language="C#" Value="public bool Compress (Android.Graphics.Bitmap.CompressFormat format, int quality, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Compress(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Compress(Android.Graphics.Bitmap.CompressFormat,System.Int32,System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.Compress : Android.Graphics.Bitmap.CompressFormat * int * System.IO.Stream -&gt; bool" Usage="bitmap.Compress (format, quality, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compress", "(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compress", "(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">The format of the compressed image</param>
        <param name="quality">Hint to the compressor, 0-100. The value is interpreted
                            differently depending on the <c>CompressFormat</c>.</param>
        <param name="stream">The outputstream to write the compressed data.</param>
        <summary>Write a compressed version of the bitmap to the specified outputstream.</summary>
        <returns>true if successfully compressed to the specified stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#compress(android.graphics.CompressFormat,%20int,%20java.io.OutputStream)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.compress(android.graphics.CompressFormat, int, java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompressAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; CompressAsync (Android.Graphics.Bitmap.CompressFormat format, int quality, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; CompressAsync(class Android.Graphics.Bitmap/CompressFormat format, int32 quality, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CompressAsync(Android.Graphics.Bitmap.CompressFormat,System.Int32,System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.CompressAsync : Android.Graphics.Bitmap.CompressFormat * int * System.IO.Stream -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="bitmap.CompressAsync (format, quality, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Bitmap+CompressFormat" />
        <Parameter Name="quality" Type="System.Int32" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="quality">To be added.</param>
        <param name="stream">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? Copy (Android.Graphics.Bitmap.Config config, bool isMutable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap Copy(class Android.Graphics.Bitmap/Config config, bool isMutable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Copy(Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.Copy : Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="bitmap.Copy (config, isMutable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy", "(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy", "(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="isMutable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="config">The desired config for the resulting bitmap</param>
        <param name="isMutable">True if the resulting bitmap should be mutable (i.e.
                             its pixels can be modified)</param>
        <summary>Tries to make a new bitmap based on the dimensions of this bitmap,
            setting the new bitmap's config to the one specified, and then copying
            this bitmap's pixels into the new bitmap.</summary>
        <returns>the new bitmap, or null if the copy could not be made.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copy(android.graphics.Config,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copy(android.graphics.Config, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBuffer">
      <MemberSignature Language="C#" Value="public void CopyPixelsFromBuffer (Java.Nio.Buffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsFromBuffer(class Java.Nio.Buffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsFromBuffer(Java.Nio.Buffer)" />
      <MemberSignature Language="F#" Value="member this.CopyPixelsFromBuffer : Java.Nio.Buffer -&gt; unit" Usage="bitmap.CopyPixelsFromBuffer src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyPixelsFromBuffer", "(Ljava/nio/Buffer;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyPixelsFromBuffer", "(Ljava/nio/Buffer;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Copy the pixels from the buffer, beginning at the current position,
            overwriting the bitmap's pixels.</summary>
        <remarks>
          <para>Copy the pixels from the buffer, beginning at the current position,
            overwriting the bitmap's pixels. The data in the buffer is not changed
            in any way (unlike setPixels(), which converts from unpremultipled 32bit
            to whatever the bitmap's native format is. The pixels in the source
            buffer are assumed to be in the bitmap's color space.</para>
          <para>After this method returns, the current position of the buffer is
            updated: the position is incremented by the number of elements read from
            the buffer. If you need to read the bitmap from the buffer again you must
            first rewind the buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copyPixelsFromBuffer(java.nio.Buffer)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copyPixelsFromBuffer(java.nio.Buffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsFromBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsFromBufferAsync (Java.Nio.Buffer src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsFromBufferAsync(class Java.Nio.Buffer src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsFromBufferAsync(Java.Nio.Buffer)" />
      <MemberSignature Language="F#" Value="member this.CopyPixelsFromBufferAsync : Java.Nio.Buffer -&gt; System.Threading.Tasks.Task" Usage="bitmap.CopyPixelsFromBufferAsync src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBuffer">
      <MemberSignature Language="C#" Value="public void CopyPixelsToBuffer (Java.Nio.Buffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyPixelsToBuffer(class Java.Nio.Buffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsToBuffer(Java.Nio.Buffer)" />
      <MemberSignature Language="F#" Value="member this.CopyPixelsToBuffer : Java.Nio.Buffer -&gt; unit" Usage="bitmap.CopyPixelsToBuffer dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyPixelsToBuffer", "(Ljava/nio/Buffer;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyPixelsToBuffer", "(Ljava/nio/Buffer;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>Copy the bitmap's pixels into the specified buffer (allocated by the
            caller).</summary>
        <remarks>
          <para>Copy the bitmap's pixels into the specified buffer (allocated by the
            caller). An exception is thrown if the buffer is not large enough to
            hold all of the pixels (taking into account the number of bytes per
            pixel) or if the Buffer subclass is not one of the support types
            (ByteBuffer, ShortBuffer, IntBuffer).</para>
          <para>The content of the bitmap is copied into the buffer as-is. This means
            that if this bitmap stores its pixels pre-multiplied
            (see <c>#isPremultiplied()</c>, the values in the buffer will also be
            pre-multiplied. The pixels remain in the color space of the bitmap.</para>
          <para>After this method returns, the current position of the buffer is
            updated: the position is incremented by the number of elements written
            in the buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#copyPixelsToBuffer(java.nio.Buffer)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyPixelsToBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyPixelsToBufferAsync (Java.Nio.Buffer dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyPixelsToBufferAsync(class Java.Nio.Buffer dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CopyPixelsToBufferAsync(Java.Nio.Buffer)" />
      <MemberSignature Language="F#" Value="member this.CopyPixelsToBufferAsync : Java.Nio.Buffer -&gt; System.Threading.Tasks.Task" Usage="bitmap.CopyPixelsToBufferAsync dst" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dst" Type="Java.Nio.Buffer" />
      </Parameters>
      <Docs>
        <param name="dst">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>Returns a bitmap from the source bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a bitmap from the source bitmap. The new bitmap may
            be the same object as source, or a copy may have been made.  It is
            initialized with the same density and color space as the original bitmap.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#createBitmap(android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.createBitmap(android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Picture source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Picture source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Picture)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Picture -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;)Landroid/graphics/Bitmap;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Picture" />
      </Parameters>
      <Docs>
        <param name="source">The recorded <c>Picture</c> of drawing commands that will be
                          drawn into the returned Bitmap.</param>
        <summary>Creates a Bitmap from the given <c>Picture</c> source of recorded drawing commands.</summary>
        <returns>An immutable bitmap with a HARDWARE config whose contents are created
            from the recorded drawing commands in the Picture source.</returns>
        <remarks>
          <para>Creates a Bitmap from the given <c>Picture</c> source of recorded drawing commands.
            
            Equivalent to calling <c>#createBitmap(Picture, int, int, Config)</c> with
            width and height the same as the Picture's width and height and a Config.HARDWARE
            config.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#createBitmap(android.graphics.Picture)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.createBitmap(android.graphics.Picture)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Picture source, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Picture source, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Picture,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Picture * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (source, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/graphics/Picture;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Picture" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create.</param>
        <summary>Returns a mutable bitmap with the specified width and height.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config, hasAlpha)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int[] colors, int width, int height, Android.Graphics.Bitmap.Config? config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32[],System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : int[] * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (colors, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "([IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap * int * int * int * int -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (source, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <summary>Returns a bitmap from the specified subset of the source
            bitmap.</summary>
        <returns>A copy of a subset of the source bitmap or the source bitmap itself.</returns>
        <remarks>
          <para>Returns a bitmap from the specified subset of the source
            bitmap. The new bitmap may be the same object as source, or a copy may
            have been made. It is initialized with the same density and color space
            as the original bitmap.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#createBitmap(android.graphics.Bitmap,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config, hasAlpha)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="display">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics? display, int[] colors, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32[],System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int[] * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, colors, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.
                 This array must be at least as large as width * height.</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha, Android.Graphics.ColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean,Android.Graphics.ColorSpace)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : int * int * Android.Graphics.Bitmap.Config * bool * Android.Graphics.ColorSpace -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (width, height, config, hasAlpha, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics? display, int width, int height, Android.Graphics.Bitmap.Config config, bool hasAlpha, Android.Graphics.ColorSpace colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32 width, int32 height, class Android.Graphics.Bitmap/Config config, bool hasAlpha, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32,System.Int32,Android.Graphics.Bitmap.Config,System.Boolean,Android.Graphics.ColorSpace)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int * int * Android.Graphics.Bitmap.Config * bool * Android.Graphics.ColorSpace -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, width, height, config, hasAlpha, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;IILandroid/graphics/Bitmap$Config;ZLandroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
        <Parameter Name="hasAlpha" Type="System.Boolean" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="display">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <param name="hasAlpha">To be added.</param>
        <param name="colorSpace">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : int[] * int * int * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (colors, offset, stride, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "([IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Graphics.Bitmap source, int x, int y, int width, int height, Android.Graphics.Matrix? m, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Graphics.Bitmap source, int32 x, int32 y, int32 width, int32 height, class Android.Graphics.Matrix m, bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Matrix,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Graphics.Bitmap * int * int * int * int * Android.Graphics.Matrix * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (source, x, y, width, height, m, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Graphics.Bitmap" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="m" Type="Android.Graphics.Matrix" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">The bitmap we are subsetting</param>
        <param name="x">The x coordinate of the first pixel in source</param>
        <param name="y">The y coordinate of the first pixel in source</param>
        <param name="width">The number of pixels in each row</param>
        <param name="height">The number of rows</param>
        <param name="m">Optional matrix to be applied to the pixels</param>
        <param name="filter">true if the source should be filtered.
                              Only applies if the matrix contains more than just
                              translation.</param>
        <summary>Returns a bitmap from subset of the source bitmap,
            transformed by the optional matrix.</summary>
        <returns>A bitmap that represents the specified subset of source</returns>
        <remarks>
          <para>Returns a bitmap from subset of the source bitmap,
            transformed by the optional matrix. The new bitmap may be the
            same object as source, or a copy may have been made. It is
            initialized with the same density and color space as the original
            bitmap.
            
            If the source bitmap is immutable and the requested subset is the
            same as the source bitmap itself, then the source bitmap is
            returned and no new bitmap is created.
            
            The returned bitmap will always be mutable except in the following scenarios:
            (1) In situations where the source bitmap is returned and the source bitmap is immutable
            
            (2) The source bitmap is a hardware bitmap. That is <c>#getConfig()</c> is equivalent to
            <c>Config#HARDWARE</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#createBitmap(android.graphics.Bitmap,%20int,%20int,%20int,%20int,%20android.graphics.Matrix,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int, android.graphics.Matrix, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the x, y, width, height values are
         outside of the dimensions of the source bitmap, or width is &lt;= 0,
         or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateBitmap (Android.Util.DisplayMetrics display, int[] colors, int offset, int stride, int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateBitmap(class Android.Util.DisplayMetrics display, int32[] colors, int32 offset, int32 stride, int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateBitmap(Android.Util.DisplayMetrics,System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="static member CreateBitmap : Android.Util.DisplayMetrics * int[] * int * int * int * int * Android.Graphics.Bitmap.Config -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateBitmap (display, colors, offset, stride, width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createBitmap", "(Landroid/util/DisplayMetrics;[IIIIILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="display" Type="Android.Util.DisplayMetrics" />
        <Parameter Name="colors" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="display">Display metrics for the display this bitmap will be
                 drawn on.</param>
        <param name="colors">Array of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='T:Android Graphics _Color';scope=Xamarin" title="T:Android.Graphics._Color">T:Android.Graphics._Color</a></format> used to initialize the pixels.</param>
        <param name="offset">Number of values to skip before the first color in the
                 array of colors.</param>
        <param name="stride">Number of colors in the array between rows (must be &gt;=
                 width or &lt;= -width).</param>
        <param name="width">The width of the bitmap</param>
        <param name="height">The height of the bitmap</param>
        <param name="config">The bitmap config to create. If the config does not
                 support per-pixel alpha (e.g. RGB_565), then the alpha
                 bytes in the colors[] will be ignored (assumed to be FF)</param>
        <summary>Returns a immutable bitmap with the specified width and height, with each
 pixel value set to the corresponding value in the colors array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the width or height are &lt;= 0, or if
         the color array's length is less than the number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateScaledBitmap">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap CreateScaledBitmap (Android.Graphics.Bitmap src, int dstWidth, int dstHeight, bool filter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap CreateScaledBitmap(class Android.Graphics.Bitmap src, int32 dstWidth, int32 dstHeight, bool filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.CreateScaledBitmap(Android.Graphics.Bitmap,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member CreateScaledBitmap : Android.Graphics.Bitmap * int * int * bool -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.CreateScaledBitmap (src, dstWidth, dstHeight, filter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createScaledBitmap", "(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createScaledBitmap", "(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.Bitmap" />
        <Parameter Name="dstWidth" Type="System.Int32" />
        <Parameter Name="dstHeight" Type="System.Int32" />
        <Parameter Name="filter" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="src">The source bitmap.</param>
        <param name="dstWidth">The new bitmap's desired width.</param>
        <param name="dstHeight">The new bitmap's desired height.</param>
        <param name="filter">Whether or not bilinear filtering should be used when scaling the
                             bitmap. If this is true then bilinear filtering will be used when
                             scaling which has better image quality at the cost of worse performance.
                             If this is false then nearest-neighbor scaling is used instead which
                             will have worse image quality but is faster. Recommended default
                             is to set filter to 'true' as the cost of bilinear filtering is
                             typically minimal and the improved image quality is significant.</param>
        <summary>Creates a new bitmap, scaled from an existing bitmap, when possible.</summary>
        <returns>The new scaled bitmap or the source bitmap if no scaling is required.</returns>
        <remarks>
          <para>Creates a new bitmap, scaled from an existing bitmap, when possible. If the
            specified width and height are the same as the current width and height of
            the source bitmap, the source bitmap is returned and no new bitmap is
            created.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#createScaledBitmap(android.graphics.Bitmap,%20int,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.createScaledBitmap(android.graphics.Bitmap, int, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if width is &lt;= 0, or height is &lt;= 0
</exception>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Creator" />
      <MemberSignature Language="F#" Value="static member Creator : Android.OS.IParcelableCreator" Usage="Android.Graphics.Bitmap.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Density">
      <MemberSignature Language="C#" Value="public int Density { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Density" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Density" />
      <MemberSignature Language="F#" Value="member this.Density : int with get, set" Usage="Android.Graphics.Bitmap.Density" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDensity", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDensity", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDensity", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDensity", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="density">The density scaling factor to use with this bitmap or
                   <c>#DENSITY_NONE</c> if the density is unknown.</param>
        <summary>Returns the density for this bitmap. -or- Specifies the density for this bitmap.</summary>
        <value>A scaling factor of the default density or <c>#DENSITY_NONE</c>
                    if the scaling factor is unknown.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the density for this bitmap.</para>
          <para>The default density is the same density as the current display,
            unless the current application does not support different screen
            densities in which case it is
            <c>android.util.DisplayMetrics#DENSITY_DEFAULT</c>.  Note that
            compatibility mode is determined by the application that was initially
            loaded into a process -- applications that share the same process should
            all have the same compatibility, or ensure they explicitly set the
            density of their bitmaps appropriately.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getDensity()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getDensity()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies the density for this bitmap.  When the bitmap is
            drawn to a Canvas that also has a density, it will be scaled
            appropriately.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setDensity(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setDensity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
        <altmember cref="F:Android.Util.DisplayMetrics.DensityDefault" />
        <altmember cref="P:Android.Util.DisplayMetrics.DensityDpi" />
        <altmember cref="F:Android.Graphics.Bitmap.DensityNone" />
      </Docs>
    </Member>
    <Member MemberName="DensityNone">
      <MemberSignature Language="C#" Value="public const int DensityNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DensityNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.Bitmap.DensityNone" />
      <MemberSignature Language="F#" Value="val mutable DensityNone : int" Usage="Android.Graphics.Bitmap.DensityNone" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DENSITY_NONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DENSITY_NONE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the bitmap was created for an unknown pixel density.</summary>
        <remarks>
          <para>Indicates that the bitmap was created for an unknown pixel density.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#DENSITY_NONE" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.DENSITY_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Graphics.Bitmap.Density" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="bitmap.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>No special parcel contents.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>No special parcel contents.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#describeContents()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.describeContents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EraseColor">
      <MemberSignature Language="C#" Value="public void EraseColor (int c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EraseColor(int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.EraseColor(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.EraseColor : int -&gt; unit" Usage="bitmap.EraseColor c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eraseColor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eraseColor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Fills the bitmap's pixels with the specified <c>Color</c>.</summary>
        <remarks>
          <para>Fills the bitmap's pixels with the specified <c>Color</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#eraseColor(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.eraseColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EraseColor">
      <MemberSignature Language="C#" Value="public void EraseColor (long color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EraseColor(int64 color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.EraseColor(System.Int64)" />
      <MemberSignature Language="F#" Value="member this.EraseColor : int64 -&gt; unit" Usage="bitmap.EraseColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("eraseColor", "(J)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("eraseColor", "(J)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="color">The color to fill as packed by the <c>Color</c> class.</param>
        <summary>Fills the bitmap's pixels with the specified <c>ColorLong</c>.</summary>
        <remarks>
          <para>Fills the bitmap's pixels with the specified <c>ColorLong</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#eraseColor(long)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.eraseColor(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap ExtractAlpha ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.ExtractAlpha" />
      <MemberSignature Language="F#" Value="member this.ExtractAlpha : unit -&gt; Android.Graphics.Bitmap" Usage="bitmap.ExtractAlpha " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extractAlpha", "()Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("extractAlpha", "()Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>new bitmap containing the alpha channel of the original bitmap.</returns>
        <remarks>
          <para>Returns a new bitmap that captures the alpha values of the original.
            This may be drawn with Canvas.drawBitmap(), where the color(s) will be
            taken from the paint that is passed to the draw call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#extractAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.extractAlpha()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtractAlpha">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap ExtractAlpha (Android.Graphics.Paint? paint, int[]? offsetXY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap ExtractAlpha(class Android.Graphics.Paint paint, int32[] offsetXY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.ExtractAlpha(Android.Graphics.Paint,System.Int32[])" />
      <MemberSignature Language="F#" Value="member this.ExtractAlpha : Android.Graphics.Paint * int[] -&gt; Android.Graphics.Bitmap" Usage="bitmap.ExtractAlpha (paint, offsetXY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extractAlpha", "(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("extractAlpha", "(Landroid/graphics/Paint;[I)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
        <Parameter Name="offsetXY" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="paint">Optional paint used to modify the alpha values in the
                         resulting bitmap. Pass null for default behavior.</param>
        <param name="offsetXY">Optional array that returns the X (index 0) and Y
                            (index 1) offset needed to position the returned bitmap
                            so that it visually lines up with the original.</param>
        <summary>Returns a new bitmap that captures the alpha values of the original.</summary>
        <returns>new bitmap containing the (optionally modified by paint) alpha
                    channel of the original bitmap. This may be drawn with
                    Canvas.drawBitmap(), where the color(s) will be taken from the
                    paint that is passed to the draw call.</returns>
        <remarks>
          <para>Returns a new bitmap that captures the alpha values of the original.
            These values may be affected by the optional Paint parameter, which
            can contain its own alpha, and may also contain a MaskFilter which
            could change the actual dimensions of the resulting bitmap (e.g.
            a blur maskfilter might enlarge the resulting bitmap). If offsetXY
            is not null, it returns the amount to offset the returned bitmap so
            that it will logically align with the original. For example, if the
            paint contains a blur of radius 2, then offsetXY[] would contains
            -2, -2, so that drawing the alpha bitmap offset by (-2, -2) and then
            drawing the original would result in the blur visually aligning with
            the original.</para>
          <para>The initial density of the returned bitmap is the same as the original's.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#extractAlpha(android.graphics.Paint,%20int[])" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.extractAlpha(android.graphics.Paint, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Gainmap">
      <MemberSignature Language="C#" Value="public Android.Graphics.Gainmap? Gainmap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Gainmap Gainmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Gainmap" />
      <MemberSignature Language="F#" Value="member this.Gainmap : Android.Graphics.Gainmap with get, set" Usage="Android.Graphics.Bitmap.Gainmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGainmap", "()Landroid/graphics/Gainmap;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGainmap", "()Landroid/graphics/Gainmap;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setGainmap", "(Landroid/graphics/Gainmap;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setGainmap", "(Landroid/graphics/Gainmap;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Gainmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the gainmap or null if the bitmap doesn't contain a gainmap -or- Sets a gainmap on this bitmap, or removes the gainmap if null</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the gainmap or null if the bitmap doesn't contain a gainmap</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getGainmap()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getGainmap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a gainmap on this bitmap, or removes the gainmap if null</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setGainmap(android.graphics.Gainmap)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setGainmap(android.graphics.Gainmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerationId">
      <MemberSignature Language="C#" Value="public int GenerationId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 GenerationId" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.GenerationId" />
      <MemberSignature Language="F#" Value="member this.GenerationId : int" Usage="Android.Graphics.Bitmap.GenerationId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getGenerationId", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getGenerationId", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the generation ID of this bitmap.</summary>
        <value>The current generation ID for this bitmap.</value>
        <remarks>
          <para>Returns the generation ID of this bitmap. The generation ID changes
            whenever the bitmap is modified. This can be used as an efficient way to
            check if a bitmap has changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getGenerationId()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getGenerationId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="GetBitmapInfo">
      <MemberSignature Language="C#" Value="public Android.Graphics.AndroidBitmapInfo GetBitmapInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Android.Graphics.AndroidBitmapInfo GetBitmapInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetBitmapInfo" />
      <MemberSignature Language="F#" Value="member this.GetBitmapInfo : unit -&gt; Android.Graphics.AndroidBitmapInfo" Usage="bitmap.GetBitmapInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Graphics.AndroidBitmapInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetColor">
      <MemberSignature Language="C#" Value="public Android.Graphics.ColorObject GetColor (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.ColorObject GetColor(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetColor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetColor : int * int -&gt; Android.Graphics.ColorObject" Usage="bitmap.GetColor (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getColor", "(II)Landroid/graphics/Color;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getColor", "(II)Landroid/graphics/Color;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate (0...width-1) of the pixel to return</param>
        <param name="y">The y coordinate (0...height-1) of the pixel to return</param>
        <summary>Returns the <c>Color</c> at the specified location.</summary>
        <returns>The <c>Color</c> at the specified coordinate</returns>
        <remarks>
          <para>Returns the <c>Color</c> at the specified location. Throws an exception
            if x or y are out of bounds (negative or &gt;= to the width or height
            respectively).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getColor(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getColor(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConfig">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap.Config GetConfig ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap/Config GetConfig() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetConfig" />
      <MemberSignature Language="F#" Value="member this.GetConfig : unit -&gt; Android.Graphics.Bitmap.Config" Usage="bitmap.GetConfig " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getConfig", "()Landroid/graphics/Bitmap$Config;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getConfig", "()Landroid/graphics/Bitmap$Config;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap+Config</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If the bitmap's internal config is in one of the public formats, return
            that config, otherwise return null.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getConfig()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getConfig()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNinePatchChunk">
      <MemberSignature Language="C#" Value="public byte[]? GetNinePatchChunk ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetNinePatchChunk() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetNinePatchChunk" />
      <MemberSignature Language="F#" Value="member this.GetNinePatchChunk : unit -&gt; byte[]" Usage="bitmap.GetNinePatchChunk " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNinePatchChunk", "()[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNinePatchChunk", "()[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an optional array of private data, used by the UI system for
            some bitmaps.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns an optional array of private data, used by the UI system for
            some bitmaps. Not intended to be called by applications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getNinePatchChunk()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getNinePatchChunk()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public int GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; int" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPixel", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPixel", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate (0...width-1) of the pixel to return</param>
        <param name="y">The y coordinate (0...height-1) of the pixel to return</param>
        <summary>Returns the <c>Color</c> at the specified location.</summary>
        <returns>The argb <c>Color</c> at the specified coordinate</returns>
        <remarks>
          <para>Returns the <c>Color</c> at the specified location. Throws an exception
            if x or y are out of bounds (negative or &gt;= to the width or height
            respectively). The returned color is a non-premultiplied ARGB value in
            the <c>ColorSpace.Named#SRGB sRGB</c> color space.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getPixel(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getPixel(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y exceed the bitmap's bounds
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPixels">
      <MemberSignature Language="C#" Value="public void GetPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetPixels(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetPixels : int[] * int * int * int * int * int * int -&gt; unit" Usage="bitmap.GetPixels (pixels, offset, stride, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPixels", "([IIIIIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPixels", "([IIIIIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The array to receive the bitmap's colors</param>
        <param name="offset">The first index to write into pixels[]</param>
        <param name="stride">The number of entries in pixels[] to skip between
                            rows (must be &gt;= bitmap's width). Can be negative.</param>
        <param name="x">The x coordinate of the first pixel to read from
                            the bitmap</param>
        <param name="y">The y coordinate of the first pixel to read from
                            the bitmap</param>
        <param name="width">The number of pixels to read from each row</param>
        <param name="height">The number of rows to read</param>
        <summary>Returns in pixels[] a copy of the data in the bitmap.</summary>
        <remarks>
          <para>Returns in pixels[] a copy of the data in the bitmap. Each value is
            a packed int representing a <c>Color</c>. The stride parameter allows
            the caller to allow for gaps in the returned pixels array between
            rows. For normal packed results, just pass width for the stride value.
            The returned colors are non-premultiplied ARGB values in the
            <c>ColorSpace.Named#SRGB sRGB</c> color space.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getPixels(int[],%20int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getPixels(int[], int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height exceed the
         bounds of the bitmap, or if abs(stride) </exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : Android.Graphics.Canvas -&gt; int" Usage="bitmap.GetScaledHeight canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(Landroid/graphics/Canvas;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledHeight", "(Landroid/graphics/Canvas;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <summary>Convenience for calling <c>#getScaledHeight(int)</c> with the target
            density of the given <c>Canvas</c>.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience for calling <c>#getScaledHeight(int)</c> with the target
            density of the given <c>Canvas</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(Android.Util.DisplayMetrics)" />
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : Android.Util.DisplayMetrics -&gt; int" Usage="bitmap.GetScaledHeight metrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(Landroid/util/DisplayMetrics;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledHeight", "(Landroid/util/DisplayMetrics;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>Convenience for calling <c>#getScaledHeight(int)</c> with the target
            density of the given <c>DisplayMetrics</c>.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience for calling <c>#getScaledHeight(int)</c> with the target
            density of the given <c>DisplayMetrics</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(android.util.DisplayMetrics)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(android.util.DisplayMetrics)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledHeight">
      <MemberSignature Language="C#" Value="public int GetScaledHeight (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledHeight(int32 targetDensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledHeight(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetScaledHeight : int -&gt; int" Usage="bitmap.GetScaledHeight targetDensity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledHeight", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledHeight", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the height of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled height of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience method that returns the height of this bitmap divided
            by the density scale factor.</para>
          <para>Returns the bitmap's height multiplied by the ratio of the target density to the bitmap's
            source density</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : Android.Graphics.Canvas -&gt; int" Usage="bitmap.GetScaledWidth canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(Landroid/graphics/Canvas;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledWidth", "(Landroid/graphics/Canvas;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">To be added.</param>
        <summary>Convenience for calling <c>#getScaledWidth(int)</c> with the target
            density of the given <c>Canvas</c>.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience for calling <c>#getScaledWidth(int)</c> with the target
            density of the given <c>Canvas</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (Android.Util.DisplayMetrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(class Android.Util.DisplayMetrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(Android.Util.DisplayMetrics)" />
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : Android.Util.DisplayMetrics -&gt; int" Usage="bitmap.GetScaledWidth metrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(Landroid/util/DisplayMetrics;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledWidth", "(Landroid/util/DisplayMetrics;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="metrics">To be added.</param>
        <summary>Convenience for calling <c>#getScaledWidth(int)</c> with the target
            density of the given <c>DisplayMetrics</c>.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience for calling <c>#getScaledWidth(int)</c> with the target
            density of the given <c>DisplayMetrics</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(android.util.DisplayMetrics)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(android.util.DisplayMetrics)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetScaledWidth">
      <MemberSignature Language="C#" Value="public int GetScaledWidth (int targetDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetScaledWidth(int32 targetDensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.GetScaledWidth(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetScaledWidth : int -&gt; int" Usage="bitmap.GetScaledWidth targetDensity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScaledWidth", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScaledWidth", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="targetDensity">The density of the target canvas of the bitmap.</param>
        <summary>Convenience method that returns the width of this bitmap divided
            by the density scale factor.</summary>
        <returns>The scaled width of this bitmap, according to the density scale factor.</returns>
        <remarks>
          <para>Convenience method that returns the width of this bitmap divided
            by the density scale factor.</para>
          <para>Returns the bitmap's width multiplied by the ratio of the target density to the bitmap's
            source density</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getScaledWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getScaledWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="HardwareBuffer">
      <MemberSignature Language="C#" Value="public Android.Hardware.HardwareBuffer HardwareBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Hardware.HardwareBuffer HardwareBuffer" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HardwareBuffer" />
      <MemberSignature Language="F#" Value="member this.HardwareBuffer : Android.Hardware.HardwareBuffer" Usage="Android.Graphics.Bitmap.HardwareBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHardwareBuffer", "()Landroid/hardware/HardwareBuffer;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHardwareBuffer", "()Landroid/hardware/HardwareBuffer;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.HardwareBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
          <c>HardwareBuffer</c> which is internally used by hardware bitmap
            
            Note: the HardwareBuffer does *not* have an associated <c>ColorSpace</c>.
            To render this object the same as its rendered with this Bitmap, you
            should also call <c>#getColorSpace()</c>.&lt;/p&gt;
            
            Must not be modified while a wrapped Bitmap is accessing it. Doing so will
            result in undefined behavior.&lt;/p&gt;</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getHardwareBuffer()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getHardwareBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAlpha">
      <MemberSignature Language="C#" Value="public bool HasAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAlpha" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HasAlpha" />
      <MemberSignature Language="F#" Value="member this.HasAlpha : bool with get, set" Usage="Android.Graphics.Bitmap.HasAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasAlpha", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasAlpha", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHasAlpha", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHasAlpha", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the bitmap's config supports per-pixel alpha, and
            if the pixels may contain non-opaque alpha values. -or- Tell the bitmap if all of the pixels are known to be opaque (false)
            or if some of the pixels may contain non-opaque alpha values (true).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if the bitmap's config supports per-pixel alpha, and
            if the pixels may contain non-opaque alpha values. For some configs,
            this is always false (e.g. RGB_565), since they do not support per-pixel
            alpha. However, for configs that do, the bitmap may be flagged to be
            known that all of its pixels are opaque. In this case hasAlpha() will
            also return false. If a config such as ARGB_8888 is not so flagged,
            it will return true by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#hasAlpha()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.hasAlpha()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Tell the bitmap if all of the pixels are known to be opaque (false)
            or if some of the pixels may contain non-opaque alpha values (true).
            Note, for some configs (e.g. RGB_565) this call is ignored, since it
            does not support per-pixel alpha values.</para>
          <para>This is meant as a drawing hint, as in some cases a bitmap that is known
            to be opaque can take a faster drawing case than one that may have
            non-opaque per-pixel alpha values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHasAlpha(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHasAlpha(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasGainmap">
      <MemberSignature Language="C#" Value="public bool HasGainmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasGainmap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HasGainmap" />
      <MemberSignature Language="F#" Value="member this.HasGainmap : bool" Usage="Android.Graphics.Bitmap.HasGainmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasGainmap", "()Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasGainmap", "()Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not this Bitmap contains a Gainmap.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns whether or not this Bitmap contains a Gainmap.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#hasGainmap()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.hasGainmap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMipMap">
      <MemberSignature Language="C#" Value="public bool HasMipMap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMipMap" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.HasMipMap" />
      <MemberSignature Language="F#" Value="member this.HasMipMap : bool with get, set" Usage="Android.Graphics.Bitmap.HasMipMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasMipMap", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasMipMap", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHasMipMap", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHasMipMap", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hasMipMap">indicates whether the renderer should attempt
                             to use mipmaps</param>
        <summary>Indicates whether the renderer responsible for drawing this
            bitmap should attempt to use mipmaps when this bitmap is drawn
            scaled down. -or- Set a hint for the renderer responsible for drawing this bitmap
            indicating that it should attempt to use mipmaps when this bitmap
            is drawn scaled down.</summary>
        <value>true if the renderer should attempt to use mipmaps,
                    false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether the renderer responsible for drawing this
            bitmap should attempt to use mipmaps when this bitmap is drawn
            scaled down.</para>
          <para>If you know that you are going to draw this bitmap at less than
            50% of its original size, you may be able to obtain a higher
            quality</para>
          <para>This property is only a suggestion that can be ignored by the
            renderer. It is not guaranteed to have any effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#hasMipMap()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.hasMipMap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set a hint for the renderer responsible for drawing this bitmap
            indicating that it should attempt to use mipmaps when this bitmap
            is drawn scaled down.</para>
          <para>If you know that you are going to draw this bitmap at less than
            50% of its original size, you may be able to obtain a higher
            quality by turning this property on.</para>
          <para>Note that if the renderer respects this hint it might have to
            allocate extra memory to hold the mipmap levels for this bitmap.</para>
          <para>This property is only a suggestion that can be ignored by the
            renderer. It is not guaranteed to have any effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHasMipMap(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHasMipMap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Graphics.Bitmap.HasMipMap" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="Android.Graphics.Bitmap.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHeight", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHeight", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's height -or- Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current width and config.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the bitmap's height</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getHeight()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getHeight()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current width and config.</para>
          <para>WARNING: this method should not be used on bitmaps currently used by
            the view system, see <c>#reconfigure(int, int, Config)</c> for more
            details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setHeight(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="IsMutable">
      <MemberSignature Language="C#" Value="public bool IsMutable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutable" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsMutable" />
      <MemberSignature Language="F#" Value="member this.IsMutable : bool" Usage="Android.Graphics.Bitmap.IsMutable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMutable", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMutable", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the bitmap is marked as mutable (i.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if the bitmap is marked as mutable (i.e.&amp;nbsp;can be drawn into)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isMutable()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isMutable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsPremultiplied">
      <MemberSignature Language="C#" Value="public bool IsPremultiplied { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPremultiplied" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsPremultiplied" />
      <MemberSignature Language="F#" Value="member this.IsPremultiplied : bool" Usage="Android.Graphics.Bitmap.IsPremultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPremultiplied", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPremultiplied", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether pixels stored in this bitmaps are stored pre-multiplied.</summary>
        <value>true if the underlying pixels have been pre-multiplied, false
                    otherwise</value>
        <remarks>
          <para>Indicates whether pixels stored in this bitmaps are stored pre-multiplied.
            When a pixel is pre-multiplied, the RGB components have been multiplied by
            the alpha component. For instance, if the original color is a 50%
            translucent red <c>(128, 255, 0, 0)</c>, the pre-multiplied form is
            <c>(128, 128, 0, 0)</c>.</para>
          <para>This method always returns false if <c>#getConfig()</c> is
            <c>Bitmap.Config#RGB_565</c>.</para>
          <para>The return value is undefined if <c>#getConfig()</c> is
            <c>Bitmap.Config#ALPHA_8</c>.</para>
          <para>This method only returns true if <c>#hasAlpha()</c> returns true.
            A bitmap with no alpha channel can be used both as a pre-multiplied and
            as a non pre-multiplied bitmap.</para>
          <para>Only pre-multiplied bitmaps may be drawn by the view system or
            <c>Canvas</c>. If a non-pre-multiplied bitmap with an alpha channel is
            drawn to a Canvas, a RuntimeException will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isPremultiplied()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isPremultiplied()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.IsRecycled" />
      <MemberSignature Language="F#" Value="member this.IsRecycled : bool" Usage="Android.Graphics.Bitmap.IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRecycled", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRecycled", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this bitmap has been recycled.</summary>
        <value>true if the bitmap has been recycled</value>
        <remarks>
          <para>Returns true if this bitmap has been recycled. If so, then it is an error
            to try to access its pixels, and the bitmap will not draw.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#isRecycled()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.isRecycled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Bitmap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockPixels">
      <MemberSignature Language="C#" Value="public IntPtr LockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int LockPixels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.LockPixels" />
      <MemberSignature Language="F#" Value="member this.LockPixels : unit -&gt; nativeint" Usage="bitmap.LockPixels " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Premultiplied">
      <MemberSignature Language="C#" Value="public bool Premultiplied { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Premultiplied" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Premultiplied" />
      <MemberSignature Language="F#" Value="member this.Premultiplied : bool with get, set" Usage="Android.Graphics.Bitmap.Premultiplied" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use the IsPremultiplied property getter or the SetPremultiplied(bool) method.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use the IsPremultiplied property getter or the SetPremultiplied(bool) method.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Indicates whether pixels stored in this bitmaps are stored pre-multiplied.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Graphics.Bitmap.Premultiplied" />
      </Docs>
    </Member>
    <Member MemberName="PrepareToDraw">
      <MemberSignature Language="C#" Value="public void PrepareToDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareToDraw() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.PrepareToDraw" />
      <MemberSignature Language="F#" Value="member this.PrepareToDraw : unit -&gt; unit" Usage="bitmap.PrepareToDraw " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepareToDraw", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prepareToDraw", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Builds caches associated with the bitmap that are used for drawing it.</summary>
        <remarks>
          <para>Builds caches associated with the bitmap that are used for drawing it.</para>
          <para>Starting in <c>android.os.Build.VERSION_CODES#N</c>, this call initiates an asynchronous
            upload to the GPU on RenderThread, if the Bitmap is not already uploaded. With Hardware
            Acceleration, Bitmaps must be uploaded to the GPU in order to be rendered. This is done by
            default the first time a Bitmap is drawn, but the process can take several milliseconds,
            depending on the size of the Bitmap. Each time a Bitmap is modified and drawn again, it must
            be re-uploaded.</para>
          <para>Calling this method in advance can save time in the first frame it's used. For example, it
            is recommended to call this on an image decoding worker thread when a decoded Bitmap is about
            to be displayed. It is recommended to make any pre-draw modifications to the Bitmap before
            calling this method, so the cached, uploaded copy may be reused without re-uploading.</para>
          <para>In <c>android.os.Build.VERSION_CODES#KITKAT</c> and below, for purgeable bitmaps, this call
            would attempt to ensure that the pixels have been decoded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#prepareToDraw()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.prepareToDraw()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Reconfigure">
      <MemberSignature Language="C#" Value="public void Reconfigure (int width, int height, Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reconfigure(int32 width, int32 height, class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Reconfigure(System.Int32,System.Int32,Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="member this.Reconfigure : int * int * Android.Graphics.Bitmap.Config -&gt; unit" Usage="bitmap.Reconfigure (width, height, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reconfigure", "(IILandroid/graphics/Bitmap$Config;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reconfigure", "(IILandroid/graphics/Bitmap$Config;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <param name="config">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.Recycle" />
      <MemberSignature Language="F#" Value="member this.Recycle : unit -&gt; unit" Usage="bitmap.Recycle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recycle", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("recycle", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free the native object associated with this bitmap, and clear the
            reference to the pixel data.</summary>
        <remarks>
          <para>Free the native object associated with this bitmap, and clear the
            reference to the pixel data. This will not free the pixel data synchronously;
            it simply allows it to be garbage collected if there are no other references.
            The bitmap is marked as "dead", meaning it will throw an exception if
            getPixels() or setPixels() is called, and will draw nothing. This operation
            cannot be reversed, so it should only be called if you are sure there are no
            further uses for the bitmap. This is an advanced call, and normally need
            not be called, since the normal GC process will free up this memory when
            there are no more references to this bitmap.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#recycle()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.recycle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RowBytes">
      <MemberSignature Language="C#" Value="public int RowBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RowBytes" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.RowBytes" />
      <MemberSignature Language="F#" Value="member this.RowBytes : int" Usage="Android.Graphics.Bitmap.RowBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRowBytes", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRowBytes", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of bytes between rows in the bitmap's pixels.</summary>
        <value>number of bytes between rows of the native bitmap pixels.</value>
        <remarks>
          <para>Return the number of bytes between rows in the bitmap's pixels. Note that
            this refers to the pixels as stored natively by the bitmap. If you call
            getPixels() or setPixels(), then the pixels are uniformly treated as
            32bit values, packed according to the Color class.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#KITKAT</c>, this method
            should not be used to calculate the memory usage of the bitmap. Instead,
            see <c>#getAllocationByteCount()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getRowBytes()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getRowBytes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SameAs">
      <MemberSignature Language="C#" Value="public bool SameAs (Android.Graphics.Bitmap? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SameAs(class Android.Graphics.Bitmap other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SameAs(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="member this.SameAs : Android.Graphics.Bitmap -&gt; bool" Usage="bitmap.SameAs other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sameAs", "(Landroid/graphics/Bitmap;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sameAs", "(Landroid/graphics/Bitmap;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>Given another bitmap, return true if it has the same dimensions, config,
             and pixel data as this bitmap.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Given another bitmap, return true if it has the same dimensions, config,
             and pixel data as this bitmap. If any of those differ, return false.
             If other is null, return false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#sameAs(android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.sameAs(android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetConfig">
      <MemberSignature Language="C#" Value="public void SetConfig (Android.Graphics.Bitmap.Config config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetConfig(class Android.Graphics.Bitmap/Config config) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetConfig(Android.Graphics.Bitmap.Config)" />
      <MemberSignature Language="F#" Value="member this.SetConfig : Android.Graphics.Bitmap.Config -&gt; unit" Usage="bitmap.SetConfig config" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setConfig", "(Landroid/graphics/Bitmap$Config;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setConfig", "(Landroid/graphics/Bitmap$Config;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="config" Type="Android.Graphics.Bitmap+Config" />
      </Parameters>
      <Docs>
        <param name="config">To be added.</param>
        <summary>Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current height and width.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setConfig(android.graphics.Config)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setConfig(android.graphics.Config)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Width" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPixel(System.Int32,System.Int32,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * Android.Graphics.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPixel", "(III)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPixel", "(III)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="x">The x coordinate of the pixel to replace (0...width-1)</param>
        <param name="y">The y coordinate of the pixel to replace (0...height-1)</param>
        <param name="color">The ARGB color to write into the bitmap</param>
        <summary>Write the specified <c>Color</c> into the bitmap (assuming it is
            mutable) at the x,y coordinate.</summary>
        <remarks>
          <para>Write the specified <c>Color</c> into the bitmap (assuming it is
            mutable) at the x,y coordinate. The color must be a
            non-premultiplied ARGB value in the <c>ColorSpace.Named#SRGB sRGB</c>
            color space.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPixel(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPixel(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y are outside of the bitmap's
         bounds.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixels">
      <MemberSignature Language="C#" Value="public void SetPixels (int[] pixels, int offset, int stride, int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixels(int32[] pixels, int32 offset, int32 stride, int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPixels(System.Int32[],System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetPixels : int[] * int * int * int * int * int * int -&gt; unit" Usage="bitmap.SetPixels (pixels, offset, stride, x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPixels", "([IIIIIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPixels", "([IIIIIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixels" Type="System.Int32[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pixels">The colors to write to the bitmap</param>
        <param name="offset">The index of the first color to read from pixels[]</param>
        <param name="stride">The number of colors in pixels[] to skip between rows.
                            Normally this value will be the same as the width of
                            the bitmap, but it can be larger (or negative).</param>
        <param name="x">The x coordinate of the first pixel to write to in
                            the bitmap.</param>
        <param name="y">The y coordinate of the first pixel to write to in
                            the bitmap.</param>
        <param name="width">The number of colors to copy from pixels[] per row</param>
        <param name="height">The number of rows to write to the bitmap</param>
        <summary>Replace pixels in the bitmap with the colors in the array.</summary>
        <remarks>
          <para>Replace pixels in the bitmap with the colors in the array. Each element
            in the array is a packed int representing a non-premultiplied ARGB
            <c>Color</c> in the <c>ColorSpace.Named#SRGB sRGB</c> color space.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPixels(int[],%20int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPixels(int[], int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the bitmap is not mutable</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if x, y, width, height are outside of
         the bitmap's bounds.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if the pixels array is too small
         to receive the specified number of pixels.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPremultiplied">
      <MemberSignature Language="C#" Value="public void SetPremultiplied (bool premultiplied);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPremultiplied(bool premultiplied) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.SetPremultiplied(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetPremultiplied : bool -&gt; unit" Usage="bitmap.SetPremultiplied premultiplied" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPremultiplied", "(Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPremultiplied", "(Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="premultiplied" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="premultiplied">To be added.</param>
        <summary>Sets whether the bitmap should treat its data as pre-multiplied.</summary>
        <remarks>
          <para>Sets whether the bitmap should treat its data as pre-multiplied.</para>
          <para>Bitmaps are always treated as pre-multiplied by the view system and
            <c>Canvas</c> for performance reasons. Storing un-pre-multiplied data in
            a Bitmap (through <c>#setPixel</c>, <c>#setPixels</c>, or <c>BitmapFactory.Options#inPremultiplied BitmapFactory.Options.inPremultiplied</c>)
            can lead to incorrect blending if drawn by the framework.</para>
          <para>This method will not affect the behavior of a bitmap without an alpha
            channel, or if <c>#hasAlpha()</c> returns false.</para>
          <para>Calling <c>#createBitmap</c> or <c>#createScaledBitmap</c> with a source
            Bitmap whose colors are not pre-multiplied may result in a RuntimeException,
            since those functions require drawing the source, which is not supported for
            un-pre-multiplied Bitmaps.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setPremultiplied(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setPremultiplied(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Bitmap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Bitmap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockPixels">
      <MemberSignature Language="C#" Value="public void UnlockPixels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockPixels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.UnlockPixels" />
      <MemberSignature Language="F#" Value="member this.UnlockPixels : unit -&gt; unit" Usage="bitmap.UnlockPixels " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Bitmap.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="Android.Graphics.Bitmap.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWidth", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setWidth", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bitmap's width -or- Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current height and config.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the bitmap's width</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#getWidth()" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.getWidth()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Convenience method for calling <c>#reconfigure(int, int, Config)</c>
            with the current height and config.</para>
          <para>WARNING: this method should not be used on bitmaps currently used by
            the view system, see <c>#reconfigure(int, int, Config)</c> for more
            details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#setWidth(int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.setWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Bitmap.Reconfigure(System.Int32, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Graphics.Bitmap.Height" />
        <altmember cref="M:Android.Graphics.Bitmap.SetConfig(.Config)" />
      </Docs>
    </Member>
    <Member MemberName="WrapHardwareBuffer">
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap? WrapHardwareBuffer (Android.Hardware.HardwareBuffer hardwareBuffer, Android.Graphics.ColorSpace? colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap WrapHardwareBuffer(class Android.Hardware.HardwareBuffer hardwareBuffer, class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.WrapHardwareBuffer(Android.Hardware.HardwareBuffer,Android.Graphics.ColorSpace)" />
      <MemberSignature Language="F#" Value="static member WrapHardwareBuffer : Android.Hardware.HardwareBuffer * Android.Graphics.ColorSpace -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.Bitmap.WrapHardwareBuffer (hardwareBuffer, colorSpace)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wrapHardwareBuffer", "(Landroid/hardware/HardwareBuffer;Landroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wrapHardwareBuffer", "(Landroid/hardware/HardwareBuffer;Landroid/graphics/ColorSpace;)Landroid/graphics/Bitmap;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hardwareBuffer" Type="Android.Hardware.HardwareBuffer" />
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="hardwareBuffer">The HardwareBuffer to wrap.</param>
        <param name="colorSpace">The color space of the bitmap. Must be a <c>ColorSpace.Rgb</c> colorspace.
                              If null, SRGB is assumed.</param>
        <summary>Create a hardware bitmap backed by a <c>HardwareBuffer</c>.</summary>
        <returns>A bitmap wrapping the buffer, or null if there was a problem creating the bitmap.</returns>
        <remarks>
          <para>Create a hardware bitmap backed by a <c>HardwareBuffer</c>.</para>
          <para>The passed HardwareBuffer's usage flags must contain
            <c>HardwareBuffer#USAGE_GPU_SAMPLED_IMAGE</c>.</para>
          <para>The bitmap will keep a reference to the buffer so that callers can safely close the
            HardwareBuffer without affecting the Bitmap. However the HardwareBuffer must not be
            modified while a wrapped Bitmap is accessing it. Doing so will result in undefined behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#wrapHardwareBuffer(android.hardware.HardwareBuffer,%20android.graphics.ColorSpace)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.wrapHardwareBuffer(android.hardware.HardwareBuffer, android.graphics.ColorSpace)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel p, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel p, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Bitmap.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="bitmap.WriteToParcel (p, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <param name="p">Parcel object to write the bitmap data into</param>
        <summary>Write the bitmap and its pixels to the parcel.</summary>
        <remarks>
          <para>Write the bitmap and its pixels to the parcel. The bitmap can be
            rebuilt from the parcel by calling CREATOR.createFromParcel().
            
            If this bitmap is <c>Config#HARDWARE</c>, it may be unparceled with a different pixel
            format (e.g. 565, 8888), but the content will be preserved to the best quality permitted
            by the final pixel format</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Bitmap#writeToParcel(android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Bitmap.writeToParcel(android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
