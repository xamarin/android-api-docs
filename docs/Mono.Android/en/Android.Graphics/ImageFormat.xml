<Type Name="ImageFormat" FullName="Android.Graphics.ImageFormat">
  <TypeSignature Language="VB.NET" Value="Public Class ImageFormat&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageFormat : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class ImageFormat : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageFormat extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.ImageFormat" />
  <TypeSignature Language="F#" Value="type ImageFormat = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/ImageFormat", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/ImageFormat", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/ImageFormat" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageFormat();" />
      <MemberSignature Language="C#" Value="public ImageFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageFormat.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ImageFormat(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ImageFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageFormat.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ImageFormat : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.ImageFormat" Usage="new Android.Graphics.ImageFormat (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Depth16">
      <MemberSignature Language="VB.NET" Value="Public Const Depth16 As ImageFormatType  = 1144402265" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Depth16 = 1144402265;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Depth16 = 1144402265;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Depth16 = (1144402265)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Depth16" />
      <MemberSignature Language="F#" Value="val mutable Depth16 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Depth16" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEPTH16", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEPTH16", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>1144402265</MemberValue>
      <Docs>
        <summary>Android dense depth image format.</summary>
        <remarks>
          <para>Android dense depth image format.</para>
          <para>Each pixel is 16 bits, representing a depth ranging measurement from a depth camera or
            similar sensor. The 16-bit sample consists of a confidence value and the actual ranging
            measurement.</para>
          <para>The confidence value is an estimate of correctness for this sample.  It is encoded in the
            3 most significant bits of the sample, with a value of 0 representing 100% confidence, a
            value of 1 representing 0% confidence, a value of 2 representing 1/7, a value of 3
            representing 2/7, and so on.</para>
          <para>As an example, the following sample extracts the range and confidence from the first pixel
            of a DEPTH16-format <c>android.media.Image</c>, and converts the confidence to a
            floating-point value between 0 and 1.f inclusive, with 1.f representing maximum confidence:</para>
          <code lang="text/java">ShortBuffer shortDepthBuffer = img.getPlanes()[0].getBuffer().asShortBuffer();
               short depthSample = shortDepthBuffer.get()
               short depthRange = (short) (depthSample &amp; 0x1FFF);
               short depthConfidence = (short) ((depthSample &gt;&gt; 13) &amp; 0x7);
               float depthPercentage = depthConfidence == 0 ? 1.f : (depthConfidence - 1) / 7.f;
            </code>
          <para>&lt;/p&gt;</para>
          <para>This format assumes
            &lt;ul&gt;
            &lt;li&gt;an even width&lt;/li&gt;
            &lt;li&gt;an even height&lt;/li&gt;
            &lt;li&gt;a horizontal stride multiple of 16 pixels&lt;/li&gt;
            &lt;/ul&gt;</para>
          <code lang="text/java">y_size = stride * height </code>
          <para>When produced by a camera, the units for the range are millimeters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#DEPTH16" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.DEPTH16</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthJpeg">
      <MemberSignature Language="VB.NET" Value="Public Const DepthJpeg As ImageFormatType  = 1768253795" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType DepthJpeg = 1768253795;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType DepthJpeg = 1768253795;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType DepthJpeg = (1768253795)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.DepthJpeg" />
      <MemberSignature Language="F#" Value="val mutable DepthJpeg : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.DepthJpeg" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEPTH_JPEG", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEPTH_JPEG", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>1768253795</MemberValue>
      <Docs>
        <summary>Depth augmented compressed JPEG format.</summary>
        <remarks>
          <para>Depth augmented compressed JPEG format.</para>
          <para>JPEG compressed main image along with XMP embedded depth metadata
            following ISO 16684-1:2011(E).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#DEPTH_JPEG" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.DEPTH_JPEG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DepthPointCloud">
      <MemberSignature Language="VB.NET" Value="Public Const DepthPointCloud As ImageFormatType  = 257" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType DepthPointCloud = 257;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType DepthPointCloud = 257;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType DepthPointCloud = (257)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.DepthPointCloud" />
      <MemberSignature Language="F#" Value="val mutable DepthPointCloud : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.DepthPointCloud" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEPTH_POINT_CLOUD", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEPTH_POINT_CLOUD", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>257</MemberValue>
      <Docs>
        <summary>Android sparse depth point cloud format.</summary>
        <remarks>
          <para>Android sparse depth point cloud format.</para>
          <para>A variable-length list of 3D points plus a confidence value, with each point represented
            by four floats; first the X, Y, Z position coordinates, and then the confidence value.</para>
          <para>The number of points is <c>(size of the buffer in bytes) / 16</c>.</para>
          <para>The coordinate system and units of the position values depend on the source of the point
            cloud data. The confidence value is between 0.f and 1.f, inclusive, with 0 representing 0%
            confidence and 1.f representing 100% confidence in the measured position values.</para>
          <para>As an example, the following code extracts the first depth point in a DEPTH_POINT_CLOUD
            format <c>android.media.Image</c>:</para>
          <code lang="text/java">FloatBuffer floatDepthBuffer = img.getPlanes()[0].getBuffer().asFloatBuffer();
               float x = floatDepthBuffer.get();
               float y = floatDepthBuffer.get();
               float z = floatDepthBuffer.get();
               float confidence = floatDepthBuffer.get();
            </code>
          <para>For camera devices that support the
            <c>android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_DEPTH_OUTPUT DEPTH_OUTPUT</c>
            capability, DEPTH_POINT_CLOUD coordinates have units of meters, and the coordinate system is
            defined by the camera's pose transforms:
            <c>android.hardware.camera2.CameraCharacteristics#LENS_POSE_TRANSLATION</c> and
            <c>android.hardware.camera2.CameraCharacteristics#LENS_POSE_ROTATION</c>. That means the origin is
            the optical center of the camera device, and the positive Z axis points along the camera's optical axis,
            toward the scene.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#DEPTH_POINT_CLOUD" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.DEPTH_POINT_CLOUD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlexRgb888">
      <MemberSignature Language="VB.NET" Value="Public Const FlexRgb888 As ImageFormatType  = 41" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType FlexRgb888 = 41;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType FlexRgb888 = 41;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType FlexRgb888 = (41)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.FlexRgb888" />
      <MemberSignature Language="F#" Value="val mutable FlexRgb888 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.FlexRgb888" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLEX_RGB_888", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLEX_RGB_888", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>41</MemberValue>
      <Docs>
        <summary>Multi-plane Android RGB format</summary>
        <remarks>
          <para>Multi-plane Android RGB format</para>
          <para>This format is a generic RGB format, capable of describing most RGB formats,
            with 8 bits per color sample.</para>
          <para>Images in this format are always represented by three separate buffers
            of data, one for each color plane. Additional information always
            accompanies the buffers, describing the row stride and the pixel stride
            for each plane.</para>
          <para>The order of planes in the array returned by
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> is guaranteed such that
            plane #0 is always R (red), plane #1 is always G (green), and plane #2 is always B
            (blue).</para>
          <para>All three planes are guaranteed to have the same row strides and pixel strides.</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.media.MediaCodec</c>
            through <c>android.media.MediaCodec#getOutputImage</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#FLEX_RGB_888" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.FLEX_RGB_888</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlexRgba8888">
      <MemberSignature Language="VB.NET" Value="Public Const FlexRgba8888 As ImageFormatType  = 42" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType FlexRgba8888 = 42;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType FlexRgba8888 = 42;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType FlexRgba8888 = (42)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.FlexRgba8888" />
      <MemberSignature Language="F#" Value="val mutable FlexRgba8888 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.FlexRgba8888" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLEX_RGBA_8888", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLEX_RGBA_8888", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>42</MemberValue>
      <Docs>
        <summary>Multi-plane Android RGBA format</summary>
        <remarks>
          <para>Multi-plane Android RGBA format</para>
          <para>This format is a generic RGBA format, capable of describing most RGBA formats,
            with 8 bits per color sample.</para>
          <para>Images in this format are always represented by four separate buffers
            of data, one for each color plane. Additional information always
            accompanies the buffers, describing the row stride and the pixel stride
            for each plane.</para>
          <para>The order of planes in the array returned by
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> is guaranteed such that
            plane #0 is always R (red), plane #1 is always G (green), plane #2 is always B (blue),
            and plane #3 is always A (alpha). This format may represent pre-multiplied or
            non-premultiplied alpha.</para>
          <para>All four planes are guaranteed to have the same row strides and pixel strides.</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.media.MediaCodec</c>
            through <c>android.media.MediaCodec#getOutputImage</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#FLEX_RGBA_8888" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.FLEX_RGBA_8888</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBitsPerPixel">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBitsPerPixel (format As ImageFormatType) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetBitsPerPixel(Android::Graphics::ImageFormatType format);" />
      <MemberSignature Language="C#" Value="public static int GetBitsPerPixel (Android.Graphics.ImageFormatType format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetBitsPerPixel(valuetype Android.Graphics.ImageFormatType format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageFormat.GetBitsPerPixel(Android.Graphics.ImageFormatType)" />
      <MemberSignature Language="F#" Value="static member GetBitsPerPixel : Android.Graphics.ImageFormatType -&gt; int" Usage="Android.Graphics.ImageFormat.GetBitsPerPixel format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBitsPerPixel", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBitsPerPixel", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.ImageFormatType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">format</param>
        <summary>Use this function to retrieve the number of bits per pixel of an
            ImageFormat.</summary>
        <returns>the number of bits per pixel of the given format or -1 if the
                    format doesn't exist or is not supported.</returns>
        <remarks>
          <para>Use this function to retrieve the number of bits per pixel of an
            ImageFormat.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#getBitsPerPixel(int)" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.getBitsPerPixel(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Heic">
      <MemberSignature Language="VB.NET" Value="Public Const Heic As ImageFormatType  = 1212500294" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Heic = 1212500294;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Heic = 1212500294;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Heic = (1212500294)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Heic" />
      <MemberSignature Language="F#" Value="val mutable Heic : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Heic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HEIC", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HEIC", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>1212500294</MemberValue>
      <Docs>
        <summary>Compressed HEIC format.</summary>
        <remarks>
          <para>Compressed HEIC format.</para>
          <para>This format defines the HEIC brand of High Efficiency Image File
            Format as described in ISO/IEC 23008-12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#HEIC" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.HEIC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageFormat.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.ImageFormat.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Jpeg">
      <MemberSignature Language="VB.NET" Value="Public Const Jpeg As ImageFormatType  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Jpeg = 256;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Jpeg = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Jpeg = (256)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Jpeg" />
      <MemberSignature Language="F#" Value="val mutable Jpeg : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Jpeg" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("JPEG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("JPEG")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Compressed JPEG format.</summary>
        <remarks>
          <para>Compressed JPEG format.</para>
          <para>This format is always supported as an output format for the
            <c>android.hardware.camera2</c> API, and as a picture format for the older
            <c>android.hardware.Camera</c> API</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#JPEG" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.JPEG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="JpegR">
      <MemberSignature Language="VB.NET" Value="Public Const JpegR As ImageFormatType  = 4101" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType JpegR = 4101;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType JpegR = 4101;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType JpegR = (4101)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.JpegR" />
      <MemberSignature Language="F#" Value="val mutable JpegR : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.JpegR" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("JPEG_R", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("JPEG_R", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>4101</MemberValue>
      <Docs>
        <summary>Compressed JPEG format that includes an embedded recovery map.</summary>
        <remarks>
          <para>Compressed JPEG format that includes an embedded recovery map.</para>
          <para>JPEG compressed main image along with embedded recovery map following the
            <see href="https://developer.android.com/guide/topics/media/hdr-image-format">Ultra HDR
            Image format specification</see>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#JPEG_R" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.JPEG_R</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Nv16">
      <MemberSignature Language="VB.NET" Value="Public Const Nv16 As ImageFormatType  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Nv16 = 16;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Nv16 = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Nv16 = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Nv16" />
      <MemberSignature Language="F#" Value="val mutable Nv16 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Nv16" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NV16")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NV16")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>YCbCr format, used for video.</summary>
        <remarks>
          <para>YCbCr format, used for video.</para>
          <para>For the <c>android.hardware.camera2</c> API, the <c>#YUV_420_888</c> format is
            recommended for YUV output instead.</para>
          <para>Whether this format is supported by the old camera API can be determined by
            <c>android.hardware.Camera.Parameters#getSupportedPreviewFormats()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#NV16" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.NV16</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Nv21">
      <MemberSignature Language="VB.NET" Value="Public Const Nv21 As ImageFormatType  = 17" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Nv21 = 17;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Nv21 = 17;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Nv21 = (17)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Nv21" />
      <MemberSignature Language="F#" Value="val mutable Nv21 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Nv21" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NV21")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NV21")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>17</MemberValue>
      <Docs>
        <summary>YCrCb format used for images, which uses the NV21 encoding format.</summary>
        <remarks>
          <para>YCrCb format used for images, which uses the NV21 encoding format.</para>
          <para>This is the default format
            for <c>android.hardware.Camera</c> preview images, when not otherwise set with
            <c>android.hardware.Camera.Parameters#setPreviewFormat(int)</c>.</para>
          <para>For the <c>android.hardware.camera2</c> API, the <c>#YUV_420_888</c> format is
            recommended for YUV output instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#NV21" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.NV21</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Private">
      <MemberSignature Language="VB.NET" Value="Public Const Private As ImageFormatType  = 34" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Private = 34;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Private = 34;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Private = (34)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Private" />
      <MemberSignature Language="F#" Value="val mutable Private : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Private" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>34</MemberValue>
      <Docs>
        <summary>Android private opaque image format.</summary>
        <remarks>
          <para>Android private opaque image format.</para>
          <para>The choices of the actual format and pixel data layout are entirely up to
            the device-specific and framework internal implementations, and may vary
            depending on use cases even for the same device. The buffers of this
            format can be produced by components like
            <c>android.media.ImageWriter ImageWriter</c> , and interpreted correctly
            by consumers like <c>android.hardware.camera2.CameraDevice
            CameraDevice</c> based on the device/framework private information. However,
            these buffers are not directly accessible to the application.</para>
          <para>When an <c>android.media.Image Image</c> of this format is obtained from
            an <c>android.media.ImageReader ImageReader</c> or
            <c>android.media.ImageWriter ImageWriter</c>, the
            <c>android.media.Image#getPlanes() getPlanes()</c> method will return an
            empty <c>android.media.Image.Plane Plane</c> array.</para>
          <para>If a buffer of this format is to be used as an OpenGL ES texture, the
            framework will assume that sampling the texture will always return an
            alpha value of 1.0 (i.e. the buffer contains only opaque pixel values).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#PRIVATE" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.PRIVATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Raw10">
      <MemberSignature Language="VB.NET" Value="Public Const Raw10 As ImageFormatType  = 37" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Raw10 = 37;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Raw10 = 37;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Raw10 = (37)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Raw10" />
      <MemberSignature Language="F#" Value="val mutable Raw10 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Raw10" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RAW10")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RAW10")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>37</MemberValue>
      <Docs>
        <summary>Android 10-bit raw format</summary>
        <remarks>
          <para>Android 10-bit raw format</para>
          <para>This is a single-plane, 10-bit per pixel, densely packed (in each row),
            unprocessed format, usually representing raw Bayer-pattern images coming
            from an image sensor.</para>
          <para>In an image buffer with this format, starting from the first pixel of
            each row, each 4 consecutive pixels are packed into 5 bytes (40 bits).
            Each one of the first 4 bytes contains the top 8 bits of each pixel, The
            fifth byte contains the 2 least significant bits of the 4 pixels, the
            exact layout data for each 4 consecutive pixels is illustrated below
            (<c>Pi[j]</c> stands for the jth bit of the ith pixel):</para>
          <para>&lt;table&gt;
            &lt;thead&gt;
            &lt;tr&gt;
            &lt;th align="center"&gt;&lt;/th&gt;
            &lt;th align="center"&gt;bit 7&lt;/th&gt;
            &lt;th align="center"&gt;bit 6&lt;/th&gt;
            &lt;th align="center"&gt;bit 5&lt;/th&gt;
            &lt;th align="center"&gt;bit 4&lt;/th&gt;
            &lt;th align="center"&gt;bit 3&lt;/th&gt;
            &lt;th align="center"&gt;bit 2&lt;/th&gt;
            &lt;th align="center"&gt;bit 1&lt;/th&gt;
            &lt;th align="center"&gt;bit 0&lt;/th&gt;
            &lt;/tr&gt;
            &lt;/thead&gt; &lt;tbody&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 0:&lt;/td&gt;
            &lt;td align="center"&gt;P0[9]&lt;/td&gt;
            &lt;td align="center"&gt;P0[8]&lt;/td&gt;
            &lt;td align="center"&gt;P0[7]&lt;/td&gt;
            &lt;td align="center"&gt;P0[6]&lt;/td&gt;
            &lt;td align="center"&gt;P0[5]&lt;/td&gt;
            &lt;td align="center"&gt;P0[4]&lt;/td&gt;
            &lt;td align="center"&gt;P0[3]&lt;/td&gt;
            &lt;td align="center"&gt;P0[2]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 1:&lt;/td&gt;
            &lt;td align="center"&gt;P1[9]&lt;/td&gt;
            &lt;td align="center"&gt;P1[8]&lt;/td&gt;
            &lt;td align="center"&gt;P1[7]&lt;/td&gt;
            &lt;td align="center"&gt;P1[6]&lt;/td&gt;
            &lt;td align="center"&gt;P1[5]&lt;/td&gt;
            &lt;td align="center"&gt;P1[4]&lt;/td&gt;
            &lt;td align="center"&gt;P1[3]&lt;/td&gt;
            &lt;td align="center"&gt;P1[2]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 2:&lt;/td&gt;
            &lt;td align="center"&gt;P2[9]&lt;/td&gt;
            &lt;td align="center"&gt;P2[8]&lt;/td&gt;
            &lt;td align="center"&gt;P2[7]&lt;/td&gt;
            &lt;td align="center"&gt;P2[6]&lt;/td&gt;
            &lt;td align="center"&gt;P2[5]&lt;/td&gt;
            &lt;td align="center"&gt;P2[4]&lt;/td&gt;
            &lt;td align="center"&gt;P2[3]&lt;/td&gt;
            &lt;td align="center"&gt;P2[2]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 3:&lt;/td&gt;
            &lt;td align="center"&gt;P3[9]&lt;/td&gt;
            &lt;td align="center"&gt;P3[8]&lt;/td&gt;
            &lt;td align="center"&gt;P3[7]&lt;/td&gt;
            &lt;td align="center"&gt;P3[6]&lt;/td&gt;
            &lt;td align="center"&gt;P3[5]&lt;/td&gt;
            &lt;td align="center"&gt;P3[4]&lt;/td&gt;
            &lt;td align="center"&gt;P3[3]&lt;/td&gt;
            &lt;td align="center"&gt;P3[2]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 4:&lt;/td&gt;
            &lt;td align="center"&gt;P3[1]&lt;/td&gt;
            &lt;td align="center"&gt;P3[0]&lt;/td&gt;
            &lt;td align="center"&gt;P2[1]&lt;/td&gt;
            &lt;td align="center"&gt;P2[0]&lt;/td&gt;
            &lt;td align="center"&gt;P1[1]&lt;/td&gt;
            &lt;td align="center"&gt;P1[0]&lt;/td&gt;
            &lt;td align="center"&gt;P0[1]&lt;/td&gt;
            &lt;td align="center"&gt;P0[0]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>This format assumes
            &lt;ul&gt;
            &lt;li&gt;a width multiple of 4 pixels&lt;/li&gt;
            &lt;li&gt;an even height&lt;/li&gt;
            &lt;/ul&gt;</para>
          <code lang="text/java">size = row stride * height</code>
          <para>where the row stride is in &lt;em&gt;bytes&lt;/em&gt;,
            not pixels.</para>
          <para>Since this is a densely packed format, the pixel stride is always 0. The
            application must use the pixel data layout defined in above table to
            access each row data. When row stride is equal to <c>width * (10 / 8)</c>, there
            will be no padding bytes at the end of each row, the entire image data is
            densely packed. When stride is larger than <c>width * (10 / 8)</c>, padding
            bytes will be present at the end of each row.</para>
          <para>For example, the <c>android.media.Image</c> object can provide data in
            this format from a <c>android.hardware.camera2.CameraDevice</c> (if
            supported) through a <c>android.media.ImageReader</c> object. The
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> will return a
            single plane containing the pixel data. The pixel stride is always 0 in
            <c>android.media.Image.Plane#getPixelStride()</c>, and the
            <c>android.media.Image.Plane#getRowStride()</c> describes the vertical
            neighboring pixel distance (in bytes) between adjacent rows.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#RAW10" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.RAW10</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Media.Image" />
        <altmember cref="T:Android.Media.ImageReader" />
        <altmember cref="T:Android.Hardware.Camera2.CameraDevice" />
      </Docs>
    </Member>
    <Member MemberName="Raw12">
      <MemberSignature Language="VB.NET" Value="Public Const Raw12 As ImageFormatType  = 38" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Raw12 = 38;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Raw12 = 38;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Raw12 = (38)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Raw12" />
      <MemberSignature Language="F#" Value="val mutable Raw12 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Raw12" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RAW12", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RAW12", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>38</MemberValue>
      <Docs>
        <summary>Android 12-bit raw format</summary>
        <remarks>
          <para>Android 12-bit raw format</para>
          <para>This is a single-plane, 12-bit per pixel, densely packed (in each row),
            unprocessed format, usually representing raw Bayer-pattern images coming
            from an image sensor.</para>
          <para>In an image buffer with this format, starting from the first pixel of each
            row, each two consecutive pixels are packed into 3 bytes (24 bits). The first
            and second byte contains the top 8 bits of first and second pixel. The third
            byte contains the 4 least significant bits of the two pixels, the exact layout
            data for each two consecutive pixels is illustrated below (Pi[j] stands for
            the jth bit of the ith pixel):</para>
          <para>&lt;table&gt;
            &lt;thead&gt;
            &lt;tr&gt;
            &lt;th align="center"&gt;&lt;/th&gt;
            &lt;th align="center"&gt;bit 7&lt;/th&gt;
            &lt;th align="center"&gt;bit 6&lt;/th&gt;
            &lt;th align="center"&gt;bit 5&lt;/th&gt;
            &lt;th align="center"&gt;bit 4&lt;/th&gt;
            &lt;th align="center"&gt;bit 3&lt;/th&gt;
            &lt;th align="center"&gt;bit 2&lt;/th&gt;
            &lt;th align="center"&gt;bit 1&lt;/th&gt;
            &lt;th align="center"&gt;bit 0&lt;/th&gt;
            &lt;/tr&gt;
            &lt;/thead&gt; &lt;tbody&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 0:&lt;/td&gt;
            &lt;td align="center"&gt;P0[11]&lt;/td&gt;
            &lt;td align="center"&gt;P0[10]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 9]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 8]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 7]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 6]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 5]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 4]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 1:&lt;/td&gt;
            &lt;td align="center"&gt;P1[11]&lt;/td&gt;
            &lt;td align="center"&gt;P1[10]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 9]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 8]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 7]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 6]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 5]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 4]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td align="center"&gt;Byte 2:&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 3]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 2]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 1]&lt;/td&gt;
            &lt;td align="center"&gt;P1[ 0]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 3]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 2]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 1]&lt;/td&gt;
            &lt;td align="center"&gt;P0[ 0]&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>This format assumes
            &lt;ul&gt;
            &lt;li&gt;a width multiple of 4 pixels&lt;/li&gt;
            &lt;li&gt;an even height&lt;/li&gt;
            &lt;/ul&gt;</para>
          <code lang="text/java">size = row stride * height</code>
          <para>where the row stride is in &lt;em&gt;bytes&lt;/em&gt;,
            not pixels.</para>
          <para>Since this is a densely packed format, the pixel stride is always 0. The
            application must use the pixel data layout defined in above table to
            access each row data. When row stride is equal to <c>width * (12 / 8)</c>, there
            will be no padding bytes at the end of each row, the entire image data is
            densely packed. When stride is larger than <c>width * (12 / 8)</c>, padding
            bytes will be present at the end of each row.</para>
          <para>For example, the <c>android.media.Image</c> object can provide data in
            this format from a <c>android.hardware.camera2.CameraDevice</c> (if
            supported) through a <c>android.media.ImageReader</c> object. The
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> will return a
            single plane containing the pixel data. The pixel stride is always 0 in
            <c>android.media.Image.Plane#getPixelStride()</c>, and the
            <c>android.media.Image.Plane#getRowStride()</c> describes the vertical
            neighboring pixel distance (in bytes) between adjacent rows.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#RAW12" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.RAW12</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawPrivate">
      <MemberSignature Language="VB.NET" Value="Public Const RawPrivate As ImageFormatType  = 36" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType RawPrivate = 36;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType RawPrivate = 36;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType RawPrivate = (36)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.RawPrivate" />
      <MemberSignature Language="F#" Value="val mutable RawPrivate : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.RawPrivate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RAW_PRIVATE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RAW_PRIVATE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>36</MemberValue>
      <Docs>
        <summary>Private raw camera sensor image format, a single channel image with
            implementation dependent pixel layout.</summary>
        <remarks>
          <para>Private raw camera sensor image format, a single channel image with
            implementation dependent pixel layout.</para>
          <para>RAW_PRIVATE is a format for unprocessed raw image buffers coming from an
            image sensor. The actual structure of buffers of this format is
            implementation-dependent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#RAW_PRIVATE" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.RAW_PRIVATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RawSensor">
      <MemberSignature Language="VB.NET" Value="Public Const RawSensor As ImageFormatType  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType RawSensor = 32;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType RawSensor = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType RawSensor = (32)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.RawSensor" />
      <MemberSignature Language="F#" Value="val mutable RawSensor : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.RawSensor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RAW_SENSOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RAW_SENSOR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>General raw camera sensor image format, usually representing a
            single-channel Bayer-mosaic image.</summary>
        <remarks>
          <para>General raw camera sensor image format, usually representing a
            single-channel Bayer-mosaic image. Each pixel color sample is stored with
            16 bits of precision.</para>
          <para>The layout of the color mosaic, the maximum and minimum encoding
            values of the raw pixel data, the color space of the image, and all other
            needed information to interpret a raw sensor image must be queried from
            the <c>android.hardware.camera2.CameraDevice</c> which produced the
            image.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#RAW_SENSOR" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.RAW_SENSOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rgb565">
      <MemberSignature Language="VB.NET" Value="Public Const Rgb565 As ImageFormatType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Rgb565 = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Rgb565 = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Rgb565 = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Rgb565" />
      <MemberSignature Language="F#" Value="val mutable Rgb565 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Rgb565" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RGB_565")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RGB_565")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>RGB format used for pictures encoded as RGB_565.</summary>
        <remarks>
          <para>RGB format used for pictures encoded as RGB_565. See
            <c>android.hardware.Camera.Parameters#setPictureFormat(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#RGB_565" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.RGB_565</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageFormat.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.ImageFormat.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageFormat.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.ImageFormat.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="VB.NET" Value="Public Const Unknown As ImageFormatType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Unknown = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Unknown = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Unknown = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Unknown" />
      <MemberSignature Language="F#" Value="val mutable Unknown : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("UNKNOWN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("UNKNOWN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Y8">
      <MemberSignature Language="VB.NET" Value="Public Const Y8 As ImageFormatType  = 538982489" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Y8 = 538982489;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Y8 = 538982489;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Y8 = (538982489)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Y8" />
      <MemberSignature Language="F#" Value="val mutable Y8 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Y8" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("Y8", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("Y8", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>538982489</MemberValue>
      <Docs>
        <summary>Android Y8 format.</summary>
        <remarks>
          <para>Android Y8 format.</para>
          <para>Y8 is a YUV planar format comprised of a WxH Y plane only, with each pixel
            being represented by 8 bits. It is equivalent to just the Y plane from <c>#YV12</c>
            format.</para>
          <para>This format assumes
            &lt;ul&gt;
            &lt;li&gt;an even width&lt;/li&gt;
            &lt;li&gt;an even height&lt;/li&gt;
            &lt;li&gt;a horizontal stride multiple of 16 pixels&lt;/li&gt;
            &lt;/ul&gt;</para>
          <code lang="text/java">size = stride * height </code>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.hardware.camera2.CameraDevice</c> (if
            supported) through a <c>android.media.ImageReader</c> object. The
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> will return a
            single plane containing the pixel data. The pixel stride is always 1 in
            <c>android.media.Image.Plane#getPixelStride()</c>, and the
            <c>android.media.Image.Plane#getRowStride()</c> describes the vertical
            neighboring pixel distance (in bytes) between adjacent rows.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#Y8" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.Y8</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="YcbcrP010">
      <MemberSignature Language="VB.NET" Value="Public Const YcbcrP010 As ImageFormatType  = 54" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType YcbcrP010 = 54;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType YcbcrP010 = 54;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType YcbcrP010 = (54)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.YcbcrP010" />
      <MemberSignature Language="F#" Value="val mutable YcbcrP010 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.YcbcrP010" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YCBCR_P010", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YCBCR_P010", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>54</MemberValue>
      <Docs>
        <summary>Android YUV P010 format.</summary>
        <remarks>
          <para>Android YUV P010 format.</para>
          <para>P010 is a 4:2:0 YCbCr semiplanar format comprised of a WxH Y plane
            followed by a Wx(H/2) CbCr plane. Each sample is represented by a 16-bit
            little-endian value, with the lower 6 bits set to zero.</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.hardware.camera2.CameraDevice</c>
            through a <c>android.media.ImageReader</c> object if this format is
            supported by <c>android.hardware.camera2.CameraDevice</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YCBCR_P010" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YCBCR_P010</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yuv420888">
      <MemberSignature Language="VB.NET" Value="Public Const Yuv420888 As ImageFormatType  = 35" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Yuv420888 = 35;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuv420888 = 35;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuv420888 = (35)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Yuv420888" />
      <MemberSignature Language="F#" Value="val mutable Yuv420888 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Yuv420888" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YUV_420_888")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YUV_420_888")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>35</MemberValue>
      <Docs>
        <summary>Multi-plane Android YUV 420 format</summary>
        <remarks>
          <para>Multi-plane Android YUV 420 format</para>
          <para>This format is a generic YCbCr format, capable of describing any 4:2:0
            chroma-subsampled planar or semiplanar buffer (but not fully interleaved),
            with 8 bits per color sample.</para>
          <para>Images in this format are always represented by three separate buffers
            of data, one for each color plane. Additional information always
            accompanies the buffers, describing the row stride and the pixel stride
            for each plane.</para>
          <para>The order of planes in the array returned by
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> is guaranteed such that
            plane #0 is always Y, plane #1 is always U (Cb), and plane #2 is always V (Cr).</para>
          <para>The Y-plane is guaranteed not to be interleaved with the U/V planes
            (in particular, pixel stride is always 1 in
            <c>android.media.Image.Plane#getPixelStride() yPlane.getPixelStride()</c>).</para>
          <para>The U/V planes are guaranteed to have the same row stride and pixel stride
            (in particular,
            <c>android.media.Image.Plane#getRowStride() uPlane.getRowStride()</c>
            == <c>android.media.Image.Plane#getRowStride() vPlane.getRowStride()</c> and
            <c>android.media.Image.Plane#getPixelStride() uPlane.getPixelStride()</c>
            == <c>android.media.Image.Plane#getPixelStride() vPlane.getPixelStride()</c>;
            ).</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.hardware.camera2.CameraDevice</c>
            through a <c>android.media.ImageReader</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YUV_420_888" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YUV_420_888</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Media.Image" />
        <altmember cref="T:Android.Media.ImageReader" />
        <altmember cref="T:Android.Hardware.Camera2.CameraDevice" />
      </Docs>
    </Member>
    <Member MemberName="Yuv422888">
      <MemberSignature Language="VB.NET" Value="Public Const Yuv422888 As ImageFormatType  = 39" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Yuv422888 = 39;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuv422888 = 39;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuv422888 = (39)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Yuv422888" />
      <MemberSignature Language="F#" Value="val mutable Yuv422888 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Yuv422888" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YUV_422_888", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YUV_422_888", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>39</MemberValue>
      <Docs>
        <summary>Multi-plane Android YUV 422 format</summary>
        <remarks>
          <para>Multi-plane Android YUV 422 format</para>
          <para>This format is a generic YCbCr format, capable of describing any 4:2:2
            chroma-subsampled (planar, semiplanar or interleaved) format,
            with 8 bits per color sample.</para>
          <para>Images in this format are always represented by three separate buffers
            of data, one for each color plane. Additional information always
            accompanies the buffers, describing the row stride and the pixel stride
            for each plane.</para>
          <para>The order of planes in the array returned by
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> is guaranteed such that
            plane #0 is always Y, plane #1 is always U (Cb), and plane #2 is always V (Cr).</para>
          <para>In contrast to the <c>#YUV_420_888</c> format, the Y-plane may have a pixel
            stride greater than 1 in
            <c>android.media.Image.Plane#getPixelStride() yPlane.getPixelStride()</c>.</para>
          <para>The U/V planes are guaranteed to have the same row stride and pixel stride
            (in particular,
            <c>android.media.Image.Plane#getRowStride() uPlane.getRowStride()</c>
            == <c>android.media.Image.Plane#getRowStride() vPlane.getRowStride()</c> and
            <c>android.media.Image.Plane#getPixelStride() uPlane.getPixelStride()</c>
            == <c>android.media.Image.Plane#getPixelStride() vPlane.getPixelStride()</c>;
            ).</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.media.MediaCodec</c>
            through <c>android.media.MediaCodec#getOutputImage</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YUV_422_888" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YUV_422_888</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yuv444888">
      <MemberSignature Language="VB.NET" Value="Public Const Yuv444888 As ImageFormatType  = 40" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Yuv444888 = 40;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuv444888 = 40;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuv444888 = (40)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Yuv444888" />
      <MemberSignature Language="F#" Value="val mutable Yuv444888 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Yuv444888" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YUV_444_888", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YUV_444_888", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>40</MemberValue>
      <Docs>
        <summary>Multi-plane Android YUV 444 format</summary>
        <remarks>
          <para>Multi-plane Android YUV 444 format</para>
          <para>This format is a generic YCbCr format, capable of describing any 4:4:4
            (planar, semiplanar or interleaved) format,
            with 8 bits per color sample.</para>
          <para>Images in this format are always represented by three separate buffers
            of data, one for each color plane. Additional information always
            accompanies the buffers, describing the row stride and the pixel stride
            for each plane.</para>
          <para>The order of planes in the array returned by
            <c>android.media.Image#getPlanes() Image#getPlanes()</c> is guaranteed such that
            plane #0 is always Y, plane #1 is always U (Cb), and plane #2 is always V (Cr).</para>
          <para>In contrast to the <c>#YUV_420_888</c> format, the Y-plane may have a pixel
            stride greater than 1 in
            <c>android.media.Image.Plane#getPixelStride() yPlane.getPixelStride()</c>.</para>
          <para>The U/V planes are guaranteed to have the same row stride and pixel stride
            (in particular,
            <c>android.media.Image.Plane#getRowStride() uPlane.getRowStride()</c>
            == <c>android.media.Image.Plane#getRowStride() vPlane.getRowStride()</c> and
            <c>android.media.Image.Plane#getPixelStride() uPlane.getPixelStride()</c>
            == <c>android.media.Image.Plane#getPixelStride() vPlane.getPixelStride()</c>;
            ).</para>
          <para>For example, the <c>android.media.Image</c> object can provide data
            in this format from a <c>android.media.MediaCodec</c>
            through <c>android.media.MediaCodec#getOutputImage</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YUV_444_888" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YUV_444_888</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Yuy2">
      <MemberSignature Language="VB.NET" Value="Public Const Yuy2 As ImageFormatType  = 20" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Yuy2 = 20;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yuy2 = 20;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yuy2 = (20)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Yuy2" />
      <MemberSignature Language="F#" Value="val mutable Yuy2 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Yuy2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YUY2")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YUY2")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>20</MemberValue>
      <Docs>
        <summary>YCbCr format used for images, which uses YUYV (YUY2) encoding format.</summary>
        <remarks>
          <para>YCbCr format used for images, which uses YUYV (YUY2) encoding format.</para>
          <para>For the <c>android.hardware.camera2</c> API, the <c>#YUV_420_888</c> format is
            recommended for YUV output instead.</para>
          <para>This is an alternative format for <c>android.hardware.Camera</c> preview images. Whether
            this format is supported by the camera hardware can be determined by
            <c>android.hardware.Camera.Parameters#getSupportedPreviewFormats()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YUY2" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YUY2</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Yv12">
      <MemberSignature Language="VB.NET" Value="Public Const Yv12 As ImageFormatType  = 842094169" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageFormatType Yv12 = 842094169;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageFormatType Yv12 = 842094169;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageFormatType Yv12 = (842094169)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageFormat.Yv12" />
      <MemberSignature Language="F#" Value="val mutable Yv12 : Android.Graphics.ImageFormatType" Usage="Android.Graphics.ImageFormat.Yv12" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("YV12")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("YV12")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageFormatType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <MemberValue>842094169</MemberValue>
      <Docs>
        <summary>Android YUV format.</summary>
        <remarks>
          <para>Android YUV format.</para>
          <para>This format is exposed to software decoders and applications.</para>
          <para>YV12 is a 4:2:0 YCrCb planar format comprised of a WxH Y plane followed
            by (W/2) x (H/2) Cr and Cb planes.</para>
          <para>This format assumes
            &lt;ul&gt;
            &lt;li&gt;an even width&lt;/li&gt;
            &lt;li&gt;an even height&lt;/li&gt;
            &lt;li&gt;a horizontal stride multiple of 16 pixels&lt;/li&gt;
            &lt;li&gt;a vertical stride equal to the height&lt;/li&gt;
            &lt;/ul&gt;</para>
          <code lang="text/java">y_size = stride * height
            c_stride = ALIGN(stride/2, 16)
            c_size = c_stride * height/2
            size = y_size + c_size * 2
            cr_offset = y_size
            cb_offset = y_size + c_size</code>
          <para>For the <c>android.hardware.camera2</c> API, the <c>#YUV_420_888</c> format is
            recommended for YUV output instead.</para>
          <para>For the older camera API, this format is guaranteed to be supported for
            <c>android.hardware.Camera</c> preview images since API level 12; for earlier API versions,
            check <c>android.hardware.Camera.Parameters#getSupportedPreviewFormats()</c>.</para>
          <para>Note that for camera preview callback use (see
            <c>android.hardware.Camera#setPreviewCallback</c>), the
            &lt;var&gt;stride&lt;/var&gt; value is the smallest possible; that is, it is equal
            to:</para>
          <code lang="text/java">stride = ALIGN(width, 16)</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageFormat#YV12" title="Reference documentation">Java documentation for <code>android.graphics.ImageFormat.YV12</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Hardware.Camera.SetPreviewCallback(.IPreviewCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>
