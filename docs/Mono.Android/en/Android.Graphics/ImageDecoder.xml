<Type Name="ImageDecoder" FullName="Android.Graphics.ImageDecoder">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImageDecoder&#xA;Inherits Object&#xA;Implements IAutoCloseable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageDecoder sealed : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IAutoCloseable" />
  <TypeSignature Language="C#" Value="public sealed class ImageDecoder : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImageDecoder extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.ImageDecoder" />
  <TypeSignature Language="F#" Value="type ImageDecoder = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/ImageDecoder", ApiSince=28, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/ImageDecoder", ApiSince=28, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A class for converting encoded images (like <c>PNG</c>, <c>JPEG</c>,
             <c>WEBP</c>, <c>GIF</c>, or <c>HEIF</c>) into <c>Drawable</c> or
             <c>Bitmap</c> objects.</summary>
    <remarks>
      <para>A class for converting encoded images (like <c>PNG</c>, <c>JPEG</c>,
             <c>WEBP</c>, <c>GIF</c>, or <c>HEIF</c>) into <c>Drawable</c> or
             <c>Bitmap</c> objects.</para>
      <para>To use it, first create a <c>Source Source</c> using one of the
             <c>createSource</c> overloads. For example, to decode from a <c>Uri</c>, call
             <c>#createSource(ContentResolver, Uri)</c> and pass the result to
             <c>#decodeDrawable(Source)</c> or <c>#decodeBitmap(Source)</c>:</para>
      <code lang="text/java">File file = new File(...);
             ImageDecoder.Source source = ImageDecoder.createSource(file);
             Drawable drawable = ImageDecoder.decodeDrawable(source);
             </code>
      <para>To change the default settings, pass the <c>Source Source</c> and an
             <c>OnHeaderDecodedListener OnHeaderDecodedListener</c> to
             <c>#decodeDrawable(Source, OnHeaderDecodedListener)</c> or
             <c>#decodeBitmap(Source, OnHeaderDecodedListener)</c>. For example, to
             create a sampled image with half the width and height of the original image,
             call <c>#setTargetSampleSize setTargetSampleSize(2)</c> inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>:</para>
      <code lang="text/java">OnHeaderDecodedListener listener = new OnHeaderDecodedListener() {
                 public void onHeaderDecoded(ImageDecoder decoder, ImageInfo info, Source source) {
                     decoder.setTargetSampleSize(2);
                 }
             };
             Drawable drawable = ImageDecoder.decodeDrawable(source, listener);
             </code>
      <para>The <c>ImageInfo ImageInfo</c> contains information about the encoded image, like
             its width and height, and the <c>Source Source</c> can be used to match to a particular
             <c>Source Source</c> if a single <c>OnHeaderDecodedListener OnHeaderDecodedListener</c>
             is used with multiple <c>Source Source</c> objects.</para>
      <para>The <c>OnHeaderDecodedListener OnHeaderDecodedListener</c> can also be implemented
             as a lambda:</para>
      <code lang="text/java">Drawable drawable = ImageDecoder.decodeDrawable(source, (decoder, info, src) -&amp;gt; {
                 decoder.setTargetSampleSize(2);
             });
             </code>
      <para>If the encoded image is an animated <c>GIF</c> or <c>WEBP</c>,
             <c>#decodeDrawable decodeDrawable</c> will return an <c>AnimatedImageDrawable</c>. To
             start its animation, call <c>AnimatedImageDrawable#start AnimatedImageDrawable.start()</c>:</para>
      <code lang="text/java">Drawable drawable = ImageDecoder.decodeDrawable(source);
             if (drawable instanceof AnimatedImageDrawable) {
                 ((AnimatedImageDrawable) drawable).start();
             }
             </code>
      <para>By default, a <c>Bitmap</c> created by <c>ImageDecoder</c> (including
             one that is inside a <c>Drawable</c>) will be immutable (i.e.
             <c>Bitmap#isMutable Bitmap.isMutable()</c> returns <c>false</c>), and it
             will typically have <c>Config</c><c>Bitmap.Config#HARDWARE</c>. Although
             these properties can be changed with <c>#setMutableRequired setMutableRequired(true)</c>
             (which is only compatible with <c>#decodeBitmap(Source)</c> and
             <c>#decodeBitmap(Source, OnHeaderDecodedListener)</c>) and <c>#setAllocator</c>,
             it is also possible to apply custom effects regardless of the mutability of
             the final returned object by passing a <c>PostProcessor</c> to
             <c>#setPostProcessor setPostProcessor</c>. A <c>PostProcessor</c> can also be a lambda:</para>
      <code lang="text/java">Drawable drawable = ImageDecoder.decodeDrawable(source, (decoder, info, src) -&amp;gt; {
                 decoder.setPostProcessor((canvas) -&amp;gt; {
                         // This will create rounded corners.
                         Path path = new Path();
                         path.setFillType(Path.FillType.INVERSE_EVEN_ODD);
                         int width = canvas.getWidth();
                         int height = canvas.getHeight();
                         path.addRoundRect(0, 0, width, height, 20, 20, Path.Direction.CW);
                         Paint paint = new Paint();
                         paint.setAntiAlias(true);
                         paint.setColor(Color.TRANSPARENT);
                         paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.SRC));
                         canvas.drawPath(path, paint);
                         return PixelFormat.TRANSLUCENT;
                 });
             });
             </code>
      <para>If the encoded image is incomplete or contains an error, or if an
             <c>Exception</c> occurs during decoding, a <c>DecodeException DecodeException</c>
             will be thrown. In some cases, the <c>ImageDecoder</c> may have decoded part of
             the image. In order to display the partial image, an
             <c>OnPartialImageListener OnPartialImageListener</c> must be passed to
             <c>#setOnPartialImageListener setOnPartialImageListener</c>. For example:</para>
      <code lang="text/java">Drawable drawable = ImageDecoder.decodeDrawable(source, (decoder, info, src) -&amp;gt; {
                 decoder.setOnPartialImageListener((DecodeException e) -&amp;gt; {
                         // Returning true indicates to create a Drawable or Bitmap even
                         // if the whole image could not be decoded. Any remaining lines
                         // will be blank.
                         return true;
                 });
             });
             </code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/ImageDecoder" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllocatorDefault">
      <MemberSignature Language="VB.NET" Value="Public Const AllocatorDefault As ImageDecoderAllocator  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderAllocator AllocatorDefault = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderAllocator AllocatorDefault = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderAllocator AllocatorDefault = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.AllocatorDefault" />
      <MemberSignature Language="F#" Value="val mutable AllocatorDefault : Android.Graphics.ImageDecoderAllocator" Usage="Android.Graphics.ImageDecoder.AllocatorDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ALLOCATOR_DEFAULT", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ALLOCATOR_DEFAULT", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderAllocator</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Use the default allocation for the pixel memory.</summary>
        <remarks>
          <para>Use the default allocation for the pixel memory.
            
             Will typically result in a <c>Bitmap.Config#HARDWARE</c>
             allocation, but may be software for small images. In addition, this will
             switch to software when HARDWARE is incompatible, e.g.
             <c>#setMutableRequired setMutableRequired(true)</c> or
             <c>#setDecodeAsAlphaMaskEnabled setDecodeAsAlphaMaskEnabled(true)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#ALLOCATOR_DEFAULT" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.ALLOCATOR_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocatorHardware">
      <MemberSignature Language="VB.NET" Value="Public Const AllocatorHardware As ImageDecoderAllocator  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderAllocator AllocatorHardware = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderAllocator AllocatorHardware = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderAllocator AllocatorHardware = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.AllocatorHardware" />
      <MemberSignature Language="F#" Value="val mutable AllocatorHardware : Android.Graphics.ImageDecoderAllocator" Usage="Android.Graphics.ImageDecoder.AllocatorHardware" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ALLOCATOR_HARDWARE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ALLOCATOR_HARDWARE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderAllocator</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Require a <c>Bitmap.Config#HARDWARE</c><c>Bitmap</c>.</summary>
        <remarks>
          <para>Require a <c>Bitmap.Config#HARDWARE</c><c>Bitmap</c>.</para>
          <para>When this is combined with incompatible options, like
             <c>#setMutableRequired setMutableRequired(true)</c> or
             <c>#setDecodeAsAlphaMaskEnabled setDecodeAsAlphaMaskEnabled(true)</c>,
             <c>#decodeDrawable decodeDrawable</c> or <c>#decodeBitmap decodeBitmap</c>
             will throw an <c>java.lang.IllegalStateException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#ALLOCATOR_HARDWARE" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.ALLOCATOR_HARDWARE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocatorSharedMemory">
      <MemberSignature Language="VB.NET" Value="Public Const AllocatorSharedMemory As ImageDecoderAllocator  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderAllocator AllocatorSharedMemory = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderAllocator AllocatorSharedMemory = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderAllocator AllocatorSharedMemory = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.AllocatorSharedMemory" />
      <MemberSignature Language="F#" Value="val mutable AllocatorSharedMemory : Android.Graphics.ImageDecoderAllocator" Usage="Android.Graphics.ImageDecoder.AllocatorSharedMemory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ALLOCATOR_SHARED_MEMORY", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ALLOCATOR_SHARED_MEMORY", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderAllocator</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Use shared memory for the pixel memory.</summary>
        <remarks>
          <para>Use shared memory for the pixel memory.</para>
          <para />
          <para>Useful for sharing across processes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#ALLOCATOR_SHARED_MEMORY" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.ALLOCATOR_SHARED_MEMORY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocatorSoftware">
      <MemberSignature Language="VB.NET" Value="Public Const AllocatorSoftware As ImageDecoderAllocator  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderAllocator AllocatorSoftware = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderAllocator AllocatorSoftware = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderAllocator AllocatorSoftware = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.AllocatorSoftware" />
      <MemberSignature Language="F#" Value="val mutable AllocatorSoftware : Android.Graphics.ImageDecoderAllocator" Usage="Android.Graphics.ImageDecoder.AllocatorSoftware" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ALLOCATOR_SOFTWARE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ALLOCATOR_SOFTWARE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderAllocator enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderAllocator</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Use a software allocation for the pixel memory.</summary>
        <remarks>
          <para>Use a software allocation for the pixel memory.</para>
          <para />
          <para>Useful for drawing to a software <c>Canvas</c> or for
             accessing the pixels on the final output.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#ALLOCATOR_SOFTWARE" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.ALLOCATOR_SOFTWARE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="imageDecoder.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this resource, relinquishing any underlying resources.</summary>
        <remarks>
          <para>Closes this resource, relinquishing any underlying resources. This method
            is invoked automatically on objects managed by the try-with-resources
            statement.</para>
          <para>This is an implementation detail of <c>ImageDecoder</c>, and should
            never be called manually.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#close()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (file As File) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Java::IO::File ^ file);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Java.IO.File -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Ljava/io/File;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Ljava/io/File;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (buffer As ByteBuffer) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Java::Nio::ByteBuffer ^ buffer);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Java.Nio.ByteBuffer buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Java.Nio.ByteBuffer buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Java.Nio.ByteBuffer -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Ljava/nio/ByteBuffer;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Ljava/nio/ByteBuffer;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (callable As ICallable) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Java::Util::Concurrent::ICallable ^ callable);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Java.Util.Concurrent.ICallable callable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Java.Util.Concurrent.ICallable callable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Java.Util.Concurrent.ICallable)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Java.Util.Concurrent.ICallable -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource callable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Ljava/util/concurrent/Callable;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Ljava/util/concurrent/Callable;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callable" Type="Java.Util.Concurrent.ICallable" />
      </Parameters>
      <Docs>
        <param name="callable">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (data As Byte()) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member CreateSource : byte[] -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "([B)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "([B)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (cr As ContentResolver, uri As Uri) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Android::Content::ContentResolver ^ cr, Android::Net::Uri ^ uri);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Android.Content.ContentResolver cr, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Android.Content.ContentResolver cr, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Android.Content.ContentResolver,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Android.Content.ContentResolver * Android.Net.Uri -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource (cr, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr" Type="Android.Content.ContentResolver" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="cr">to retrieve from.</param>
        <param name="uri">of the image file.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (assets As AssetManager, fileName As String) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Android::Content::Res::AssetManager ^ assets, System::String ^ fileName);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Android.Content.Res.AssetManager assets, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Android.Content.Res.AssetManager assets, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Android.Content.Res.AssetManager,System.String)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Android.Content.Res.AssetManager * string -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource (assets, fileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assets" Type="Android.Content.Res.AssetManager" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assets">To be added.</param>
        <param name="fileName">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (res As Resources, resId As Integer) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(Android::Content::Res::Resources ^ res, int resId);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (Android.Content.Res.Resources res, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(class Android.Content.Res.Resources res, int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(Android.Content.Res.Resources,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateSource : Android.Content.Res.Resources * int -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource (res, resId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "(Landroid/content/res/Resources;I)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "(Landroid/content/res/Resources;I)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="res">To be added.</param>
        <param name="resId">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSource (data As Byte(), offset As Integer, length As Integer) As ImageDecoder.Source" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::ImageDecoder::Source ^ CreateSource(cli::array &lt;System::Byte&gt; ^ data, int offset, int length);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.ImageDecoder.Source CreateSource (byte[] data, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.ImageDecoder/Source CreateSource(unsigned int8[] data, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.CreateSource(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateSource : byte[] * int * int -&gt; Android.Graphics.ImageDecoder.Source" Usage="Android.Graphics.ImageDecoder.CreateSource (data, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSource", "([BII)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSource", "([BII)Landroid/graphics/ImageDecoder$Source;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+Source</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>Create a new <c>Source</c> from a <c>android.net.Uri</c>.</summary>
        <returns>a new Source object, which can be passed to
                 <c>#decodeDrawable</c> or <c>#decodeBitmap</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#createSource(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.createSource(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Crop">
      <MemberSignature Language="VB.NET" Value="Public Property Crop As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::Rect ^ Crop { Android::Graphics::Rect ^ get(); void set(Android::Graphics::Rect ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Rect? Crop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Crop" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.Crop" />
      <MemberSignature Language="F#" Value="member this.Crop : Android.Graphics.Rect with get, set" Usage="Android.Graphics.ImageDecoder.Crop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCrop", "()Landroid/graphics/Rect;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCrop", "()Landroid/graphics/Rect;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCrop", "(Landroid/graphics/Rect;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCrop", "(Landroid/graphics/Rect;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the cropping rectangle, if set. -or- Crop the output to <c>subset</c> of the (possibly) scaled image.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the cropping rectangle, if set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#getCrop()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.getCrop()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Crop the output to <c>subset</c> of the (possibly) scaled image.</para>
          <para>
            <c>subset</c> must be contained within the size set by
             <c>#setTargetSize</c> or the bounds of the image if setTargetSize was
             not called. Otherwise an <c>IllegalStateException</c> will be thrown by
             <c>#decodeDrawable decodeDrawable</c>/<c>#decodeBitmap decodeBitmap</c>.</para>
          <para>NOT intended as a replacement for
             <c>BitmapRegionDecoder#decodeRegion BitmapRegionDecoder.decodeRegion()</c>.
             This supports all formats, but merely crops the output.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setCrop(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setCrop(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeAsAlphaMaskEnabled">
      <MemberSignature Language="VB.NET" Value="Public Property DecodeAsAlphaMaskEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DecodeAsAlphaMaskEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool DecodeAsAlphaMaskEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DecodeAsAlphaMaskEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.DecodeAsAlphaMaskEnabled" />
      <MemberSignature Language="F#" Value="member this.DecodeAsAlphaMaskEnabled : bool with get, set" Usage="Android.Graphics.ImageDecoder.DecodeAsAlphaMaskEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDecodeAsAlphaMaskEnabled", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDecodeAsAlphaMaskEnabled", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDecodeAsAlphaMaskEnabled", "(Z)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDecodeAsAlphaMaskEnabled", "(Z)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether to treat single channel input as alpha. -or- Specify whether to potentially treat the output as an alpha mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return whether to treat single channel input as alpha.</para>
          <para />
          <para>This returns whether <c>#setDecodeAsAlphaMaskEnabled</c> was set to
             <c>true</c>. It may still return <c>true</c> even if the image has
             more than one channel and therefore will not be treated as an alpha
             mask.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#isDecodeAsAlphaMaskEnabled()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.isDecodeAsAlphaMaskEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify whether to potentially treat the output as an alpha mask.</para>
          <para />
          <para>If this is set to <c>true</c> and the image is encoded in a format
             with only one channel, treat that channel as alpha. Otherwise this call has
             no effect.</para>
          <para>This is incompatible with <c>#ALLOCATOR_HARDWARE</c>. Trying to
             combine them will result in <c>#decodeDrawable decodeDrawable</c>/
             <c>#decodeBitmap decodeBitmap</c> throwing an
             <c>java.lang.IllegalStateException</c>.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setDecodeAsAlphaMaskEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setDecodeAsAlphaMaskEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeBitmap (src As ImageDecoder.Source) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Bitmap ^ DecodeBitmap(Android::Graphics::ImageDecoder::Source ^ src);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap DecodeBitmap (Android.Graphics.ImageDecoder.Source src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeBitmap(class Android.Graphics.ImageDecoder/Source src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.DecodeBitmap(Android.Graphics.ImageDecoder.Source)" />
      <MemberSignature Language="F#" Value="static member DecodeBitmap : Android.Graphics.ImageDecoder.Source -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.ImageDecoder.DecodeBitmap src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeBitmap", "(Landroid/graphics/ImageDecoder$Source;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeBitmap", "(Landroid/graphics/ImageDecoder$Source;)Landroid/graphics/Bitmap;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.ImageDecoder+Source" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>See <c>#decodeBitmap(Source, OnHeaderDecodedListener)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#decodeBitmap(android.graphics.Source)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.decodeBitmap(android.graphics.Source)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeBitmap (src As ImageDecoder.Source, listener As ImageDecoder.IOnHeaderDecodedListener) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Bitmap ^ DecodeBitmap(Android::Graphics::ImageDecoder::Source ^ src, Android::Graphics::ImageDecoder::IOnHeaderDecodedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Bitmap DecodeBitmap (Android.Graphics.ImageDecoder.Source src, Android.Graphics.ImageDecoder.IOnHeaderDecodedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Bitmap DecodeBitmap(class Android.Graphics.ImageDecoder/Source src, class Android.Graphics.ImageDecoder/IOnHeaderDecodedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.DecodeBitmap(Android.Graphics.ImageDecoder.Source,Android.Graphics.ImageDecoder.IOnHeaderDecodedListener)" />
      <MemberSignature Language="F#" Value="static member DecodeBitmap : Android.Graphics.ImageDecoder.Source * Android.Graphics.ImageDecoder.IOnHeaderDecodedListener -&gt; Android.Graphics.Bitmap" Usage="Android.Graphics.ImageDecoder.DecodeBitmap (src, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeBitmap", "(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/Bitmap;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeBitmap", "(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/Bitmap;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.ImageDecoder+Source" />
        <Parameter Name="listener" Type="Android.Graphics.ImageDecoder+IOnHeaderDecodedListener" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>See <c>#decodeBitmap(Source, OnHeaderDecodedListener)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#decodeBitmap(android.graphics.Source)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.decodeBitmap(android.graphics.Source)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeDrawable">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeDrawable (src As ImageDecoder.Source) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ DecodeDrawable(Android::Graphics::ImageDecoder::Source ^ src);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable DecodeDrawable (Android.Graphics.ImageDecoder.Source src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable DecodeDrawable(class Android.Graphics.ImageDecoder/Source src) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.DecodeDrawable(Android.Graphics.ImageDecoder.Source)" />
      <MemberSignature Language="F#" Value="static member DecodeDrawable : Android.Graphics.ImageDecoder.Source -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.ImageDecoder.DecodeDrawable src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeDrawable", "(Landroid/graphics/ImageDecoder$Source;)Landroid/graphics/drawable/Drawable;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeDrawable", "(Landroid/graphics/ImageDecoder$Source;)Landroid/graphics/drawable/Drawable;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.ImageDecoder+Source" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>See <c>#decodeDrawable(Source, OnHeaderDecodedListener)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#decodeDrawable(android.graphics.Source)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.decodeDrawable(android.graphics.Source)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecodeDrawable">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeDrawable (src As ImageDecoder.Source, listener As ImageDecoder.IOnHeaderDecodedListener) As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::Drawables::Drawable ^ DecodeDrawable(Android::Graphics::ImageDecoder::Source ^ src, Android::Graphics::ImageDecoder::IOnHeaderDecodedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.Drawables.Drawable DecodeDrawable (Android.Graphics.ImageDecoder.Source src, Android.Graphics.ImageDecoder.IOnHeaderDecodedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.Drawables.Drawable DecodeDrawable(class Android.Graphics.ImageDecoder/Source src, class Android.Graphics.ImageDecoder/IOnHeaderDecodedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.DecodeDrawable(Android.Graphics.ImageDecoder.Source,Android.Graphics.ImageDecoder.IOnHeaderDecodedListener)" />
      <MemberSignature Language="F#" Value="static member DecodeDrawable : Android.Graphics.ImageDecoder.Source * Android.Graphics.ImageDecoder.IOnHeaderDecodedListener -&gt; Android.Graphics.Drawables.Drawable" Usage="Android.Graphics.ImageDecoder.DecodeDrawable (src, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeDrawable", "(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/drawable/Drawable;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeDrawable", "(Landroid/graphics/ImageDecoder$Source;Landroid/graphics/ImageDecoder$OnHeaderDecodedListener;)Landroid/graphics/drawable/Drawable;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="Android.Graphics.ImageDecoder+Source" />
        <Parameter Name="listener" Type="Android.Graphics.ImageDecoder+IOnHeaderDecodedListener" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>See <c>#decodeDrawable(Source, OnHeaderDecodedListener)</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#decodeDrawable(android.graphics.Source)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.decodeDrawable(android.graphics.Source)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMimeTypeSupported">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMimeTypeSupported (mimeType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMimeTypeSupported(System::String ^ mimeType);" />
      <MemberSignature Language="C#" Value="public static bool IsMimeTypeSupported (string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsMimeTypeSupported(string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.IsMimeTypeSupported(System.String)" />
      <MemberSignature Language="F#" Value="static member IsMimeTypeSupported : string -&gt; bool" Usage="Android.Graphics.ImageDecoder.IsMimeTypeSupported mimeType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isMimeTypeSupported", "(Ljava/lang/String;)Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isMimeTypeSupported", "(Ljava/lang/String;)Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mimeType">To be added.</param>
        <summary>Return if the given MIME type is a supported file format that can be
            decoded by this class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return if the given MIME type is a supported file format that can be
            decoded by this class. This can be useful to determine if a file can be
            decoded directly, or if it needs to be converted into a more general
            format using an API like <c>ContentResolver#openTypedAssetFile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#isMimeTypeSupported(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.isMimeTypeSupported(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.ImageDecoder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryPolicyDefault">
      <MemberSignature Language="VB.NET" Value="Public Const MemoryPolicyDefault As ImageDecoderMemoryPolicy  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderMemoryPolicy MemoryPolicyDefault = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderMemoryPolicy MemoryPolicyDefault = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderMemoryPolicy MemoryPolicyDefault = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.MemoryPolicyDefault" />
      <MemberSignature Language="F#" Value="val mutable MemoryPolicyDefault : Android.Graphics.ImageDecoderMemoryPolicy" Usage="Android.Graphics.ImageDecoder.MemoryPolicyDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEMORY_POLICY_DEFAULT", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEMORY_POLICY_DEFAULT", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderMemoryPolicy enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderMemoryPolicy enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderMemoryPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Use the most natural <c>Bitmap.Config</c> for the internal <c>Bitmap</c>.</summary>
        <remarks>
          <para>Use the most natural <c>Bitmap.Config</c> for the internal <c>Bitmap</c>.</para>
          <para>This is the recommended default for most applications and usages. This
            will use the closest <c>Bitmap.Config</c> for the encoded source. If the
            encoded source does not exactly match any <c>Bitmap.Config</c>, the next
            highest quality <c>Bitmap.Config</c> will be used avoiding any loss in
            image quality.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#MEMORY_POLICY_DEFAULT" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.MEMORY_POLICY_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemoryPolicyLowRam">
      <MemberSignature Language="VB.NET" Value="Public Const MemoryPolicyLowRam As ImageDecoderMemoryPolicy  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Graphics::ImageDecoderMemoryPolicy MemoryPolicyLowRam = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Graphics.ImageDecoderMemoryPolicy MemoryPolicyLowRam = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Graphics.ImageDecoderMemoryPolicy MemoryPolicyLowRam = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Graphics.ImageDecoder.MemoryPolicyLowRam" />
      <MemberSignature Language="F#" Value="val mutable MemoryPolicyLowRam : Android.Graphics.ImageDecoderMemoryPolicy" Usage="Android.Graphics.ImageDecoder.MemoryPolicyLowRam" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEMORY_POLICY_LOW_RAM", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEMORY_POLICY_LOW_RAM", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderMemoryPolicy enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Graphics.ImageDecoderMemoryPolicy enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderMemoryPolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Save memory if possible by using a denser <c>Bitmap.Config</c> at the
            cost of some image quality.</summary>
        <remarks>
          <para>Save memory if possible by using a denser <c>Bitmap.Config</c> at the
            cost of some image quality.</para>
          <para>For example an opaque 8-bit image may be compressed into an
            <c>Bitmap.Config#RGB_565</c> configuration, sacrificing image
            quality to save memory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#MEMORY_POLICY_LOW_RAM" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.MEMORY_POLICY_LOW_RAM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemorySizePolicy">
      <MemberSignature Language="VB.NET" Value="Public Property MemorySizePolicy As ImageDecoderMemoryPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::ImageDecoderMemoryPolicy MemorySizePolicy { Android::Graphics::ImageDecoderMemoryPolicy get(); void set(Android::Graphics::ImageDecoderMemoryPolicy value); };" />
      <MemberSignature Language="C#" Value="public Android.Graphics.ImageDecoderMemoryPolicy MemorySizePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.ImageDecoderMemoryPolicy MemorySizePolicy" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.MemorySizePolicy" />
      <MemberSignature Language="F#" Value="member this.MemorySizePolicy : Android.Graphics.ImageDecoderMemoryPolicy with get, set" Usage="Android.Graphics.ImageDecoder.MemorySizePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMemorySizePolicy", "()I", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMemorySizePolicy", "()I", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMemorySizePolicy", "(I)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMemorySizePolicy", "(I)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoderMemoryPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the memory policy for the decoded <c>Bitmap</c>. -or- Specify the memory policy for the decoded <c>Bitmap</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the memory policy for the decoded <c>Bitmap</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#getMemorySizePolicy()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.getMemorySizePolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify the memory policy for the decoded <c>Bitmap</c>.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setMemorySizePolicy(int)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setMemorySizePolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MutableRequired">
      <MemberSignature Language="VB.NET" Value="Public Property MutableRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MutableRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool MutableRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MutableRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.MutableRequired" />
      <MemberSignature Language="F#" Value="member this.MutableRequired : bool with get, set" Usage="Android.Graphics.ImageDecoder.MutableRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMutableRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMutableRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMutableRequired", "(Z)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMutableRequired", "(Z)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the decoded <c>Bitmap</c> will be mutable. -or- Specify whether the <c>Bitmap</c> should be mutable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return whether the decoded <c>Bitmap</c> will be mutable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#isMutableRequired()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.isMutableRequired()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify whether the <c>Bitmap</c> should be mutable.</para>
          <para>By default, a <c>Bitmap</c> created by <c>#decodeBitmap decodeBitmap</c>
             will be immutable i.e. <c>Bitmap#isMutable() Bitmap.isMutable()</c> returns
             <c>false</c>. This can be changed with <c>setMutableRequired(true)</c>.</para>
          <para>Mutable Bitmaps are incompatible with <c>#ALLOCATOR_HARDWARE</c>,
             because <c>Bitmap.Config#HARDWARE</c> Bitmaps cannot be mutable.
             Attempting to combine them will throw an
             <c>java.lang.IllegalStateException</c>.</para>
          <para>Mutable Bitmaps are also incompatible with <c>#decodeDrawable decodeDrawable</c>,
             which would require retrieving the Bitmap from the returned Drawable in
             order to modify. Attempting to decode a mutable <c>Drawable</c> will
             throw an <c>java.lang.IllegalStateException</c>.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setMutableRequired(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setMutableRequired(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPartialImageListener">
      <MemberSignature Language="VB.NET" Value="Public Property OnPartialImageListener As ImageDecoder.IOnPartialImageListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::ImageDecoder::IOnPartialImageListener ^ OnPartialImageListener { Android::Graphics::ImageDecoder::IOnPartialImageListener ^ get(); void set(Android::Graphics::ImageDecoder::IOnPartialImageListener ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Graphics.ImageDecoder.IOnPartialImageListener? OnPartialImageListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ImageDecoder/IOnPartialImageListener OnPartialImageListener" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.OnPartialImageListener" />
      <MemberSignature Language="F#" Value="member this.OnPartialImageListener : Android.Graphics.ImageDecoder.IOnPartialImageListener with get, set" Usage="Android.Graphics.ImageDecoder.OnPartialImageListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOnPartialImageListener", "()Landroid/graphics/ImageDecoder$OnPartialImageListener;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOnPartialImageListener", "()Landroid/graphics/ImageDecoder$OnPartialImageListener;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOnPartialImageListener", "(Landroid/graphics/ImageDecoder$OnPartialImageListener;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOnPartialImageListener", "(Landroid/graphics/ImageDecoder$OnPartialImageListener;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageDecoder+IOnPartialImageListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set (replace) the <c>OnPartialImageListener</c> on this object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setOnPartialImageListener(android.graphics.OnPartialImageListener)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setOnPartialImageListener(android.graphics.OnPartialImageListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PartialImage">
      <MemberSignature Language="VB.NET" Value="Public Custom Event PartialImage As EventHandler(Of ImageDecoder.PartialImageEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Graphics::ImageDecoder::PartialImageEventArgs ^&gt; ^ PartialImage;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Graphics.ImageDecoder.PartialImageEventArgs&gt; PartialImage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Graphics.ImageDecoder/PartialImageEventArgs&gt; PartialImage" />
      <MemberSignature Language="DocId" Value="E:Android.Graphics.ImageDecoder.PartialImage" />
      <MemberSignature Language="F#" Value="member this.PartialImage : EventHandler&lt;Android.Graphics.ImageDecoder.PartialImageEventArgs&gt; " Usage="member this.PartialImage : System.EventHandler&lt;Android.Graphics.ImageDecoder.PartialImageEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Graphics.ImageDecoder+PartialImageEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostProcessor">
      <MemberSignature Language="VB.NET" Value="Public Property PostProcessor As IPostProcessor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Graphics::IPostProcessor ^ PostProcessor { Android::Graphics::IPostProcessor ^ get(); void set(Android::Graphics::IPostProcessor ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Graphics.IPostProcessor? PostProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.IPostProcessor PostProcessor" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.PostProcessor" />
      <MemberSignature Language="F#" Value="member this.PostProcessor : Android.Graphics.IPostProcessor with get, set" Usage="Android.Graphics.ImageDecoder.PostProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPostProcessor", "()Landroid/graphics/PostProcessor;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPostProcessor", "()Landroid/graphics/PostProcessor;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPostProcessor", "(Landroid/graphics/PostProcessor;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPostProcessor", "(Landroid/graphics/PostProcessor;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.IPostProcessor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the <c>PostProcessor</c> currently set. -or- Modify the image after decoding and scaling.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the <c>PostProcessor</c> currently set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#getPostProcessor()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.getPostProcessor()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Modify the image after decoding and scaling.</para>
          <para />
          <para>This allows adding effects prior to returning a <c>Drawable</c> or
             <c>Bitmap</c>. For a <c>Drawable</c> or an immutable <c>Bitmap</c>,
             this is the only way to process the image after decoding.</para>
          <para>If combined with <c>#setTargetSize</c> and/or <c>#setCrop</c>,
             <c>PostProcessor#onPostProcess</c> occurs last.</para>
          <para>If set on a nine-patch image, the nine-patch data is ignored.</para>
          <para>For an animated image, the drawing commands drawn on the
             <c>Canvas</c> will be recorded immediately and then applied to each
             frame.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setPostProcessor(android.graphics.PostProcessor)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setPostProcessor(android.graphics.PostProcessor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetColorSpace">
      <MemberSignature Language="VB.NET" Value="Public Sub SetTargetColorSpace (colorSpace As ColorSpace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTargetColorSpace(Android::Graphics::ColorSpace ^ colorSpace);" />
      <MemberSignature Language="C#" Value="public void SetTargetColorSpace (Android.Graphics.ColorSpace? colorSpace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTargetColorSpace(class Android.Graphics.ColorSpace colorSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.SetTargetColorSpace(Android.Graphics.ColorSpace)" />
      <MemberSignature Language="F#" Value="member this.SetTargetColorSpace : Android.Graphics.ColorSpace -&gt; unit" Usage="imageDecoder.SetTargetColorSpace colorSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTargetColorSpace", "(Landroid/graphics/ColorSpace;)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTargetColorSpace", "(Landroid/graphics/ColorSpace;)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="colorSpace" Type="Android.Graphics.ColorSpace" />
      </Parameters>
      <Docs>
        <param name="colorSpace">To be added.</param>
        <summary>Specify the desired <c>ColorSpace</c> for the output.</summary>
        <remarks>
          <para>Specify the desired <c>ColorSpace</c> for the output.</para>
          <para>If non-null, the decoder will try to decode into <c>colorSpace</c>.
            If it is null, which is the default, or the request cannot be met, the
            decoder will pick either the color space embedded in the image or the
            <c>ColorSpace</c> best suited for the requested image configuration
            (for instance <c>ColorSpace.Named#SRGB sRGB</c> for the
            <c>Bitmap.Config#ARGB_8888</c> configuration and
            <c>ColorSpace.Named#EXTENDED_SRGB EXTENDED_SRGB</c> for
            <c>Bitmap.Config#RGBA_F16</c>).</para>
          <para>&lt;p class="note"&gt;Only <c>ColorSpace.Model#RGB</c> color spaces are
            currently supported. An <c>IllegalArgumentException</c> will
            be thrown by <c>#decodeDrawable decodeDrawable</c>/
            <c>#decodeBitmap decodeBitmap</c> when setting a non-RGB color space
            such as <c>ColorSpace.Named#CIE_LAB Lab</c>.&lt;/p&gt;
            
            &lt;p class="note"&gt;Prior to <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            the specified color space's transfer function must be
            an <c>ColorSpace.Rgb.TransferParameters ICC parametric curve</c>. An
            <c>IllegalArgumentException</c> will be thrown by the decode methods
            if calling <c>ColorSpace.Rgb#getTransferParameters()</c> on the
            specified color space returns null.
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            the color spaces with non ICC parametric curve transfer function are allowed.
            E.g., <c>ColorSpace.Named#BT2020_HLG BT2020_HLG</c>.
            &lt;/p&gt;</para>
          <para>Like all setters on ImageDecoder, this must be called inside
            <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setTargetColorSpace(android.graphics.ColorSpace)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setTargetColorSpace(android.graphics.ColorSpace)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetSampleSize">
      <MemberSignature Language="VB.NET" Value="Public Sub SetTargetSampleSize (sampleSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTargetSampleSize(int sampleSize);" />
      <MemberSignature Language="C#" Value="public void SetTargetSampleSize (int sampleSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTargetSampleSize(int32 sampleSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.SetTargetSampleSize(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetTargetSampleSize : int -&gt; unit" Usage="imageDecoder.SetTargetSampleSize sampleSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTargetSampleSize", "(I)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTargetSampleSize", "(I)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sampleSize">sampling rate of the encoded image.</param>
        <summary>Set the target size with a sampleSize.</summary>
        <remarks>
          <para>Set the target size with a sampleSize.</para>
          <para />
          <para>By default, the output size will match the size of the encoded
             image, which can be retrieved from the <c>ImageInfo ImageInfo</c> in
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>Requests the decoder to subsample the original image, returning a
             smaller image to save memory. The <c>sampleSize</c> is the number of pixels
             in either dimension that correspond to a single pixel in the output.
             For example, <c>sampleSize == 4</c> returns an image that is 1/4 the
             width/height of the original, and 1/16 the number of pixels.</para>
          <para>Must be greater than or equal to 1.</para>
          <para>This has the same effect as calling <c>#setTargetSize</c> with
             dimensions based on the <c>sampleSize</c>. Unlike dividing the original
             width and height by the <c>sampleSize</c> manually, calling this method
             allows <c>ImageDecoder</c> to round in the direction that it can do most
             efficiently.</para>
          <para>Only the last call to this or <c>#setTargetSize</c> is respected.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setTargetSampleSize(int)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setTargetSampleSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTargetSize">
      <MemberSignature Language="VB.NET" Value="Public Sub SetTargetSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetTargetSize(int width, int height);" />
      <MemberSignature Language="C#" Value="public void SetTargetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTargetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ImageDecoder.SetTargetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetTargetSize : int * int -&gt; unit" Usage="imageDecoder.SetTargetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTargetSize", "(II)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTargetSize", "(II)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">width in pixels of the output, must be greater than 0</param>
        <param name="height">height in pixels of the output, must be greater than 0</param>
        <summary>Specify the size of the output <c>Drawable</c> or <c>Bitmap</c>.</summary>
        <remarks>
          <para>Specify the size of the output <c>Drawable</c> or <c>Bitmap</c>.</para>
          <para>By default, the output size will match the size of the encoded
             image, which can be retrieved from the <c>ImageInfo ImageInfo</c> in
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>This will sample or scale the output to an arbitrary size that may
             be smaller or larger than the encoded size.</para>
          <para>Only the last call to this or <c>#setTargetSampleSize</c> is
             respected.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setTargetSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setTargetSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.ImageDecoder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.ImageDecoder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnpremultipliedRequired">
      <MemberSignature Language="VB.NET" Value="Public Property UnpremultipliedRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnpremultipliedRequired { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool UnpremultipliedRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnpremultipliedRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ImageDecoder.UnpremultipliedRequired" />
      <MemberSignature Language="F#" Value="member this.UnpremultipliedRequired : bool with get, set" Usage="Android.Graphics.ImageDecoder.UnpremultipliedRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUnpremultipliedRequired", "()Z", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUnpremultipliedRequired", "()Z", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUnpremultipliedRequired", "(Z)V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUnpremultipliedRequired", "(Z)V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the <c>Bitmap</c> will have unpremultiplied pixels. -or- Specify whether the <c>Bitmap</c> should have unpremultiplied pixels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return whether the <c>Bitmap</c> will have unpremultiplied pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#isUnpremultipliedRequired()" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.isUnpremultipliedRequired()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify whether the <c>Bitmap</c> should have unpremultiplied pixels.</para>
          <para>By default, ImageDecoder will create a <c>Bitmap</c> with
             premultiplied pixels, which is required for drawing with the
             <c>android.view.View</c> system (i.e. to a <c>Canvas</c>). Calling
             this method with a value of <c>true</c> will result in
             <c>#decodeBitmap</c> returning a <c>Bitmap</c> with unpremultiplied
             pixels. See <c>Bitmap#isPremultiplied Bitmap.isPremultiplied()</c>.
             This is incompatible with <c>#decodeDrawable decodeDrawable</c>;
             attempting to decode an unpremultiplied <c>Drawable</c> will throw an
             <c>java.lang.IllegalStateException</c>.</para>
          <para>Like all setters on ImageDecoder, this must be called inside
             <c>OnHeaderDecodedListener#onHeaderDecoded onHeaderDecoded</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ImageDecoder#setUnpremultipliedRequired(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.ImageDecoder.setUnpremultipliedRequired(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
