<Type Name="Region" FullName="Android.Graphics.Region">
  <TypeSignature Language="C#" Value="public class Region : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Region extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.Region" />
  <TypeSignature Language="F#" Value="type Region = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/Region", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/Region", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/Region" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create an empty region</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#Region()" title="Reference documentation">Java documentation for <code>android.graphics.Region.Region()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.#ctor(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Region : Android.Graphics.Rect -&gt; Android.Graphics.Region" Usage="new Android.Graphics.Region r" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/Rect;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/graphics/Rect;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Create an empty region</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#Region()" title="Reference documentation">Java documentation for <code>android.graphics.Region.Region()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (Android.Graphics.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Graphics.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.#ctor(Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Region : Android.Graphics.Region -&gt; Android.Graphics.Region" Usage="new Android.Graphics.Region region" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/graphics/Region;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/graphics/Region;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="region" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>Create an empty region</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#Region()" title="Reference documentation">Java documentation for <code>android.graphics.Region.Region()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Region (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Region : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.Region" Usage="new Android.Graphics.Region (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.Region : int * int * int * int -&gt; Android.Graphics.Region" Usage="new Android.Graphics.Region (left, top, right, bottom)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Create an empty region</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#Region()" title="Reference documentation">Java documentation for <code>android.graphics.Region.Region()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BoundaryPath">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Path BoundaryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Path BoundaryPath" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.BoundaryPath" />
      <MemberSignature Language="F#" Value="member this.BoundaryPath : Android.Graphics.Path" Usage="Android.Graphics.Region.BoundaryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBoundaryPath", "()Landroid/graphics/Path;", "GetGetBoundaryPathHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBoundaryPath", "()Landroid/graphics/Path;", "GetGetBoundaryPathHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Path</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the boundary of the region as a new Path.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#getBoundaryPath()" title="Reference documentation">Java documentation for <code>android.graphics.Region.getBoundaryPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bounds">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect Bounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect Bounds" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.Bounds" />
      <MemberSignature Language="F#" Value="member this.Bounds : Android.Graphics.Rect" Usage="Android.Graphics.Region.Bounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a new Rect set to the bounds of the region.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#getBounds()" title="Reference documentation">Java documentation for <code>android.graphics.Region.getBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Contains(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Contains : int * int -&gt; bool&#xA;override this.Contains : int * int -&gt; bool" Usage="region.Contains (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contains", "(II)Z", "GetContains_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contains", "(II)Z", "GetContains_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">To be added.</param>
        <param name="y">To be added.</param>
        <summary>Return true if the region contains the specified point</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#contains(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.contains(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.Creator" />
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.Graphics.Region.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="region.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetBoundaryPath">
      <MemberSignature Language="C#" Value="public virtual bool GetBoundaryPath (Android.Graphics.Path path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoundaryPath(class Android.Graphics.Path path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.GetBoundaryPath(Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member GetBoundaryPath : Android.Graphics.Path -&gt; bool&#xA;override this.GetBoundaryPath : Android.Graphics.Path -&gt; bool" Usage="region.GetBoundaryPath path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBoundaryPath", "(Landroid/graphics/Path;)Z", "GetGetBoundaryPath_Landroid_graphics_Path_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBoundaryPath", "(Landroid/graphics/Path;)Z", "GetGetBoundaryPath_Landroid_graphics_Path_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Return the boundary of the region as a new Path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#getBoundaryPath()" title="Reference documentation">Java documentation for <code>android.graphics.Region.getBoundaryPath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public virtual bool GetBounds (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBounds(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.GetBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetBounds : Android.Graphics.Rect -&gt; bool&#xA;override this.GetBounds : Android.Graphics.Rect -&gt; bool" Usage="region.GetBounds r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBounds", "(Landroid/graphics/Rect;)Z", "GetGetBounds_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBounds", "(Landroid/graphics/Rect;)Z", "GetGetBounds_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Return a new Rect set to the bounds of the region.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#getBounds()" title="Reference documentation">Java documentation for <code>android.graphics.Region.getBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Rect r, Android.Graphics.Region.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Rect r, class Android.Graphics.Region/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.InvokeOp(Android.Graphics.Rect,Android.Graphics.Region.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Rect * Android.Graphics.Region.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Rect * Android.Graphics.Region.Op -&gt; bool" Usage="region.InvokeOp (r, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("op", "(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Rect_Landroid_graphics_Region_Op_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("op", "(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Rect_Landroid_graphics_Region_Op_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
        <Parameter Name="op" Type="Android.Graphics.Region+Op" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <param name="op">To be added.</param>
        <summary>Perform the specified Op on this region and the specified rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#op(int,%20int,%20int,%20int,%20android.graphics.Op)" title="Reference documentation">Java documentation for <code>android.graphics.Region.op(int, int, int, int, android.graphics.Op)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Region region, Android.Graphics.Region.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Region region, class Android.Graphics.Region/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.InvokeOp(Android.Graphics.Region,Android.Graphics.Region.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool" Usage="region.InvokeOp (region, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("op", "(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("op", "(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Android.Graphics.Region" />
        <Parameter Name="op" Type="Android.Graphics.Region+Op" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <param name="op">To be added.</param>
        <summary>Perform the specified Op on this region and the specified rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#op(int,%20int,%20int,%20int,%20android.graphics.Op)" title="Reference documentation">Java documentation for <code>android.graphics.Region.op(int, int, int, int, android.graphics.Op)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Rect rect, Android.Graphics.Region region, Android.Graphics.Region.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Rect rect, class Android.Graphics.Region region, class Android.Graphics.Region/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.InvokeOp(Android.Graphics.Rect,Android.Graphics.Region,Android.Graphics.Region.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Rect * Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Rect * Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool" Usage="region.InvokeOp (rect, region, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("op", "(Landroid/graphics/Rect;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Rect_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("op", "(Landroid/graphics/Rect;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Rect_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.Rect" />
        <Parameter Name="region" Type="Android.Graphics.Region" />
        <Parameter Name="op" Type="Android.Graphics.Region+Op" />
      </Parameters>
      <Docs>
        <param name="rect">To be added.</param>
        <param name="region">To be added.</param>
        <param name="op">To be added.</param>
        <summary>Perform the specified Op on this region and the specified rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#op(int,%20int,%20int,%20int,%20android.graphics.Op)" title="Reference documentation">Java documentation for <code>android.graphics.Region.op(int, int, int, int, android.graphics.Op)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (Android.Graphics.Region region1, Android.Graphics.Region region2, Android.Graphics.Region.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(class Android.Graphics.Region region1, class Android.Graphics.Region region2, class Android.Graphics.Region/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.InvokeOp(Android.Graphics.Region,Android.Graphics.Region,Android.Graphics.Region.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : Android.Graphics.Region * Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool&#xA;override this.InvokeOp : Android.Graphics.Region * Android.Graphics.Region * Android.Graphics.Region.Op -&gt; bool" Usage="region.InvokeOp (region1, region2, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("op", "(Landroid/graphics/Region;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Region_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("op", "(Landroid/graphics/Region;Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z", "GetInvokeOp_Landroid_graphics_Region_Landroid_graphics_Region_Landroid_graphics_Region_Op_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region1" Type="Android.Graphics.Region" />
        <Parameter Name="region2" Type="Android.Graphics.Region" />
        <Parameter Name="op" Type="Android.Graphics.Region+Op" />
      </Parameters>
      <Docs>
        <param name="region1">To be added.</param>
        <param name="region2">To be added.</param>
        <param name="op">To be added.</param>
        <summary>Perform the specified Op on this region and the specified rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#op(int,%20int,%20int,%20int,%20android.graphics.Op)" title="Reference documentation">Java documentation for <code>android.graphics.Region.op(int, int, int, int, android.graphics.Op)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeOp">
      <MemberSignature Language="C#" Value="public virtual bool InvokeOp (int left, int top, int right, int bottom, Android.Graphics.Region.Op op);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeOp(int32 left, int32 top, int32 right, int32 bottom, class Android.Graphics.Region/Op op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.InvokeOp(System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Region.Op)" />
      <MemberSignature Language="F#" Value="abstract member InvokeOp : int * int * int * int * Android.Graphics.Region.Op -&gt; bool&#xA;override this.InvokeOp : int * int * int * int * Android.Graphics.Region.Op -&gt; bool" Usage="region.InvokeOp (left, top, right, bottom, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("op", "(IIIILandroid/graphics/Region$Op;)Z", "GetInvokeOp_IIIILandroid_graphics_Region_Op_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("op", "(IIIILandroid/graphics/Region$Op;)Z", "GetInvokeOp_IIIILandroid_graphics_Region_Op_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
        <Parameter Name="op" Type="Android.Graphics.Region+Op" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <param name="op">To be added.</param>
        <summary>Perform the specified Op on this region and the specified rect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#op(int,%20int,%20int,%20int,%20android.graphics.Op)" title="Reference documentation">Java documentation for <code>android.graphics.Region.op(int, int, int, int, android.graphics.Op)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsComplex">
      <MemberSignature Language="C#" Value="public virtual bool IsComplex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComplex" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.IsComplex" />
      <MemberSignature Language="F#" Value="member this.IsComplex : bool" Usage="Android.Graphics.Region.IsComplex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isComplex", "()Z", "GetIsComplexHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isComplex", "()Z", "GetIsComplexHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the region contains more than one rectangle</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#isComplex()" title="Reference documentation">Java documentation for <code>android.graphics.Region.isComplex()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Android.Graphics.Region.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if this region is empty</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#isEmpty()" title="Reference documentation">Java documentation for <code>android.graphics.Region.isEmpty()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRect">
      <MemberSignature Language="C#" Value="public virtual bool IsRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRect" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.IsRect" />
      <MemberSignature Language="F#" Value="member this.IsRect : bool" Usage="Android.Graphics.Region.IsRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRect", "()Z", "GetIsRectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRect", "()Z", "GetIsRectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the region contains a single rectangle</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#isRect()" title="Reference documentation">Java documentation for <code>android.graphics.Region.isRect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.Region.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickContains">
      <MemberSignature Language="C#" Value="public virtual bool QuickContains (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickContains(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.QuickContains(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member QuickContains : Android.Graphics.Rect -&gt; bool&#xA;override this.QuickContains : Android.Graphics.Rect -&gt; bool" Usage="region.QuickContains r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickContains", "(Landroid/graphics/Rect;)Z", "GetQuickContains_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickContains", "(Landroid/graphics/Rect;)Z", "GetQuickContains_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Return true if the region is a single rectangle (not complex) and it
            contains the specified rectangle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#quickContains(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.quickContains(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuickContains">
      <MemberSignature Language="C#" Value="public virtual bool QuickContains (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickContains(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.QuickContains(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member QuickContains : int * int * int * int -&gt; bool&#xA;override this.QuickContains : int * int * int * int -&gt; bool" Usage="region.QuickContains (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickContains", "(IIII)Z", "GetQuickContains_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickContains", "(IIII)Z", "GetQuickContains_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Return true if the region is a single rectangle (not complex) and it
            contains the specified rectangle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#quickContains(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.quickContains(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuickReject">
      <MemberSignature Language="C#" Value="public virtual bool QuickReject (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickReject(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.QuickReject(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member QuickReject : Android.Graphics.Rect -&gt; bool&#xA;override this.QuickReject : Android.Graphics.Rect -&gt; bool" Usage="region.QuickReject r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickReject", "(Landroid/graphics/Rect;)Z", "GetQuickReject_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickReject", "(Landroid/graphics/Rect;)Z", "GetQuickReject_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Return true if the region is empty, or if the specified rectangle does
            not intersect the region.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#quickReject(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.quickReject(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuickReject">
      <MemberSignature Language="C#" Value="public virtual bool QuickReject (Android.Graphics.Region? rgn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickReject(class Android.Graphics.Region rgn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.QuickReject(Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member QuickReject : Android.Graphics.Region -&gt; bool&#xA;override this.QuickReject : Android.Graphics.Region -&gt; bool" Usage="region.QuickReject rgn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickReject", "(Landroid/graphics/Region;)Z", "GetQuickReject_Landroid_graphics_Region_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickReject", "(Landroid/graphics/Region;)Z", "GetQuickReject_Landroid_graphics_Region_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgn" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="rgn">To be added.</param>
        <summary>Return true if the region is empty, or if the specified rectangle does
            not intersect the region.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#quickReject(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.quickReject(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QuickReject">
      <MemberSignature Language="C#" Value="public virtual bool QuickReject (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QuickReject(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.QuickReject(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member QuickReject : int * int * int * int -&gt; bool&#xA;override this.QuickReject : int * int * int * int -&gt; bool" Usage="region.QuickReject (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("quickReject", "(IIII)Z", "GetQuickReject_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("quickReject", "(IIII)Z", "GetQuickReject_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Return true if the region is empty, or if the specified rectangle does
            not intersect the region.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#quickReject(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.quickReject(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual bool Set (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Set(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Set(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.Graphics.Rect -&gt; bool&#xA;override this.Set : Android.Graphics.Rect -&gt; bool" Usage="region.Set r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Landroid/graphics/Rect;)Z", "GetSet_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Landroid/graphics/Rect;)Z", "GetSet_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>Set the region to the specified rectangle</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#set(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.set(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual bool Set (Android.Graphics.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Set(class Android.Graphics.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Set(Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member Set : Android.Graphics.Region -&gt; bool&#xA;override this.Set : Android.Graphics.Region -&gt; bool" Usage="region.Set region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Landroid/graphics/Region;)Z", "GetSet_Landroid_graphics_Region_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Landroid/graphics/Region;)Z", "GetSet_Landroid_graphics_Region_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="region">To be added.</param>
        <summary>Set the region to the specified rectangle</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#set(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.set(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual bool Set (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Set(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Set(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Set : int * int * int * int -&gt; bool&#xA;override this.Set : int * int * int * int -&gt; bool" Usage="region.Set (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(IIII)Z", "GetSet_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(IIII)Z", "GetSet_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <param name="right">To be added.</param>
        <param name="bottom">To be added.</param>
        <summary>Set the region to the specified rectangle</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#set(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.set(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetEmpty">
      <MemberSignature Language="C#" Value="public virtual void SetEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.SetEmpty" />
      <MemberSignature Language="F#" Value="abstract member SetEmpty : unit -&gt; unit&#xA;override this.SetEmpty : unit -&gt; unit" Usage="region.SetEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEmpty", "()V", "GetSetEmptyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEmpty", "()V", "GetSetEmptyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Set the region to the empty region</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#setEmpty()" title="Reference documentation">Java documentation for <code>android.graphics.Region.setEmpty()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPath">
      <MemberSignature Language="C#" Value="public virtual bool SetPath (Android.Graphics.Path path, Android.Graphics.Region clip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPath(class Android.Graphics.Path path, class Android.Graphics.Region clip) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.SetPath(Android.Graphics.Path,Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member SetPath : Android.Graphics.Path * Android.Graphics.Region -&gt; bool&#xA;override this.SetPath : Android.Graphics.Path * Android.Graphics.Region -&gt; bool" Usage="region.SetPath (path, clip)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPath", "(Landroid/graphics/Path;Landroid/graphics/Region;)Z", "GetSetPath_Landroid_graphics_Path_Landroid_graphics_Region_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPath", "(Landroid/graphics/Path;Landroid/graphics/Region;)Z", "GetSetPath_Landroid_graphics_Path_Landroid_graphics_Region_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Android.Graphics.Path" />
        <Parameter Name="clip" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="clip">To be added.</param>
        <summary>Set the region to the area described by the path and clip.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#setPath(android.graphics.Path,%20android.graphics.Region)" title="Reference documentation">Java documentation for <code>android.graphics.Region.setPath(android.graphics.Path, android.graphics.Region)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.Region.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.Region.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.Region.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public virtual void Translate (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Translate(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Translate(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Translate : int * int -&gt; unit&#xA;override this.Translate : int * int -&gt; unit" Usage="region.Translate (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translate", "(II)V", "GetTranslate_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translate", "(II)V", "GetTranslate_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <summary>Translate the region by [dx, dy].</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#translate(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.translate(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public virtual void Translate (int dx, int dy, Android.Graphics.Region? dst);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Translate(int32 dx, int32 dy, class Android.Graphics.Region dst) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Translate(System.Int32,System.Int32,Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member Translate : int * int * Android.Graphics.Region -&gt; unit&#xA;override this.Translate : int * int * Android.Graphics.Region -&gt; unit" Usage="region.Translate (dx, dy, dst)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translate", "(IILandroid/graphics/Region;)V", "GetTranslate_IILandroid_graphics_Region_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translate", "(IILandroid/graphics/Region;)V", "GetTranslate_IILandroid_graphics_Region_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
        <Parameter Name="dst" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="dx">To be added.</param>
        <param name="dy">To be added.</param>
        <param name="dst">To be added.</param>
        <summary>Translate the region by [dx, dy].</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#translate(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.translate(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public bool Union (Android.Graphics.Rect r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Union(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.Union(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.Union : Android.Graphics.Rect -&gt; bool" Usage="region.Union r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("union", "(Landroid/graphics/Rect;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("union", "(Landroid/graphics/Rect;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel? p, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel p, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.Region.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="region.WriteToParcel (p, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <param name="p">Parcel object to write the region data into</param>
        <summary>Write the region and its pixels to the parcel.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/Region#writeToParcel(android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.Region.writeToParcel(android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
