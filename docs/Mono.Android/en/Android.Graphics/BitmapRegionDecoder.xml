<Type Name="BitmapRegionDecoder" FullName="Android.Graphics.BitmapRegionDecoder">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BitmapRegionDecoder&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class BitmapRegionDecoder sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class BitmapRegionDecoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BitmapRegionDecoder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.BitmapRegionDecoder" />
  <TypeSignature Language="F#" Value="type BitmapRegionDecoder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/BitmapRegionDecoder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/BitmapRegionDecoder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>BitmapRegionDecoder can be used to decode a rectangle region from an image.</summary>
    <remarks>
      <para>BitmapRegionDecoder can be used to decode a rectangle region from an image.
            BitmapRegionDecoder is particularly useful when an original image is large and
            you only need parts of the image.</para>
      <para>To create a BitmapRegionDecoder, call newInstance(...).
            Given a BitmapRegionDecoder, users can call decodeRegion() repeatedly
            to get a decoded Bitmap of the specified region.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="DecodeRegion">
      <MemberSignature Language="VB.NET" Value="Public Function DecodeRegion (rect As Rect, options As BitmapFactory.Options) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Graphics::Bitmap ^ DecodeRegion(Android::Graphics::Rect ^ rect, Android::Graphics::BitmapFactory::Options ^ options);" />
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? DecodeRegion (Android.Graphics.Rect? rect, Android.Graphics.BitmapFactory.Options? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap DecodeRegion(class Android.Graphics.Rect rect, class Android.Graphics.BitmapFactory/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.DecodeRegion(Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="member this.DecodeRegion : Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="bitmapRegionDecoder.DecodeRegion (rect, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeRegion", "(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeRegion", "(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.Rect" />
        <Parameter Name="options" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle that specified the region to be decode.</param>
        <param name="options">null-ok; Options that control downsampling.
                        inPurgeable is not supported.</param>
        <summary>Decodes a rectangle region in the image specified by rect.</summary>
        <returns>The decoded bitmap, or null if the image data could not be
                    decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#decodeRegion(android.graphics.Rect,%20android.graphics.Options)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.decodeRegion(android.graphics.Rect, android.graphics.Options)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Graphics.BitmapRegionDecoder.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's height</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the original image's height</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#getHeight()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRecycled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRecycled { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.IsRecycled" />
      <MemberSignature Language="F#" Value="member this.IsRecycled : bool" Usage="Android.Graphics.BitmapRegionDecoder.IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRecycled", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRecycled", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this region decoder has been recycled.</summary>
        <value>true if the region decoder has been recycled</value>
        <remarks>
          <para>Returns true if this region decoder has been recycled.
            If so, then it is an error to try use its method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#isRecycled()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.isRecycled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.BitmapRegionDecoder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (pfd As ParcelFileDescriptor) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(Android::OS::ParcelFileDescriptor ^ pfd);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (Android.OS.ParcelFileDescriptor pfd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class Android.OS.ParcelFileDescriptor pfd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Android.OS.ParcelFileDescriptor -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance pfd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Landroid/os/ParcelFileDescriptor;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Landroid/os/ParcelFileDescriptor;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfd" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from the file descriptor.
            The position within the descriptor will not be changed when
            this returns, so the descriptor can be used again as is.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (is As Stream) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(System::IO::Stream ^ is);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder? NewInstance (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewInstance : System.IO.Stream -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance is" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">The input stream that holds the raw data to be decoded into a
                      BitmapRegionDecoder.</param>
        <summary>Create a BitmapRegionDecoder from an input stream.</summary>
        <returns>A new BitmapRegionDecoder, or <c>null</c> if <c>is</c> is <c>null</c>.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from an input stream.
            The stream's position will be where ever it was after the encoded data
            was read.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(java.io.InputStream)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (pathName As String) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(System::String ^ pathName);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member NewInstance : string -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <summary>Create a BitmapRegionDecoder from a file path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from a file path.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(java.lang.String)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (fd As FileDescriptor, isShareable As Boolean) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(Java::IO::FileDescriptor ^ fd, bool isShareable);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (Java.IO.FileDescriptor fd, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class Java.IO.FileDescriptor fd, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(Java.IO.FileDescriptor,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Java.IO.FileDescriptor * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (fd, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/FileDescriptor;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/FileDescriptor;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fd">The file descriptor containing the data to decode</param>
        <param name="isShareable">This field has been ignored since
                               <c>Build.VERSION_CODES#KITKAT</c>.</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from the file descriptor.
            The position within the descriptor will not be changed when
            this returns, so the descriptor can be used again as is.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>This member is deprecated. In favor of <c>#newInstance(ParcelFileDescriptor)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(java.io.FileDescriptor,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(java.io.FileDescriptor, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (is As Stream, isShareable As Boolean) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(System::IO::Stream ^ is, bool isShareable);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder? NewInstance (System.IO.Stream is, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class System.IO.Stream is, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : System.IO.Stream * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (is, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="is">The input stream that holds the raw data to be decoded into a
                      BitmapRegionDecoder.</param>
        <param name="isShareable">This field has always been ignored.</param>
        <summary>Create a BitmapRegionDecoder from an input stream.</summary>
        <returns>A new BitmapRegionDecoder, or <c>null</c> if <c>is</c> is <c>null</c>.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from an input stream.
            The stream's position will be where ever it was after the encoded data
            was read.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>This member is deprecated. In favor of <c>#newInstance(InputStream)</c>&lt;p class="note"&gt;Prior to <c>Build.VERSION_CODES#KITKAT</c>,
            if <c>InputStream#markSupported is.markSupported()</c> returns true,
            <c>is.mark(1024)</c> would be called. As of
            <c>Build.VERSION_CODES#KITKAT</c>, this is no longer the case.&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(java.io.InputStream,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(java.io.InputStream, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.

 <para tool="javadoc-to-mdoc">Prior to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='F:Android OS Build+VERSION_CODES KitKat';scope=Xamarin" title="F:Android.OS.Build+VERSION_CODES.KitKat">F:Android.OS.Build+VERSION_CODES.KitKat</a></format>,
 if <see cref="M:Java.IO.InputStream.MarkSupported" /> returns true,
 <c>is.mark(1024)</c> would be called. As of
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='F:Android OS Build+VERSION_CODES KitKat';scope=Xamarin" title="F:Android.OS.Build+VERSION_CODES.KitKat">F:Android.OS.Build+VERSION_CODES.KitKat</a></format>, this is no longer the case.</para></exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (pathName As String, isShareable As Boolean) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(System::String ^ pathName, bool isShareable);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (string pathName, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(string pathName, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : string * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (pathName, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/lang/String;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/lang/String;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <param name="isShareable">This field has always been ignored.</param>
        <summary>Create a BitmapRegionDecoder from a file path.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from a file path.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>This member is deprecated. In favor of <c>#newInstance(String)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (data As Byte(), offset As Integer, length As Integer) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(cli::array &lt;System::Byte&gt; ^ data, int offset, int length);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (byte[] data, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(unsigned int8[] data, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewInstance : byte[] * int * int -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (data, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "([BII)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "([BII)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">byte array of compressed image data.</param>
        <param name="offset">offset into data for where the decoder should begin
                          parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <summary>Create a BitmapRegionDecoder from the specified byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from the specified byte array.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function NewInstance (data As Byte(), offset As Integer, length As Integer, isShareable As Boolean) As BitmapRegionDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Graphics::BitmapRegionDecoder ^ NewInstance(cli::array &lt;System::Byte&gt; ^ data, int offset, int length, bool isShareable);" />
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (byte[] data, int offset, int length, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(unsigned int8[] data, int32 offset, int32 length, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : byte[] * int * int * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (data, offset, length, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "([BIIZ)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "([BIIZ)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">byte array of compressed image data.</param>
        <param name="offset">offset into data for where the decoder should begin
                          parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <param name="isShareable">This field has been ignored since
                               <c>Build.VERSION_CODES#GINGERBREAD</c>.</param>
        <summary>Create a BitmapRegionDecoder from the specified byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a BitmapRegionDecoder from the specified byte array.
            Currently only the JPEG, PNG, WebP and HEIF formats are supported.</para>
          <para>This member is deprecated. In favor of <c>#newInstance(byte[], int, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(byte[],%20int,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(byte[], int, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="VB.NET" Value="Public Sub Recycle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Recycle();" />
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.Recycle" />
      <MemberSignature Language="F#" Value="member this.Recycle : unit -&gt; unit" Usage="bitmapRegionDecoder.Recycle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recycle", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("recycle", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees up the memory associated with this region decoder, and mark the
            region decoder as "dead", meaning it will throw an exception if decodeRegion(),
            getWidth() or getHeight() is called.</summary>
        <remarks>
          <para>Frees up the memory associated with this region decoder, and mark the
            region decoder as "dead", meaning it will throw an exception if decodeRegion(),
            getWidth() or getHeight() is called.</para>
          <para>This operation cannot be reversed, so it should only be called if you are
            sure there are no further uses for the region decoder. This is an advanced call,
            and normally need not be called, since the normal GC process will free up this
            memory when there are no more references to this region decoder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#recycle()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.recycle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.BitmapRegionDecoder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.BitmapRegionDecoder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Graphics.BitmapRegionDecoder.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's width</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the original image's width</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#getWidth()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
  </Members>
</Type>
