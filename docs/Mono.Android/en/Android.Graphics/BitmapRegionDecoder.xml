<Type Name="BitmapRegionDecoder" FullName="Android.Graphics.BitmapRegionDecoder">
  <TypeSignature Language="C#" Value="public sealed class BitmapRegionDecoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BitmapRegionDecoder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.BitmapRegionDecoder" />
  <TypeSignature Language="F#" Value="type BitmapRegionDecoder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/BitmapRegionDecoder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/BitmapRegionDecoder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="10">
    <summary>BitmapRegionDecoder can be used to decode a rectangle region from an image.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 10" />
  </Docs>
  <Members>
    <Member MemberName="DecodeRegion">
      <MemberSignature Language="C#" Value="public Android.Graphics.Bitmap? DecodeRegion (Android.Graphics.Rect? rect, Android.Graphics.BitmapFactory.Options? options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Graphics.Bitmap DecodeRegion(class Android.Graphics.Rect rect, class Android.Graphics.BitmapFactory/Options options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.DecodeRegion(Android.Graphics.Rect,Android.Graphics.BitmapFactory.Options)" />
      <MemberSignature Language="F#" Value="member this.DecodeRegion : Android.Graphics.Rect * Android.Graphics.BitmapFactory.Options -&gt; Android.Graphics.Bitmap" Usage="bitmapRegionDecoder.DecodeRegion (rect, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeRegion", "(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeRegion", "(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="Android.Graphics.Rect" />
        <Parameter Name="options" Type="Android.Graphics.BitmapFactory+Options" />
      </Parameters>
      <Docs>
        <param name="rect">The rectangle that specified the region to be decode.</param>
        <param name="options">null-ok; Options that control downsampling.
                        inPurgeable is not supported.</param>
        <summary>Decodes a rectangle region in the image specified by rect.</summary>
        <returns>The decoded bitmap, or null if the image data could not be
                    decoded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#decodeRegion(android.graphics.Rect,%20android.graphics.Options)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.decodeRegion(android.graphics.Rect, android.graphics.Options)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Graphics.BitmapRegionDecoder.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's height</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#getHeight()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="IsRecycled">
      <MemberSignature Language="C#" Value="public bool IsRecycled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRecycled" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.IsRecycled" />
      <MemberSignature Language="F#" Value="member this.IsRecycled : bool" Usage="Android.Graphics.BitmapRegionDecoder.IsRecycled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRecycled", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRecycled", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this region decoder has been recycled.</summary>
        <value>true if the region decoder has been recycled</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#isRecycled()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.isRecycled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.BitmapRegionDecoder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (Android.OS.ParcelFileDescriptor pfd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class Android.OS.ParcelFileDescriptor pfd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Android.OS.ParcelFileDescriptor -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance pfd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Landroid/os/ParcelFileDescriptor;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Landroid/os/ParcelFileDescriptor;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pfd" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder? NewInstance (System.IO.Stream is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member NewInstance : System.IO.Stream -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance is" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (string pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.String)" />
      <MemberSignature Language="F#" Value="static member NewInstance : string -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">To be added.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (Java.IO.FileDescriptor fd, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class Java.IO.FileDescriptor fd, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(Java.IO.FileDescriptor,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Java.IO.FileDescriptor * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (fd, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/FileDescriptor;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/FileDescriptor;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fd">The file descriptor containing the data to decode</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder? NewInstance (System.IO.Stream is, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(class System.IO.Stream is, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : System.IO.Stream * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (is, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="is">The input stream that holds the raw data to be decoded into a
           BitmapRegionDecoder.</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.

 <para tool="javadoc-to-mdoc">Prior to <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='F:Android OS Build+VERSION_CODES KitKat';scope=Xamarin" title="F:Android.OS.Build+VERSION_CODES.KitKat">F:Android.OS.Build+VERSION_CODES.KitKat</a></format>,
 if <see cref="M:Java.IO.InputStream.MarkSupported" /> returns true,
 <c>is.mark(1024)</c> would be called. As of
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='F:Android OS Build+VERSION_CODES KitKat';scope=Xamarin" title="F:Android.OS.Build+VERSION_CODES.KitKat">F:Android.OS.Build+VERSION_CODES.KitKat</a></format>, this is no longer the case.</para></exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (string pathName, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(string pathName, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : string * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (pathName, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Ljava/lang/String;Z)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Ljava/lang/String;Z)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pathName">complete path name for the file to be decoded.</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (byte[] data, int offset, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(unsigned int8[] data, int32 offset, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewInstance : byte[] * int * int -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (data, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "([BII)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "([BII)Landroid/graphics/BitmapRegionDecoder;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Graphics.BitmapRegionDecoder NewInstance (byte[] data, int offset, int length, bool isShareable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Graphics.BitmapRegionDecoder NewInstance(unsigned int8[] data, int32 offset, int32 length, bool isShareable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.NewInstance(System.Byte[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NewInstance : byte[] * int * int * bool -&gt; Android.Graphics.BitmapRegionDecoder" Usage="Android.Graphics.BitmapRegionDecoder.NewInstance (data, offset, length, isShareable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "([BIIZ)Landroid/graphics/BitmapRegionDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "([BIIZ)Landroid/graphics/BitmapRegionDecoder;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BitmapRegionDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="isShareable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="data">byte array of compressed image data.</param>
        <param name="offset">offset into data for where the decoder should begin
               parsing.</param>
        <param name="length">the number of bytes, beginning at offset, to parse</param>
        <param name="isShareable">If this is true, then the BitmapRegionDecoder may keep a
                    shallow reference to the input. If this is false,
                    then the BitmapRegionDecoder will explicitly make a copy of the
                    input data, and keep that. Even if sharing is allowed,
                    the implementation may still decide to make a deep
                    copy of the input data. If an image is progressively encoded,
                    allowing sharing may degrade the decoding speed.</param>
        <param name="pfd">The parcel file descriptor containing the data to decode</param>
        <summary>Create a BitmapRegionDecoder from the file descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#newInstance(android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.newInstance(android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
        <exception cref="T:Java.IO.IOException">if the image format is not supported or can not be decoded.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.BitmapRegionDecoder.Recycle" />
      <MemberSignature Language="F#" Value="member this.Recycle : unit -&gt; unit" Usage="bitmapRegionDecoder.Recycle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recycle", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("recycle", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees up the memory associated with this region decoder, and mark the
            region decoder as "dead", meaning it will throw an exception if decodeRegion(),
            getWidth() or getHeight() is called.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#recycle()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.recycle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.BitmapRegionDecoder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.BitmapRegionDecoder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.BitmapRegionDecoder.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Graphics.BitmapRegionDecoder.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the original image's width</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/BitmapRegionDecoder#getWidth()" title="Reference documentation">Java documentation for <code>android.graphics.BitmapRegionDecoder.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 10" />
      </Docs>
    </Member>
  </Members>
</Type>
