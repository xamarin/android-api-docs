<Type Name="ColorSpace+Rgb" FullName="Android.Graphics.ColorSpace+Rgb">
  <TypeSignature Language="C#" Value="public class ColorSpace.Rgb : Android.Graphics.ColorSpace" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ColorSpace/Rgb extends Android.Graphics.ColorSpace" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.ColorSpace.Rgb" />
  <TypeSignature Language="F#" Value="type ColorSpace.Rgb = class&#xA;    inherit ColorSpace" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Graphics.ColorSpace</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/ColorSpace$Rgb", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/ColorSpace$Rgb", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>{</summary>
    <remarks>
      <para>{</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rgb (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] toXYZ, Android.Graphics.ColorSpace.Rgb.TransferParameters function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] toXYZ, class Android.Graphics.ColorSpace/Rgb/TransferParameters function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],Android.Graphics.ColorSpace.Rgb.TransferParameters)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * Android.Graphics.ColorSpace.Rgb.TransferParameters -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, toXYZ, function)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FLandroid/graphics/ColorSpace$Rgb$TransferParameters;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FLandroid/graphics/ColorSpace$Rgb$TransferParameters;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="toXYZ" Type="System.Single[]" />
        <Parameter Name="function" Type="Android.Graphics.ColorSpace+Rgb+TransferParameters" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="toXYZ">To be added.</param>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] toXYZ, double gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] toXYZ, float64 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],System.Double)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * double -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, toXYZ, gamma)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FD)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FD)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="toXYZ" Type="System.Single[]" />
        <Parameter Name="gamma" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="name">Name of the color space, cannot be null, its length must be &gt;= 1</param>
        <param name="toXYZ">3x3 column-major transform matrix from RGB to the profile
                         connection space CIE XYZ as an array of 9 floats, cannot be null</param>
        <param name="gamma">Gamma to use as the transfer function</param>
        <summary>Creates a new RGB color space using a 3x3 column-major transform matrix.</summary>
        <remarks>
          <para>Creates a new RGB color space using a 3x3 column-major transform matrix.
            The transform matrix must convert from the RGB space to the profile connection
            space CIE XYZ.</para>
          <para>&lt;p class="note"&gt;The range of the color space is imposed to be \([0..1]\).&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#ColorSpace$Rgb(java.lang.String,%20float[],%20double)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] toXYZ, Java.Util.Functions.IDoubleUnaryOperator oetf, Java.Util.Functions.IDoubleUnaryOperator eotf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] toXYZ, class Java.Util.Functions.IDoubleUnaryOperator oetf, class Java.Util.Functions.IDoubleUnaryOperator eotf) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],Java.Util.Functions.IDoubleUnaryOperator,Java.Util.Functions.IDoubleUnaryOperator)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * Java.Util.Functions.IDoubleUnaryOperator * Java.Util.Functions.IDoubleUnaryOperator -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, toXYZ, oetf, eotf)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FLjava/util/function/DoubleUnaryOperator;Ljava/util/function/DoubleUnaryOperator;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[FLjava/util/function/DoubleUnaryOperator;Ljava/util/function/DoubleUnaryOperator;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="toXYZ" Type="System.Single[]" />
        <Parameter Name="oetf" Type="Java.Util.Functions.IDoubleUnaryOperator" />
        <Parameter Name="eotf" Type="Java.Util.Functions.IDoubleUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="name">Name of the color space, cannot be null, its length must be &gt;= 1</param>
        <param name="toXYZ">3x3 column-major transform matrix from RGB to the profile
                         connection space CIE XYZ as an array of 9 floats, cannot be null</param>
        <param name="oetf">Opto-electronic transfer function, cannot be null</param>
        <param name="eotf">Electro-optical transfer function, cannot be null</param>
        <summary>Creates a new RGB color space using a 3x3 column-major transform matrix.</summary>
        <remarks>
          <para>Creates a new RGB color space using a 3x3 column-major transform matrix.
            The transform matrix must convert from the RGB space to the profile connection
            space CIE XYZ.</para>
          <para>&lt;p class="note"&gt;The range of the color space is imposed to be \([0..1]\).&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#ColorSpace$Rgb(java.lang.String,%20float[],%20java.util.function.DoubleUnaryOperator,%20java.util.function.DoubleUnaryOperator)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] primaries, float[] whitePoint, Android.Graphics.ColorSpace.Rgb.TransferParameters function);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] primaries, float32[] whitePoint, class Android.Graphics.ColorSpace/Rgb/TransferParameters function) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],System.Single[],Android.Graphics.ColorSpace.Rgb.TransferParameters)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * single[] * Android.Graphics.ColorSpace.Rgb.TransferParameters -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, primaries, whitePoint, function)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FLandroid/graphics/ColorSpace$Rgb$TransferParameters;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FLandroid/graphics/ColorSpace$Rgb$TransferParameters;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaries" Type="System.Single[]" />
        <Parameter Name="whitePoint" Type="System.Single[]" />
        <Parameter Name="function" Type="Android.Graphics.ColorSpace+Rgb+TransferParameters" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="primaries">To be added.</param>
        <param name="whitePoint">To be added.</param>
        <param name="function">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] primaries, float[] whitePoint, double gamma);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] primaries, float32[] whitePoint, float64 gamma) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],System.Single[],System.Double)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * single[] * double -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, primaries, whitePoint, gamma)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FD)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FD)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaries" Type="System.Single[]" />
        <Parameter Name="whitePoint" Type="System.Single[]" />
        <Parameter Name="gamma" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="name">Name of the color space, cannot be null, its length must be &gt;= 1</param>
        <param name="primaries">RGB primaries as an array of 6 (xy) or 9 (XYZ) floats</param>
        <param name="whitePoint">Reference white as an array of 2 (xy) or 3 (XYZ) floats</param>
        <param name="gamma">Gamma to use as the transfer function</param>
        <summary>Creates a new RGB color space using a specified set of primaries
            and a specified white point.</summary>
        <remarks>
          <para>Creates a new RGB color space using a specified set of primaries
            and a specified white point.</para>
          <para>The primaries and white point can be specified in the CIE xyY space
            or in CIE XYZ. The length of the arrays depends on the chosen space:</para>
          <para>&lt;table summary="Parameters length"&gt;
                &lt;tr&gt;&lt;th&gt;Space&lt;/th&gt;&lt;th&gt;Primaries length&lt;/th&gt;&lt;th&gt;White point length&lt;/th&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td&gt;xyY&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td&gt;XYZ&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;</para>
          <para>When the primaries and/or white point are specified in xyY, the Y component
            does not need to be specified and is assumed to be 1.0. Only the xy components
            are required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#ColorSpace$Rgb(java.lang.String,%20float[],%20float[],%20double)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rgb (string name, float[] primaries, float[] whitePoint, Java.Util.Functions.IDoubleUnaryOperator oetf, Java.Util.Functions.IDoubleUnaryOperator eotf, float min, float max);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, float32[] primaries, float32[] whitePoint, class Java.Util.Functions.IDoubleUnaryOperator oetf, class Java.Util.Functions.IDoubleUnaryOperator eotf, float32 min, float32 max) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.#ctor(System.String,System.Single[],System.Single[],Java.Util.Functions.IDoubleUnaryOperator,Java.Util.Functions.IDoubleUnaryOperator,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.ColorSpace.Rgb : string * single[] * single[] * Java.Util.Functions.IDoubleUnaryOperator * Java.Util.Functions.IDoubleUnaryOperator * single * single -&gt; Android.Graphics.ColorSpace.Rgb" Usage="new Android.Graphics.ColorSpace.Rgb (name, primaries, whitePoint, oetf, eotf, min, max)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FLjava/util/function/DoubleUnaryOperator;Ljava/util/function/DoubleUnaryOperator;FF)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[F[FLjava/util/function/DoubleUnaryOperator;Ljava/util/function/DoubleUnaryOperator;FF)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="primaries" Type="System.Single[]" />
        <Parameter Name="whitePoint" Type="System.Single[]" />
        <Parameter Name="oetf" Type="Java.Util.Functions.IDoubleUnaryOperator" />
        <Parameter Name="eotf" Type="Java.Util.Functions.IDoubleUnaryOperator" />
        <Parameter Name="min" Type="System.Single" />
        <Parameter Name="max" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="name">Name of the color space, cannot be null, its length must be &gt;= 1</param>
        <param name="primaries">RGB primaries as an array of 6 (xy) or 9 (XYZ) floats</param>
        <param name="whitePoint">Reference white as an array of 2 (xy) or 3 (XYZ) floats</param>
        <param name="oetf">Opto-electronic transfer function, cannot be null</param>
        <param name="eotf">Electro-optical transfer function, cannot be null</param>
        <param name="min">The minimum valid value in this color space's RGB range</param>
        <param name="max">The maximum valid value in this color space's RGB range</param>
        <summary>Creates a new RGB color space using a specified set of primaries
            and a specified white point.</summary>
        <remarks>
          <para>Creates a new RGB color space using a specified set of primaries
            and a specified white point.</para>
          <para>The primaries and white point can be specified in the CIE xyY space
            or in CIE XYZ. The length of the arrays depends on the chosen space:</para>
          <para>&lt;table summary="Parameters length"&gt;
                &lt;tr&gt;&lt;th&gt;Space&lt;/th&gt;&lt;th&gt;Primaries length&lt;/th&gt;&lt;th&gt;White point length&lt;/th&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td&gt;xyY&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;2&lt;/td&gt;&lt;/tr&gt;
                &lt;tr&gt;&lt;td&gt;XYZ&lt;/td&gt;&lt;td&gt;9&lt;/td&gt;&lt;td&gt;3&lt;/td&gt;&lt;/tr&gt;
            &lt;/table&gt;</para>
          <para>When the primaries and/or white point are specified in xyY, the Y component
            does not need to be specified and is assumed to be 1.0. Only the xy components
            are required.</para>
          <para>&lt;p class="note"&gt;The ID, as returned by <c>#getId()</c>, of an object created by
            this constructor is always <c>#MIN_ID</c>.&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#ColorSpace$Rgb(java.lang.String,%20float[],%20float[],%20java.util.function.DoubleUnaryOperator,%20java.util.function.DoubleUnaryOperator,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.ColorSpace$Rgb(java.lang.String, float[], float[], java.util.function.DoubleUnaryOperator, java.util.function.DoubleUnaryOperator, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Eotf">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Functions.IDoubleUnaryOperator Eotf { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Functions.IDoubleUnaryOperator Eotf" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.Eotf" />
      <MemberSignature Language="F#" Value="member this.Eotf : Java.Util.Functions.IDoubleUnaryOperator" Usage="Android.Graphics.ColorSpace.Rgb.Eotf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEotf", "()Ljava/util/function/DoubleUnaryOperator;", "GetGetEotfHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEotf", "()Ljava/util/function/DoubleUnaryOperator;", "GetGetEotfHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IDoubleUnaryOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the electro-optical transfer function (EOTF) of this color space.</summary>
        <value>A transfer function that converts from "gamma space" to linear space</value>
        <remarks>
          <para>Returns the electro-optical transfer function (EOTF) of this color space.
            The inverse function is the opto-electronic transfer function (OETF)
            returned by <c>#getOetf()</c>. These functions are defined to satisfy the
            following equality for \(x \in [0..1]\):</para>
          <para>$$OETF(EOTF(x)) = EOTF(OETF(x)) = x$$</para>
          <para>For RGB colors, this function can be used to convert from "gamma space"
            (gamma encoded) to linear space. The terms gamma space and gamma encoded
            are frequently used because many EOTFs can be closely approximated using
            a simple power function of the form \(x^\gamma\) (the approximation of the
            <c>Named#SRGB sRGB</c> EOTF uses \(\gamma=2.2\) for instance).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getEotf()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getEotf()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromLinear">
      <MemberSignature Language="C#" Value="public virtual float[] FromLinear (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] FromLinear(float32[] v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.FromLinear(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member FromLinear : single[] -&gt; single[]&#xA;override this.FromLinear : single[] -&gt; single[]" Usage="rgb.FromLinear v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fromLinear", "([F)[F", "GetFromLinear_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fromLinear", "([F)[F", "GetFromLinear_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">A non-null array of linear RGB values, its length
                     must be at least 3</param>
        <summary>Encodes an RGB value from linear space to this color space's
            "gamma space".</summary>
        <returns>A new array of 3 floats containing non-linear RGB values</returns>
        <remarks>
          <para>Encodes an RGB value from linear space to this color space's
            "gamma space". This is achieved by applying this color space's
            opto-electronic transfer function to the first 3 values of the
            supplied array. The result is stored back in the input array.</para>
          <para>Refer to the documentation of <c>ColorSpace.Rgb</c> for
            more information about transfer functions and their use for
            encoding and decoding RGB values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#fromLinear(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.fromLinear(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromLinear">
      <MemberSignature Language="C#" Value="public virtual float[] FromLinear (float r, float g, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] FromLinear(float32 r, float32 g, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.FromLinear(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member FromLinear : single * single * single -&gt; single[]&#xA;override this.FromLinear : single * single * single -&gt; single[]" Usage="rgb.FromLinear (r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fromLinear", "(FFF)[F", "GetFromLinear_FFFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fromLinear", "(FFF)[F", "GetFromLinear_FFFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">The red component to encode from linear space</param>
        <param name="g">The green component to encode from linear space</param>
        <param name="b">The blue component to encode from linear space</param>
        <summary>Encodes an RGB value from linear space to this color space's
            "gamma space".</summary>
        <returns>A new array of 3 floats containing non-linear RGB values</returns>
        <remarks>
          <para>Encodes an RGB value from linear space to this color space's
            "gamma space". This is achieved by applying this color space's
            opto-electronic transfer function to the supplied values.</para>
          <para>Refer to the documentation of <c>ColorSpace.Rgb</c> for
            more information about transfer functions and their use for
            encoding and decoding RGB values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#fromLinear(float,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.fromLinear(float, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXyz">
      <MemberSignature Language="C#" Value="public override float[] FromXyz (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32[] FromXyz(float32[] v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.FromXyz(System.Single[])" />
      <MemberSignature Language="F#" Value="override this.FromXyz : single[] -&gt; single[]" Usage="rgb.FromXyz v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fromXyz", "([F)[F", "GetFromXyz_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fromXyz", "([F)[F", "GetFromXyz_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInverseTransform">
      <MemberSignature Language="C#" Value="public virtual float[] GetInverseTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetInverseTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetInverseTransform" />
      <MemberSignature Language="F#" Value="abstract member GetInverseTransform : unit -&gt; single[]&#xA;override this.GetInverseTransform : unit -&gt; single[]" Usage="rgb.GetInverseTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInverseTransform", "()[F", "GetGetInverseTransformHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInverseTransform", "()[F", "GetGetInverseTransformHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the inverse transform of this color space as a new array.</summary>
        <returns>A new array of 9 floats</returns>
        <remarks>
          <para>Returns the inverse transform of this color space as a new array.
            The inverse transform is used to convert from XYZ to RGB (with the
            same white point as this color space). To connect color spaces, you
            must first <c>ColorSpace#adapt(ColorSpace, float[]) adapt</c> them
            to the same white point.</para>
          <para>It is recommended to use <c>ColorSpace#connect(ColorSpace, ColorSpace)</c>
            to convert between color spaces.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getInverseTransform()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getInverseTransform()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInverseTransform">
      <MemberSignature Language="C#" Value="public virtual float[] GetInverseTransform (float[] inverseTransform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetInverseTransform(float32[] inverseTransform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetInverseTransform(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetInverseTransform : single[] -&gt; single[]&#xA;override this.GetInverseTransform : single[] -&gt; single[]" Usage="rgb.GetInverseTransform inverseTransform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInverseTransform", "([F)[F", "GetGetInverseTransform_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInverseTransform", "([F)[F", "GetGetInverseTransform_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inverseTransform" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="inverseTransform">The destination array, cannot be null, its length
                             must be &gt;= 9</param>
        <summary>Copies the inverse transform of this color space in specified array.</summary>
        <returns>The destination array passed as a parameter</returns>
        <remarks>
          <para>Copies the inverse transform of this color space in specified array.
            The inverse transform is used to convert from XYZ to RGB (with the
            same white point as this color space). To connect color spaces, you
            must first <c>ColorSpace#adapt(ColorSpace, float[]) adapt</c> them
            to the same white point.</para>
          <para>It is recommended to use <c>ColorSpace#connect(ColorSpace, ColorSpace)</c>
            to convert between color spaces.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getInverseTransform(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getInverseTransform(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaxValue">
      <MemberSignature Language="C#" Value="public override float GetMaxValue (int component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetMaxValue(int32 component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetMaxValue(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetMaxValue : int -&gt; single" Usage="rgb.GetMaxValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMaxValue", "(I)F", "GetGetMaxValue_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMaxValue", "(I)F", "GetGetMaxValue_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinValue">
      <MemberSignature Language="C#" Value="public override float GetMinValue (int component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetMinValue(int32 component) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetMinValue(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetMinValue : int -&gt; single" Usage="rgb.GetMinValue component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMinValue", "(I)F", "GetGetMinValue_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMinValue", "(I)F", "GetGetMinValue_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="component">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaries">
      <MemberSignature Language="C#" Value="public virtual float[] GetPrimaries ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetPrimaries() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetPrimaries" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaries : unit -&gt; single[]&#xA;override this.GetPrimaries : unit -&gt; single[]" Usage="rgb.GetPrimaries " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPrimaries", "()[F", "GetGetPrimariesHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPrimaries", "()[F", "GetGetPrimariesHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the primaries of this color space as a new array of 6 floats.</summary>
        <returns>A new non-null array of 2 floats</returns>
        <remarks>
          <para>Returns the primaries of this color space as a new array of 6 floats.
            The Y component is assumed to be 1 and is therefore not copied into
            the destination. The x and y components of the first primary are
            written in the array at positions 0 and 1 respectively.</para>
          <para>Note: Some ColorSpaces represent gray profiles. The concept of
            primaries for such a ColorSpace does not make sense, so we use a special
            set of primaries that are all 1s.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getPrimaries()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getPrimaries()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrimaries">
      <MemberSignature Language="C#" Value="public virtual float[] GetPrimaries (float[] primaries);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetPrimaries(float32[] primaries) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetPrimaries(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaries : single[] -&gt; single[]&#xA;override this.GetPrimaries : single[] -&gt; single[]" Usage="rgb.GetPrimaries primaries" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPrimaries", "([F)[F", "GetGetPrimaries_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPrimaries", "([F)[F", "GetGetPrimaries_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaries" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="primaries">The destination array, cannot be null, its length
                             must be &gt;= 6</param>
        <summary>Copies the primaries of this color space in specified array.</summary>
        <returns>The destination array passed as a parameter</returns>
        <remarks>
          <para>Copies the primaries of this color space in specified array. The Y
            component is assumed to be 1 and is therefore not copied into the
            destination. The x and y components of the first primary are written
            in the array at positions 0 and 1 respectively.</para>
          <para>Note: Some ColorSpaces represent gray profiles. The concept of
            primaries for such a ColorSpace does not make sense, so we use a special
            set of primaries that are all 1s.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getPrimaries(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getPrimaries(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransferParameters">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorSpace.Rgb.TransferParameters? GetTransferParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.ColorSpace/Rgb/TransferParameters GetTransferParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetTransferParameters" />
      <MemberSignature Language="F#" Value="abstract member GetTransferParameters : unit -&gt; Android.Graphics.ColorSpace.Rgb.TransferParameters&#xA;override this.GetTransferParameters : unit -&gt; Android.Graphics.ColorSpace.Rgb.TransferParameters" Usage="rgb.GetTransferParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransferParameters", "()Landroid/graphics/ColorSpace$Rgb$TransferParameters;", "GetGetTransferParametersHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransferParameters", "()Landroid/graphics/ColorSpace$Rgb$TransferParameters;", "GetGetTransferParametersHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace+Rgb+TransferParameters</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public virtual float[] GetTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetTransform() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetTransform" />
      <MemberSignature Language="F#" Value="abstract member GetTransform : unit -&gt; single[]&#xA;override this.GetTransform : unit -&gt; single[]" Usage="rgb.GetTransform " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransform", "()[F", "GetGetTransformHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransform", "()[F", "GetGetTransformHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the transform of this color space as a new array.</summary>
        <returns>A new array of 9 floats</returns>
        <remarks>
          <para>Returns the transform of this color space as a new array. The
            transform is used to convert from RGB to XYZ (with the same white
            point as this color space). To connect color spaces, you must first
            <c>ColorSpace#adapt(ColorSpace, float[]) adapt</c> them to the
            same white point.</para>
          <para>It is recommended to use <c>ColorSpace#connect(ColorSpace, ColorSpace)</c>
            to convert between color spaces.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getTransform()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getTransform()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public virtual float[] GetTransform (float[] transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetTransform(float32[] transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetTransform(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTransform : single[] -&gt; single[]&#xA;override this.GetTransform : single[] -&gt; single[]" Usage="rgb.GetTransform transform" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransform", "([F)[F", "GetGetTransform_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransform", "([F)[F", "GetGetTransform_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="transform">The destination array, cannot be null, its length
                             must be &gt;= 9</param>
        <summary>Copies the transform of this color space in specified array.</summary>
        <returns>The destination array passed as a parameter</returns>
        <remarks>
          <para>Copies the transform of this color space in specified array. The
            transform is used to convert from RGB to XYZ (with the same white
            point as this color space). To connect color spaces, you must first
            <c>ColorSpace#adapt(ColorSpace, float[]) adapt</c> them to the
            same white point.</para>
          <para>It is recommended to use <c>ColorSpace#connect(ColorSpace, ColorSpace)</c>
            to convert between color spaces.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getTransform(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getTransform(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWhitePoint">
      <MemberSignature Language="C#" Value="public virtual float[] GetWhitePoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetWhitePoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetWhitePoint" />
      <MemberSignature Language="F#" Value="abstract member GetWhitePoint : unit -&gt; single[]&#xA;override this.GetWhitePoint : unit -&gt; single[]" Usage="rgb.GetWhitePoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getWhitePoint", "()[F", "GetGetWhitePointHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getWhitePoint", "()[F", "GetGetWhitePointHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the non-adapted CIE xyY white point of this color space as
            a new array of 2 floats.</summary>
        <returns>A new non-null array of 2 floats</returns>
        <remarks>
          <para>Returns the non-adapted CIE xyY white point of this color space as
            a new array of 2 floats. The Y component is assumed to be 1 and is
            therefore not copied into the destination. The x and y components
            are written in the array at positions 0 and 1 respectively.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getWhitePoint()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getWhitePoint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWhitePoint">
      <MemberSignature Language="C#" Value="public virtual float[] GetWhitePoint (float[] whitePoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetWhitePoint(float32[] whitePoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.GetWhitePoint(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetWhitePoint : single[] -&gt; single[]&#xA;override this.GetWhitePoint : single[] -&gt; single[]" Usage="rgb.GetWhitePoint whitePoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getWhitePoint", "([F)[F", "GetGetWhitePoint_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getWhitePoint", "([F)[F", "GetGetWhitePoint_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="whitePoint" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="whitePoint">The destination array, cannot be null, its length
                              must be &gt;= 2</param>
        <summary>Copies the non-adapted CIE xyY white point of this color space in
            specified array.</summary>
        <returns>The destination array passed as a parameter</returns>
        <remarks>
          <para>Copies the non-adapted CIE xyY white point of this color space in
            specified array. The Y component is assumed to be 1 and is therefore
            not copied into the destination. The x and y components are written
            in the array at positions 0 and 1 respectively.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getWhitePoint(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getWhitePoint(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWideGamut">
      <MemberSignature Language="C#" Value="public override bool IsWideGamut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWideGamut" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.IsWideGamut" />
      <MemberSignature Language="F#" Value="member this.IsWideGamut : bool" Usage="Android.Graphics.ColorSpace.Rgb.IsWideGamut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWideGamut", "()Z", "GetIsWideGamutHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWideGamut", "()Z", "GetIsWideGamutHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.ColorSpace.Rgb.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Oetf">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Functions.IDoubleUnaryOperator Oetf { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Functions.IDoubleUnaryOperator Oetf" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.Oetf" />
      <MemberSignature Language="F#" Value="member this.Oetf : Java.Util.Functions.IDoubleUnaryOperator" Usage="Android.Graphics.ColorSpace.Rgb.Oetf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOetf", "()Ljava/util/function/DoubleUnaryOperator;", "GetGetOetfHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOetf", "()Ljava/util/function/DoubleUnaryOperator;", "GetGetOetfHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IDoubleUnaryOperator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the opto-electronic transfer function (OETF) of this color space.</summary>
        <value>A transfer function that converts from linear space to "gamma space"</value>
        <remarks>
          <para>Returns the opto-electronic transfer function (OETF) of this color space.
            The inverse function is the electro-optical transfer function (EOTF) returned
            by <c>#getEotf()</c>. These functions are defined to satisfy the following
            equality for \(x \in [0..1]\):</para>
          <para>$$OETF(EOTF(x)) = EOTF(OETF(x)) = x$$</para>
          <para>For RGB colors, this function can be used to convert from linear space
            to "gamma space" (gamma encoded). The terms gamma space and gamma encoded
            are frequently used because many OETFs can be closely approximated using
            a simple power function of the form \(x^{\frac{1}{\gamma}}\) (the
            approximation of the <c>Named#SRGB sRGB</c> OETF uses \(\gamma=2.2\)
            for instance).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#getOetf()" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.getOetf()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.ColorSpace.Rgb.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.ColorSpace.Rgb.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.ColorSpace.Rgb.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLinear">
      <MemberSignature Language="C#" Value="public virtual float[] ToLinear (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] ToLinear(float32[] v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.ToLinear(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member ToLinear : single[] -&gt; single[]&#xA;override this.ToLinear : single[] -&gt; single[]" Usage="rgb.ToLinear v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLinear", "([F)[F", "GetToLinear_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLinear", "([F)[F", "GetToLinear_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">A non-null array of non-linear RGB values, its length
                     must be at least 3</param>
        <summary>Decodes an RGB value to linear space.</summary>
        <returns>The specified array</returns>
        <remarks>
          <para>Decodes an RGB value to linear space. This is achieved by
            applying this color space's electro-optical transfer function
            to the first 3 values of the supplied array. The result is
            stored back in the input array.</para>
          <para>Refer to the documentation of <c>ColorSpace.Rgb</c> for
            more information about transfer functions and their use for
            encoding and decoding RGB values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#toLinear(float[])" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.toLinear(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLinear">
      <MemberSignature Language="C#" Value="public virtual float[] ToLinear (float r, float g, float b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] ToLinear(float32 r, float32 g, float32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.ToLinear(System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ToLinear : single * single * single -&gt; single[]&#xA;override this.ToLinear : single * single * single -&gt; single[]" Usage="rgb.ToLinear (r, g, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLinear", "(FFF)[F", "GetToLinear_FFFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLinear", "(FFF)[F", "GetToLinear_FFFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">The red component to decode to linear space</param>
        <param name="g">The green component to decode to linear space</param>
        <param name="b">The blue component to decode to linear space</param>
        <summary>Decodes an RGB value to linear space.</summary>
        <returns>A new array of 3 floats containing linear RGB values</returns>
        <remarks>
          <para>Decodes an RGB value to linear space. This is achieved by
            applying this color space's electro-optical transfer function
            to the supplied values.</para>
          <para>Refer to the documentation of <c>ColorSpace.Rgb</c> for
            more information about transfer functions and their use for
            encoding and decoding RGB values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/ColorSpace.Rgb#toLinear(float,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.graphics.ColorSpace.Rgb.toLinear(float, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXyz">
      <MemberSignature Language="C#" Value="public override float[] ToXyz (float[] v);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32[] ToXyz(float32[] v) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.ColorSpace.Rgb.ToXyz(System.Single[])" />
      <MemberSignature Language="F#" Value="override this.ToXyz : single[] -&gt; single[]" Usage="rgb.ToXyz v" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toXyz", "([F)[F", "GetToXyz_arrayFHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toXyz", "([F)[F", "GetToXyz_arrayFHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
