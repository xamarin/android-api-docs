<Type Name="SurfaceTexture" FullName="Android.Graphics.SurfaceTexture">
  <TypeSignature Language="VB.NET" Value="Public Class SurfaceTexture&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class SurfaceTexture : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class SurfaceTexture : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SurfaceTexture extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Graphics.SurfaceTexture" />
  <TypeSignature Language="F#" Value="type SurfaceTexture = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/graphics/SurfaceTexture", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/graphics/SurfaceTexture", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>Captures frames from an image stream as an OpenGL ES texture.</summary>
    <remarks>
      <para>Captures frames from an image stream as an OpenGL ES texture.</para>
      <para>The image stream may come from either camera preview or video decode. A
            <c>android.view.Surface</c> created from a SurfaceTexture can be used as an output
            destination for the <c>android.hardware.camera2</c>, <c>android.media.MediaCodec</c>,
            <c>android.media.MediaPlayer</c>, and <c>android.renderscript.Allocation</c> APIs.
            When <c>#updateTexImage</c> is called, the contents of the texture object specified
            when the SurfaceTexture was created are updated to contain the most recent image from the image
            stream.  This may cause some frames of the stream to be skipped.</para>
      <para>A SurfaceTexture may also be used in place of a SurfaceHolder when specifying the output
            destination of the older <c>android.hardware.Camera</c> API. Doing so will cause all the
            frames from the image stream to be sent to the SurfaceTexture object rather than to the device's
            display.</para>
      <para>When sampling from the texture one should first transform the texture coordinates using the
            matrix queried via <c>#getTransformMatrix(float[])</c>.  The transform matrix may change each
            time <c>#updateTexImage</c> is called, so it should be re-queried each time the texture image
            is updated.
            This matrix transforms traditional 2D OpenGL ES texture coordinate column vectors of the form (s,
            t, 0, 1) where s and t are on the inclusive interval [0, 1] to the proper sampling location in
            the streamed texture.  This transform compensates for any properties of the image stream source
            that cause it to appear different from a traditional OpenGL ES texture.  For example, sampling
            from the bottom left corner of the image can be accomplished by transforming the column vector
            (0, 0, 0, 1) using the queried matrix, while sampling from the top right corner of the image can
            be done by transforming (1, 1, 0, 1).</para>
      <para>The texture object uses the GL_TEXTURE_EXTERNAL_OES texture target, which is defined by the
            <see href="http://www.khronos.org/registry/gles/extensions/OES/OES_EGL_image_external.txt">
            GL_OES_EGL_image_external</see> OpenGL ES extension.  This limits how the texture may be used.
            Each time the texture is bound it must be bound to the GL_TEXTURE_EXTERNAL_OES target rather than
            the GL_TEXTURE_2D target.  Additionally, any OpenGL ES 2.0 shader that samples from the texture
            must declare its use of this extension using, for example, an "#extension
            GL_OES_EGL_image_external : require" directive.  Such shaders must also access the texture using
            the samplerExternalOES GLSL sampler type.</para>
      <para>SurfaceTexture objects may be created on any thread.  <c>#updateTexImage</c> may only be
            called on the thread with the OpenGL ES context that contains the texture object.  The
            frame-available callback is called on an arbitrary thread, so unless special care is taken <c>#updateTexImage</c> should not be called directly from the callback.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (singleBufferMode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SurfaceTexture(bool singleBufferMode);" />
      <MemberSignature Language="C#" Value="public SurfaceTexture (bool singleBufferMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool singleBufferMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.#ctor(System.Boolean)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.SurfaceTexture : bool -&gt; Android.Graphics.SurfaceTexture" Usage="new Android.Graphics.SurfaceTexture singleBufferMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Z)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Z)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="singleBufferMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="singleBufferMode">whether the SurfaceTexture will be in single buffered mode.</param>
        <summary>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</summary>
        <remarks>
          <para>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</para>
          <para>In single buffered mode the application is responsible for serializing access to the image
            content buffer. Each time the image content is to be updated, the
            <c>#releaseTexImage()</c> method must be called before the image content producer takes
            ownership of the buffer. For example, when producing image content with the NDK
            ANativeWindow_lock and ANativeWindow_unlockAndPost functions, <c>#releaseTexImage()</c>
            must be called before each ANativeWindow_lock, or that call will fail. When producing
            image content with OpenGL ES, <c>#releaseTexImage()</c> must be called before the first
            OpenGL ES function call each frame.</para>
          <para>Unlike <c>#SurfaceTexture(int, boolean)</c>, which takes an OpenGL texture object name,
            this constructor creates the SurfaceTexture in detached mode. A texture name must be passed
            in using <c>#attachToGLContext</c> before calling <c>#releaseTexImage()</c> and producing
            image content using OpenGL ES.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#SurfaceTexture(boolean)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.SurfaceTexture(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (texName As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SurfaceTexture(int texName);" />
      <MemberSignature Language="C#" Value="public SurfaceTexture (int texName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 texName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.SurfaceTexture : int -&gt; Android.Graphics.SurfaceTexture" Usage="new Android.Graphics.SurfaceTexture texName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texName" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="texName">the OpenGL texture object name (e.g. generated via glGenTextures)</param>
        <summary>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</summary>
        <remarks>
          <para>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#SurfaceTexture(int)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.SurfaceTexture(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (texName As Integer, singleBufferMode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SurfaceTexture(int texName, bool singleBufferMode);" />
      <MemberSignature Language="C#" Value="public SurfaceTexture (int texName, bool singleBufferMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 texName, bool singleBufferMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.SurfaceTexture : int * bool -&gt; Android.Graphics.SurfaceTexture" Usage="new Android.Graphics.SurfaceTexture (texName, singleBufferMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="texName" Type="System.Int32" />
        <Parameter Name="singleBufferMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="texName">the OpenGL texture object name (e.g. generated via glGenTextures)</param>
        <param name="singleBufferMode">whether the SurfaceTexture will be in single buffered mode.</param>
        <summary>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</summary>
        <remarks>
          <para>Construct a new SurfaceTexture to stream images to a given OpenGL texture.</para>
          <para>In single buffered mode the application is responsible for serializing access to the image
            content buffer. Each time the image content is to be updated, the
            <c>#releaseTexImage()</c> method must be called before the image content producer takes
            ownership of the buffer. For example, when producing image content with the NDK
            ANativeWindow_lock and ANativeWindow_unlockAndPost functions, <c>#releaseTexImage()</c>
            must be called before each ANativeWindow_lock, or that call will fail. When producing
            image content with OpenGL ES, <c>#releaseTexImage()</c> must be called before the first
            OpenGL ES function call each frame.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#SurfaceTexture(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.SurfaceTexture(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SurfaceTexture(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected SurfaceTexture (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Graphics.SurfaceTexture : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Graphics.SurfaceTexture" Usage="new Android.Graphics.SurfaceTexture (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachToGLContext">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AttachToGLContext (texName As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AttachToGLContext(int texName);" />
      <MemberSignature Language="C#" Value="public virtual void AttachToGLContext (int texName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachToGLContext(int32 texName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.AttachToGLContext(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AttachToGLContext : int -&gt; unit&#xA;override this.AttachToGLContext : int -&gt; unit" Usage="surfaceTexture.AttachToGLContext texName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("attachToGLContext", "(I)V", "GetAttachToGLContext_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("attachToGLContext", "(I)V", "GetAttachToGLContext_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="texName" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="texName">The name of the OpenGL ES texture that will be created.  This texture name
            must be unused in the OpenGL ES context that is current on the calling thread.</param>
        <summary>Attach the SurfaceTexture to the OpenGL ES context that is current on the calling thread.</summary>
        <remarks>
          <para>Attach the SurfaceTexture to the OpenGL ES context that is current on the calling thread.  A
            new OpenGL ES texture object is created and populated with the SurfaceTexture image frame
            that was current at the time of the last call to <c>#detachFromGLContext</c>.  This new
            texture is bound to the <c>GL_TEXTURE_EXTERNAL_OES</c> texture target.</para>
          <para>This can be used to access the SurfaceTexture image contents from multiple OpenGL ES
            contexts.  Note, however, that the image contents are only accessible from one OpenGL ES
            context at a time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#attachToGLContext(int)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.attachToGLContext(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DataSpace">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSpace As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataSpace { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int DataSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.DataSpace" />
      <MemberSignature Language="F#" Value="member this.DataSpace : int" Usage="Android.Graphics.SurfaceTexture.DataSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDataSpace", "()I", "GetGetDataSpaceHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDataSpace", "()I", "GetGetDataSpaceHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the dataspace associated with the texture image.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the dataspace associated with the texture image.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#getDataSpace()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.getDataSpace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DetachFromGLContext">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DetachFromGLContext ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DetachFromGLContext();" />
      <MemberSignature Language="C#" Value="public virtual void DetachFromGLContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DetachFromGLContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.DetachFromGLContext" />
      <MemberSignature Language="F#" Value="abstract member DetachFromGLContext : unit -&gt; unit&#xA;override this.DetachFromGLContext : unit -&gt; unit" Usage="surfaceTexture.DetachFromGLContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("detachFromGLContext", "()V", "GetDetachFromGLContextHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("detachFromGLContext", "()V", "GetDetachFromGLContextHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detach the SurfaceTexture from the OpenGL ES context that owns the OpenGL ES texture object.</summary>
        <remarks>
          <para>Detach the SurfaceTexture from the OpenGL ES context that owns the OpenGL ES texture object.
            This call must be made with the OpenGL ES context current on the calling thread.  The OpenGL
            ES texture object will be deleted as a result of this call.  After calling this method all
            calls to <c>#updateTexImage</c> will throw an <c>java.lang.IllegalStateException</c> until
            a successful call to <c>#attachToGLContext</c> is made.</para>
          <para>This can be used to access the SurfaceTexture image contents from multiple OpenGL ES
            contexts.  Note, however, that the image contents are only accessible from one OpenGL ES
            context at a time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#detachFromGLContext()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.detachFromGLContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="FrameAvailable">
      <MemberSignature Language="VB.NET" Value="Public Custom Event FrameAvailable As EventHandler(Of SurfaceTexture.FrameAvailableEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Graphics::SurfaceTexture::FrameAvailableEventArgs ^&gt; ^ FrameAvailable;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Graphics.SurfaceTexture.FrameAvailableEventArgs&gt; FrameAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Graphics.SurfaceTexture/FrameAvailableEventArgs&gt; FrameAvailable" />
      <MemberSignature Language="DocId" Value="E:Android.Graphics.SurfaceTexture.FrameAvailable" />
      <MemberSignature Language="F#" Value="member this.FrameAvailable : EventHandler&lt;Android.Graphics.SurfaceTexture.FrameAvailableEventArgs&gt; " Usage="member this.FrameAvailable : System.EventHandler&lt;Android.Graphics.SurfaceTexture.FrameAvailableEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Graphics.SurfaceTexture+FrameAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTransformMatrix">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetTransformMatrix (mtx As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetTransformMatrix(cli::array &lt;float&gt; ^ mtx);" />
      <MemberSignature Language="C#" Value="public virtual void GetTransformMatrix (float[]? mtx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTransformMatrix(float32[] mtx) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.GetTransformMatrix(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member GetTransformMatrix : single[] -&gt; unit&#xA;override this.GetTransformMatrix : single[] -&gt; unit" Usage="surfaceTexture.GetTransformMatrix mtx" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTransformMatrix", "([F)V", "GetGetTransformMatrix_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTransformMatrix", "([F)V", "GetGetTransformMatrix_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mtx" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="mtx">the array into which the 4x4 matrix will be stored.  The array must have exactly
                16 elements.</param>
        <summary>Retrieve the 4x4 texture coordinate transform matrix associated with the texture image set by
            the most recent call to <c>#updateTexImage</c>.</summary>
        <remarks>
          <para>Retrieve the 4x4 texture coordinate transform matrix associated with the texture image set by
            the most recent call to <c>#updateTexImage</c>.</para>
          <para>This transform matrix maps 2D homogeneous texture coordinates of the form (s, t, 0, 1) with s
            and t in the inclusive range [0, 1] to the texture coordinate that should be used to sample
            that location from the texture.  Sampling the texture outside of the range of this transform
            is undefined.</para>
          <para>The matrix is stored in column-major order so that it may be passed directly to OpenGL ES via
            the <c>glLoadMatrixf</c> or <c>glUniformMatrix4fv</c> functions.</para>
          <para>If the underlying buffer has a crop associated with it, the transformation will also include
            a slight scale to cut off a 1-texel border around the edge of the crop. This ensures that
            when the texture is bilinear sampled that no texels outside of the buffer's valid region
            are accessed by the GPU, avoiding any sampling artifacts when scaling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#getTransformMatrix(float[])" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.getTransformMatrix(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsReleased">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReleased As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReleased { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsReleased { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReleased" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.IsReleased" />
      <MemberSignature Language="F#" Value="member this.IsReleased : bool" Usage="Android.Graphics.SurfaceTexture.IsReleased" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isReleased", "()Z", "GetIsReleasedHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isReleased", "()Z", "GetIsReleasedHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the SurfaceTexture was released.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if the SurfaceTexture was released.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#isReleased()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.isReleased()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Graphics.SurfaceTexture.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Release();" />
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="surfaceTexture.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <c>release()</c> frees all the buffers and puts the SurfaceTexture into the
            'abandoned' state.</summary>
        <remarks>
          <para>
            <c>release()</c> frees all the buffers and puts the SurfaceTexture into the
            'abandoned' state. Once put in this state the SurfaceTexture can never
            leave it. When in the 'abandoned' state, all methods of the
            <c>IGraphicBufferProducer</c> interface will fail with the <c>NO_INIT</c>
            error.</para>
          <para>Note that while calling this method causes all the buffers to be freed
            from the perspective of the the SurfaceTexture, if there are additional
            references on the buffers (e.g. if a buffer is referenced by a client or
            by OpenGL ES as a texture) then those buffer will remain allocated.</para>
          <para>Always call this method when you are done with SurfaceTexture. Failing
            to do so may delay resource deallocation for a significant amount of
            time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#release()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseTexImage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseTexImage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseTexImage();" />
      <MemberSignature Language="C#" Value="public virtual void ReleaseTexImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseTexImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.ReleaseTexImage" />
      <MemberSignature Language="F#" Value="abstract member ReleaseTexImage : unit -&gt; unit&#xA;override this.ReleaseTexImage : unit -&gt; unit" Usage="surfaceTexture.ReleaseTexImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releaseTexImage", "()V", "GetReleaseTexImageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releaseTexImage", "()V", "GetReleaseTexImageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the the texture content.</summary>
        <remarks>
          <para>Releases the the texture content. This is needed in single buffered mode to allow the image
            content producer to take ownership of the image buffer.</para>
          <para>For more information see <c>#SurfaceTexture(int, boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#releaseTexImage()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.releaseTexImage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultBufferSize">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDefaultBufferSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDefaultBufferSize(int width, int height);" />
      <MemberSignature Language="C#" Value="public virtual void SetDefaultBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultBufferSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.SetDefaultBufferSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultBufferSize : int * int -&gt; unit&#xA;override this.SetDefaultBufferSize : int * int -&gt; unit" Usage="surfaceTexture.SetDefaultBufferSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultBufferSize", "(II)V", "GetSetDefaultBufferSize_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultBufferSize", "(II)V", "GetSetDefaultBufferSize_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>Set the default size of the image buffers.</summary>
        <remarks>
          <para>Set the default size of the image buffers.  The image producer may override the buffer size,
            in which case the producer-set buffer size will be used, not the default size set by this
            method.  Both video and camera based image producers do override the size.  This method may
            be used to set the image size when producing images with <c>android.graphics.Canvas</c> (via
            <c>android.view.Surface#lockCanvas</c>), or OpenGL ES (via an EGLSurface).</para>
          <para>The new default buffer size will take effect the next time the image producer requests a
            buffer to fill.  For <c>android.graphics.Canvas</c> this will be the next time <c>android.view.Surface#lockCanvas</c> is called.  For OpenGL ES, the EGLSurface should be
            destroyed (via eglDestroySurface), made not-current (via eglMakeCurrent), and then recreated
            (via <c>eglCreateWindowSurface</c>) to ensure that the new default size has taken effect.</para>
          <para>The width and height parameters must be no greater than the minimum of
            <c>GL_MAX_VIEWPORT_DIMS</c> and <c>GL_MAX_TEXTURE_SIZE</c> (see
            <c>javax.microedition.khronos.opengles.GL10#glGetIntegerv glGetIntegerv</c>).
            An error due to invalid dimensions might not be reported until
            updateTexImage() is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#setDefaultBufferSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.setDefaultBufferSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="SetOnFrameAvailableListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnFrameAvailableListener (listener As SurfaceTexture.IOnFrameAvailableListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnFrameAvailableListener(Android::Graphics::SurfaceTexture::IOnFrameAvailableListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnFrameAvailableListener (Android.Graphics.SurfaceTexture.IOnFrameAvailableListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnFrameAvailableListener(class Android.Graphics.SurfaceTexture/IOnFrameAvailableListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.SetOnFrameAvailableListener(Android.Graphics.SurfaceTexture.IOnFrameAvailableListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnFrameAvailableListener : Android.Graphics.SurfaceTexture.IOnFrameAvailableListener -&gt; unit&#xA;override this.SetOnFrameAvailableListener : Android.Graphics.SurfaceTexture.IOnFrameAvailableListener -&gt; unit" Usage="surfaceTexture.SetOnFrameAvailableListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnFrameAvailableListener", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;)V", "GetSetOnFrameAvailableListener_Landroid_graphics_SurfaceTexture_OnFrameAvailableListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnFrameAvailableListener", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;)V", "GetSetOnFrameAvailableListener_Landroid_graphics_SurfaceTexture_OnFrameAvailableListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Graphics.SurfaceTexture+IOnFrameAvailableListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to use, or null to remove the listener.</param>
        <summary>Register a callback to be invoked when a new image frame becomes available to the
            SurfaceTexture.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#setOnFrameAvailableListener(android.graphics.OnFrameAvailableListener)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.setOnFrameAvailableListener(android.graphics.OnFrameAvailableListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnFrameAvailableListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnFrameAvailableListener (listener As SurfaceTexture.IOnFrameAvailableListener, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnFrameAvailableListener(Android::Graphics::SurfaceTexture::IOnFrameAvailableListener ^ listener, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnFrameAvailableListener (Android.Graphics.SurfaceTexture.IOnFrameAvailableListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnFrameAvailableListener(class Android.Graphics.SurfaceTexture/IOnFrameAvailableListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.SetOnFrameAvailableListener(Android.Graphics.SurfaceTexture.IOnFrameAvailableListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetOnFrameAvailableListener : Android.Graphics.SurfaceTexture.IOnFrameAvailableListener * Android.OS.Handler -&gt; unit&#xA;override this.SetOnFrameAvailableListener : Android.Graphics.SurfaceTexture.IOnFrameAvailableListener * Android.OS.Handler -&gt; unit" Usage="surfaceTexture.SetOnFrameAvailableListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnFrameAvailableListener", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;Landroid/os/Handler;)V", "GetSetOnFrameAvailableListener_Landroid_graphics_SurfaceTexture_OnFrameAvailableListener_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnFrameAvailableListener", "(Landroid/graphics/SurfaceTexture$OnFrameAvailableListener;Landroid/os/Handler;)V", "GetSetOnFrameAvailableListener_Landroid_graphics_SurfaceTexture_OnFrameAvailableListener_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Graphics.SurfaceTexture+IOnFrameAvailableListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to use, or null to remove the listener.</param>
        <param name="handler">The handler on which the listener should be invoked, or null
 to use an arbitrary thread.
</param>
        <summary>Register a callback to be invoked when a new image frame becomes available to the
            SurfaceTexture.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#setOnFrameAvailableListener(android.graphics.OnFrameAvailableListener)" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.setOnFrameAvailableListener(android.graphics.OnFrameAvailableListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Graphics.SurfaceTexture.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Graphics.SurfaceTexture.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Timestamp { long get(); };" />
      <MemberSignature Language="C#" Value="public virtual long Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Timestamp" />
      <MemberSignature Language="DocId" Value="P:Android.Graphics.SurfaceTexture.Timestamp" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int64" Usage="Android.Graphics.SurfaceTexture.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTimestamp", "()J", "GetGetTimestampHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTimestamp", "()J", "GetGetTimestampHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the timestamp associated with the texture image set by the most recent call to
            <c>#updateTexImage</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the timestamp associated with the texture image set by the most recent call to
            <c>#updateTexImage</c>.</para>
          <para>This timestamp is in nanoseconds, and is normally monotonically increasing. The timestamp
            should be unaffected by time-of-day adjustments. The specific meaning and zero point of the
            timestamp depends on the source providing images to the SurfaceTexture. Unless otherwise
            specified by the image source, timestamps cannot generally be compared across SurfaceTexture
            instances, or across multiple program invocations. It is mostly useful for determining time
            offsets between subsequent frames.</para>
          <para>For camera sources, timestamps should be strictly monotonic. Timestamps from MediaPlayer
            sources may be reset when the playback position is set. For EGL and Vulkan producers, the
            timestamp is the desired present time set with the <c>EGL_ANDROID_presentation_time</c> or
            <c>VK_GOOGLE_display_timing</c> extensions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#getTimestamp()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.getTimestamp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="UpdateTexImage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateTexImage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateTexImage();" />
      <MemberSignature Language="C#" Value="public virtual void UpdateTexImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateTexImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Graphics.SurfaceTexture.UpdateTexImage" />
      <MemberSignature Language="F#" Value="abstract member UpdateTexImage : unit -&gt; unit&#xA;override this.UpdateTexImage : unit -&gt; unit" Usage="surfaceTexture.UpdateTexImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateTexImage", "()V", "GetUpdateTexImageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateTexImage", "()V", "GetUpdateTexImageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Update the texture image to the most recent frame from the image stream.</summary>
        <remarks>
          <para>Update the texture image to the most recent frame from the image stream.  This may only be
            called while the OpenGL ES context that owns the texture is current on the calling thread.
            It will implicitly bind its texture to the <c>GL_TEXTURE_EXTERNAL_OES</c> texture target.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/graphics/SurfaceTexture#updateTexImage()" title="Reference documentation">Java documentation for <code>android.graphics.SurfaceTexture.updateTexImage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
  </Members>
</Type>
