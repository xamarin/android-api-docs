<Type Name="SensorManager" FullName="Android.Hardware.SensorManager">
  <TypeSignature Language="C#" Value="public abstract class SensorManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SensorManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.SensorManager" />
  <TypeSignature Language="F#" Value="type SensorManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/hardware/SensorManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary tool="true">To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/SensorManager" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SensorManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Hardware.SensorManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Hardware.SensorManager" Usage="new Android.Hardware.SensorManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTriggerSensor">
      <MemberSignature Language="C#" Value="public virtual bool CancelTriggerSensor (Android.Hardware.TriggerEventListener listener, Android.Hardware.Sensor sensor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CancelTriggerSensor(class Android.Hardware.TriggerEventListener listener, class Android.Hardware.Sensor sensor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.CancelTriggerSensor(Android.Hardware.TriggerEventListener,Android.Hardware.Sensor)" />
      <MemberSignature Language="F#" Value="abstract member CancelTriggerSensor : Android.Hardware.TriggerEventListener * Android.Hardware.Sensor -&gt; bool&#xA;override this.CancelTriggerSensor : Android.Hardware.TriggerEventListener * Android.Hardware.Sensor -&gt; bool" Usage="sensorManager.CancelTriggerSensor (listener, sensor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancelTriggerSensor", "(Landroid/hardware/TriggerEventListener;Landroid/hardware/Sensor;)Z", "GetCancelTriggerSensor_Landroid_hardware_TriggerEventListener_Landroid_hardware_Sensor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.TriggerEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
      </Parameters>
      <Docs>
        <param name="listener">The listener on which the
                   <c>TriggerEventListener#onTrigger(TriggerEvent)</c>
                   is delivered.It should be the same as the one used
                   in <c>#requestTriggerSensor(TriggerEventListener, Sensor)</c></param>
        <param name="sensor">The sensor for which the trigger request should be canceled.
                   If null, it cancels receiving trigger for all sensors associated
                   with the listener.</param>
        <summary>Cancels receiving trigger events for a trigger sensor.</summary>
        <returns>true if successfully canceled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#cancelTriggerSensor(android.hardware.TriggerEventListener,%20android.hardware.Sensor)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.cancelTriggerSensor(android.hardware.TriggerEventListener, android.hardware.Sensor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when sensor is a trigger sensor.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectChannel">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.SensorDirectChannel CreateDirectChannel (Android.Hardware.HardwareBuffer mem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.SensorDirectChannel CreateDirectChannel(class Android.Hardware.HardwareBuffer mem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.CreateDirectChannel(Android.Hardware.HardwareBuffer)" />
      <MemberSignature Language="F#" Value="abstract member CreateDirectChannel : Android.Hardware.HardwareBuffer -&gt; Android.Hardware.SensorDirectChannel&#xA;override this.CreateDirectChannel : Android.Hardware.HardwareBuffer -&gt; Android.Hardware.SensorDirectChannel" Usage="sensorManager.CreateDirectChannel mem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createDirectChannel", "(Landroid/hardware/HardwareBuffer;)Landroid/hardware/SensorDirectChannel;", "GetCreateDirectChannel_Landroid_hardware_HardwareBuffer_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.SensorDirectChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mem" Type="Android.Hardware.HardwareBuffer" />
      </Parameters>
      <Docs>
        <param name="mem">A <c>android.hardware.HardwareBuffer</c> shared memory object.</param>
        <summary>Create a sensor direct channel backed by shared memory wrapped in HardwareBuffer object.</summary>
        <returns>A <c>android.hardware.SensorDirectChannel</c> object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#createDirectChannel(android.hardware.HardwareBuffer)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.createDirectChannel(android.hardware.HardwareBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectChannel">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.SensorDirectChannel CreateDirectChannel (Android.OS.MemoryFile mem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.SensorDirectChannel CreateDirectChannel(class Android.OS.MemoryFile mem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.CreateDirectChannel(Android.OS.MemoryFile)" />
      <MemberSignature Language="F#" Value="abstract member CreateDirectChannel : Android.OS.MemoryFile -&gt; Android.Hardware.SensorDirectChannel&#xA;override this.CreateDirectChannel : Android.OS.MemoryFile -&gt; Android.Hardware.SensorDirectChannel" Usage="sensorManager.CreateDirectChannel mem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createDirectChannel", "(Landroid/os/MemoryFile;)Landroid/hardware/SensorDirectChannel;", "GetCreateDirectChannel_Landroid_os_MemoryFile_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.SensorDirectChannel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mem" Type="Android.OS.MemoryFile" />
      </Parameters>
      <Docs>
        <param name="mem">A <c>android.hardware.HardwareBuffer</c> shared memory object.</param>
        <summary>Create a sensor direct channel backed by shared memory wrapped in HardwareBuffer object.</summary>
        <returns>A <c>android.hardware.SensorDirectChannel</c> object.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#createDirectChannel(android.hardware.HardwareBuffer)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.createDirectChannel(android.hardware.HardwareBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public virtual bool Flush (Android.Hardware.ISensorEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Flush(class Android.Hardware.ISensorEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.Flush(Android.Hardware.ISensorEventListener)" />
      <MemberSignature Language="F#" Value="abstract member Flush : Android.Hardware.ISensorEventListener -&gt; bool&#xA;override this.Flush : Android.Hardware.ISensorEventListener -&gt; bool" Usage="sensorManager.Flush listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "(Landroid/hardware/SensorEventListener;)Z", "GetFlush_Landroid_hardware_SensorEventListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object
                   which was previously used in a registerListener call.</param>
        <summary>Flushes the FIFO of all the sensors registered for this listener.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the flush is initiated successfully on all the sensors
                    registered for this listener, false if no sensor is previously registered for this
                    listener or flush on one of the sensors fails.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#flush(android.hardware.SensorEventListener)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.flush(android.hardware.SensorEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">when listener is null.
</exception>
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Hardware.SensorManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Hardware.SensorManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Hardware.SensorManager" Usage="Android.Hardware.SensorManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Hardware.SensorManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAltitude">
      <MemberSignature Language="C#" Value="public static float GetAltitude (float p0, float p);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetAltitude(float32 p0, float32 p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetAltitude(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member GetAltitude : single * single -&gt; single" Usage="Android.Hardware.SensorManager.GetAltitude (p0, p)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAltitude", "(FF)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p0" Type="System.Single" />
        <Parameter Name="p" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="p0">pressure at sea level</param>
        <param name="p">atmospheric pressure</param>
        <summary>Computes the Altitude in meters from the atmospheric pressure and the
            pressure at sea level.</summary>
        <returns>Altitude in meters</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getAltitude(float,%20float)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getAltitude(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetAngleChange">
      <MemberSignature Language="C#" Value="public static void GetAngleChange (float[] angleChange, float[] R, float[] prevR);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetAngleChange(float32[] angleChange, float32[] R, float32[] prevR) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetAngleChange(System.Single[],System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetAngleChange : single[] * single[] * single[] -&gt; unit" Usage="Android.Hardware.SensorManager.GetAngleChange (angleChange, R, prevR)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAngleChange", "([F[F[F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="angleChange" Type="System.Single[]" />
        <Parameter Name="R" Type="System.Single[]" />
        <Parameter Name="prevR" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="angleChange">an an array of floats (z, x, and y) in which the angle change
                   (in radians) is stored</param>
        <param name="R">current rotation matrix</param>
        <param name="prevR">previous rotation matrix</param>
        <summary>Helper function to compute the angle change between two rotation matrices.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getAngleChange(float[],%20float[],%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getAngleChange(float[], float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSensor">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Sensor GetDefaultSensor (Android.Hardware.SensorType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Sensor GetDefaultSensor(valuetype Android.Hardware.SensorType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetDefaultSensor(Android.Hardware.SensorType)" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultSensor : Android.Hardware.SensorType -&gt; Android.Hardware.Sensor&#xA;override this.GetDefaultSensor : Android.Hardware.SensorType -&gt; Android.Hardware.Sensor" Usage="sensorManager.GetDefaultSensor type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultSensor", "(I)Landroid/hardware/Sensor;", "GetGetDefaultSensor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Sensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Hardware.SensorType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">of sensors requested</param>
        <summary>Use this method to get the default sensor for a given type.</summary>
        <returns>the default sensor matching the requested type if one exists and the application
                    has the necessary permissions, or null otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getDefaultSensor(int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getDefaultSensor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetSensorList(Android.Hardware.SensorType)" />
        <altmember cref="T:Android.Hardware.Sensor" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSensor">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Sensor GetDefaultSensor (Android.Hardware.SensorType type, bool wakeUp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Hardware.Sensor GetDefaultSensor(valuetype Android.Hardware.SensorType type, bool wakeUp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetDefaultSensor(Android.Hardware.SensorType,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultSensor : Android.Hardware.SensorType * bool -&gt; Android.Hardware.Sensor&#xA;override this.GetDefaultSensor : Android.Hardware.SensorType * bool -&gt; Android.Hardware.Sensor" Usage="sensorManager.GetDefaultSensor (type, wakeUp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultSensor", "(IZ)Landroid/hardware/Sensor;", "GetGetDefaultSensor_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Sensor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Hardware.SensorType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="wakeUp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">of sensors requested</param>
        <param name="wakeUp">flag to indicate whether the Sensor is a wake-up or non wake-up sensor.</param>
        <summary>Use this method to get the default sensor for a given type.</summary>
        <returns>the default sensor matching the requested type if one exists and the application
                    has the necessary permissions, or null otherwise.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getDefaultSensor(int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getDefaultSensor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Hardware.Sensor.IsWakeUpSensor" />
      </Docs>
    </Member>
    <Member MemberName="GetDynamicSensorList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt; GetDynamicSensorList (Android.Hardware.SensorType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Hardware.Sensor&gt; GetDynamicSensorList(valuetype Android.Hardware.SensorType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetDynamicSensorList(Android.Hardware.SensorType)" />
      <MemberSignature Language="F#" Value="abstract member GetDynamicSensorList : Android.Hardware.SensorType -&gt; System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;&#xA;override this.GetDynamicSensorList : Android.Hardware.SensorType -&gt; System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;" Usage="sensorManager.GetDynamicSensorList type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDynamicSensorList", "(I)Ljava/util/List;", "GetGetDynamicSensorList_IHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Hardware.SensorType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">of sensors requested</param>
        <summary>Use this method to get a list of available dynamic sensors of a certain type.</summary>
        <returns>a list of dynamic sensors matching the requested type.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getDynamicSensorList(int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getDynamicSensorList(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInclination">
      <MemberSignature Language="C#" Value="public static float GetInclination (float[] I);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetInclination(float32[] I) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetInclination(System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetInclination : single[] -&gt; single" Usage="Android.Hardware.SensorManager.GetInclination I" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getInclination", "([F)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="I" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="I">inclination matrix see <c>#getRotationMatrix</c>.</param>
        <summary>Computes the geomagnetic inclination angle in radians from the
            inclination matrix &lt;b&gt;I&lt;/b&gt; returned by <c>#getRotationMatrix</c>.</summary>
        <returns>The geomagnetic inclination angle in radians.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getInclination(float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getInclination(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetRotationMatrix(System.Single[], System.Single[], System.Single[], System.Single[])" />
        <altmember cref="M:Android.Hardware.SensorManager.GetOrientation(System.Single[], System.Single[])" />
        <altmember cref="T:Android.Hardware.GeomagneticField" />
      </Docs>
    </Member>
    <Member MemberName="GetOrientation">
      <MemberSignature Language="C#" Value="public static float[] GetOrientation (float[] R, float[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] GetOrientation(float32[] R, float32[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetOrientation(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetOrientation : single[] * single[] -&gt; single[]" Usage="Android.Hardware.SensorManager.GetOrientation (R, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getOrientation", "([F[F)[F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="R" Type="System.Single[]" />
        <Parameter Name="values" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="R">rotation matrix see <c>#getRotationMatrix</c>.</param>
        <param name="values">an array of 3 floats to hold the result.</param>
        <summary>Computes the device's orientation based on the rotation matrix.</summary>
        <returns>The array values passed as argument.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getOrientation(float[],%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getOrientation(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetRotationMatrix(System.Single[], System.Single[], System.Single[], System.Single[])" />
        <altmember cref="T:Android.Hardware.GeomagneticField" />
      </Docs>
    </Member>
    <Member MemberName="GetQuaternionFromVector">
      <MemberSignature Language="C#" Value="public static void GetQuaternionFromVector (float[] Q, float[] rv);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetQuaternionFromVector(float32[] Q, float32[] rv) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetQuaternionFromVector(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetQuaternionFromVector : single[] * single[] -&gt; unit" Usage="Android.Hardware.SensorManager.GetQuaternionFromVector (Q, rv)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getQuaternionFromVector", "([F[F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Q" Type="System.Single[]" />
        <Parameter Name="rv" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="Q">an array of floats in which to store the computed quaternion</param>
        <param name="rv">the rotation vector to convert</param>
        <summary>Helper function to convert a rotation vector to a normalized quaternion.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getQuaternionFromVector(float[],%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getQuaternionFromVector(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetRotationMatrix">
      <MemberSignature Language="C#" Value="public static bool GetRotationMatrix (float[] R, float[] I, float[] gravity, float[] geomagnetic);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetRotationMatrix(float32[] R, float32[] I, float32[] gravity, float32[] geomagnetic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetRotationMatrix(System.Single[],System.Single[],System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetRotationMatrix : single[] * single[] * single[] * single[] -&gt; bool" Usage="Android.Hardware.SensorManager.GetRotationMatrix (R, I, gravity, geomagnetic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRotationMatrix", "([F[F[F[F)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="R" Type="System.Single[]" />
        <Parameter Name="I" Type="System.Single[]" />
        <Parameter Name="gravity" Type="System.Single[]" />
        <Parameter Name="geomagnetic" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="R">is an array of 9 floats holding the rotation matrix &lt;b&gt;R&lt;/b&gt; when
                   this function returns. R can be null.
                   &lt;p&gt;</param>
        <param name="I">is an array of 9 floats holding the rotation matrix &lt;b&gt;I&lt;/b&gt; when
                   this function returns. I can be null.
                   &lt;p&gt;</param>
        <param name="gravity">is an array of 3 floats containing the gravity vector expressed in
                   the device's coordinate. You can simply use the
                   <c>android.hardware.SensorEvent#values values</c> returned by a
                   <c>android.hardware.SensorEvent SensorEvent</c> of a
                   <c>android.hardware.Sensor Sensor</c> of type
                   <c>android.hardware.Sensor#TYPE_ACCELEROMETER
                   TYPE_ACCELEROMETER</c>.
                   &lt;p&gt;</param>
        <param name="geomagnetic">is an array of 3 floats containing the geomagnetic vector
                   expressed in the device's coordinate. You can simply use the
                   <c>android.hardware.SensorEvent#values values</c> returned by a
                   <c>android.hardware.SensorEvent SensorEvent</c> of a
                   <c>android.hardware.Sensor Sensor</c> of type
                   <c>android.hardware.Sensor#TYPE_MAGNETIC_FIELD
                   TYPE_MAGNETIC_FIELD</c>.</param>
        <summary>Computes the inclination matrix &lt;b&gt;I&lt;/b&gt; as well as the rotation matrix
            &lt;b&gt;R&lt;/b&gt; transforming a vector from the device coordinate system to the
            world's coordinate system which is defined as a direct orthonormal basis,
            where:</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; on success, &lt;code&gt;false&lt;/code&gt; on failure (for
                    instance, if the device is in free fall). Free fall is defined as
                    condition when the magnitude of the gravity is less than 1/10 of
                    the nominal value. On failure the output matrices are not modified.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getRotationMatrix(float[],%20float[],%20float[],%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getRotationMatrix(float[], float[], float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetInclination(System.Single[])" />
        <altmember cref="M:Android.Hardware.SensorManager.GetOrientation(System.Single[], System.Single[])" />
        <altmember cref="M:Android.Hardware.SensorManager.RemapCoordinateSystem(System.Single[], Android.Hardware.Axis, Android.Hardware.Axis, Android.Hardware.Axis)" />
      </Docs>
    </Member>
    <Member MemberName="GetRotationMatrixFromVector">
      <MemberSignature Language="C#" Value="public static void GetRotationMatrixFromVector (float[] R, float[] rotationVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetRotationMatrixFromVector(float32[] R, float32[] rotationVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetRotationMatrixFromVector(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member GetRotationMatrixFromVector : single[] * single[] -&gt; unit" Usage="Android.Hardware.SensorManager.GetRotationMatrixFromVector (R, rotationVector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRotationMatrixFromVector", "([F[F)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="R" Type="System.Single[]" />
        <Parameter Name="rotationVector" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="R">an array of floats in which to store the rotation matrix</param>
        <param name="rotationVector">the rotation vector to convert</param>
        <summary>Helper function to convert a rotation vector to a rotation matrix.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getRotationMatrixFromVector(float[],%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getRotationMatrixFromVector(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetSensorList">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt; GetSensorList (Android.Hardware.SensorType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Hardware.Sensor&gt; GetSensorList(valuetype Android.Hardware.SensorType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.GetSensorList(Android.Hardware.SensorType)" />
      <MemberSignature Language="F#" Value="abstract member GetSensorList : Android.Hardware.SensorType -&gt; System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;&#xA;override this.GetSensorList : Android.Hardware.SensorType -&gt; System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;" Usage="sensorManager.GetSensorList type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSensorList", "(I)Ljava/util/List;", "GetGetSensorList_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Hardware.Sensor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Hardware.SensorType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">of sensors requested</param>
        <summary>Use this method to get the list of available sensors of a certain type.</summary>
        <returns>a list of sensors matching the asked type.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getSensorList(int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getSensorList(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetDefaultSensor(Android.Hardware.SensorType)" />
        <altmember cref="T:Android.Hardware.Sensor" />
      </Docs>
    </Member>
    <Member MemberName="GravityDeathStarI">
      <MemberSignature Language="C#" Value="public const float GravityDeathStarI = 3.530361E-07;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityDeathStarI = (3.530361E-07)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityDeathStarI" />
      <MemberSignature Language="F#" Value="val mutable GravityDeathStarI : single" Usage="Android.Hardware.SensorManager.GravityDeathStarI" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_DEATH_STAR_I")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.530361E-07</MemberValue>
      <Docs>
        <summary>Gravity (estimate) on the first Death Star in Empire units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_DEATH_STAR_I" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_DEATH_STAR_I</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityEarth">
      <MemberSignature Language="C#" Value="public const float GravityEarth = 9.80665;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityEarth = (9.80665)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityEarth" />
      <MemberSignature Language="F#" Value="val mutable GravityEarth : single" Usage="Android.Hardware.SensorManager.GravityEarth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_EARTH")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>9.80665</MemberValue>
      <Docs>
        <summary>Earth's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_EARTH" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_EARTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityJupiter">
      <MemberSignature Language="C#" Value="public const float GravityJupiter = 23.12;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityJupiter = (23.12)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityJupiter" />
      <MemberSignature Language="F#" Value="val mutable GravityJupiter : single" Usage="Android.Hardware.SensorManager.GravityJupiter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_JUPITER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>23.12</MemberValue>
      <Docs>
        <summary>Jupiter's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_JUPITER" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_JUPITER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityMars">
      <MemberSignature Language="C#" Value="public const float GravityMars = 3.71;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityMars = (3.71)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityMars" />
      <MemberSignature Language="F#" Value="val mutable GravityMars : single" Usage="Android.Hardware.SensorManager.GravityMars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_MARS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.71</MemberValue>
      <Docs>
        <summary>Mars' gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_MARS" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_MARS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityMercury">
      <MemberSignature Language="C#" Value="public const float GravityMercury = 3.7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityMercury = (3.7)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityMercury" />
      <MemberSignature Language="F#" Value="val mutable GravityMercury : single" Usage="Android.Hardware.SensorManager.GravityMercury" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_MERCURY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>3.7</MemberValue>
      <Docs>
        <summary>Mercury's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_MERCURY" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_MERCURY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityMoon">
      <MemberSignature Language="C#" Value="public const float GravityMoon = 1.6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityMoon = (1.6)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityMoon" />
      <MemberSignature Language="F#" Value="val mutable GravityMoon : single" Usage="Android.Hardware.SensorManager.GravityMoon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_MOON")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1.6</MemberValue>
      <Docs>
        <summary>The Moon's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_MOON" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_MOON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityNeptune">
      <MemberSignature Language="C#" Value="public const float GravityNeptune = 11;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityNeptune = (11)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityNeptune" />
      <MemberSignature Language="F#" Value="val mutable GravityNeptune : single" Usage="Android.Hardware.SensorManager.GravityNeptune" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_NEPTUNE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>11</MemberValue>
      <Docs>
        <summary>Neptune's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_NEPTUNE" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_NEPTUNE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityPluto">
      <MemberSignature Language="C#" Value="public const float GravityPluto = 0.6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityPluto = (0.6)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityPluto" />
      <MemberSignature Language="F#" Value="val mutable GravityPluto : single" Usage="Android.Hardware.SensorManager.GravityPluto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_PLUTO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>0.6</MemberValue>
      <Docs>
        <summary>Pluto's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_PLUTO" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_PLUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravitySaturn">
      <MemberSignature Language="C#" Value="public const float GravitySaturn = 8.96;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravitySaturn = (8.96)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravitySaturn" />
      <MemberSignature Language="F#" Value="val mutable GravitySaturn : single" Usage="Android.Hardware.SensorManager.GravitySaturn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_SATURN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>8.96</MemberValue>
      <Docs>
        <summary>Saturn's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_SATURN" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_SATURN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravitySun">
      <MemberSignature Language="C#" Value="public const float GravitySun = 275;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravitySun = (275)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravitySun" />
      <MemberSignature Language="F#" Value="val mutable GravitySun : single" Usage="Android.Hardware.SensorManager.GravitySun" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_SUN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>275</MemberValue>
      <Docs>
        <summary>Sun's gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_SUN" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_SUN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityTheIsland">
      <MemberSignature Language="C#" Value="public const float GravityTheIsland = 4.815162;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityTheIsland = (4.815162)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityTheIsland" />
      <MemberSignature Language="F#" Value="val mutable GravityTheIsland : single" Usage="Android.Hardware.SensorManager.GravityTheIsland" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_THE_ISLAND")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>4.815162</MemberValue>
      <Docs>
        <summary>Gravity on the island</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_THE_ISLAND" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_THE_ISLAND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityUranus">
      <MemberSignature Language="C#" Value="public const float GravityUranus = 8.69;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityUranus = (8.69)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityUranus" />
      <MemberSignature Language="F#" Value="val mutable GravityUranus : single" Usage="Android.Hardware.SensorManager.GravityUranus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_URANUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>8.69</MemberValue>
      <Docs>
        <summary>Uranus' gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_URANUS" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_URANUS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GravityVenus">
      <MemberSignature Language="C#" Value="public const float GravityVenus = 8.87;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 GravityVenus = (8.87)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.GravityVenus" />
      <MemberSignature Language="F#" Value="val mutable GravityVenus : single" Usage="Android.Hardware.SensorManager.GravityVenus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("GRAVITY_VENUS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>8.87</MemberValue>
      <Docs>
        <summary>Venus' gravity in SI units (m/s^2)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#GRAVITY_VENUS" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.GRAVITY_VENUS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDynamicSensorDiscoverySupported">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamicSensorDiscoverySupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamicSensorDiscoverySupported" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.SensorManager.IsDynamicSensorDiscoverySupported" />
      <MemberSignature Language="F#" Value="member this.IsDynamicSensorDiscoverySupported : bool" Usage="Android.Hardware.SensorManager.IsDynamicSensorDiscoverySupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDynamicSensorDiscoverySupported", "()Z", "GetIsDynamicSensorDiscoverySupportedHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tell if dynamic sensor discovery feature is supported by system.</summary>
        <value>&lt;code&gt;true&lt;/code&gt; if dynamic sensor discovery is supported, &lt;code&gt;false&lt;/code&gt;
            otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#isDynamicSensorDiscoverySupported()" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.isDynamicSensorDiscoverySupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.SensorManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.SensorManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LightCloudy">
      <MemberSignature Language="C#" Value="public const float LightCloudy = 100;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightCloudy = (100)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightCloudy" />
      <MemberSignature Language="F#" Value="val mutable LightCloudy : single" Usage="Android.Hardware.SensorManager.LightCloudy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_CLOUDY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>100</MemberValue>
      <Docs>
        <summary>luminance under a cloudy sky in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_CLOUDY" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_CLOUDY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightFullmoon">
      <MemberSignature Language="C#" Value="public const float LightFullmoon = 0.25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightFullmoon = (0.25)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightFullmoon" />
      <MemberSignature Language="F#" Value="val mutable LightFullmoon : single" Usage="Android.Hardware.SensorManager.LightFullmoon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_FULLMOON")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>0.25</MemberValue>
      <Docs>
        <summary>luminance at night with full moon in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_FULLMOON" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_FULLMOON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightNoMoon">
      <MemberSignature Language="C#" Value="public const float LightNoMoon = 0.001;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightNoMoon = (0.001)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightNoMoon" />
      <MemberSignature Language="F#" Value="val mutable LightNoMoon : single" Usage="Android.Hardware.SensorManager.LightNoMoon" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_NO_MOON")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>0.001</MemberValue>
      <Docs>
        <summary>luminance at night with no moon in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_NO_MOON" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_NO_MOON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightOvercast">
      <MemberSignature Language="C#" Value="public const float LightOvercast = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightOvercast = (10000)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightOvercast" />
      <MemberSignature Language="F#" Value="val mutable LightOvercast : single" Usage="Android.Hardware.SensorManager.LightOvercast" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_OVERCAST")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>luminance under an overcast sky in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_OVERCAST" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_OVERCAST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightShade">
      <MemberSignature Language="C#" Value="public const float LightShade = 20000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightShade = (20000)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightShade" />
      <MemberSignature Language="F#" Value="val mutable LightShade : single" Usage="Android.Hardware.SensorManager.LightShade" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_SHADE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>20000</MemberValue>
      <Docs>
        <summary>luminance in shade in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_SHADE" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_SHADE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightSunlight">
      <MemberSignature Language="C#" Value="public const float LightSunlight = 110000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightSunlight = (110000)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightSunlight" />
      <MemberSignature Language="F#" Value="val mutable LightSunlight : single" Usage="Android.Hardware.SensorManager.LightSunlight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_SUNLIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>110000</MemberValue>
      <Docs>
        <summary>luminance of sunlight in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_SUNLIGHT" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_SUNLIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightSunlightMax">
      <MemberSignature Language="C#" Value="public const float LightSunlightMax = 120000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightSunlightMax = (120000)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightSunlightMax" />
      <MemberSignature Language="F#" Value="val mutable LightSunlightMax : single" Usage="Android.Hardware.SensorManager.LightSunlightMax" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_SUNLIGHT_MAX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>120000</MemberValue>
      <Docs>
        <summary>Maximum luminance of sunlight in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_SUNLIGHT_MAX" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_SUNLIGHT_MAX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LightSunrise">
      <MemberSignature Language="C#" Value="public const float LightSunrise = 400;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 LightSunrise = (400)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.LightSunrise" />
      <MemberSignature Language="F#" Value="val mutable LightSunrise : single" Usage="Android.Hardware.SensorManager.LightSunrise" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIGHT_SUNRISE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>400</MemberValue>
      <Docs>
        <summary>luminance at sunrise in lux</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#LIGHT_SUNRISE" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.LIGHT_SUNRISE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MagneticFieldEarthMax">
      <MemberSignature Language="C#" Value="public const float MagneticFieldEarthMax = 60;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MagneticFieldEarthMax = (60)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.MagneticFieldEarthMax" />
      <MemberSignature Language="F#" Value="val mutable MagneticFieldEarthMax : single" Usage="Android.Hardware.SensorManager.MagneticFieldEarthMax" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAGNETIC_FIELD_EARTH_MAX")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>60</MemberValue>
      <Docs>
        <summary>Maximum magnetic field on Earth's surface</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#MAGNETIC_FIELD_EARTH_MAX" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MAX</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MagneticFieldEarthMin">
      <MemberSignature Language="C#" Value="public const float MagneticFieldEarthMin = 30;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 MagneticFieldEarthMin = (30)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.MagneticFieldEarthMin" />
      <MemberSignature Language="F#" Value="val mutable MagneticFieldEarthMin : single" Usage="Android.Hardware.SensorManager.MagneticFieldEarthMin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAGNETIC_FIELD_EARTH_MIN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>30</MemberValue>
      <Docs>
        <summary>Minimum magnetic field on Earth's surface</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#MAGNETIC_FIELD_EARTH_MIN" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.MAGNETIC_FIELD_EARTH_MIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PressureStandardAtmosphere">
      <MemberSignature Language="C#" Value="public const float PressureStandardAtmosphere = 1013.25;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 PressureStandardAtmosphere = (1013.25)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.PressureStandardAtmosphere" />
      <MemberSignature Language="F#" Value="val mutable PressureStandardAtmosphere : single" Usage="Android.Hardware.SensorManager.PressureStandardAtmosphere" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PRESSURE_STANDARD_ATMOSPHERE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1013.25</MemberValue>
      <Docs>
        <summary>Standard atmosphere, or average sea-level pressure in hPa (millibar)</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#PRESSURE_STANDARD_ATMOSPHERE" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.PRESSURE_STANDARD_ATMOSPHERE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="RegisterDynamicSensorCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterDynamicSensorCallback (Android.Hardware.SensorManager.DynamicSensorCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDynamicSensorCallback(class Android.Hardware.SensorManager/DynamicSensorCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterDynamicSensorCallback(Android.Hardware.SensorManager.DynamicSensorCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback -&gt; unit&#xA;override this.RegisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback -&gt; unit" Usage="sensorManager.RegisterDynamicSensorCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerDynamicSensorCallback", "(Landroid/hardware/SensorManager$DynamicSensorCallback;)V", "GetRegisterDynamicSensorCallback_Landroid_hardware_SensorManager_DynamicSensorCallback_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.SensorManager+DynamicSensorCallback" />
      </Parameters>
      <Docs>
        <param name="callback">An object that implements the
                   <c>android.hardware.SensorManager.DynamicSensorCallback
                   DynamicSensorCallback</c>
                   interface for receiving callbacks.</param>
        <summary>Add a <c>android.hardware.SensorManager.DynamicSensorCallback
            DynamicSensorCallback</c> to receive dynamic sensor connection callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerDynamicSensorCallback(android.hardware.DynamicSensorCallback)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerDynamicSensorCallback(android.hardware.DynamicSensorCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterDynamicSensorCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterDynamicSensorCallback (Android.Hardware.SensorManager.DynamicSensorCallback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterDynamicSensorCallback(class Android.Hardware.SensorManager/DynamicSensorCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterDynamicSensorCallback(Android.Hardware.SensorManager.DynamicSensorCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback * Android.OS.Handler -&gt; unit" Usage="sensorManager.RegisterDynamicSensorCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerDynamicSensorCallback", "(Landroid/hardware/SensorManager$DynamicSensorCallback;Landroid/os/Handler;)V", "GetRegisterDynamicSensorCallback_Landroid_hardware_SensorManager_DynamicSensorCallback_Landroid_os_Handler_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.SensorManager+DynamicSensorCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">An object that implements the
                   <c>android.hardware.SensorManager.DynamicSensorCallback
                   DynamicSensorCallback</c>
                   interface for receiving callbacks.</param>
        <param name="handler">To be added.</param>
        <summary>Add a <c>android.hardware.SensorManager.DynamicSensorCallback
            DynamicSensorCallback</c> to receive dynamic sensor connection callbacks.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerDynamicSensorCallback(android.hardware.DynamicSensorCallback)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerDynamicSensorCallback(android.hardware.DynamicSensorCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorListener listener, int sensors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorListener listener, int32 sensors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorListener,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorListener * int -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorListener * int -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorListener;I)Z", "GetRegisterListener_Landroid_hardware_SensorListener_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorListener" />
        <Parameter Name="sensors" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensors">a bit masks of the sensors to register to</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorEventListener listener, Android.Hardware.Sensor sensor, Android.Hardware.SensorDelay samplingPeriodUs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorEventListener listener, class Android.Hardware.Sensor sensor, valuetype Android.Hardware.SensorDelay samplingPeriodUs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener,Android.Hardware.Sensor,Android.Hardware.SensorDelay)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensor, samplingPeriodUs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;I)Z", "GetRegisterListener_Landroid_hardware_SensorEventListener_Landroid_hardware_Sensor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
        <Parameter Name="samplingPeriodUs" Type="Android.Hardware.SensorDelay">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensor">The <c>android.hardware.Sensor Sensor</c> to register to.</param>
        <param name="samplingPeriodUs">The rate <c>android.hardware.SensorEvent sensor events</c> are
                       delivered at. This is only a hint to the system. Events may be received faster or
                       slower than the specified rate. Usually events are received faster. The value must
                       be one of <c>#SENSOR_DELAY_NORMAL</c>, <c>#SENSOR_DELAY_UI</c>,
                       <c>#SENSOR_DELAY_GAME</c>, or <c>#SENSOR_DELAY_FASTEST</c> or, the desired delay
                       between events in microseconds. Specifying the delay in microseconds only works
                       from Android 2.3 (API level 9) onwards. For earlier releases, you must use one of
                       the <c>SENSOR_DELAY_*</c> constants.</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when sensor is null or a trigger sensor
</exception>
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener)" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorListener listener, int sensors, Android.Hardware.SensorDelay rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorListener listener, int32 sensors, valuetype Android.Hardware.SensorDelay rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorListener,System.Int32,Android.Hardware.SensorDelay)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorListener * int * Android.Hardware.SensorDelay -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorListener * int * Android.Hardware.SensorDelay -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensors, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorListener;II)Z", "GetRegisterListener_Landroid_hardware_SensorListener_IIHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorListener" />
        <Parameter Name="sensors" Type="System.Int32" />
        <Parameter Name="rate" Type="Android.Hardware.SensorDelay">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensors">a bit masks of the sensors to register to</param>
        <param name="rate">rate of events. This is only a hint to the system. events may be
        received faster or slower than the specified rate. Usually events
        are received faster. The value must be one of
        <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Hardware SensorManager SENSOR_DELAY_NORMAL';scope=Xamarin" title="Android.Hardware.SensorManager.SENSOR_DELAY_NORMAL">Android.Hardware.SensorManager.SENSOR_DELAY_NORMAL</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Hardware SensorManager SENSOR_DELAY_UI';scope=Xamarin" title="Android.Hardware.SensorManager.SENSOR_DELAY_UI">Android.Hardware.SensorManager.SENSOR_DELAY_UI</a></format>,
        <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Hardware SensorManager SENSOR_DELAY_GAME';scope=Xamarin" title="Android.Hardware.SensorManager.SENSOR_DELAY_GAME">Android.Hardware.SensorManager.SENSOR_DELAY_GAME</a></format>, or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Hardware SensorManager SENSOR_DELAY_FASTEST';scope=Xamarin" title="Android.Hardware.SensorManager.SENSOR_DELAY_FASTEST">Android.Hardware.SensorManager.SENSOR_DELAY_FASTEST</a></format>.</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorEventListener listener, Android.Hardware.Sensor sensor, Android.Hardware.SensorDelay samplingPeriodUs, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorEventListener listener, class Android.Hardware.Sensor sensor, valuetype Android.Hardware.SensorDelay samplingPeriodUs, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener,Android.Hardware.Sensor,Android.Hardware.SensorDelay,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * Android.OS.Handler -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * Android.OS.Handler -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensor, samplingPeriodUs, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;ILandroid/os/Handler;)Z", "GetRegisterListener_Landroid_hardware_SensorEventListener_Landroid_hardware_Sensor_ILandroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
        <Parameter Name="samplingPeriodUs" Type="Android.Hardware.SensorDelay">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensor">The <c>android.hardware.Sensor Sensor</c> to register to.</param>
        <param name="samplingPeriodUs">The rate <c>android.hardware.SensorEvent sensor events</c> are
                       delivered at. This is only a hint to the system. Events may be received faster or
                       slower than the specified rate. Usually events are received faster. The value must
                       be one of <c>#SENSOR_DELAY_NORMAL</c>, <c>#SENSOR_DELAY_UI</c>,
                       <c>#SENSOR_DELAY_GAME</c>, or <c>#SENSOR_DELAY_FASTEST</c> or, the desired delay
                       between events in microseconds. Specifying the delay in microseconds only works
                       from Android 2.3 (API level 9) onwards. For earlier releases, you must use one of
                       the <c>SENSOR_DELAY_*</c> constants.</param>
        <param name="handler">The <see cref="T:Android.OS.Handler" /> the <see cref="T:Android.Hardware.SensorEvent" /> will be delivered to.</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when sensor is null or a trigger sensor
</exception>
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener)" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorEventListener listener, Android.Hardware.Sensor sensor, Android.Hardware.SensorDelay samplingPeriodUs, int maxReportLatencyUs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorEventListener listener, class Android.Hardware.Sensor sensor, valuetype Android.Hardware.SensorDelay samplingPeriodUs, int32 maxReportLatencyUs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener,Android.Hardware.Sensor,Android.Hardware.SensorDelay,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * int -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * int -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensor, samplingPeriodUs, maxReportLatencyUs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;II)Z", "GetRegisterListener_Landroid_hardware_SensorEventListener_Landroid_hardware_Sensor_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
        <Parameter Name="samplingPeriodUs" Type="Android.Hardware.SensorDelay">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="maxReportLatencyUs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensor">The <c>android.hardware.Sensor Sensor</c> to register to.</param>
        <param name="samplingPeriodUs">The rate <c>android.hardware.SensorEvent sensor events</c> are
                       delivered at. This is only a hint to the system. Events may be received faster or
                       slower than the specified rate. Usually events are received faster. The value must
                       be one of <c>#SENSOR_DELAY_NORMAL</c>, <c>#SENSOR_DELAY_UI</c>,
                       <c>#SENSOR_DELAY_GAME</c>, or <c>#SENSOR_DELAY_FASTEST</c> or, the desired delay
                       between events in microseconds. Specifying the delay in microseconds only works
                       from Android 2.3 (API level 9) onwards. For earlier releases, you must use one of
                       the <c>SENSOR_DELAY_*</c> constants.</param>
        <param name="maxReportLatencyUs">To be added.</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener)" />
        <altmember cref="M:Android.Hardware.SensorManager.Flush(Android.Hardware.ISensorEventListener)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterListener">
      <MemberSignature Language="C#" Value="public virtual bool RegisterListener (Android.Hardware.ISensorEventListener listener, Android.Hardware.Sensor sensor, Android.Hardware.SensorDelay samplingPeriodUs, int maxReportLatencyUs, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterListener(class Android.Hardware.ISensorEventListener listener, class Android.Hardware.Sensor sensor, valuetype Android.Hardware.SensorDelay samplingPeriodUs, int32 maxReportLatencyUs, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener,Android.Hardware.Sensor,Android.Hardware.SensorDelay,System.Int32,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * int * Android.OS.Handler -&gt; bool&#xA;override this.RegisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor * Android.Hardware.SensorDelay * int * Android.OS.Handler -&gt; bool" Usage="sensorManager.RegisterListener (listener, sensor, samplingPeriodUs, maxReportLatencyUs, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerListener", "(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;IILandroid/os/Handler;)Z", "GetRegisterListener_Landroid_hardware_SensorEventListener_Landroid_hardware_Sensor_IILandroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
        <Parameter Name="samplingPeriodUs" Type="Android.Hardware.SensorDelay">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="maxReportLatencyUs" Type="System.Int32" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">A <c>android.hardware.SensorEventListener SensorEventListener</c> object.</param>
        <param name="sensor">The <c>android.hardware.Sensor Sensor</c> to register to.</param>
        <param name="samplingPeriodUs">The rate <c>android.hardware.SensorEvent sensor events</c> are
                       delivered at. This is only a hint to the system. Events may be received faster or
                       slower than the specified rate. Usually events are received faster. The value must
                       be one of <c>#SENSOR_DELAY_NORMAL</c>, <c>#SENSOR_DELAY_UI</c>,
                       <c>#SENSOR_DELAY_GAME</c>, or <c>#SENSOR_DELAY_FASTEST</c> or, the desired delay
                       between events in microseconds. Specifying the delay in microseconds only works
                       from Android 2.3 (API level 9) onwards. For earlier releases, you must use one of
                       the <c>SENSOR_DELAY_*</c> constants.</param>
        <param name="maxReportLatencyUs">To be added.</param>
        <param name="handler">The <see cref="T:Android.OS.Handler" /> the <see cref="T:Android.Hardware.SensorEvent" /> will be delivered to.</param>
        <summary>Registers a <c>android.hardware.SensorEventListener SensorEventListener</c> for the given
            sensor at the given sampling frequency.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; if the sensor is supported and successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#registerListener(android.hardware.SensorEventListener,%20android.hardware.Sensor,%20int)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
      </Docs>
    </Member>
    <Member MemberName="RemapCoordinateSystem">
      <MemberSignature Language="C#" Value="public static bool RemapCoordinateSystem (float[] inR, Android.Hardware.Axis X, Android.Hardware.Axis Y, float[] outR);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RemapCoordinateSystem(float32[] inR, valuetype Android.Hardware.Axis X, valuetype Android.Hardware.Axis Y, float32[] outR) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RemapCoordinateSystem(System.Single[],Android.Hardware.Axis,Android.Hardware.Axis,System.Single[])" />
      <MemberSignature Language="F#" Value="static member RemapCoordinateSystem : single[] * Android.Hardware.Axis * Android.Hardware.Axis * single[] -&gt; bool" Usage="Android.Hardware.SensorManager.RemapCoordinateSystem (inR, X, Y, outR)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("remapCoordinateSystem", "([FII[F)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inR" Type="System.Single[]" />
        <Parameter Name="X" Type="Android.Hardware.Axis">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="Y" Type="Android.Hardware.Axis">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="outR" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="inR">the rotation matrix to be transformed. Usually it is the matrix
                   returned by <c>#getRotationMatrix</c>.</param>
        <param name="X">defines the axis of the new cooridinate system that coincide with the X axis of the
                   original coordinate system.</param>
        <param name="Y">defines the axis of the new cooridinate system that coincide with the Y axis of the
                   original coordinate system.</param>
        <param name="outR">the transformed rotation matrix. inR and outR should not be the same
                   array.</param>
        <summary>Rotates the supplied rotation matrix so it is expressed in a different
            coordinate system.</summary>
        <returns>&lt;code&gt;true&lt;/code&gt; on success. &lt;code&gt;false&lt;/code&gt; if the input
                    parameters are incorrect, for instance if X and Y define the same
                    axis. Or if inR and outR don't have the same length.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#remapCoordinateSystem(float[],%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.remapCoordinateSystem(float[], int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.GetRotationMatrix(System.Single[], System.Single[], System.Single[], System.Single[])" />
      </Docs>
    </Member>
    <Member MemberName="RequestTriggerSensor">
      <MemberSignature Language="C#" Value="public virtual bool RequestTriggerSensor (Android.Hardware.TriggerEventListener listener, Android.Hardware.Sensor sensor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestTriggerSensor(class Android.Hardware.TriggerEventListener listener, class Android.Hardware.Sensor sensor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.RequestTriggerSensor(Android.Hardware.TriggerEventListener,Android.Hardware.Sensor)" />
      <MemberSignature Language="F#" Value="abstract member RequestTriggerSensor : Android.Hardware.TriggerEventListener * Android.Hardware.Sensor -&gt; bool&#xA;override this.RequestTriggerSensor : Android.Hardware.TriggerEventListener * Android.Hardware.Sensor -&gt; bool" Usage="sensorManager.RequestTriggerSensor (listener, sensor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestTriggerSensor", "(Landroid/hardware/TriggerEventListener;Landroid/hardware/Sensor;)Z", "GetRequestTriggerSensor_Landroid_hardware_TriggerEventListener_Landroid_hardware_Sensor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.TriggerEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
      </Parameters>
      <Docs>
        <param name="listener">The listener on which the
                   <c>TriggerEventListener#onTrigger(TriggerEvent)</c> will be delivered.</param>
        <param name="sensor">The sensor to be enabled.</param>
        <summary>Requests receiving trigger events for a trigger sensor.</summary>
        <returns>true if the sensor was successfully enabled.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#requestTriggerSensor(android.hardware.TriggerEventListener,%20android.hardware.Sensor)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.requestTriggerSensor(android.hardware.TriggerEventListener, android.hardware.Sensor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when sensor is null or not a trigger sensor.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sensors">
      <MemberSignature Language="C#" Value="public virtual int Sensors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Sensors" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.SensorManager.Sensors" />
      <MemberSignature Language="F#" Value="member this.Sensors : int" Usage="Android.Hardware.SensorManager.Sensors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSensors", "()I", "GetGetSensorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>available sensors.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#getSensors()" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.getSensors()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StandardGravity">
      <MemberSignature Language="C#" Value="public const float StandardGravity = 9.80665;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 StandardGravity = (9.80665)" />
      <MemberSignature Language="DocId" Value="F:Android.Hardware.SensorManager.StandardGravity" />
      <MemberSignature Language="F#" Value="val mutable StandardGravity : single" Usage="Android.Hardware.SensorManager.StandardGravity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STANDARD_GRAVITY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>9.80665</MemberValue>
      <Docs>
        <summary>Standard gravity (g) on Earth.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#STANDARD_GRAVITY" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.STANDARD_GRAVITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.SensorManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.SensorManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.SensorManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.SensorManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterDynamicSensorCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterDynamicSensorCallback (Android.Hardware.SensorManager.DynamicSensorCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterDynamicSensorCallback(class Android.Hardware.SensorManager/DynamicSensorCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.UnregisterDynamicSensorCallback(Android.Hardware.SensorManager.DynamicSensorCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback -&gt; unit&#xA;override this.UnregisterDynamicSensorCallback : Android.Hardware.SensorManager.DynamicSensorCallback -&gt; unit" Usage="sensorManager.UnregisterDynamicSensorCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterDynamicSensorCallback", "(Landroid/hardware/SensorManager$DynamicSensorCallback;)V", "GetUnregisterDynamicSensorCallback_Landroid_hardware_SensorManager_DynamicSensorCallback_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Hardware.SensorManager+DynamicSensorCallback" />
      </Parameters>
      <Docs>
        <param name="callback">An object that implements the
                   <c>android.hardware.SensorManager.DynamicSensorCallback
                   DynamicSensorCallback</c>
                   interface for receiving callbacks.</param>
        <summary>Remove a <c>android.hardware.SensorManager.DynamicSensorCallback
            DynamicSensorCallback</c> to stop sending dynamic sensor connection events to that
            callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#unregisterDynamicSensorCallback(android.hardware.DynamicSensorCallback)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.unregisterDynamicSensorCallback(android.hardware.DynamicSensorCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterListener (Android.Hardware.ISensorEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterListener(class Android.Hardware.ISensorEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterListener : Android.Hardware.ISensorEventListener -&gt; unit&#xA;override this.UnregisterListener : Android.Hardware.ISensorEventListener -&gt; unit" Usage="sensorManager.UnregisterListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterListener", "(Landroid/hardware/SensorEventListener;)V", "GetUnregisterListener_Landroid_hardware_SensorEventListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">a SensorListener object</param>
        <summary>Unregisters a listener for all sensors.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#unregisterListener(android.hardware.SensorEventListener)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor)" />
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterListener (Android.Hardware.ISensorListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterListener(class Android.Hardware.ISensorListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorListener)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterListener : Android.Hardware.ISensorListener -&gt; unit&#xA;override this.UnregisterListener : Android.Hardware.ISensorListener -&gt; unit" Usage="sensorManager.UnregisterListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterListener", "(Landroid/hardware/SensorListener;)V", "GetUnregisterListener_Landroid_hardware_SensorListener_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorListener" />
      </Parameters>
      <Docs>
        <param name="listener">a SensorListener object</param>
        <summary>Unregisters a listener for all sensors.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#unregisterListener(android.hardware.SensorEventListener)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterListener (Android.Hardware.ISensorEventListener listener, Android.Hardware.Sensor sensor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterListener(class Android.Hardware.ISensorEventListener listener, class Android.Hardware.Sensor sensor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener,Android.Hardware.Sensor)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor -&gt; unit&#xA;override this.UnregisterListener : Android.Hardware.ISensorEventListener * Android.Hardware.Sensor -&gt; unit" Usage="sensorManager.UnregisterListener (listener, sensor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterListener", "(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;)V", "GetUnregisterListener_Landroid_hardware_SensorEventListener_Landroid_hardware_Sensor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorEventListener" />
        <Parameter Name="sensor" Type="Android.Hardware.Sensor" />
      </Parameters>
      <Docs>
        <param name="listener">a SensorListener object</param>
        <param name="sensor">the sensor to unregister from</param>
        <summary>Unregisters a listener for all sensors.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#unregisterListener(android.hardware.SensorEventListener)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when sensor is a trigger sensor.
</exception>
        <altmember cref="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorEventListener)" />
        <altmember cref="M:Android.Hardware.SensorManager.RegisterListener(Android.Hardware.ISensorEventListener, Android.Hardware.Sensor, Android.Hardware.Sensor)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterListener (Android.Hardware.ISensorListener listener, int sensors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterListener(class Android.Hardware.ISensorListener listener, int32 sensors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.SensorManager.UnregisterListener(Android.Hardware.ISensorListener,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterListener : Android.Hardware.ISensorListener * int -&gt; unit&#xA;override this.UnregisterListener : Android.Hardware.ISensorListener * int -&gt; unit" Usage="sensorManager.UnregisterListener (listener, sensors)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterListener", "(Landroid/hardware/SensorListener;I)V", "GetUnregisterListener_Landroid_hardware_SensorListener_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Hardware.ISensorListener" />
        <Parameter Name="sensors" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="listener">a SensorListener object</param>
        <param name="sensors">a bit masks of the sensors to unregister from
</param>
        <summary>Unregisters a listener for all sensors.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/SensorManager#unregisterListener(android.hardware.SensorEventListener)" title="Reference documentation">Java documentation for <code>android.hardware.SensorManager.unregisterListener(android.hardware.SensorEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
