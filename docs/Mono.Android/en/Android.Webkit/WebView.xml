<Type Name="WebView" FullName="Android.Webkit.WebView">
  <TypeSignature Language="C#" Value="public class WebView : Android.Widget.AbsoluteLayout, Android.Views.ViewGroup.IOnHierarchyChangeListener, Android.Views.ViewTreeObserver.IOnGlobalFocusChangeListener, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebView extends Android.Widget.AbsoluteLayout implements class Android.Runtime.IJavaObject, class Android.Views.ViewGroup/IOnHierarchyChangeListener, class Android.Views.ViewTreeObserver/IOnGlobalFocusChangeListener, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Widget.AbsoluteLayout</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Views.ViewGroup+IOnHierarchyChangeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.ViewTreeObserver+IOnGlobalFocusChangeListener</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/webkit/WebView", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">A View that displays web pages. This class is the basis upon which you
 can roll your own web browser or simply display some online content within your Activity.
 It uses the WebKit rendering engine to display
 web pages and includes methods to navigate forward and backward
 through a history, zoom in and out, perform text searches and more.</para>
      <para tool="javadoc-to-mdoc">Note that, in order for your Activity to access the Internet and load web pages
 in a WebView, you must add the <c>INTERNET</c> permissions to your
 Android Manifest file:</para>
      <example>
        <code lang="xml">&lt;uses-permission android:name="android.permission.INTERNET" /&gt;</code>
      </example>
      <para tool="javadoc-to-mdoc">This must be a child of the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/manifest-element.html"></a></format>
 element.</para>
      <para tool="javadoc-to-mdoc">For more information, read
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/webapps/webview.html">Building Web Apps in WebView</a></format>.</para>
      <format type="text/html">
        <h3>Basic usage</h3>
      </format>
      <para tool="javadoc-to-mdoc">By default, a WebView provides no browser-like widgets, does not
 enable JavaScript and web page errors are ignored. If your goal is only
 to display some HTML as a part of your UI, this is probably fine;
 the user won't need to interact with the web page beyond reading
 it, and the web page won't need to interact with the user. If you
 actually want a full-blown web browser, then you probably want to
 invoke the Browser application with a URL Intent rather than show it
 with a WebView. For example:
 <example><code lang="java">
 Uri uri = Uri.parse("http://www.example.com");
 Intent intent = new Intent(Intent.ACTION_VIEW, uri);
 startActivity(intent);
 </code></example><example><code lang="java">
 WebView webview = new WebView(this);
 setContentView(webview);
 </code></example><example><code lang="java">
 // Simplest usage: note that an exception will NOT be thrown
 // if there is an error loading this page (see below).
 webview.loadUrl("http://slashdot.org/");

 // OR, you can also load from an HTML string:
 String summary = "&lt;html&gt;&lt;body&gt;You scored &lt;b&gt;192&lt;/b&gt; points.&lt;/body&gt;&lt;/html&gt;";
 webview.loadData(summary, "text/html", null);
 // ... although note that there are restrictions on what this HTML can do.
 // See the JavaDocs for loadData() and loadDataWithBaseURL() for more info.
 </code></example><list type="bullet"><item><term>Creating and setting a <c><see cref="T:Android.Webkit.WebChromeClient" /></c> subclass.
       This class is called when something that might impact a
       browser UI happens, for instance, progress updates and
       JavaScript alerts are sent here (see <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/debug-tasks.html#DebuggingWebPages">Debugging Tasks</a></format>).
   </term></item><item><term>Creating and setting a <c><see cref="T:Android.Webkit.WebViewClient" /></c> subclass.
       It will be called when things happen that impact the
       rendering of the content, eg, errors or form submissions. You
       can also intercept URL loading here (via <c><see cref="M:Android.Webkit.WebViewClient.ShouldOverrideUrlLoading(Android.Webkit.WebView,System.String)" /></c>).</term></item><item><term>Modifying the <c><see cref="T:Android.Webkit.WebSettings" /></c>, such as
 enabling JavaScript with <c><see cref="P:Android.Webkit.WebSettings.JavaScriptEnabled" /></c>. </term></item><item><term>Injecting Java objects into the WebView using the
       <c><see cref="M:Android.Webkit.WebView.AddJavascriptInterface(Java.Lang.Object,System.String)" /></c> method. This
       method allows you to inject Java objects into a page's JavaScript
       context, so that they can be accessed by JavaScript in the page.</term></item></list><example><code lang="java">
 // Let's display the progress in the activity title bar, like the
 // browser app does.
 getWindow().requestFeature(Window.FEATURE_PROGRESS);

 webview.getSettings().setJavaScriptEnabled(true);

 final Activity activity = this;
 webview.setWebChromeClient(new WebChromeClient() {
   public void onProgressChanged(WebView view, int progress) {
     // Activities and WebViews measure progress with different scales.
     // The progress meter will automatically disappear when we reach 100%
     activity.setProgress(progress * 1000);
   }
 });
 webview.setWebViewClient(new WebViewClient() {
   public void onReceivedError(WebView view, int errorCode, String description, String failingUrl) {
     Toast.makeText(activity, "Oh no! " + description, Toast.LENGTH_SHORT).show();
   }
 });

 webview.loadUrl("http://developer.android.com/");
 </code></example><format type="text/html"><h3>Zoom</h3></format><format type="text/html"><h3>Cookie and window management</h3></format><format type="text/html"><h3>Building web pages to support different screen densities</h3></format><list type="bullet"><item><term>The <c>window.devicePixelRatio</c> DOM property. The value of this property specifies the
 default scaling factor used for the current device. For example, if the value of <c>window.devicePixelRatio</c> is "1.0", then the device is considered a medium density (mdpi) device
 and default scaling is not applied to the web page; if the value is "1.5", then the device is
 considered a high density device (hdpi) and the page content is scaled 1.5x; if the
 value is "0.75", then the device is considered a low density device (ldpi) and the content is
 scaled 0.75x.</term></item><item><term>The <c>-webkit-device-pixel-ratio</c> CSS media query. Use this to specify the screen
 densities for which this style sheet is to be used. The corresponding value should be either
 "0.75", "1", or "1.5", to indicate that the styles are for devices with low density, medium
 density, or high density screens, respectively. For example:
 <example><code lang="xml">
 &lt;link rel="stylesheet" media="screen and (-webkit-device-pixel-ratio:1.5)" href="hdpi.css" /&gt;</code></example></term></item></list><format type="text/html"><h3>HTML5 Video support</h3></format><format type="text/html"><h3>Full screen support</h3></format><format type="text/html"><h3>Layout size</h3></format></para>
      <para tool="javadoc-to-mdoc">See <c><see cref="T:Android.Content.Intent" /></c> for more information.</para>
      <para tool="javadoc-to-mdoc">To provide a WebView in your own Activity, include a <c>&lt;WebView&gt;</c> in your layout,
 or set the entire Activity window as a WebView during <c><see cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" /></c>:</para>
      <para tool="javadoc-to-mdoc">Then load the desired web page:</para>
      <para tool="javadoc-to-mdoc">A WebView has several customization points where you can add your
 own behavior. These are:</para>
      <para tool="javadoc-to-mdoc">Here's a more complicated example, showing error handling,
    settings, and progress notification:</para>
      <para tool="javadoc-to-mdoc">To enable the built-in zoom, set
 <c><see cref="P:Android.Webkit.WebView.Settings" /></c>.<c><see cref="P:Android.Webkit.WebSettings.BuiltInZoomControls" /></c>
 (introduced in API level <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#CUPCAKE" /></c>).</para>
      <para tool="javadoc-to-mdoc">NOTE: Using zoom if either the height or width is set to
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c> may lead to undefined behavior
 and should be avoided.</para>
      <para tool="javadoc-to-mdoc">For obvious security reasons, your application has its own
 cache, cookie store etc.&amp;mdash;it does not share the Browser
 application's data.
 </para>
      <para tool="javadoc-to-mdoc">By default, requests by the HTML to open new windows are
 ignored. This is true whether they be opened by JavaScript or by
 the target attribute on a link. You can customize your
 <c><see cref="T:Android.Webkit.WebChromeClient" /></c> to provide your own behaviour for opening multiple windows,
 and render them in whatever manner you want.</para>
      <para tool="javadoc-to-mdoc">The standard behavior for an Activity is to be destroyed and
 recreated when the device orientation or any other configuration changes. This will cause
 the WebView to reload the current page. If you don't want that, you
 can set your Activity to handle the <c>orientation</c> and <c>keyboardHidden</c>
 changes, and then just leave the WebView alone. It'll automatically
 re-orient itself as appropriate. Read <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/resources/runtime-changes.html">Handling Runtime Changes</a></format> for
 more information about how to handle configuration changes during runtime.</para>
      <para tool="javadoc-to-mdoc">The screen density of a device is based on the screen resolution. A screen with low density
 has fewer available pixels per inch, where a screen with high density
 has more &amp;mdash; sometimes significantly more &amp;mdash; pixels per inch. The density of a
 screen is important because, other things being equal, a UI element (such as a button) whose
 height and width are defined in terms of screen pixels will appear larger on the lower density
 screen and smaller on the higher density screen.
 For simplicity, Android collapses all actual screen densities into three generalized densities:
 high, medium, and low.</para>
      <para tool="javadoc-to-mdoc">By default, WebView scales a web page so that it is drawn at a size that matches the default
 appearance on a medium density screen. So, it applies 1.5x scaling on a high density screen
 (because its pixels are smaller) and 0.75x scaling on a low density screen (because its pixels
 are bigger).
 Starting with API level <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ECLAIR" /></c>, WebView supports DOM, CSS,
 and meta tag features to help you (as a web developer) target screens with different screen
 densities.</para>
      <para tool="javadoc-to-mdoc">Here's a summary of the features you can use to handle different screen densities:</para>
      <para tool="javadoc-to-mdoc">The <c>hdpi.css</c> stylesheet is only used for devices with a screen pixel ration of 1.5,
 which is the high density pixel ratio.</para>
      <para tool="javadoc-to-mdoc">In order to support inline HTML5 video in your application you need to have hardware
 acceleration turned on.
 </para>
      <para tool="javadoc-to-mdoc">In order to support full screen &amp;mdash; for video or other HTML content &amp;mdash; you need to set a
 <c><see cref="T:Android.Webkit.WebChromeClient" /></c> and implement both
 <c><see cref="M:Android.Webkit.WebChromeClient.OnShowCustomView(Android.Views.View,.ICustomViewCallback)" /></c>
 and <c><see cref="M:Android.Webkit.WebChromeClient.OnHideCustomView" /></c>. If the implementation of either of these two methods is
 missing then the web contents will not be allowed to enter full screen. Optionally you can implement
 <c><see cref="P:Android.Webkit.WebChromeClient.VideoLoadingProgressView" /></c> to customize the View displayed whilst a video
 is loading.
 </para>
      <para tool="javadoc-to-mdoc">
 It is recommended to set the WebView layout height to a fixed value or to
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.MatchParent" tool="ReplaceLinkValue" /></c> instead of using
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c>.
 When using <c><see cref="F:Android.Views.ViewGroup+LayoutParams.MatchParent" tool="ReplaceLinkValue" /></c>
 for the height none of the WebView's parents should use a
 <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c> layout height since that could result in
 incorrect sizing of the views.
 </para>
      <para tool="javadoc-to-mdoc">Setting the WebView's height to <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c>
 enables the following behaviors:
 <list type="bullet"><item><term>The HTML body layout height is set to a fixed value. This means that elements with a height
 relative to the HTML body may not be sized correctly. </term></item><item><term>For applications targetting <c><see cref="F:Android.OS.Build+VERSION_CODES.KitKat" tool="ReplaceLinkValue" /></c> and earlier SDKs the
 HTML viewport meta tag will be ignored in order to preserve backwards compatibility. </term></item></list></para>
      <para tool="javadoc-to-mdoc">
 Using a layout width of <c><see cref="F:Android.Views.ViewGroup+LayoutParams.WrapContent" tool="ReplaceLinkValue" /></c> is not
 supported. If such a width is used the WebView will attempt to use the width of the parent
 instead.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/webkit/WebView.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Constructs a new WebView with a Context object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new WebView with a Context object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#WebView(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Constructs a new WebView with layout parameters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new WebView with layout parameters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#WebView(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>Constructs a new WebView with layout parameters and a default style.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new WebView with layout parameters and a default style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#WebView(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, bool privateBrowsing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, bool privateBrowsing) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;IZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
        <Parameter Name="privateBrowsing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="privateBrowsing">To be added.</param>
        <summary>Constructs a new WebView with layout parameters and a default style.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new WebView with layout parameters and a default style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#WebView(android.content.Context, android.util.AttributeSet, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>Constructs a new WebView with layout parameters and a default style.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new WebView with layout parameters and a default style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#WebView(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJavascriptInterface">
      <MemberSignature Language="C#" Value="public virtual void AddJavascriptInterface (Java.Lang.Object object, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddJavascriptInterface(class Java.Lang.Object object, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addJavascriptInterface", "(Ljava/lang/Object;Ljava/lang/String;)V", "GetAddJavascriptInterface_Ljava_lang_Object_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="interfaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="object">the Java object to inject into this WebView's JavaScript
               context. Null values are ignored.</param>
        <param name="name">the name used to expose the object in JavaScript
</param>
        <summary>Injects the supplied Java object into this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Injects the supplied Java object into this WebView. The object is
 injected into the JavaScript context of the main frame, using the
 supplied name. This allows the Java object's methods to be
 accessed from JavaScript. For applications targeted to API
 level <c><see cref="F:Android.OS.Build+VERSION.JellyBeanMr1" tool="ReplaceLinkValue" /></c>
 and above, only public methods that are annotated with
 <c><see cref="T:Android.Webkit.IJavascriptInterface" /></c> can be accessed from JavaScript.
 For applications targeted to API level <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c> or below,
 all public methods (including the inherited ones) can be accessed, see the
 important security note below for implications.
 </para>
          <para tool="javadoc-to-mdoc"> Note that injected objects will not
 appear in JavaScript until the page is next (re)loaded. For example:
 <example><code lang="java">
 class JsObject {
    @JavascriptInterface
    public String toString() { return "injectedObject"; }
 }
 webView.addJavascriptInterface(new JsObject(), "injectedObject");
 webView.loadData("", "text/html", null);
 webView.loadUrl("javascript:alert(injectedObject.toString())");</code></example></para>
          <para tool="javadoc-to-mdoc">
            <i>IMPORTANT:</i>
            <list type="bullet">
              <item>
                <term> This method can be used to allow JavaScript to control the host
 application. This is a powerful feature, but also presents a security
 risk for apps targeting <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c> or earlier.
 Apps that target a version later than <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c>
 are still vulnerable if the app runs on a device running Android earlier than 4.2.
 The most secure way to use this method is to target <c><see cref="F:Android.OS.Build+VERSION.JellyBeanMr1" tool="ReplaceLinkValue" /></c>
 and to ensure the method is called only when running on Android 4.2 or later.
 With these older versions, JavaScript could use reflection to access an
 injected object's public fields. Use of this method in a WebView
 containing untrusted content could allow an attacker to manipulate the
 host application in unintended ways, executing Java code with the
 permissions of the host application. Use extreme care when using this
 method in a WebView which could contain untrusted content.</term>
              </item>
              <item>
                <term> JavaScript interacts with Java object on a private, background
 thread of this WebView. Care is therefore required to maintain thread
 safety.
 </term>
              </item>
              <item>
                <term> The Java object's fields are not accessible.</term>
              </item>
              <item>
                <term> For applications targeted to API level <c><see cref="F:Android.OS.Build.VERSION_CODES.Lollipop" tool="ReplaceLinkValue" /></c>
 and above, methods of injected Java objects are enumerable from
 JavaScript.</term>
              </item>
            </list>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#addJavascriptInterface(java.lang.Object, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public virtual bool CanGoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGoBack() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canGoBack", "()Z", "GetCanGoBackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether this WebView has a back history item.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether this WebView has a back history item.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#canGoBack()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBackOrForward">
      <MemberSignature Language="C#" Value="public virtual bool CanGoBackOrForward (int steps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGoBackOrForward(int32 steps) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canGoBackOrForward", "(I)Z", "GetCanGoBackOrForward_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="steps" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="steps">the negative or positive number of steps to move the
              history
</param>
        <summary>Gets whether the page can go back or forward the given
 number of steps.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the page can go back or forward the given
 number of steps.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#canGoBackOrForward(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public virtual bool CanGoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanGoForward() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canGoForward", "()Z", "GetCanGoForwardHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether this WebView has a forward history item.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether this WebView has a forward history item.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#canGoForward()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanZoomIn">
      <MemberSignature Language="C#" Value="public virtual bool CanZoomIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanZoomIn() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canZoomIn", "()Z", "GetCanZoomInHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether this WebView can be zoomed in.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether this WebView can be zoomed in.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#canZoomIn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CanZoomOut">
      <MemberSignature Language="C#" Value="public virtual bool CanZoomOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanZoomOut() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canZoomOut", "()Z", "GetCanZoomOutHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether this WebView can be zoomed out.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether this WebView can be zoomed out.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#canZoomOut()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CapturePicture">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Picture CapturePicture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Picture CapturePicture() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("capturePicture", "()Landroid/graphics/Picture;", "GetCapturePictureHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Picture</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a new picture that captures the current contents of this WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a new picture that captures the current contents of this WebView.
 The picture is of the entire document being displayed, and is not
 limited to the area currently displayed by this WebView. Also, the
 picture is a static copy and is unaffected by later changes to the
 content being displayed.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that due to internal changes, for API levels between
 <c><see cref="F:Android.OS.Build+VERSION_CODES.Honeycomb" tool="ReplaceLinkValue" /></c> and
 <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH" /></c> inclusive, the
 picture does not include fixed position elements or scrollable divs.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that from <c><see cref="F:Android.OS.Build+VERSION.JellyBeanMr1" tool="ReplaceLinkValue" /></c> the returned picture
 should only be drawn into bitmap-backed Canvas - using any other type of Canvas will involve
 additional conversion at a cost in memory and performance. Also the
 <c><see cref="M:Android.Graphics.Picture.CreateFromStream(System.IO.Stream)" /></c> and
 <c><see cref="M:Android.Graphics.Picture.WriteToStream(System.IO.Stream)" /></c> methods are not supported on the
 returned object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#capturePicture()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public virtual Android.Net.Http.SslCertificate Certificate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Net.Http.SslCertificate Certificate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCertificate", "()Landroid/net/http/SslCertificate;", "GetGetCertificateHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCertificate", "(Landroid/net/http/SslCertificate;)V", "GetSetCertificate_Landroid_net_http_SslCertificate_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Http.SslCertificate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the SSL certificate for the main top-level page or null if there is
 no certificate (the site is not secure).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getCertificate()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the SSL certificate for the main top-level page or null if there is
 no certificate (the site is not secure).</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setCertificate(android.net.http.SslCertificate)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the SSL certificate for the main top-level page.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="C#" Value="public virtual void ClearCache (bool includeDiskFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCache(bool includeDiskFiles) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearCache", "(Z)V", "GetClearCache_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeDiskFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includeDiskFiles">if false, only the RAM cache is cleared
</param>
        <summary>Clears the resource cache.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the resource cache. Note that the cache is per-application, so
 this will clear the cache for all WebViews used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearCache(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearClientCertPreferences">
      <MemberSignature Language="C#" Value="public static void ClearClientCertPreferences (Java.Lang.IRunnable onCleared);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearClientCertPreferences(class Java.Lang.IRunnable onCleared) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearClientCertPreferences", "(Ljava/lang/Runnable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onCleared" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="onCleared">A runnable to be invoked when client certs are cleared.
                   The embedder can pass null if not interested in the
                   callback. The runnable will be called in UI thread.
</param>
        <summary>Clears the client certificate preferences stored in response
 to proceeding/cancelling client cert requests.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the client certificate preferences stored in response
 to proceeding/cancelling client cert requests. Note that Webview
 automatically clears these preferences when it receives a
 <c><see cref="F:Android.Security.KeyChain.ActionStorageChanged" /></c> intent. The preferences are
 shared by all the webviews that are created by the embedder application.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearClientCertPreferences(java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFormData">
      <MemberSignature Language="C#" Value="public virtual void ClearFormData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFormData() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearFormData", "()V", "GetClearFormDataHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the autocomplete popup from the currently focused form field, if
 present.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes the autocomplete popup from the currently focused form field, if
 present. Note this only affects the display of the autocomplete popup,
 it does not remove any saved form data from this WebView's store. To do
 that, use <c><see cref="M:Android.Webkit.WebViewDatabase.ClearFormData" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearFormData()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearHistory">
      <MemberSignature Language="C#" Value="public virtual void ClearHistory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearHistory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearHistory", "()V", "GetClearHistoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tells this WebView to clear its internal back/forward list.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells this WebView to clear its internal back/forward list.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearHistory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearMatches">
      <MemberSignature Language="C#" Value="public virtual void ClearMatches ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearMatches() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearMatches", "()V", "GetClearMatchesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the highlighting surrounding text matches created by
 <c><see cref="M:Android.Webkit.WebView.FindAllAsync(System.String)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the highlighting surrounding text matches created by
 <c><see cref="M:Android.Webkit.WebView.FindAllAsync(System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearMatches()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearSslPreferences">
      <MemberSignature Language="C#" Value="public virtual void ClearSslPreferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSslPreferences() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearSslPreferences", "()V", "GetClearSslPreferencesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the SSL preferences table stored in response to proceeding with
 SSL certificate errors.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the SSL preferences table stored in response to proceeding with
 SSL certificate errors.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearSslPreferences()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearView">
      <MemberSignature Language="C#" Value="public virtual void ClearView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearView", "()V", "GetClearViewHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Clears this WebView so that onDraw() will draw nothing but white background,
 and onMeasure() will return 0 if MeasureSpec is not MeasureSpec.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears this WebView so that onDraw() will draw nothing but white background,
 and onMeasure() will return 0 if MeasureSpec is not MeasureSpec.EXACTLY.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#clearView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentHeight">
      <MemberSignature Language="C#" Value="public virtual int ContentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentHeight", "()I", "GetGetContentHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the HTML content.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the height of the HTML content.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getContentHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackForwardList">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebBackForwardList CopyBackForwardList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebBackForwardList CopyBackForwardList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyBackForwardList", "()Landroid/webkit/WebBackForwardList;", "GetCopyBackForwardListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebBackForwardList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the WebBackForwardList for this WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the WebBackForwardList for this WebView. This contains the
 back/forward list for use in querying each item in the history stack.
 This is a copy of the private WebBackForwardList so it contains only a
 snapshot of the current state. Multiple calls to this method may return
 different objects. The object returned from this method will not be
 updated to reflect any new state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#copyBackForwardList()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreatePrintDocumentAdapter">
      <MemberSignature Language="C#" Value="public virtual Android.Print.PrintDocumentAdapter CreatePrintDocumentAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Print.PrintDocumentAdapter CreatePrintDocumentAdapter() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createPrintDocumentAdapter", "()Landroid/print/PrintDocumentAdapter;", "GetCreatePrintDocumentAdapterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Print.PrintDocumentAdapter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#createPrintDocumentAdapter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePrintDocumentAdapter">
      <MemberSignature Language="C#" Value="public virtual Android.Print.PrintDocumentAdapter CreatePrintDocumentAdapter (string documentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Print.PrintDocumentAdapter CreatePrintDocumentAdapter(string documentName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createPrintDocumentAdapter", "(Ljava/lang/String;)Landroid/print/PrintDocumentAdapter;", "GetCreatePrintDocumentAdapter_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Print.PrintDocumentAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentName">The user-facing name of the printed document. See
                      <c><see cref="T:Android.Print.PrintDocumentInfo" /></c></param>
        <summary>Creates a PrintDocumentAdapter that provides the content of this Webview for printing.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a PrintDocumentAdapter that provides the content of this Webview for printing.

 The adapter works by converting the Webview contents to a PDF stream. The Webview cannot
 be drawn during the conversion process - any such draws are undefined. It is recommended
 to use a dedicated off screen Webview for the printing. If necessary, an application may
 temporarily hide a visible WebView by using a custom PrintDocumentAdapter instance
 wrapped around the object returned and observing the onStart and onFinish methods. See
 <c><see cref="T:Android.Print.PrintDocumentAdapter" /></c> for more information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#createPrintDocumentAdapter(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugDump">
      <MemberSignature Language="C#" Value="public virtual void DebugDump ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DebugDump() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("debugDump", "()V", "GetDebugDumpHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public virtual void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Destroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Destroys the internal state of this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Destroys the internal state of this WebView. This method should be called
 after this WebView has been removed from the view system. No other
 methods may be called on this WebView after destroy.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#destroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DisablePlatformNotifications">
      <MemberSignature Language="C#" Value="public static void DisablePlatformNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DisablePlatformNotifications() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disablePlatformNotifications", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentHasImages">
      <MemberSignature Language="C#" Value="public virtual void DocumentHasImages (Android.OS.Message response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DocumentHasImages(class Android.OS.Message response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("documentHasImages", "(Landroid/os/Message;)V", "GetDocumentHasImages_Landroid_os_Message_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="response">the message that will be dispatched with the result
</param>
        <summary>Queries the document to see if it contains any image references.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Queries the document to see if it contains any image references. The
 message object will be dispatched with arg1 being set to 1 if images
 were found and 0 if the document does not reference any images.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#documentHasImages(android.os.Message)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Download">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Webkit.DownloadEventArgs&gt; Download;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Webkit.DownloadEventArgs&gt; Download" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Webkit.DownloadEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmulateShiftHeld">
      <MemberSignature Language="C#" Value="public virtual void EmulateShiftHeld ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EmulateShiftHeld() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("emulateShiftHeld", "()V", "GetEmulateShiftHeldHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePlatformNotifications">
      <MemberSignature Language="C#" Value="public static void EnablePlatformNotifications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnablePlatformNotifications() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enablePlatformNotifications", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSlowWholeDocumentDraw">
      <MemberSignature Language="C#" Value="public static void EnableSlowWholeDocumentDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableSlowWholeDocumentDraw() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableSlowWholeDocumentDraw", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For apps targeting the L release, WebView has a new default behavior that reduces
 memory footprint and increases performance by intelligently choosing
 the portion of the HTML document that needs to be drawn.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">For apps targeting the L release, WebView has a new default behavior that reduces
 memory footprint and increases performance by intelligently choosing
 the portion of the HTML document that needs to be drawn. These
 optimizations are transparent to the developers. However, under certain
 circumstances, an App developer may want to disable them:
 <list type="number"><item><term>When an app uses <c><see cref="!:Android.Webkit.WebView.onDraw(android.graphics.Canvas)" /></c> to do own drawing and accesses portions
       of the page that is way outside the visible portion of the page.</term></item><item><term>When an app uses <c><see cref="M:Android.Webkit.WebView.CapturePicture" /></c> to capture a very large HTML document.
       Note that capturePicture is a deprecated API.</term></item></list>
 Enabling drawing the entire HTML document has a significant performance
 cost. This method should be called before any WebViews are created.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#enableSlowWholeDocumentDraw()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateJavascript">
      <MemberSignature Language="C#" Value="public virtual void EvaluateJavascript (string script, Android.Webkit.IValueCallback resultCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EvaluateJavascript(string script, class Android.Webkit.IValueCallback resultCallback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("evaluateJavascript", "(Ljava/lang/String;Landroid/webkit/ValueCallback;)V", "GetEvaluateJavascript_Ljava_lang_String_Landroid_webkit_ValueCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="resultCallback" Type="Android.Webkit.IValueCallback" />
      </Parameters>
      <Docs>
        <param name="script">To be added.</param>
        <param name="resultCallback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Favicon">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap Favicon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Favicon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFavicon", "()Landroid/graphics/Bitmap;", "GetGetFaviconHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the favicon for the current page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the favicon for the current page. This is the favicon of the current
 page until WebViewClient.onReceivedIcon is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getFavicon()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Webkit.WebView.FindEventArgs&gt; Find;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Webkit.WebView/FindEventArgs&gt; Find" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Webkit.WebView+FindEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAddress">
      <MemberSignature Language="C#" Value="public static string FindAddress (string addr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FindAddress(string addr) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findAddress", "(Ljava/lang/String;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="addr">the string to search for addresses</param>
        <summary>Gets the first substring consisting of the address of a physical
 location.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the first substring consisting of the address of a physical
 location. Currently, only addresses in the United States are detected,
 and consist of:
 <list type="bullet"><item><term>a house number</term></item><item><term>a street name</term></item><item><term>a street type (Road, Circle, etc), either spelled out or
       abbreviated</term></item><item><term>a city name</term></item><item><term>a state or territory, either spelled out or two-letter abbr</term></item><item><term>an optional 5 digit or 9 digit zip code</term></item></list>
 All names must be correctly capitalized, and the zip code, if present,
 must be valid for the state. The street type must be a standard USPS
 spelling or abbreviation. The state or territory must also be spelled
 or abbreviated using USPS standards. The house number may not exceed
 five digits.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#findAddress(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual int FindAll (string find);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 FindAll(string find) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findAll", "(Ljava/lang/String;)I", "GetFindAll_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="find" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="find">the string to find</param>
        <summary>Finds all instances of find on the page and highlights them.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds all instances of find on the page and highlights them.
 Notifies any registered <c><see cref="!:NoType:android/webkit/WebView$FindListener;Href=../../../reference/android/webkit/WebView.FindListener.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#findAll(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Webkit.WebView.SetFindListener(.IFindListener)" />
      </Docs>
    </Member>
    <Member MemberName="FindAllAsync">
      <MemberSignature Language="C#" Value="public virtual void FindAllAsync (string find);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindAllAsync(string find) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findAllAsync", "(Ljava/lang/String;)V", "GetFindAllAsync_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="find" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="find">the string to find.</param>
        <summary>Finds all instances of find on the page and highlights them,
 asynchronously.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds all instances of find on the page and highlights them,
 asynchronously. Notifies any registered <c><see cref="!:NoType:android/webkit/WebView$FindListener;Href=../../../reference/android/webkit/WebView.FindListener.html" /></c>.
 Successive calls to this will cancel any pending searches.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#findAllAsync(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Webkit.WebView.SetFindListener(.IFindListener)" />
      </Docs>
    </Member>
    <Member MemberName="FindNext">
      <MemberSignature Language="C#" Value="public virtual void FindNext (bool forward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindNext(bool forward) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findNext", "(Z)V", "GetFindNext_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="forward">the direction to search</param>
        <summary>Highlights and scrolls to the next match found by
 <c><see cref="M:Android.Webkit.WebView.FindAllAsync(System.String)" /></c>, wrapping around page boundaries as necessary.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Highlights and scrolls to the next match found by
 <c><see cref="M:Android.Webkit.WebView.FindAllAsync(System.String)" /></c>, wrapping around page boundaries as necessary.
 Notifies any registered <c><see cref="!:NoType:android/webkit/WebView$FindListener;Href=../../../reference/android/webkit/WebView.FindListener.html" /></c>. If <c><see cref="M:Android.Webkit.WebView.FindAllAsync(System.String)" /></c>
 has not been called yet, or if <c><see cref="M:Android.Webkit.WebView.ClearMatches" /></c> has been called since the
 last find operation, this function does nothing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#findNext(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.Webkit.WebView.SetFindListener(.IFindListener)" />
      </Docs>
    </Member>
    <Member MemberName="FlingScroll">
      <MemberSignature Language="C#" Value="public virtual void FlingScroll (int vx, int vy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlingScroll(int32 vx, int32 vy) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flingScroll", "(II)V", "GetFlingScroll_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vx" Type="System.Int32" />
        <Parameter Name="vy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="vx">To be added.</param>
        <param name="vy">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#flingScroll(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FreeMemory">
      <MemberSignature Language="C#" Value="public virtual void FreeMemory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FreeMemory() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("freeMemory", "()V", "GetFreeMemoryHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Informs this WebView that memory is low so that it can free any available
 memory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Informs this WebView that memory is low so that it can free any available
 memory.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#freeMemory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="GetHitTestResult">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebView.HitTestResult GetHitTestResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebView/HitTestResult GetHitTestResult() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHitTestResult", "()Landroid/webkit/WebView$HitTestResult;", "GetGetHitTestResultHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebView+HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets a HitTestResult based on the current cursor node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a HitTestResult based on the current cursor node. If a HTML::a
 tag is found and the anchor has a non-JavaScript URL, the HitTestResult
 type is set to SRC_ANCHOR_TYPE and the URL is set in the "extra" field.
 If the anchor does not have a URL or if it is a JavaScript URL, the type
 will be UNKNOWN_TYPE and the URL has to be retrieved through
 <c><see cref="M:Android.Webkit.WebView.RequestFocusNodeHref(Android.OS.Message)" /></c> asynchronously. If a HTML::img tag is
 found, the HitTestResult type is set to IMAGE_TYPE and the URL is set in
 the "extra" field. A type of
 SRC_IMAGE_ANCHOR_TYPE indicates an anchor with a URL that has an image as
 a child node. If a phone number is found, the HitTestResult type is set
 to PHONE_TYPE and the phone number is set in the "extra" field of
 HitTestResult. If a map address is found, the HitTestResult type is set
 to GEO_TYPE and the address is set in the "extra" field of HitTestResult.
 If an email address is found, the HitTestResult type is set to EMAIL_TYPE
 and the email is set in the "extra" field of HitTestResult. Otherwise,
 HitTestResult type is set to UNKNOWN_TYPE.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getHitTestResult()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpAuthUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual string[] GetHttpAuthUsernamePassword (string host, string realm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetHttpAuthUsernamePassword(string host, string realm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getHttpAuthUsernamePassword", "(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;", "GetGetHttpAuthUsernamePassword_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="realm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the host to which the credentials apply</param>
        <param name="realm">the realm to which the credentials apply</param>
        <summary>Retrieves HTTP authentication credentials for a given host and realm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves HTTP authentication credentials for a given host and realm.
 This method is intended to be used with
 <c><see cref="M:Android.Webkit.WebViewClient.OnReceivedHttpAuthRequest(Android.Webkit.WebView,Android.Webkit.HttpAuthHandler,Android.Webkit.HttpAuthHandler,Android.Webkit.HttpAuthHandler)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getHttpAuthUsernamePassword(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.SetHttpAuthUsernamePassword(System.String, System.String, System.String, System.String)" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasHttpAuthUsernamePassword" />
        <altmember cref="M:Android.Webkit.WebViewDatabase.ClearHttpAuthUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public virtual void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBack() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("goBack", "()V", "GetGoBackHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Goes back in the history of this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Goes back in the history of this WebView.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#goBack()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GoBackOrForward">
      <MemberSignature Language="C#" Value="public virtual void GoBackOrForward (int steps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoBackOrForward(int32 steps) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("goBackOrForward", "(I)V", "GetGoBackOrForward_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="steps" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="steps">the number of steps to take back or forward in the back
              forward list
</param>
        <summary>Goes to the history item that is the number of steps away from
 the current item.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Goes to the history item that is the number of steps away from
 the current item. Steps is negative if backward and positive
 if forward.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#goBackOrForward(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public virtual void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoForward() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("goForward", "()V", "GetGoForwardHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Goes forward in the history of this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Goes forward in the history of this WebView.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#goForward()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvokeZoomPicker">
      <MemberSignature Language="C#" Value="public virtual void InvokeZoomPicker ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvokeZoomPicker() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invokeZoomPicker", "()V", "GetInvokeZoomPickerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invokes the graphical zoom picker widget for this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Invokes the graphical zoom picker widget for this WebView. This will
 result in the zoom widget appearing on the screen to control the zoom
 level of this WebView.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#invokeZoomPicker()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsPrivateBrowsingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsPrivateBrowsingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivateBrowsingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPrivateBrowsingEnabled", "()Z", "GetIsPrivateBrowsingEnabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether private browsing is enabled in this WebView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether private browsing is enabled in this WebView.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#isPrivateBrowsingEnabled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="LoadData">
      <MemberSignature Language="C#" Value="public virtual void LoadData (string data, string mimeType, string encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadData(string data, string mimeType, string encoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadData", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLoadData_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">a String of data in the given encoding</param>
        <param name="mimeType">the MIME type of the data, e.g. 'text/html'</param>
        <param name="encoding">the encoding of the data
</param>
        <summary>Loads the given data into this WebView using a 'data' scheme URL.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads the given data into this WebView using a 'data' scheme URL.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that JavaScript's same origin policy means that script running in a
 page loaded using this method will be unable to access content loaded
 using any scheme other than 'data', including 'http(s)'. To avoid this
 restriction, use <c><see cref="M:Android.Webkit.WebView.LoadDataWithBaseURL(System.String,System.String,System.String,System.String,System.String)" /></c> with an appropriate base URL.
 </para>
          <para tool="javadoc-to-mdoc">
 The encoding parameter specifies whether the data is base64 or URL
 encoded. If the data is base64 encoded, the value of the encoding
 parameter must be 'base64'. For all other values of the parameter,
 including null, it is assumed that the data uses ASCII encoding for
 octets inside the range of safe URL characters and use the standard %xx
 hex encoding of URLs for octets outside that range. For example, '#',
 '%', '\', '?' should be replaced by %23, %25, %27, %3f respectively.
 </para>
          <para tool="javadoc-to-mdoc">
 The 'data' scheme URL formed by this method uses the default US-ASCII
 charset. If you need need to set a different charset, you should form a
 'data' scheme URL which explicitly specifies a charset parameter in the
 mediatype portion of the URL and call <c><see cref="M:Android.Webkit.WebView.LoadUrl(System.String)" /></c> instead.
 Note that the charset obtained from the mediatype portion of a data URL
 always overrides that specified in the HTML or XML document itself.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#loadData(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadDataWithBaseURL">
      <MemberSignature Language="C#" Value="public virtual void LoadDataWithBaseURL (string baseUrl, string data, string mimeType, string encoding, string historyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadDataWithBaseURL(string baseUrl, string data, string mimeType, string encoding, string historyUrl) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadDataWithBaseURL", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetLoadDataWithBaseURL_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseUrl" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="encoding" Type="System.String" />
        <Parameter Name="failUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseUrl">the URL to use as the page's base URL. If null defaults to
                'about:blank'.</param>
        <param name="data">a String of data in the given encoding</param>
        <param name="mimeType">the MIMEType of the data, e.g. 'text/html'. If null,
                 defaults to 'text/html'.</param>
        <param name="encoding">the encoding of the data</param>
        <param name="historyUrl">the URL to use as the history entry. If null defaults
                   to 'about:blank'. If non-null, this must be a valid URL.
</param>
        <summary>Loads the given data into this WebView, using baseUrl as the base URL for
 the content.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads the given data into this WebView, using baseUrl as the base URL for
 the content. The base URL is used both to resolve relative URLs and when
 applying JavaScript's same origin policy. The historyUrl is used for the
 history entry.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that content specified in this way can access local device files
 (via 'file' scheme URLs) only if baseUrl specifies a scheme other than
 'http', 'https', 'ftp', 'ftps', 'about' or 'javascript'.
 </para>
          <para tool="javadoc-to-mdoc">
 If the base URL uses the data scheme, this method is equivalent to
 calling <c><see cref="M:Android.Webkit.WebView.LoadData(System.String,System.String,System.String)" /></c> and the
 historyUrl is ignored, and the data will be treated as part of a data: URL.
 If the base URL uses any other scheme, then the data will be loaded into
 the WebView as a plain string (i.e. not part of a data URL) and any URL-encoded
 entities in the string will not be decoded.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#loadDataWithBaseURL(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadUrl">
      <MemberSignature Language="C#" Value="public virtual void LoadUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadUrl(string url) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadUrl", "(Ljava/lang/String;)V", "GetLoadUrl_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">the URL of the resource to load
</param>
        <summary>Loads the given URL.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads the given URL.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#loadUrl(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadUrl">
      <MemberSignature Language="C#" Value="public virtual void LoadUrl (string url, System.Collections.Generic.IDictionary&lt;string,string&gt; additionalHttpHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadUrl(string url, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; additionalHttpHeaders) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadUrl", "(Ljava/lang/String;Ljava/util/Map;)V", "GetLoadUrl_Ljava_lang_String_Ljava_util_Map_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="extraHeaders" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="url">To be added.</param>
        <param name="additionalHttpHeaders">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildViewAdded">
      <MemberSignature Language="C#" Value="public virtual void OnChildViewAdded (Android.Views.View parent, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildViewAdded(class Android.Views.View parent, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onChildViewAdded", "(Landroid/view/View;Landroid/view/View;)V", "GetOnChildViewAdded_Landroid_view_View_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="parent">the view in which a child was added</param>
        <param name="child">the new child view added in the hierarchy
</param>
        <summary>Called when a new child is added to a parent view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a new child is added to a parent view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#onChildViewAdded(android.view.View, android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnChildViewRemoved">
      <MemberSignature Language="C#" Value="public virtual void OnChildViewRemoved (Android.Views.View p, Android.Views.View child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildViewRemoved(class Android.Views.View p, class Android.Views.View child) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onChildViewRemoved", "(Landroid/view/View;Landroid/view/View;)V", "GetOnChildViewRemoved_Landroid_view_View_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="p" Type="Android.Views.View" />
        <Parameter Name="child" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="p">the view from which the child was removed</param>
        <param name="child">the child removed from the hierarchy
</param>
        <summary>Called when a child is removed from a parent view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when a child is removed from a parent view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#onChildViewRemoved(android.view.View, android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnGlobalFocusChanged">
      <MemberSignature Language="C#" Value="public virtual void OnGlobalFocusChanged (Android.Views.View oldFocus, Android.Views.View newFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnGlobalFocusChanged(class Android.Views.View oldFocus, class Android.Views.View newFocus) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onGlobalFocusChanged", "(Landroid/view/View;Landroid/view/View;)V", "GetOnGlobalFocusChanged_Landroid_view_View_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldFocus" Type="Android.Views.View" />
        <Parameter Name="newFocus" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="oldFocus">The previously focused view, if any.</param>
        <param name="newFocus">The newly focused View, if any.
</param>
        <summary>Callback method to be invoked when the focus changes in the view tree.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Callback method to be invoked when the focus changes in the view tree. When
 the view tree transitions from touch mode to non-touch mode, oldFocus is null.
 When the view tree transitions from non-touch mode to touch mode, newFocus is
 null. When focus changes in non-touch mode (without transition from or to
 touch mode) either oldFocus or newFocus can be null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#onGlobalFocusChanged(android.view.View, android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPause">
      <MemberSignature Language="C#" Value="public virtual void OnPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPause() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onPause", "()V", "GetOnPauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses any extra processing associated with this WebView and its
 associated DOM, plugins, JavaScript etc.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pauses any extra processing associated with this WebView and its
 associated DOM, plugins, JavaScript etc. For example, if this WebView is
 taken offscreen, this could be called to reduce unnecessary CPU or
 network traffic. When this WebView is again "active", call onResume().
 Note that this differs from pauseTimers(), which affects all WebViews.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#onPause()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnResume">
      <MemberSignature Language="C#" Value="public virtual void OnResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnResume() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onResume", "()V", "GetOnResumeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes a WebView after a previous call to onPause().</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resumes a WebView after a previous call to onPause().
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#onResume()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OriginalUrl">
      <MemberSignature Language="C#" Value="public virtual string OriginalUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OriginalUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getOriginalUrl", "()Ljava/lang/String;", "GetGetOriginalUrlHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the original URL for the current page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the original URL for the current page. This is not always the same
 as the URL passed to WebViewClient.onPageStarted because although the
 load for that URL has begun, the current page may not have changed.
 Also, there may have been redirects resulting in a different URL to that
 originally requested.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getOriginalUrl()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OverlayHorizontalScrollbar">
      <MemberSignature Language="C#" Value="public virtual bool OverlayHorizontalScrollbar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OverlayHorizontalScrollbar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("overlayHorizontalScrollbar", "()Z", "GetOverlayHorizontalScrollbarHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether horizontal scrollbar has overlay style.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether horizontal scrollbar has overlay style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#overlayHorizontalScrollbar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OverlayVerticalScrollbar">
      <MemberSignature Language="C#" Value="public virtual bool OverlayVerticalScrollbar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OverlayVerticalScrollbar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("overlayVerticalScrollbar", "()Z", "GetOverlayVerticalScrollbarHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether vertical scrollbar has overlay style.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether vertical scrollbar has overlay style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#overlayVerticalScrollbar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public virtual bool PageDown (bool bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PageDown(bool bottom) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pageDown", "(Z)Z", "GetPageDown_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bottom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="bottom">true to jump to bottom of page</param>
        <summary>Scrolls the contents of this WebView down by half the page size.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Scrolls the contents of this WebView down by half the page size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#pageDown(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public virtual bool PageUp (bool top);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PageUp(bool top) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pageUp", "(Z)Z", "GetPageUp_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="top" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="top">true to jump to the top of the page</param>
        <summary>Scrolls the contents of this WebView up by half the view size.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Scrolls the contents of this WebView up by half the view size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#pageUp(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PauseTimers">
      <MemberSignature Language="C#" Value="public virtual void PauseTimers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PauseTimers() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pauseTimers", "()V", "GetPauseTimersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses all layout, parsing, and JavaScript timers for all WebViews.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Pauses all layout, parsing, and JavaScript timers for all WebViews. This
 is a global requests, not restricted to just this WebView. This can be
 useful if the application has been paused.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#pauseTimers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Picture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Webkit.WebView.PictureEventArgs&gt; Picture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Webkit.WebView/PictureEventArgs&gt; Picture" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Webkit.WebView+PictureEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluginList">
      <MemberSignature Language="C#" Value="public static Android.Webkit.PluginList PluginList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Webkit.PluginList PluginList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPluginList", "()Landroid/webkit/PluginList;", "GetGetPluginListHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.PluginList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostUrl">
      <MemberSignature Language="C#" Value="public virtual void PostUrl (string url, byte[] postData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostUrl(string url, unsigned int8[] postData) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("postUrl", "(Ljava/lang/String;[B)V", "GetPostUrl_Ljava_lang_String_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="postData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="url">the URL of the resource to load</param>
        <param name="postData">the data will be passed to "POST" request, which must be
     be "application/x-www-form-urlencoded" encoded.
</param>
        <summary>Loads the URL with postData using "POST" method into this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads the URL with postData using "POST" method into this WebView. If url
 is not a network URL, it will be loaded with <c><see cref="M:Android.Webkit.WebView.LoadUrl(System.String)" /></c>
 instead, ignoring the postData param.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#postUrl(java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Progress">
      <MemberSignature Language="C#" Value="public virtual int Progress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Progress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getProgress", "()I", "GetGetProgressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the progress for the current page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the progress for the current page.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getProgress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RefreshPlugins">
      <MemberSignature Language="C#" Value="public virtual void RefreshPlugins (bool reloadOpenPages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshPlugins(bool reloadOpenPages) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("refreshPlugins", "(Z)V", "GetRefreshPlugins_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reloadOpenPages" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reloadOpenPages">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reload">
      <MemberSignature Language="C#" Value="public virtual void Reload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reload() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reload", "()V", "GetReloadHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reloads the current URL.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reloads the current URL.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#reload()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveJavascriptInterface">
      <MemberSignature Language="C#" Value="public virtual void RemoveJavascriptInterface (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveJavascriptInterface(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeJavascriptInterface", "(Ljava/lang/String;)V", "GetRemoveJavascriptInterface_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interfaceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the name used to expose the object in JavaScript
</param>
        <summary>Removes a previously injected Java object from this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Removes a previously injected Java object from this WebView. Note that
 the removal will not be reflected in JavaScript until the page is next
 (re)loaded. See <c><see cref="M:Android.Webkit.WebView.AddJavascriptInterface(Java.Lang.Object,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#removeJavascriptInterface(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocusNodeHref">
      <MemberSignature Language="C#" Value="public virtual void RequestFocusNodeHref (Android.OS.Message hrefMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestFocusNodeHref(class Android.OS.Message hrefMsg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFocusNodeHref", "(Landroid/os/Message;)V", "GetRequestFocusNodeHref_Landroid_os_Message_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hrefMsg" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="hrefMsg">the message to be dispatched with the result of the
                request. The message data contains three keys. "url"
                returns the anchor's href attribute. "title" returns the
                anchor's text. "src" returns the image's src attribute.
</param>
        <summary>Requests the anchor or image element URL at the last tapped point.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Requests the anchor or image element URL at the last tapped point.
 If hrefMsg is null, this method returns immediately and does not
 dispatch hrefMsg to its target. If the tapped point hits an image,
 an anchor, or an image in an anchor, the message associates
 strings in named keys in its data. The value paired with the key
 may be an empty string.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#requestFocusNodeHref(android.os.Message)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestImageRef">
      <MemberSignature Language="C#" Value="public virtual void RequestImageRef (Android.OS.Message msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestImageRef(class Android.OS.Message msg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestImageRef", "(Landroid/os/Message;)V", "GetRequestImageRef_Landroid_os_Message_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="msg">the message to be dispatched with the result of the request
            as the data member with "url" as key. The result can be null.
</param>
        <summary tool="true">Requests the URL of the image last touched by the user. msg will be sent
 to its target with a String representing the URL as its object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Requests the URL of the image last touched by the user. msg will be sent
 to its target with a String representing the URL as its object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#requestImageRef(android.os.Message)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestorePicture">
      <MemberSignature Language="C#" Value="public virtual bool RestorePicture (Android.OS.Bundle b, Java.IO.File src);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RestorePicture(class Android.OS.Bundle b, class Java.IO.File src) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restorePicture", "(Landroid/os/Bundle;Ljava/io/File;)Z", "GetRestorePicture_Landroid_os_Bundle_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.OS.Bundle" />
        <Parameter Name="src" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="b">To be added.</param>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreState">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebBackForwardList RestoreState (Android.OS.Bundle inState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebBackForwardList RestoreState(class Android.OS.Bundle inState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restoreState", "(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;", "GetRestoreState_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebBackForwardList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="inState">the incoming Bundle of state</param>
        <summary>Restores the state of this WebView from the given Bundle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Restores the state of this WebView from the given Bundle. This method is
 intended for use in <c><see cref="M:Android.App.Activity.OnRestoreInstanceState(Android.OS.Bundle)" /></c>
 and should be called to restore the state of this WebView. If
 it is called after this WebView has had a chance to build state (load
 pages, create a back/forward list, etc.) there may be undesirable
 side-effects. Please note that this method no longer restores the
 display data for this WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#restoreState(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResumeTimers">
      <MemberSignature Language="C#" Value="public virtual void ResumeTimers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResumeTimers() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resumeTimers", "()V", "GetResumeTimersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes all layout, parsing, and JavaScript timers for all WebViews.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resumes all layout, parsing, and JavaScript timers for all WebViews.
 This will resume dispatching all timers.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#resumeTimers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public virtual void SavePassword (string host, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SavePassword(string host, string username, string password) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("savePassword", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetSavePassword_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the host that required the credentials</param>
        <param name="username">the username for the given host</param>
        <param name="password">the password for the given host</param>
        <summary>Sets a username and password pair for the specified host.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a username and password pair for the specified host. This data is
 used by the Webview to autocomplete username and password fields in web
 forms. Note that this is unrelated to the credentials used for HTTP
 authentication.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#savePassword(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebViewDatabase.ClearUsernamePassword" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="SavePicture">
      <MemberSignature Language="C#" Value="public virtual bool SavePicture (Android.OS.Bundle b, Java.IO.File dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SavePicture(class Android.OS.Bundle b, class Java.IO.File dest) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("savePicture", "(Landroid/os/Bundle;Ljava/io/File;)Z", "GetSavePicture_Landroid_os_Bundle_Ljava_io_File_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.OS.Bundle" />
        <Parameter Name="dest" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="b">To be added.</param>
        <param name="dest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveState">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebBackForwardList SaveState (Android.OS.Bundle outState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebBackForwardList SaveState(class Android.OS.Bundle outState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveState", "(Landroid/os/Bundle;)Landroid/webkit/WebBackForwardList;", "GetSaveState_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebBackForwardList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="outState">the Bundle to store this WebView's state</param>
        <summary>Saves the state of this WebView used in
 <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Saves the state of this WebView used in
 <c><see cref="M:Android.App.Activity.OnSaveInstanceState(Android.OS.Bundle)" /></c>. Please note that this
 method no longer stores the display data for this WebView. The previous
 behavior could potentially leak files if <c><see cref="M:Android.Webkit.WebView.RestoreState(Android.OS.Bundle)" /></c> was never
 called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#saveState(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SaveWebArchive">
      <MemberSignature Language="C#" Value="public virtual void SaveWebArchive (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWebArchive(string filename) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveWebArchive", "(Ljava/lang/String;)V", "GetSaveWebArchive_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">the filename where the archive should be placed
</param>
        <summary>Saves the current view as a web archive.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Saves the current view as a web archive.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#saveWebArchive(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SaveWebArchive">
      <MemberSignature Language="C#" Value="public virtual void SaveWebArchive (string basename, bool autoname, Android.Webkit.IValueCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveWebArchive(string basename, bool autoname, class Android.Webkit.IValueCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveWebArchive", "(Ljava/lang/String;ZLandroid/webkit/ValueCallback;)V", "GetSaveWebArchive_Ljava_lang_String_ZLandroid_webkit_ValueCallback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="basename" Type="System.String" />
        <Parameter Name="autoname" Type="System.Boolean" />
        <Parameter Name="callback" Type="Android.Webkit.IValueCallback" />
      </Parameters>
      <Docs>
        <param name="basename">To be added.</param>
        <param name="autoname">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public virtual float Scale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Scale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScale", "()F", "GetGetScaleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current scale of this WebView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the current scale of this WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getScale()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeGeo">
      <MemberSignature Language="C#" Value="public const string SchemeGeo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeGeo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_GEO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URI scheme for map address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">URI scheme for map address.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_GEO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeMailto">
      <MemberSignature Language="C#" Value="public const string SchemeMailto;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeMailto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_MAILTO")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URI scheme for email address.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">URI scheme for email address.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_MAILTO" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemeTel">
      <MemberSignature Language="C#" Value="public const string SchemeTel;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SchemeTel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCHEME_TEL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>URI scheme for telephone number.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">URI scheme for telephone number.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#SCHEME_TEL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDownloadListener">
      <MemberSignature Language="C#" Value="public virtual void SetDownloadListener (Android.Webkit.IDownloadListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDownloadListener(class Android.Webkit.IDownloadListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDownloadListener", "(Landroid/webkit/DownloadListener;)V", "GetSetDownloadListener_Landroid_webkit_DownloadListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Webkit.IDownloadListener" />
      </Parameters>
      <Docs>
        <param name="listener">an implementation of DownloadListener
</param>
        <summary>Registers the interface to be used when content can not be handled by
 the rendering engine, and should be downloaded instead.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers the interface to be used when content can not be handled by
 the rendering engine, and should be downloaded instead. This will replace
 the current handler.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setDownloadListener(android.webkit.DownloadListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFindListener">
      <MemberSignature Language="C#" Value="public virtual void SetFindListener (Android.Webkit.WebView.IFindListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFindListener(class Android.Webkit.WebView/IFindListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFindListener", "(Landroid/webkit/WebView$FindListener;)V", "GetSetFindListener_Landroid_webkit_WebView_FindListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Webkit.WebView+IFindListener" />
      </Parameters>
      <Docs>
        <param name="listener">an implementation of <c><see cref="!:NoType:android/webkit/WebView$FindListener;Href=../../../reference/android/webkit/WebView.FindListener.html" /></c></param>
        <summary>Registers the listener to be notified as find-on-page operations
 progress.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers the listener to be notified as find-on-page operations
 progress. This will replace the current listener.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setFindListener(android.webkit.WebView.FindListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetHorizontalScrollbarOverlay">
      <MemberSignature Language="C#" Value="public virtual void SetHorizontalScrollbarOverlay (bool overlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHorizontalScrollbarOverlay(bool overlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHorizontalScrollbarOverlay", "(Z)V", "GetSetHorizontalScrollbarOverlay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlay" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="overlay">true if horizontal scrollbar should have overlay style
</param>
        <summary>Specifies whether the horizontal scrollbar has overlay style.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether the horizontal scrollbar has overlay style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setHorizontalScrollbarOverlay(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetHttpAuthUsernamePassword">
      <MemberSignature Language="C#" Value="public virtual void SetHttpAuthUsernamePassword (string host, string realm, string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHttpAuthUsernamePassword(string host, string realm, string username, string password) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setHttpAuthUsernamePassword", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetSetHttpAuthUsernamePassword_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="realm" Type="System.String" />
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">the host to which the credentials apply</param>
        <param name="realm">the realm to which the credentials apply</param>
        <param name="username">the username</param>
        <param name="password">the password</param>
        <summary>Stores HTTP authentication credentials for a given host and realm.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stores HTTP authentication credentials for a given host and realm. This
 method is intended to be used with
 <c><see cref="M:Android.Webkit.WebViewClient.OnReceivedHttpAuthRequest(Android.Webkit.WebView,Android.Webkit.HttpAuthHandler,Android.Webkit.HttpAuthHandler,Android.Webkit.HttpAuthHandler)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setHttpAuthUsernamePassword(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.GetHttpAuthUsernamePassword(System.String, System.String)" />
        <altmember cref="P:Android.Webkit.WebViewDatabase.HasHttpAuthUsernamePassword" />
        <altmember cref="M:Android.Webkit.WebViewDatabase.ClearHttpAuthUsernamePassword" />
      </Docs>
    </Member>
    <Member MemberName="SetInitialScale">
      <MemberSignature Language="C#" Value="public virtual void SetInitialScale (int scaleInPercent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInitialScale(int32 scaleInPercent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInitialScale", "(I)V", "GetSetInitialScale_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleInPercent" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="scaleInPercent">the initial scale in percent
</param>
        <summary tool="true">Sets the initial scale for this WebView. 0 means default.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the initial scale for this WebView. 0 means default.
 The behavior for the default scale depends on the state of
 <c><see cref="P:Android.Webkit.WebSettings.UseWideViewPort" /></c> and
 <c><see cref="P:Android.Webkit.WebSettings.LoadWithOverviewMode" /></c>.
 If the content fits into the WebView control by width, then
 the zoom is set to 100%. For wide content, the behavor
 depends on the state of <c><see cref="P:Android.Webkit.WebSettings.LoadWithOverviewMode" /></c>.
 If its value is true, the content will be zoomed out to be fit
 by width into the WebView control, otherwise not.

 If initial scale is greater than 0, WebView starts with this value
 as initial scale.
 Please note that unlike the scale properties in the viewport meta tag,
 this method doesn't take the screen density into account.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setInitialScale(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMapTrackballToArrowKeys">
      <MemberSignature Language="C#" Value="public virtual void SetMapTrackballToArrowKeys (bool setMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMapTrackballToArrowKeys(bool setMap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMapTrackballToArrowKeys", "(Z)V", "GetSetMapTrackballToArrowKeys_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="setMap" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="setMap">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setMapTrackballToArrowKeys(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetNetworkAvailable">
      <MemberSignature Language="C#" Value="public virtual void SetNetworkAvailable (bool networkUp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNetworkAvailable(bool networkUp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNetworkAvailable", "(Z)V", "GetSetNetworkAvailable_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="networkUp" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="networkUp">a boolean indicating if network is available
</param>
        <summary>Informs WebView of the network state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Informs WebView of the network state. This is used to set
 the JavaScript property window.navigator.isOnline and
 generates the online/offline event as specified in HTML5, sec. 5.7.7</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setNetworkAvailable(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPictureListener">
      <MemberSignature Language="C#" Value="public virtual void SetPictureListener (Android.Webkit.WebView.IPictureListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPictureListener(class Android.Webkit.WebView/IPictureListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPictureListener", "(Landroid/webkit/WebView$PictureListener;)V", "GetSetPictureListener_Landroid_webkit_WebView_PictureListener_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Webkit.WebView+IPictureListener" />
      </Parameters>
      <Docs>
        <param name="listener">an implementation of WebView.PictureListener</param>
        <summary>Sets the Picture listener.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the Picture listener. This is an interface used to receive
 notifications of a new Picture.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setPictureListener(android.webkit.WebView.PictureListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Settings">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebSettings Settings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Webkit.WebSettings Settings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSettings", "()Landroid/webkit/WebSettings;", "GetGetSettingsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the WebSettings object used to control the settings for this
 WebView.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the WebSettings object used to control the settings for this
 WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getSettings()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetVerticalScrollbarOverlay">
      <MemberSignature Language="C#" Value="public virtual void SetVerticalScrollbarOverlay (bool overlay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVerticalScrollbarOverlay(bool overlay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVerticalScrollbarOverlay", "(Z)V", "GetSetVerticalScrollbarOverlay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="overlay" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="overlay">true if vertical scrollbar should have overlay style
</param>
        <summary>Specifies whether the vertical scrollbar has overlay style.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies whether the vertical scrollbar has overlay style.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setVerticalScrollbarOverlay(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWebChromeClient">
      <MemberSignature Language="C#" Value="public virtual void SetWebChromeClient (Android.Webkit.WebChromeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWebChromeClient(class Android.Webkit.WebChromeClient client) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWebChromeClient", "(Landroid/webkit/WebChromeClient;)V", "GetSetWebChromeClient_Landroid_webkit_WebChromeClient_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Android.Webkit.WebChromeClient" />
      </Parameters>
      <Docs>
        <param name="client">an implementation of WebChromeClient
</param>
        <summary>Sets the chrome handler.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the chrome handler. This is an implementation of WebChromeClient for
 use in handling JavaScript dialogs, favicons, titles, and the progress.
 This will replace the current handler.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setWebChromeClient(android.webkit.WebChromeClient)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWebContentsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public static void SetWebContentsDebuggingEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWebContentsDebuggingEnabled(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWebContentsDebuggingEnabled", "(Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">whether to enable web contents debugging
</param>
        <summary>Enables debugging of web contents (HTML / CSS / JavaScript)
 loaded into any WebViews of this application.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enables debugging of web contents (HTML / CSS / JavaScript)
 loaded into any WebViews of this application. This flag can be enabled
 in order to facilitate debugging of web layouts and JavaScript
 code running inside WebViews. Please refer to WebView documentation
 for the debugging guide.

 The default is false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setWebContentsDebuggingEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWebViewClient">
      <MemberSignature Language="C#" Value="public virtual void SetWebViewClient (Android.Webkit.WebViewClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWebViewClient(class Android.Webkit.WebViewClient client) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWebViewClient", "(Landroid/webkit/WebViewClient;)V", "GetSetWebViewClient_Landroid_webkit_WebViewClient_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Android.Webkit.WebViewClient" />
      </Parameters>
      <Docs>
        <param name="client">an implementation of WebViewClient
</param>
        <summary>Sets the WebViewClient that will receive various notifications and
 requests.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the WebViewClient that will receive various notifications and
 requests. This will replace the current handler.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#setWebViewClient(android.webkit.WebViewClient)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowFindDialog">
      <MemberSignature Language="C#" Value="public virtual bool ShowFindDialog (string text, bool showIme);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowFindDialog(string text, bool showIme) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("showFindDialog", "(Ljava/lang/String;Z)Z", "GetShowFindDialog_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="showIme" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">if non-null, will be the initial text to search for.
             Otherwise, the last String searched for in this WebView will
             be used to start.</param>
        <param name="showIme">if true, show the IME, assuming the user will begin typing.
                If false and text is non-null, perform a find all.</param>
        <summary>Starts an ActionMode for finding text in this WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts an ActionMode for finding text in this WebView.  Only works if this
 WebView is attached to the view system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#showFindDialog(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public virtual void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopLoading() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopLoading", "()V", "GetStopLoadingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the current load.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stops the current load.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#stopLoading()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTitle", "()Ljava/lang/String;", "GetGetTitleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the title for the current page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the title for the current page. This is the title of the current page
 until WebViewClient.onReceivedTitle is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getTitle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public virtual string Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUrl", "()Ljava/lang/String;", "GetGetUrlHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URL for the current page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the URL for the current page. This is not always the same as the URL
 passed to WebViewClient.onPageStarted because although the load for
 that URL has begun, the current page may not have changed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#getUrl()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VisibleTitleHeight">
      <MemberSignature Language="C#" Value="public virtual int VisibleTitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisibleTitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVisibleTitleHeight", "()I", "GetGetVisibleTitleHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomBy">
      <MemberSignature Language="C#" Value="public virtual void ZoomBy (float zoomFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ZoomBy(float32 zoomFactor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("zoomBy", "(F)V", "GetZoomBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoomFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="zoomFactor">the zoom factor to apply. The zoom factor will be clamped to the Webview's
 zoom limits. This value must be in the range 0.01 to 100.0 inclusive.
</param>
        <summary>Performs a zoom operation in this WebView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs a zoom operation in this WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#zoomBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomControls">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View ZoomControls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View ZoomControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getZoomControls", "()Landroid/view/View;", "GetGetZoomControlsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ZoomIn">
      <MemberSignature Language="C#" Value="public virtual bool ZoomIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ZoomIn() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("zoomIn", "()Z", "GetZoomInHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs zoom in in this WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs zoom in in this WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#zoomIn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ZoomOut">
      <MemberSignature Language="C#" Value="public virtual bool ZoomOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ZoomOut() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("zoomOut", "()Z", "GetZoomOutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Performs zoom out in this WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Performs zoom out in this WebView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebView.html#zoomOut()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
