<Type Name="WebSettings" FullName="Android.Webkit.WebSettings">
  <TypeSignature Language="C#" Value="public abstract class WebSettings : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WebSettings extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/webkit/WebSettings", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Manages settings state for a WebView.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Manages settings state for a WebView. When a WebView is first created, it
 obtains a set of default settings. These default settings will be returned
 from any getter call. A WebSettings object obtained from
 WebView.getSettings() is tied to the life of the WebView. If a WebView has
 been destroyed, any method call on WebSettings will throw an
 IllegalStateException.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/webkit/WebSettings.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebSettings (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowContentAccess">
      <MemberSignature Language="C#" Value="public virtual bool AllowContentAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowContentAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowContentAccess", "()Z", "GetGetAllowContentAccessHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowContentAccess", "(Z)V", "GetSetAllowContentAccess_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this WebView supports content URL access.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowContentAccess()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether this WebView supports content URL access.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowContentAccess(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Enables or disables content URL access within WebView.  Content URL
 access allows WebView to load content from a content provider installed
 in the system. The default is enabled.
</para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Webkit.WebSettings.AllowContentAccess" />
      </Docs>
    </Member>
    <Member MemberName="AllowFileAccess">
      <MemberSignature Language="C#" Value="public virtual bool AllowFileAccess { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFileAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowFileAccess", "()Z", "GetGetAllowFileAccessHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowFileAccess", "(Z)V", "GetSetAllowFileAccess_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this WebView supports file access.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowFileAccess()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether this WebView supports file access.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccess(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Enables or disables file access within WebView. File access is enabled by
 default.  Note that this enables or disables file system access only.
 Assets and resources are still accessible using file:///android_asset and
 file:///android_res.
</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Webkit.WebSettings.AllowFileAccess" />
      </Docs>
    </Member>
    <Member MemberName="AllowFileAccessFromFileURLs">
      <MemberSignature Language="C#" Value="public abstract bool AllowFileAccessFromFileURLs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowFileAccessFromFileURLs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowFileAccessFromFileURLs", "()Z", "GetGetAllowFileAccessFromFileURLsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowFileAccessFromFileURLs", "(Z)V", "GetSetAllowFileAccessFromFileURLs_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether JavaScript running in the context of a file scheme URL can
 access content from other file scheme URLs.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowFileAccessFromFileURLs()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether JavaScript running in the context of a file scheme URL can
 access content from other file scheme URLs.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowFileAccessFromFileURLs(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether JavaScript running in the context of a file scheme URL
 should be allowed to access content from other file scheme URLs. To
 enable the most restrictive, and therefore secure policy, this setting
 should be disabled. Note that the value of this setting is ignored if
 the value of <c><see cref="P:Android.Webkit.WebSettings.AllowUniversalAccessFromFileURLs" /></c> is true.
 Note too, that this setting affects only JavaScript access to file scheme
 resources. Other access to such resources, for example, from image HTML
 elements, is unaffected. To prevent possible violation of same domain policy
 on <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH" /></c> and earlier
 devices, you should explicitly set this value to <c>false</c>.
 
 The default value is true for API level
 <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH_MR1" /></c> and below,
 and false for API level <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c>
 and above.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="P:Android.Webkit.WebSettings.AllowFileAccessFromFileURLs" />
      </Docs>
    </Member>
    <Member MemberName="AllowUniversalAccessFromFileURLs">
      <MemberSignature Language="C#" Value="public abstract bool AllowUniversalAccessFromFileURLs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUniversalAccessFromFileURLs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowUniversalAccessFromFileURLs", "()Z", "GetGetAllowUniversalAccessFromFileURLsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowUniversalAccessFromFileURLs", "(Z)V", "GetSetAllowUniversalAccessFromFileURLs_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether JavaScript running in the context of a file scheme URL can
 access content from any origin.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getAllowUniversalAccessFromFileURLs()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether JavaScript running in the context of a file scheme URL can
 access content from any origin. This includes access to content from
 other file scheme URLs.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAllowUniversalAccessFromFileURLs(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether JavaScript running in the context of a file scheme URL
 should be allowed to access content from any origin. This includes
 access to content from other file scheme URLs. See
 <c><see cref="P:Android.Webkit.WebSettings.AllowFileAccessFromFileURLs" /></c>. To enable the most restrictive,
 and therefore secure policy, this setting should be disabled.
 Note that this setting affects only JavaScript access to file scheme
 resources. Other access to such resources, for example, from image HTML
 elements, is unaffected. To prevent possible violation of same domain policy
 on <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH" /></c> and earlier
 devices, you should explicitly set this value to <c>false</c>.
 
 The default value is true for API level
 <c><see cref="!:NoType:android/os/Build$VERSION_CODES;Href=../../../reference/android/os/Build.VERSION_CODES.html#ICE_CREAM_SANDWICH_MR1" /></c> and below,
 and false for API level <c><see cref="F:Android.OS.Build+VERSION.JellyBean" tool="ReplaceLinkValue" /></c>
 and above.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="P:Android.Webkit.WebSettings.AllowUniversalAccessFromFileURLs" />
      </Docs>
    </Member>
    <Member MemberName="BlockNetworkImage">
      <MemberSignature Language="C#" Value="public virtual bool BlockNetworkImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlockNetworkImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBlockNetworkImage", "()Z", "GetGetBlockNetworkImageHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBlockNetworkImage", "(Z)V", "GetSetBlockNetworkImage_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView does not load image resources from the network.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getBlockNetworkImage()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView does not load image resources from the network.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setBlockNetworkImage(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should not load image resources from the
 network (resources accessed via http and https URI schemes).  Note
 that this method has no effect unless
 <c><see cref="P:Android.Webkit.WebSettings.LoadsImagesAutomatically" /></c> returns true. Also note that
 disabling all network loads using <c><see cref="P:Android.Webkit.WebSettings.BlockNetworkLoads" /></c>
 will also prevent network images from loading, even if this flag is set
 to false. When the value of this setting is changed from true to false,
 network images resources referenced by content currently displayed by
 the WebView are fetched automatically. The default is false.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.BlockNetworkImage" />
        <altmember cref="P:Android.Webkit.WebSettings.BlockNetworkLoads" />
      </Docs>
    </Member>
    <Member MemberName="BlockNetworkLoads">
      <MemberSignature Language="C#" Value="public virtual bool BlockNetworkLoads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BlockNetworkLoads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBlockNetworkLoads", "()Z", "GetGetBlockNetworkLoadsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBlockNetworkLoads", "(Z)V", "GetSetBlockNetworkLoads_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView does not load any resources from the network.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getBlockNetworkLoads()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView does not load any resources from the network.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setBlockNetworkLoads(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should not load resources from the network.
 Use <c><see cref="P:Android.Webkit.WebSettings.BlockNetworkImage" /></c> to only avoid loading
 image resources. Note that if the value of this setting is
 changed from true to false, network resources referenced by content
 currently displayed by the WebView are not fetched until
 <c><see cref="M:Android.Webkit.WebView.Reload" /></c> is called.
 If the application does not have the
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#INTERNET" /></c> permission, attempts to set
 a value of false will cause a <c><see cref="T:Java.Lang.SecurityException" /></c>
 to be thrown. The default value is false if the application has the
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#INTERNET" /></c> permission, otherwise it is
 true.</para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Android.Webkit.WebSettings.BlockNetworkLoads" />
        <altmember cref="M:Android.Webkit.WebView.Reload" />
      </Docs>
    </Member>
    <Member MemberName="BuiltInZoomControls">
      <MemberSignature Language="C#" Value="public virtual bool BuiltInZoomControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuiltInZoomControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBuiltInZoomControls", "()Z", "GetGetBuiltInZoomControlsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBuiltInZoomControls", "(Z)V", "GetSetBuiltInZoomControls_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the zoom mechanisms built into WebView are being used.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getBuiltInZoomControls()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the zoom mechanisms built into WebView are being used.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setBuiltInZoomControls(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should use its built-in zoom mechanisms. The
 built-in zoom mechanisms comprise on-screen zoom controls, which are
 displayed over the WebView's content, and the use of a pinch gesture to
 control zooming. Whether or not these on-screen controls are displayed
 can be set with <c><see cref="P:Android.Webkit.WebSettings.DisplayZoomControls" /></c>. The default is false.
 
 The built-in mechanisms are the only currently supported zoom
 mechanisms, so it is recommended that this setting is always enabled.</para>
          <para tool="javadoc-to-mdoc" />
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Webkit.WebSettings.BuiltInZoomControls" />
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.CacheModes CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Webkit.CacheModes CacheMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCacheMode", "()I", "GetGetCacheModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCacheMode", "(I)V", "GetSetCacheMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.CacheModes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current setting for overriding the cache mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getCacheMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current setting for overriding the cache mode.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setCacheMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Overrides the way the cache is used. The way the cache is used is based
 on the navigation type. For a normal page load, the cache is checked
 and content is re-validated as needed. When navigating back, content is
 not revalidated, instead the content is just retrieved from the cache.
 This method allows the client to override this behavior by specifying
 one of <c><see cref="!:Android.Webkit.WebSettings.LOAD_DEFAULT" /></c>,
 <c><see cref="!:Android.Webkit.WebSettings.LOAD_CACHE_ELSE_NETWORK" /></c>, <c><see cref="!:Android.Webkit.WebSettings.LOAD_NO_CACHE" /></c> or
 <c><see cref="!:Android.Webkit.WebSettings.LOAD_CACHE_ONLY" /></c>. The default value is <c><see cref="!:Android.Webkit.WebSettings.LOAD_DEFAULT" /></c>.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.CacheMode" />
      </Docs>
    </Member>
    <Member MemberName="CursiveFontFamily">
      <MemberSignature Language="C#" Value="public virtual string CursiveFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CursiveFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCursiveFontFamily", "()Ljava/lang/String;", "GetGetCursiveFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCursiveFontFamily", "(Ljava/lang/String;)V", "GetSetCursiveFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the cursive font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getCursiveFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the cursive font family name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setCursiveFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the cursive font family name. The default is "cursive".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.CursiveFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="DatabaseEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DatabaseEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DatabaseEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDatabaseEnabled", "()Z", "GetGetDatabaseEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDatabaseEnabled", "(Z)V", "GetSetDatabaseEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the database storage API is enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDatabaseEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the database storage API is enabled.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDatabaseEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the database storage API is enabled. The default value is
 false. See also <c><see cref="P:Android.Webkit.WebSettings.DatabasePath" /></c> for how to correctly set up the
 database storage API.

 This setting is global in effect, across all WebView instances in a process.
 Note you should only modify this setting prior to making <format type="text/html"><b>any</b></format> WebView
 page load within a given process, as the WebView implementation may ignore
 changes to this setting after that point.</para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="P:Android.Webkit.WebSettings.DatabaseEnabled" />
      </Docs>
    </Member>
    <Member MemberName="DatabasePath">
      <MemberSignature Language="C#" Value="public virtual string DatabasePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DatabasePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDatabasePath", "()Ljava/lang/String;", "GetGetDatabasePathHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDatabasePath", "(Ljava/lang/String;)V", "GetSetDatabasePath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the path to where database storage API databases are saved.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDatabasePath()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the path to where database storage API databases are saved.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDatabasePath(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the path to where database storage API databases should be saved.
 In order for the database storage API to function correctly, this method
 must be called with a path to which the application can write. This
 method should only be called once: repeated calls are ignored.</para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="P:Android.Webkit.WebSettings.DatabasePath" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFixedFontSize">
      <MemberSignature Language="C#" Value="public virtual int DefaultFixedFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultFixedFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultFixedFontSize", "()I", "GetGetDefaultFixedFontSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultFixedFontSize", "(I)V", "GetSetDefaultFixedFontSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default fixed font size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultFixedFontSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the default fixed font size.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultFixedFontSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the default fixed font size. The default is 16.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.DefaultFixedFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFontSize">
      <MemberSignature Language="C#" Value="public virtual int DefaultFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DefaultFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultFontSize", "()I", "GetGetDefaultFontSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultFontSize", "(I)V", "GetSetDefaultFontSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default font size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultFontSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the default font size.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultFontSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the default font size. The default is 16.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.DefaultFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTextEncodingName">
      <MemberSignature Language="C#" Value="public virtual string DefaultTextEncodingName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTextEncodingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultTextEncodingName", "()Ljava/lang/String;", "GetGetDefaultTextEncodingNameHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultTextEncodingName", "(Ljava/lang/String;)V", "GetSetDefaultTextEncodingName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default text encoding name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultTextEncodingName()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the default text encoding name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultTextEncodingName(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the default text encoding name to use when decoding html pages.
 The default is "UTF-8".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.DefaultTextEncodingName" />
      </Docs>
    </Member>
    <Member MemberName="DefaultZoom">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebSettings.ZoomDensity DefaultZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Webkit.WebSettings/ZoomDensity DefaultZoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDefaultZoom", "()Landroid/webkit/WebSettings$ZoomDensity;", "GetGetDefaultZoomHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDefaultZoom", "(Landroid/webkit/WebSettings$ZoomDensity;)V", "GetSetDefaultZoom_Landroid_webkit_WebSettings_ZoomDensity_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebSettings+ZoomDensity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default zoom density of the page.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultZoom()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the default zoom density of the page. This should be called from
 the UI thread.

 This setting is not recommended for use in new applications.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDefaultZoom(android.webkit.WebSettings.ZoomDensity)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the default zoom density of the page. This must be called from the UI
 thread. The default is <c><see cref="!:NoType:android/webkit/WebSettings$ZoomDensity;Href=../../../reference/android/webkit/WebSettings.ZoomDensity.html#MEDIUM" /></c>.

 This setting is not recommended for use in new applications.  If the WebView
 is utilized to display mobile-oriented pages, the desired effect can be achieved by
 adjusting 'width' and 'initial-scale' attributes of page's 'meta viewport'
 tag. For pages lacking the tag, <c><see cref="M:Android.Webkit.WebView.SetInitialScale(System.Int32)" /></c>
 and <c><see cref="P:Android.Webkit.WebSettings.UseWideViewPort" /></c> can be used.</para>
        </remarks>
        <since version="Added in API level 7" />
        <altmember cref="P:Android.Webkit.WebSettings.DefaultZoom" />
      </Docs>
    </Member>
    <Member MemberName="DisplayZoomControls">
      <MemberSignature Language="C#" Value="public virtual bool DisplayZoomControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayZoomControls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayZoomControls", "()Z", "GetGetDisplayZoomControlsHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDisplayZoomControls", "(Z)V", "GetSetDisplayZoomControls_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView displays on-screen zoom controls when using
 the built-in zoom mechanisms.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDisplayZoomControls()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView displays on-screen zoom controls when using
 the built-in zoom mechanisms.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDisplayZoomControls(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should display on-screen zoom controls when
 using the built-in zoom mechanisms. See <c><see cref="P:Android.Webkit.WebSettings.BuiltInZoomControls" /></c>.
 The default is true.</para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Webkit.WebSettings.DisplayZoomControls" />
      </Docs>
    </Member>
    <Member MemberName="DomStorageEnabled">
      <MemberSignature Language="C#" Value="public virtual bool DomStorageEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DomStorageEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDomStorageEnabled", "()Z", "GetGetDomStorageEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setDomStorageEnabled", "(Z)V", "GetSetDomStorageEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the DOM Storage APIs are enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDomStorageEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the DOM Storage APIs are enabled.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setDomStorageEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the DOM storage API is enabled. The default value is false.</para>
        </remarks>
        <since version="Added in API level 7" />
        <altmember cref="P:Android.Webkit.WebSettings.DomStorageEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableSmoothTransition">
      <MemberSignature Language="C#" Value="public virtual bool EnableSmoothTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EnableSmoothTransition() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableSmoothTransition", "()Z", "GetEnableSmoothTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether the WebView enables smooth transition while panning or
 zooming.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the WebView enables smooth transition while panning or
 zooming.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#enableSmoothTransition()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Webkit.WebSettings.SetEnableSmoothTransition(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FantasyFontFamily">
      <MemberSignature Language="C#" Value="public virtual string FantasyFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FantasyFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFantasyFontFamily", "()Ljava/lang/String;", "GetGetFantasyFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFantasyFontFamily", "(Ljava/lang/String;)V", "GetSetFantasyFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fantasy font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getFantasyFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the fantasy font family name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setFantasyFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the fantasy font family name. The default is "fantasy".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.FantasyFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="FixedFontFamily">
      <MemberSignature Language="C#" Value="public virtual string FixedFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FixedFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFixedFontFamily", "()Ljava/lang/String;", "GetGetFixedFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFixedFontFamily", "(Ljava/lang/String;)V", "GetSetFixedFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the fixed font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getFixedFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the fixed font family name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setFixedFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the fixed font family name. The default is "monospace".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.FixedFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultUserAgent">
      <MemberSignature Language="C#" Value="public static string GetDefaultUserAgent (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetDefaultUserAgent(class Android.Content.Context context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDefaultUserAgent", "(Landroid/content/Context;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">a Context object used to access application assets
</param>
        <summary>Returns the default User-Agent used by a WebView.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the default User-Agent used by a WebView.
 An instance of WebView could use a different User-Agent if a call
 is made to <c><see cref="P:Android.Webkit.WebSettings.UserAgentString" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getDefaultUserAgent(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutAlgorithm">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebSettings.LayoutAlgorithm GetLayoutAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebSettings/LayoutAlgorithm GetLayoutAlgorithm() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLayoutAlgorithm", "()Landroid/webkit/WebSettings$LayoutAlgorithm;", "GetGetLayoutAlgorithmHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebSettings+LayoutAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the current layout algorithm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the current layout algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getLayoutAlgorithm()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebSettings.SetLayoutAlgorithm(.LayoutAlgorithm)" />
      </Docs>
    </Member>
    <Member MemberName="GetPluginState">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebSettings.PluginState GetPluginState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebSettings/PluginState GetPluginState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPluginState", "()Landroid/webkit/WebSettings$PluginState;", "GetGetPluginStateHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebSettings+PluginState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the current state regarding whether plugins are enabled.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the current state regarding whether plugins are enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getPluginState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Webkit.WebSettings.SetPluginState(.PluginState)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextSize">
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebSettings.TextSize GetTextSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebSettings/TextSize GetTextSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextSize", "()Landroid/webkit/WebSettings$TextSize;", "GetGetTextSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebSettings+TextSize</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the text size of the page.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the text size of the page. If the text size was previously specified
 in percent using <c><see cref="P:Android.Webkit.WebSettings.TextZoom" /></c>, this will return the closest
 matching <c><see cref="!:NoType:android/webkit/WebSettings$TextSize;Href=../../../reference/android/webkit/WebSettings.TextSize.html" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getTextSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebSettings.SetTextSize(.TextSize)" />
      </Docs>
    </Member>
    <Member MemberName="JavaScriptCanOpenWindowsAutomatically">
      <MemberSignature Language="C#" Value="public virtual bool JavaScriptCanOpenWindowsAutomatically { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScriptCanOpenWindowsAutomatically" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getJavaScriptCanOpenWindowsAutomatically", "()Z", "GetGetJavaScriptCanOpenWindowsAutomaticallyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setJavaScriptCanOpenWindowsAutomatically", "(Z)V", "GetSetJavaScriptCanOpenWindowsAutomatically_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether JavaScript can open windows automatically.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getJavaScriptCanOpenWindowsAutomatically()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether JavaScript can open windows automatically.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setJavaScriptCanOpenWindowsAutomatically(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Tells JavaScript to open windows automatically. This applies to the
 JavaScript function window.open(). The default is false.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.JavaScriptCanOpenWindowsAutomatically" />
      </Docs>
    </Member>
    <Member MemberName="JavaScriptEnabled">
      <MemberSignature Language="C#" Value="public virtual bool JavaScriptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool JavaScriptEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getJavaScriptEnabled", "()Z", "GetGetJavaScriptEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setJavaScriptEnabled", "(Z)V", "GetSetJavaScriptEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether JavaScript is enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getJavaScriptEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether JavaScript is enabled.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setJavaScriptEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Tells the WebView to enable JavaScript execution.
 <format type="text/html"><b>The default is false.</b></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.JavaScriptEnabled" />
      </Docs>
    </Member>
    <Member MemberName="LightTouchEnabled">
      <MemberSignature Language="C#" Value="public virtual bool LightTouchEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LightTouchEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLightTouchEnabled", "()Z", "GetGetLightTouchEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLightTouchEnabled", "(Z)V", "GetSetLightTouchEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether light touches are enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getLightTouchEnabled()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether light touches are enabled.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setLightTouchEnabled(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Enables using light touches to make a selection and activate mouseovers.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.LightTouchEnabled" />
      </Docs>
    </Member>
    <Member MemberName="LoadsImagesAutomatically">
      <MemberSignature Language="C#" Value="public virtual bool LoadsImagesAutomatically { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadsImagesAutomatically" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLoadsImagesAutomatically", "()Z", "GetGetLoadsImagesAutomaticallyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLoadsImagesAutomatically", "(Z)V", "GetSetLoadsImagesAutomatically_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView loads image resources.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getLoadsImagesAutomatically()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView loads image resources. This includes
 images embedded using the data URI scheme.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setLoadsImagesAutomatically(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should load image resources. Note that this method
 controls loading of all images, including those embedded using the data
 URI scheme. Use <c><see cref="P:Android.Webkit.WebSettings.BlockNetworkImage" /></c> to control loading only
 of images specified using network URI schemes. Note that if the value of this
 setting is changed from false to true, all images resources referenced
 by content currently displayed by the WebView are loaded automatically.
 The default is true.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.LoadsImagesAutomatically" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithOverviewMode">
      <MemberSignature Language="C#" Value="public virtual bool LoadWithOverviewMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadWithOverviewMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLoadWithOverviewMode", "()Z", "GetGetLoadWithOverviewModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLoadWithOverviewMode", "(Z)V", "GetSetLoadWithOverviewMode_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether this WebView loads pages in overview mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getLoadWithOverviewMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether this WebView loads pages in overview mode.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setLoadWithOverviewMode(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView loads pages in overview mode, that is,
 zooms out the content to fit on screen by width. This setting is
 taken into account when the content width is greater than the width
 of the WebView control, for example, when <c><see cref="P:Android.Webkit.WebSettings.UseWideViewPort" /></c>
 is enabled. The default is false.
</para>
        </remarks>
        <since version="Added in API level 7" />
        <altmember cref="P:Android.Webkit.WebSettings.LoadWithOverviewMode" />
      </Docs>
    </Member>
    <Member MemberName="MediaPlaybackRequiresUserGesture">
      <MemberSignature Language="C#" Value="public virtual bool MediaPlaybackRequiresUserGesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MediaPlaybackRequiresUserGesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMediaPlaybackRequiresUserGesture", "()Z", "GetGetMediaPlaybackRequiresUserGestureHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMediaPlaybackRequiresUserGesture", "(Z)V", "GetSetMediaPlaybackRequiresUserGesture_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView requires a user gesture to play media.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getMediaPlaybackRequiresUserGesture()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView requires a user gesture to play media.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setMediaPlaybackRequiresUserGesture(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView requires a user gesture to play media.
 The default is true.</para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Webkit.WebSettings.MediaPlaybackRequiresUserGesture" />
      </Docs>
    </Member>
    <Member MemberName="MinimumFontSize">
      <MemberSignature Language="C#" Value="public virtual int MinimumFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumFontSize", "()I", "GetGetMinimumFontSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMinimumFontSize", "(I)V", "GetSetMinimumFontSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum font size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getMinimumFontSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the minimum font size.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setMinimumFontSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the minimum font size. The default is 8.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.MinimumFontSize" />
      </Docs>
    </Member>
    <Member MemberName="MinimumLogicalFontSize">
      <MemberSignature Language="C#" Value="public virtual int MinimumLogicalFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumLogicalFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMinimumLogicalFontSize", "()I", "GetGetMinimumLogicalFontSizeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMinimumLogicalFontSize", "(I)V", "GetSetMinimumLogicalFontSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum logical font size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getMinimumLogicalFontSize()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the minimum logical font size.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setMinimumLogicalFontSize(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the minimum logical font size. The default is 8.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.MinimumLogicalFontSize" />
      </Docs>
    </Member>
    <Member MemberName="MixedContentAlwaysAllow">
      <MemberSignature Language="C#" Value="public const Android.Webkit.MixedContentHandling MixedContentAlwaysAllow = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Webkit.MixedContentHandling MixedContentAlwaysAllow = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIXED_CONTENT_ALWAYS_ALLOW")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Webkit.MixedContentHandling enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.MixedContentHandling</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will allow a secure origin to load content from any other origin,
 even if that origin is insecure.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will allow a secure origin to load content from any other origin,
 even if that origin is insecure. This is the least secure mode of operation for the WebView,
 and where possible apps should not set this mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_ALWAYS_ALLOW" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MixedContentCompatibilityMode">
      <MemberSignature Language="C#" Value="public const Android.Webkit.MixedContentHandling MixedContentCompatibilityMode = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Webkit.MixedContentHandling MixedContentCompatibilityMode = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIXED_CONTENT_COMPATIBILITY_MODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Webkit.MixedContentHandling enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.MixedContentHandling</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will attempt to be compatible with the approach of a modern web
 browser with regard to mixed content.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will attempt to be compatible with the approach of a modern web
 browser with regard to mixed content. Some insecure content may be allowed to be loaded by
 a secure origin and other types of content will be blocked. The types of content are allowed
 or blocked may change release to release and are not explicitly defined.

 This mode is intended to be used by apps that are not in control of the content that they
 render but desire to operate in a reasonably secure environment. For highest security, apps
 are recommended to use <c><see cref="F:Android.Webkit.WebSettings.MixedContentNeverAllow" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_COMPATIBILITY_MODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MixedContentMode">
      <MemberSignature Language="C#" Value="public abstract Android.Webkit.MixedContentHandling MixedContentMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Webkit.MixedContentHandling MixedContentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMixedContentMode", "()I", "GetGetMixedContentModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMixedContentMode", "(I)V", "GetSetMixedContentMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.MixedContentHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current behavior of the WebView with regard to loading insecure content from a
 secure origin.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getMixedContentMode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the current behavior of the WebView with regard to loading insecure content from a
 secure origin.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setMixedContentMode(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Configures the WebView's behavior when a secure origin attempts to load a resource from an
 insecure origin.

 By default, apps that target <c><see cref="F:Android.OS.Build+VERSION_CODES.KitKat" tool="ReplaceLinkValue" /></c> or below default
 to <c><see cref="F:Android.Webkit.WebSettings.MixedContentAlwaysAllow" /></c>. Apps targeting
 <c><see cref="F:Android.OS.Build.VERSION_CODES.Lollipop" tool="ReplaceLinkValue" /></c> default to <c><see cref="F:Android.Webkit.WebSettings.MixedContentNeverAllow" /></c>.

 The preferred and most secure mode of operation for the WebView is
 <c><see cref="F:Android.Webkit.WebSettings.MixedContentNeverAllow" /></c> and use of <c><see cref="F:Android.Webkit.WebSettings.MixedContentAlwaysAllow" /></c> is
 strongly discouraged.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MixedContentNeverAllow">
      <MemberSignature Language="C#" Value="public const Android.Webkit.MixedContentHandling MixedContentNeverAllow = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Webkit.MixedContentHandling MixedContentNeverAllow = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIXED_CONTENT_NEVER_ALLOW")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Webkit.MixedContentHandling enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.MixedContentHandling</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will not allow a secure origin to load content from an insecure
 origin.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Used with <c><see cref="P:Android.Webkit.WebSettings.MixedContentMode" /></c>

 In this mode, the WebView will not allow a secure origin to load content from an insecure
 origin. This is the preferred and most secure mode of operation for the WebView and apps are
 strongly advised to use this mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#MIXED_CONTENT_NEVER_ALLOW" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavDump">
      <MemberSignature Language="C#" Value="public virtual bool NavDump { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NavDump" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavDump", "()Z", "GetGetNavDumpHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNavDump", "(Z)V", "GetSetNavDump_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluginsEnabled">
      <MemberSignature Language="C#" Value="public virtual bool PluginsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PluginsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPluginsEnabled", "()Z", "GetGetPluginsEnabledHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPluginsEnabled", "(Z)V", "GetSetPluginsEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PluginsPath">
      <MemberSignature Language="C#" Value="public virtual string PluginsPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PluginsPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPluginsPath", "()Ljava/lang/String;", "GetGetPluginsPathHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPluginsPath", "(Ljava/lang/String;)V", "GetSetPluginsPath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SansSerifFontFamily">
      <MemberSignature Language="C#" Value="public virtual string SansSerifFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SansSerifFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSansSerifFontFamily", "()Ljava/lang/String;", "GetGetSansSerifFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSansSerifFontFamily", "(Ljava/lang/String;)V", "GetSetSansSerifFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the sans-serif font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getSansSerifFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the sans-serif font family name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSansSerifFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the sans-serif font family name. The default is "sans-serif".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.SansSerifFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="SaveFormData">
      <MemberSignature Language="C#" Value="public virtual bool SaveFormData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveFormData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSaveFormData", "()Z", "GetGetSaveFormDataHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSaveFormData", "(Z)V", "GetSetSaveFormData_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView saves form data.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getSaveFormData()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView saves form data.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSaveFormData(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should save form data. The default is true.
</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.SaveFormData" />
      </Docs>
    </Member>
    <Member MemberName="SavePassword">
      <MemberSignature Language="C#" Value="public virtual bool SavePassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SavePassword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSavePassword", "()Z", "GetGetSavePasswordHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSavePassword", "(Z)V", "GetSetSavePassword_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the WebView saves passwords.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getSavePassword()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView saves passwords.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSavePassword(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should save passwords. The default is true.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.SavePassword" />
      </Docs>
    </Member>
    <Member MemberName="SerifFontFamily">
      <MemberSignature Language="C#" Value="public virtual string SerifFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SerifFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSerifFontFamily", "()Ljava/lang/String;", "GetGetSerifFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSerifFontFamily", "(Ljava/lang/String;)V", "GetSetSerifFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the serif font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getSerifFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the serif font family name. The default is "serif".</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSerifFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the serif font family name. The default is "sans-serif".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.SerifFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="SetAppCacheEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetAppCacheEnabled (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAppCacheEnabled(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAppCacheEnabled", "(Z)V", "GetSetAppCacheEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">true if the WebView should enable Application Caches
</param>
        <summary>Sets whether the Application Caches API should be enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the Application Caches API should be enabled. The default
 is false. Note that in order for the Application Caches API to be
 enabled, a valid database path must also be supplied to
 <c><see cref="M:Android.Webkit.WebSettings.SetAppCachePath(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCacheEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetAppCacheMaxSize">
      <MemberSignature Language="C#" Value="public virtual void SetAppCacheMaxSize (long appCacheMaxSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAppCacheMaxSize(int64 appCacheMaxSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAppCacheMaxSize", "(J)V", "GetSetAppCacheMaxSize_JHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appCacheMaxSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="appCacheMaxSize">the maximum size in bytes</param>
        <summary>Sets the maximum size for the Application Cache content.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the maximum size for the Application Cache content. The passed size
 will be rounded to the nearest value that the database can support, so
 this should be viewed as a guide, not a hard limit. Setting the
 size to a value less than current database size does not cause the
 database to be trimmed. The default size is <c><see cref="F:Java.Lang.Long.MaxValue" /></c>.
 It is recommended to leave the maximum size set to the default value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCacheMaxSize(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetAppCachePath">
      <MemberSignature Language="C#" Value="public virtual void SetAppCachePath (string appCachePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAppCachePath(string appCachePath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAppCachePath", "(Ljava/lang/String;)V", "GetSetAppCachePath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appCachePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appCachePath">a String path to the directory containing
                     Application Caches files.</param>
        <summary>Sets the path to the Application Caches files.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the path to the Application Caches files. In order for the
 Application Caches API to be enabled, this method must be called with a
 path to which the application can write. This method should only be
 called once: repeated calls are ignored.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setAppCachePath(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
        <altmember cref="M:Android.Webkit.WebSettings.SetAppCacheEnabled(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetEnableSmoothTransition">
      <MemberSignature Language="C#" Value="public virtual void SetEnableSmoothTransition (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEnableSmoothTransition(bool enable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEnableSmoothTransition", "(Z)V", "GetSetEnableSmoothTransition_ZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>Sets whether the WebView will enable smooth transition while panning or
 zooming or while the window hosting the WebView does not have focus.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the WebView will enable smooth transition while panning or
 zooming or while the window hosting the WebView does not have focus.
 If it is true, WebView will choose a solution to maximize the performance.
 e.g. the WebView's content may not be updated during the transition.
 If it is false, WebView will keep its fidelity. The default value is false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setEnableSmoothTransition(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetGeolocationDatabasePath">
      <MemberSignature Language="C#" Value="public virtual void SetGeolocationDatabasePath (string databasePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGeolocationDatabasePath(string databasePath) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGeolocationDatabasePath", "(Ljava/lang/String;)V", "GetSetGeolocationDatabasePath_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="databasePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="databasePath">a path to the directory where databases should be
                     saved.
</param>
        <summary>Sets the path where the Geolocation databases should be saved.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the path where the Geolocation databases should be saved. In order
 for Geolocation permissions and cached positions to be persisted, this
 method must be called with a path to which the application can write.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setGeolocationDatabasePath(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetGeolocationEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetGeolocationEnabled (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGeolocationEnabled(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGeolocationEnabled", "(Z)V", "GetSetGeolocationEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">whether Geolocation should be enabled
</param>
        <summary>Sets whether Geolocation is enabled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether Geolocation is enabled. The default is true.
 </para>
          <para tool="javadoc-to-mdoc">
 Please note that in order for the Geolocation API to be usable
 by a page in the WebView, the following requirements must be met:
 <list type="bullet"><item><term>an application must have permission to access the device location,
   see <c><see cref="!:NoType:android/Manifest$permission;Href=../../../reference/android/Manifest.permission.html#ACCESS_COARSE_LOCATION" /></c>,
   <c><see cref="F:Android.Manifest.Permission.AccessFineLocation" tool="ReplaceLinkValue" /></c>;
   </term></item><item><term>an application must provide an implementation of the
   <c><see cref="M:Android.Webkit.WebChromeClient.OnGeolocationPermissionsShowPrompt(System.String,.ICallback)" /></c> callback
   to receive notifications that a page is requesting access to location
   via the JavaScript Geolocation API.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
 As an option, it is possible to store previous locations and web origin
 permissions in a database. See <c><see cref="M:Android.Webkit.WebSettings.SetGeolocationDatabasePath(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setGeolocationEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetLayoutAlgorithm">
      <MemberSignature Language="C#" Value="public virtual void SetLayoutAlgorithm (Android.Webkit.WebSettings.LayoutAlgorithm l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayoutAlgorithm(class Android.Webkit.WebSettings/LayoutAlgorithm l) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayoutAlgorithm", "(Landroid/webkit/WebSettings$LayoutAlgorithm;)V", "GetSetLayoutAlgorithm_Landroid_webkit_WebSettings_LayoutAlgorithm_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Webkit.WebSettings+LayoutAlgorithm" />
      </Parameters>
      <Docs>
        <param name="l">the layout algorithm to use, as a <c><see cref="!:NoType:android/webkit/WebSettings$LayoutAlgorithm;Href=../../../reference/android/webkit/WebSettings.LayoutAlgorithm.html" /></c> value
</param>
        <summary>Sets the underlying layout algorithm.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the underlying layout algorithm. This will cause a relayout of the
 WebView. The default is <c><see cref="!:NoType:android/webkit/WebSettings$LayoutAlgorithm;Href=../../../reference/android/webkit/WebSettings.LayoutAlgorithm.html#NARROW_COLUMNS" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setLayoutAlgorithm(android.webkit.WebSettings.LayoutAlgorithm)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetNeedInitialFocus">
      <MemberSignature Language="C#" Value="public virtual void SetNeedInitialFocus (bool flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNeedInitialFocus(bool flag) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNeedInitialFocus", "(Z)V", "GetSetNeedInitialFocus_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="flag">whether the WebView needs to set a node
</param>
        <summary>Tells the WebView whether it needs to set a node to have focus when
 <c><see cref="!:Android.Webkit.WebView.requestFocus(int,android.graphics.Rect)" /></c> is called.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells the WebView whether it needs to set a node to have focus when
 <c><see cref="!:Android.Webkit.WebView.requestFocus(int,android.graphics.Rect)" /></c> is called. The
 default value is true.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setNeedInitialFocus(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPluginState">
      <MemberSignature Language="C#" Value="public virtual void SetPluginState (Android.Webkit.WebSettings.PluginState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPluginState(class Android.Webkit.WebSettings/PluginState state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPluginState", "(Landroid/webkit/WebSettings$PluginState;)V", "GetSetPluginState_Landroid_webkit_WebSettings_PluginState_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.Webkit.WebSettings+PluginState" />
      </Parameters>
      <Docs>
        <param name="state">a PluginState value</param>
        <summary>Tells the WebView to enable, disable, or have plugins on demand.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells the WebView to enable, disable, or have plugins on demand. On
 demand mode means that if a plugin exists that can handle the embedded
 content, a placeholder icon will be shown instead of the plugin. When
 the placeholder is clicked, the plugin will be enabled. The default is
 <c><see cref="!:NoType:android/webkit/WebSettings$PluginState;Href=../../../reference/android/webkit/WebSettings.PluginState.html#OFF" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setPluginState(android.webkit.WebSettings.PluginState)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetRenderPriority">
      <MemberSignature Language="C#" Value="public virtual void SetRenderPriority (Android.Webkit.WebSettings.RenderPriority priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRenderPriority(class Android.Webkit.WebSettings/RenderPriority priority) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRenderPriority", "(Landroid/webkit/WebSettings$RenderPriority;)V", "GetSetRenderPriority_Landroid_webkit_WebSettings_RenderPriority_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="priority" Type="Android.Webkit.WebSettings+RenderPriority" />
      </Parameters>
      <Docs>
        <param name="priority">the priority</param>
        <summary>Sets the priority of the Render thread.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the priority of the Render thread. Unlike the other settings, this
 one only needs to be called once per process. The default value is
 <c><see cref="!:NoType:android/webkit/WebSettings$RenderPriority;Href=../../../reference/android/webkit/WebSettings.RenderPriority.html#NORMAL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setRenderPriority(android.webkit.WebSettings.RenderPriority)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSupportMultipleWindows">
      <MemberSignature Language="C#" Value="public virtual void SetSupportMultipleWindows (bool support);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSupportMultipleWindows(bool support) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSupportMultipleWindows", "(Z)V", "GetSetSupportMultipleWindows_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="support">whether to suport multiple windows
</param>
        <summary>Sets whether the WebView whether supports multiple windows.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the WebView whether supports multiple windows. If set to
 true, <c><see cref="M:Android.Webkit.WebChromeClient.OnCreateWindow(Android.Webkit.WebView,System.Boolean,System.Boolean,System.Boolean)" /></c> must be implemented by the
 host application. The default is false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSupportMultipleWindows(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSupportZoom">
      <MemberSignature Language="C#" Value="public virtual void SetSupportZoom (bool support);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSupportZoom(bool support) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSupportZoom", "(Z)V", "GetSetSupportZoom_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="support" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="support">whether the WebView should support zoom
</param>
        <summary>Sets whether the WebView should support zooming using its on-screen zoom
 controls and gestures.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets whether the WebView should support zooming using its on-screen zoom
 controls and gestures. The particular zoom mechanisms that should be used
 can be set with <c><see cref="P:Android.Webkit.WebSettings.BuiltInZoomControls" /></c>. This setting does not
 affect zooming performed using the <c><see cref="M:Android.Webkit.WebView.ZoomIn" /></c> and
 <c><see cref="M:Android.Webkit.WebView.ZoomOut" /></c> methods. The default is true.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setSupportZoom(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTextSize">
      <MemberSignature Language="C#" Value="public virtual void SetTextSize (Android.Webkit.WebSettings.TextSize t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTextSize(class Android.Webkit.WebSettings/TextSize t) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTextSize", "(Landroid/webkit/WebSettings$TextSize;)V", "GetSetTextSize_Landroid_webkit_WebSettings_TextSize_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Android.Webkit.WebSettings+TextSize" />
      </Parameters>
      <Docs>
        <param name="t">the text size as a <c><see cref="!:NoType:android/webkit/WebSettings$TextSize;Href=../../../reference/android/webkit/WebSettings.TextSize.html" /></c> value</param>
        <summary>Sets the text size of the page.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the text size of the page. The default is <c><see cref="!:NoType:android/webkit/WebSettings$TextSize;Href=../../../reference/android/webkit/WebSettings.TextSize.html#NORMAL" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setTextSize(android.webkit.WebSettings.TextSize)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StandardFontFamily">
      <MemberSignature Language="C#" Value="public virtual string StandardFontFamily { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardFontFamily" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStandardFontFamily", "()Ljava/lang/String;", "GetGetStandardFontFamilyHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStandardFontFamily", "(Ljava/lang/String;)V", "GetSetStandardFontFamily_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the standard font family name.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getStandardFontFamily()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the standard font family name.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setStandardFontFamily(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the standard font family name. The default is "sans-serif".</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.StandardFontFamily" />
      </Docs>
    </Member>
    <Member MemberName="SupportMultipleWindows">
      <MemberSignature Language="C#" Value="public virtual bool SupportMultipleWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportMultipleWindows() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("supportMultipleWindows", "()Z", "GetSupportMultipleWindowsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether the WebView supports multiple windows.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the WebView supports multiple windows.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#supportMultipleWindows()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebSettings.SetSupportMultipleWindows(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SupportZoom">
      <MemberSignature Language="C#" Value="public virtual bool SupportZoom ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportZoom() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("supportZoom", "()Z", "GetSupportZoomHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets whether the WebView supports zoom.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets whether the WebView supports zoom.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#supportZoom()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebSettings.SetSupportZoom(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TextZoom">
      <MemberSignature Language="C#" Value="public virtual int TextZoom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextZoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTextZoom", "()I", "GetGetTextZoomHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTextZoom", "(I)V", "GetSetTextZoom_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the text zoom of the page in percent.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getTextZoom()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the text zoom of the page in percent.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setTextZoom(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the text zoom of the page in percent. The default is 100.</para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Webkit.WebSettings.TextZoom" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDoubleTree">
      <MemberSignature Language="C#" Value="public virtual bool UseDoubleTree { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDoubleTree" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUseDoubleTree", "()Z", "GetGetUseDoubleTreeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUseDoubleTree", "(Z)V", "GetSetUseDoubleTree_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public virtual int UserAgent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUserAgent", "()I", "GetGetUserAgentHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUserAgent", "(I)V", "GetSetUserAgent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgentString">
      <MemberSignature Language="C#" Value="public virtual string UserAgentString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgentString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUserAgentString", "()Ljava/lang/String;", "GetGetUserAgentStringHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUserAgentString", "(Ljava/lang/String;)V", "GetSetUserAgentString_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the WebView's user-agent string.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getUserAgentString()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the WebView's user-agent string.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setUserAgentString(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the WebView's user-agent string. If the string is null or empty,
 the system default value will be used.

 Note that starting from <c><see cref="F:Android.OS.Build+VERSION_CODES.KitKat" tool="ReplaceLinkValue" /></c> Android
 version, changing the user-agent while loading a web page causes WebView
 to initiate loading once again.</para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Webkit.WebSettings.UserAgentString" />
      </Docs>
    </Member>
    <Member MemberName="UseWebViewBackgroundForOverscrollBackground">
      <MemberSignature Language="C#" Value="public virtual bool UseWebViewBackgroundForOverscrollBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWebViewBackgroundForOverscrollBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUseWebViewBackgroundForOverscrollBackground", "()Z", "GetGetUseWebViewBackgroundForOverscrollBackgroundHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUseWebViewBackgroundForOverscrollBackground", "(Z)V", "GetSetUseWebViewBackgroundForOverscrollBackground_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseWideViewPort">
      <MemberSignature Language="C#" Value="public virtual bool UseWideViewPort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseWideViewPort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUseWideViewPort", "()Z", "GetGetUseWideViewPortHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setUseWideViewPort", "(Z)V", "GetSetUseWideViewPort_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Gets whether the WebView supports the "viewport"
 HTML meta tag or will use a wide viewport.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#getUseWideViewPort()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets whether the WebView supports the "viewport"
 HTML meta tag or will use a wide viewport.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/webkit/WebSettings.html#setUseWideViewPort(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether the WebView should enable support for the "viewport"
 HTML meta tag or should use a wide viewport.
 When the value of the setting is false, the layout width is always set to the
 width of the WebView control in device-independent (CSS) pixels.
 When the value is true and the page contains the viewport meta tag, the value
 of the width specified in the tag is used. If the page does not contain the tag or
 does not provide a width, then a wide viewport will be used.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Webkit.WebSettings.UseWideViewPort" />
      </Docs>
    </Member>
  </Members>
</Type>
