<Type Name="WebViewClient" FullName="Android.Webkit.WebViewClient">
  <TypeSignature Language="F#" Value="type WebViewClient = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public class WebViewClient : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebViewClient extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Webkit.WebViewClient" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/webkit/WebViewClient", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/webkit/WebViewClient" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebViewClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Webkit.WebViewClient : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Webkit.WebViewClient" Usage="new Android.Webkit.WebViewClient (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected WebViewClient (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoUpdateVisitedHistory">
      <MemberSignature Language="F#" Value="abstract member DoUpdateVisitedHistory : Android.Webkit.WebView * string * bool -&gt; unit&#xA;override this.DoUpdateVisitedHistory : Android.Webkit.WebView * string * bool -&gt; unit" Usage="webViewClient.DoUpdateVisitedHistory (view, url, isReload)" />
      <MemberSignature Language="C#" Value="public virtual void DoUpdateVisitedHistory (Android.Webkit.WebView? view, string? url, bool isReload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoUpdateVisitedHistory(class Android.Webkit.WebView view, string url, bool isReload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.DoUpdateVisitedHistory(Android.Webkit.WebView,System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doUpdateVisitedHistory", "(Landroid/webkit/WebView;Ljava/lang/String;Z)V", "GetDoUpdateVisitedHistory_Landroid_webkit_WebView_Ljava_lang_String_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="isReload" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="url">The url being visited.</param>
        <param name="isReload">
          <c>true</c> if this url is being reloaded.</param>
        <summary>Notify the host application to update its visited links database.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#doUpdateVisitedHistory(android.webkit.WebView,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.doUpdateVisitedHistory(android.webkit.WebView, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Webkit.WebViewClient.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Webkit.WebViewClient.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFormResubmission">
      <MemberSignature Language="F#" Value="abstract member OnFormResubmission : Android.Webkit.WebView * Android.OS.Message * Android.OS.Message -&gt; unit&#xA;override this.OnFormResubmission : Android.Webkit.WebView * Android.OS.Message * Android.OS.Message -&gt; unit" Usage="webViewClient.OnFormResubmission (view, dontResend, resend)" />
      <MemberSignature Language="C#" Value="public virtual void OnFormResubmission (Android.Webkit.WebView? view, Android.OS.Message? dontResend, Android.OS.Message? resend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFormResubmission(class Android.Webkit.WebView view, class Android.OS.Message dontResend, class Android.OS.Message resend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnFormResubmission(Android.Webkit.WebView,Android.OS.Message,Android.OS.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFormResubmission", "(Landroid/webkit/WebView;Landroid/os/Message;Landroid/os/Message;)V", "GetOnFormResubmission_Landroid_webkit_WebView_Landroid_os_Message_Landroid_os_Message_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="dontResend" Type="Android.OS.Message" />
        <Parameter Name="resend" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="dontResend">The message to send if the browser should not resend</param>
        <param name="resend">The message to send if the browser should resend data</param>
        <summary>As the host application if the browser should resend data as the
            requested page was a result of a POST.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onFormResubmission(android.webkit.WebView,%20android.os.Message,%20android.os.Message)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onFormResubmission(android.webkit.WebView, android.os.Message, android.os.Message)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLoadResource">
      <MemberSignature Language="F#" Value="abstract member OnLoadResource : Android.Webkit.WebView * string -&gt; unit&#xA;override this.OnLoadResource : Android.Webkit.WebView * string -&gt; unit" Usage="webViewClient.OnLoadResource (view, url)" />
      <MemberSignature Language="C#" Value="public virtual void OnLoadResource (Android.Webkit.WebView? view, string? url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLoadResource(class Android.Webkit.WebView view, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnLoadResource(Android.Webkit.WebView,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLoadResource", "(Landroid/webkit/WebView;Ljava/lang/String;)V", "GetOnLoadResource_Landroid_webkit_WebView_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="url">The url of the resource the WebView will load.</param>
        <summary>Notify the host application that the WebView will load the resource
            specified by the given url.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onLoadResource(android.webkit.WebView,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onLoadResource(android.webkit.WebView, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPageCommitVisible">
      <MemberSignature Language="F#" Value="abstract member OnPageCommitVisible : Android.Webkit.WebView * string -&gt; unit&#xA;override this.OnPageCommitVisible : Android.Webkit.WebView * string -&gt; unit" Usage="webViewClient.OnPageCommitVisible (view, url)" />
      <MemberSignature Language="C#" Value="public virtual void OnPageCommitVisible (Android.Webkit.WebView? view, string? url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageCommitVisible(class Android.Webkit.WebView view, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnPageCommitVisible(Android.Webkit.WebView,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPageCommitVisible", "(Landroid/webkit/WebView;Ljava/lang/String;)V", "GetOnPageCommitVisible_Landroid_webkit_WebView_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The <c>android.webkit.WebView</c> for which the navigation occurred.</param>
        <param name="url">The URL corresponding to the page navigation that triggered this callback.</param>
        <summary>Notify the host application that <c>android.webkit.WebView</c> content left over from
            previous page navigations will no longer be drawn.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onPageCommitVisible(android.webkit.WebView,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onPageCommitVisible(android.webkit.WebView, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPageFinished">
      <MemberSignature Language="F#" Value="abstract member OnPageFinished : Android.Webkit.WebView * string -&gt; unit&#xA;override this.OnPageFinished : Android.Webkit.WebView * string -&gt; unit" Usage="webViewClient.OnPageFinished (view, url)" />
      <MemberSignature Language="C#" Value="public virtual void OnPageFinished (Android.Webkit.WebView? view, string? url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageFinished(class Android.Webkit.WebView view, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnPageFinished(Android.Webkit.WebView,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPageFinished", "(Landroid/webkit/WebView;Ljava/lang/String;)V", "GetOnPageFinished_Landroid_webkit_WebView_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="url">The url of the page.</param>
        <summary>Notify the host application that a page has finished loading.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onPageFinished(android.webkit.WebView,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onPageFinished(android.webkit.WebView, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnPageStarted">
      <MemberSignature Language="F#" Value="abstract member OnPageStarted : Android.Webkit.WebView * string * Android.Graphics.Bitmap -&gt; unit&#xA;override this.OnPageStarted : Android.Webkit.WebView * string * Android.Graphics.Bitmap -&gt; unit" Usage="webViewClient.OnPageStarted (view, url, favicon)" />
      <MemberSignature Language="C#" Value="public virtual void OnPageStarted (Android.Webkit.WebView? view, string? url, Android.Graphics.Bitmap? favicon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPageStarted(class Android.Webkit.WebView view, string url, class Android.Graphics.Bitmap favicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnPageStarted(Android.Webkit.WebView,System.String,Android.Graphics.Bitmap)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPageStarted", "(Landroid/webkit/WebView;Ljava/lang/String;Landroid/graphics/Bitmap;)V", "GetOnPageStarted_Landroid_webkit_WebView_Ljava_lang_String_Landroid_graphics_Bitmap_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="favicon" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="url">The url to be loaded.</param>
        <param name="favicon">The favicon for this page if it already exists in the
                       database.</param>
        <summary>Notify the host application that a page has started loading.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onPageStarted(android.webkit.WebView,%20java.lang.String,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onPageStarted(android.webkit.WebView, java.lang.String, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnReceivedClientCertRequest">
      <MemberSignature Language="F#" Value="abstract member OnReceivedClientCertRequest : Android.Webkit.WebView * Android.Webkit.ClientCertRequest -&gt; unit&#xA;override this.OnReceivedClientCertRequest : Android.Webkit.WebView * Android.Webkit.ClientCertRequest -&gt; unit" Usage="webViewClient.OnReceivedClientCertRequest (view, request)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedClientCertRequest (Android.Webkit.WebView? view, Android.Webkit.ClientCertRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedClientCertRequest(class Android.Webkit.WebView view, class Android.Webkit.ClientCertRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedClientCertRequest(Android.Webkit.WebView,Android.Webkit.ClientCertRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedClientCertRequest", "(Landroid/webkit/WebView;Landroid/webkit/ClientCertRequest;)V", "GetOnReceivedClientCertRequest_Landroid_webkit_WebView_Landroid_webkit_ClientCertRequest_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.ClientCertRequest" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback</param>
        <param name="request">An instance of a <c>ClientCertRequest</c></param>
        <summary>Notify the host application to handle a SSL client certificate request.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedClientCertRequest(android.webkit.WebView,%20android.webkit.ClientCertRequest)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedClientCertRequest(android.webkit.WebView, android.webkit.ClientCertRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceivedError">
      <MemberSignature Language="F#" Value="abstract member OnReceivedError : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.WebResourceError -&gt; unit&#xA;override this.OnReceivedError : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.WebResourceError -&gt; unit" Usage="webViewClient.OnReceivedError (view, request, error)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedError (Android.Webkit.WebView? view, Android.Webkit.IWebResourceRequest? request, Android.Webkit.WebResourceError? error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedError(class Android.Webkit.WebView view, class Android.Webkit.IWebResourceRequest request, class Android.Webkit.WebResourceError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedError(Android.Webkit.WebView,Android.Webkit.IWebResourceRequest,Android.Webkit.WebResourceError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedError", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;Landroid/webkit/WebResourceError;)V", "GetOnReceivedError_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Landroid_webkit_WebResourceError_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.IWebResourceRequest" />
        <Parameter Name="error" Type="Android.Webkit.WebResourceError" />
      </Parameters>
      <Docs>
        <param name="request">To be added.</param>
        <param name="error">To be added.</param>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="errorCode">The error code corresponding to an ERROR_* value.</param>
        <param name="description">A String describing the error.</param>
        <param name="failingUrl">The url that failed to load.</param>
        <summary>Report an error to the host application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedError(android.webkit.WebView,%20int,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceivedError">
      <MemberSignature Language="F#" Value="abstract member OnReceivedError : Android.Webkit.WebView * Android.Webkit.ClientError * string * string -&gt; unit&#xA;override this.OnReceivedError : Android.Webkit.WebView * Android.Webkit.ClientError * string * string -&gt; unit" Usage="webViewClient.OnReceivedError (view, errorCode, description, failingUrl)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedError (Android.Webkit.WebView? view, Android.Webkit.ClientError errorCode, string? description, string? failingUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedError(class Android.Webkit.WebView view, valuetype Android.Webkit.ClientError errorCode, string description, string failingUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedError(Android.Webkit.WebView,Android.Webkit.ClientError,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedError", "(Landroid/webkit/WebView;ILjava/lang/String;Ljava/lang/String;)V", "GetOnReceivedError_Landroid_webkit_WebView_ILjava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="errorCode" Type="Android.Webkit.ClientError">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="failingUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="errorCode">The error code corresponding to an ERROR_* value.</param>
        <param name="description">A String describing the error.</param>
        <param name="failingUrl">The url that failed to load.</param>
        <summary>Report an error to the host application.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedError(android.webkit.WebView,%20int,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnReceivedHttpAuthRequest">
      <MemberSignature Language="F#" Value="abstract member OnReceivedHttpAuthRequest : Android.Webkit.WebView * Android.Webkit.HttpAuthHandler * string * string -&gt; unit&#xA;override this.OnReceivedHttpAuthRequest : Android.Webkit.WebView * Android.Webkit.HttpAuthHandler * string * string -&gt; unit" Usage="webViewClient.OnReceivedHttpAuthRequest (view, handler, host, realm)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedHttpAuthRequest (Android.Webkit.WebView? view, Android.Webkit.HttpAuthHandler? handler, string? host, string? realm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedHttpAuthRequest(class Android.Webkit.WebView view, class Android.Webkit.HttpAuthHandler handler, string host, string realm) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedHttpAuthRequest(Android.Webkit.WebView,Android.Webkit.HttpAuthHandler,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedHttpAuthRequest", "(Landroid/webkit/WebView;Landroid/webkit/HttpAuthHandler;Ljava/lang/String;Ljava/lang/String;)V", "GetOnReceivedHttpAuthRequest_Landroid_webkit_WebView_Landroid_webkit_HttpAuthHandler_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="handler" Type="Android.Webkit.HttpAuthHandler" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="realm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">the WebView that is initiating the callback</param>
        <param name="handler">the HttpAuthHandler used to set the WebView's response</param>
        <param name="host">the host requiring authentication</param>
        <param name="realm">the realm for which authentication is required</param>
        <summary>Notifies the host application that the WebView received an HTTP
            authentication request.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedHttpAuthRequest(android.webkit.WebView,%20android.webkit.HttpAuthHandler,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedHttpAuthRequest(android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Webkit.WebView.GetHttpAuthUsernamePassword(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="OnReceivedHttpError">
      <MemberSignature Language="F#" Value="abstract member OnReceivedHttpError : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.WebResourceResponse -&gt; unit&#xA;override this.OnReceivedHttpError : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.WebResourceResponse -&gt; unit" Usage="webViewClient.OnReceivedHttpError (view, request, errorResponse)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedHttpError (Android.Webkit.WebView? view, Android.Webkit.IWebResourceRequest? request, Android.Webkit.WebResourceResponse? errorResponse);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedHttpError(class Android.Webkit.WebView view, class Android.Webkit.IWebResourceRequest request, class Android.Webkit.WebResourceResponse errorResponse) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedHttpError(Android.Webkit.WebView,Android.Webkit.IWebResourceRequest,Android.Webkit.WebResourceResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedHttpError", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;Landroid/webkit/WebResourceResponse;)V", "GetOnReceivedHttpError_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Landroid_webkit_WebResourceResponse_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.IWebResourceRequest" />
        <Parameter Name="errorResponse" Type="Android.Webkit.WebResourceResponse" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="request">The originating request.</param>
        <param name="errorResponse">Information about the error occurred.</param>
        <summary>Notify the host application that an HTTP error has been received from the server while
            loading a resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedHttpError(android.webkit.WebView,%20android.webkit.WebResourceRequest,%20android.webkit.WebResourceResponse)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedHttpError(android.webkit.WebView, android.webkit.WebResourceRequest, android.webkit.WebResourceResponse)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceivedLoginRequest">
      <MemberSignature Language="F#" Value="abstract member OnReceivedLoginRequest : Android.Webkit.WebView * string * string * string -&gt; unit&#xA;override this.OnReceivedLoginRequest : Android.Webkit.WebView * string * string * string -&gt; unit" Usage="webViewClient.OnReceivedLoginRequest (view, realm, account, args)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedLoginRequest (Android.Webkit.WebView? view, string? realm, string? account, string? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedLoginRequest(class Android.Webkit.WebView view, string realm, string account, string args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedLoginRequest(Android.Webkit.WebView,System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedLoginRequest", "(Landroid/webkit/WebView;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetOnReceivedLoginRequest_Landroid_webkit_WebView_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="realm" Type="System.String" />
        <Parameter Name="account" Type="System.String" />
        <Parameter Name="args" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="view">The WebView requesting the login.</param>
        <param name="realm">The account realm used to look up accounts.</param>
        <param name="account">An optional account. If not <c>null</c>, the account should be
                           checked against accounts on the device. If it is a valid
                           account, it should be used to log in the user.</param>
        <param name="args">Authenticator specific arguments used to log in the user.</param>
        <summary>Notify the host application that a request to automatically log in the
            user has been processed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedLoginRequest(android.webkit.WebView,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedLoginRequest(android.webkit.WebView, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="OnReceivedSslError">
      <MemberSignature Language="F#" Value="abstract member OnReceivedSslError : Android.Webkit.WebView * Android.Webkit.SslErrorHandler * Android.Net.Http.SslError -&gt; unit&#xA;override this.OnReceivedSslError : Android.Webkit.WebView * Android.Webkit.SslErrorHandler * Android.Net.Http.SslError -&gt; unit" Usage="webViewClient.OnReceivedSslError (view, handler, error)" />
      <MemberSignature Language="C#" Value="public virtual void OnReceivedSslError (Android.Webkit.WebView? view, Android.Webkit.SslErrorHandler? handler, Android.Net.Http.SslError? error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReceivedSslError(class Android.Webkit.WebView view, class Android.Webkit.SslErrorHandler handler, class Android.Net.Http.SslError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnReceivedSslError(Android.Webkit.WebView,Android.Webkit.SslErrorHandler,Android.Net.Http.SslError)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceivedSslError", "(Landroid/webkit/WebView;Landroid/webkit/SslErrorHandler;Landroid/net/http/SslError;)V", "GetOnReceivedSslError_Landroid_webkit_WebView_Landroid_webkit_SslErrorHandler_Landroid_net_http_SslError_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="handler" Type="Android.Webkit.SslErrorHandler" />
        <Parameter Name="error" Type="Android.Net.Http.SslError" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="handler">An <c>SslErrorHandler</c> that will handle the user's
                       response.</param>
        <param name="error">The SSL error object.</param>
        <summary>Notify the host application that an SSL error occurred while loading a
            resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onReceivedSslError(android.webkit.WebView,%20android.webkit.SslErrorHandler,%20android.net.http.SslError)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onReceivedSslError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnRenderProcessGone">
      <MemberSignature Language="F#" Value="abstract member OnRenderProcessGone : Android.Webkit.WebView * Android.Webkit.RenderProcessGoneDetail -&gt; bool&#xA;override this.OnRenderProcessGone : Android.Webkit.WebView * Android.Webkit.RenderProcessGoneDetail -&gt; bool" Usage="webViewClient.OnRenderProcessGone (view, detail)" />
      <MemberSignature Language="C#" Value="public virtual bool OnRenderProcessGone (Android.Webkit.WebView? view, Android.Webkit.RenderProcessGoneDetail? detail);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnRenderProcessGone(class Android.Webkit.WebView view, class Android.Webkit.RenderProcessGoneDetail detail) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnRenderProcessGone(Android.Webkit.WebView,Android.Webkit.RenderProcessGoneDetail)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRenderProcessGone", "(Landroid/webkit/WebView;Landroid/webkit/RenderProcessGoneDetail;)Z", "GetOnRenderProcessGone_Landroid_webkit_WebView_Landroid_webkit_RenderProcessGoneDetail_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="detail" Type="Android.Webkit.RenderProcessGoneDetail" />
      </Parameters>
      <Docs>
        <param name="view">The WebView which needs to be cleaned up.</param>
        <param name="detail">the reason why it exited.</param>
        <summary>Notify host application that the given WebView's render process has exited.</summary>
        <returns>
          <c>true</c> if the host application handled the situation that process has
                    exited, otherwise, application will crash if render process crashed,
                    or be killed if render process was killed by the system.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onRenderProcessGone(android.webkit.WebView,%20android.webkit.RenderProcessGoneDetail)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onRenderProcessGone(android.webkit.WebView, android.webkit.RenderProcessGoneDetail)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSafeBrowsingHit">
      <MemberSignature Language="F#" Value="abstract member OnSafeBrowsingHit : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.SafeBrowsingThreat * Android.Webkit.SafeBrowsingResponse -&gt; unit&#xA;override this.OnSafeBrowsingHit : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest * Android.Webkit.SafeBrowsingThreat * Android.Webkit.SafeBrowsingResponse -&gt; unit" Usage="webViewClient.OnSafeBrowsingHit (view, request, threatType, callback)" />
      <MemberSignature Language="C#" Value="public virtual void OnSafeBrowsingHit (Android.Webkit.WebView? view, Android.Webkit.IWebResourceRequest? request, Android.Webkit.SafeBrowsingThreat threatType, Android.Webkit.SafeBrowsingResponse? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSafeBrowsingHit(class Android.Webkit.WebView view, class Android.Webkit.IWebResourceRequest request, valuetype Android.Webkit.SafeBrowsingThreat threatType, class Android.Webkit.SafeBrowsingResponse callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnSafeBrowsingHit(Android.Webkit.WebView,Android.Webkit.IWebResourceRequest,Android.Webkit.SafeBrowsingThreat,Android.Webkit.SafeBrowsingResponse)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSafeBrowsingHit", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;ILandroid/webkit/SafeBrowsingResponse;)V", "GetOnSafeBrowsingHit_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_ILandroid_webkit_SafeBrowsingResponse_Handler", ApiSince=27)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.IWebResourceRequest" />
        <Parameter Name="threatType" Type="Android.Webkit.SafeBrowsingThreat">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="callback" Type="Android.Webkit.SafeBrowsingResponse" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that hit the malicious resource.</param>
        <param name="request">Object containing the details of the request.</param>
        <param name="threatType">The reason the resource was caught by Safe Browsing, corresponding to a
                              <c>SAFE_BROWSING_THREAT_*</c> value.</param>
        <param name="callback">Applications must invoke one of the callback methods.</param>
        <summary>Notify the host application that a loading URL has been flagged by Safe Browsing.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onSafeBrowsingHit(android.webkit.WebView,%20android.webkit.WebResourceRequest,%20int,%20android.webkit.SafeBrowsingResponse)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onSafeBrowsingHit(android.webkit.WebView, android.webkit.WebResourceRequest, int, android.webkit.SafeBrowsingResponse)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScaleChanged">
      <MemberSignature Language="F#" Value="abstract member OnScaleChanged : Android.Webkit.WebView * single * single -&gt; unit&#xA;override this.OnScaleChanged : Android.Webkit.WebView * single * single -&gt; unit" Usage="webViewClient.OnScaleChanged (view, oldScale, newScale)" />
      <MemberSignature Language="C#" Value="public virtual void OnScaleChanged (Android.Webkit.WebView? view, float oldScale, float newScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScaleChanged(class Android.Webkit.WebView view, float32 oldScale, float32 newScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnScaleChanged(Android.Webkit.WebView,System.Single,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScaleChanged", "(Landroid/webkit/WebView;FF)V", "GetOnScaleChanged_Landroid_webkit_WebView_FFHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="oldScale" Type="System.Single" />
        <Parameter Name="newScale" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="oldScale">The old scale factor</param>
        <param name="newScale">The new scale factor</param>
        <summary>Notify the host application that the scale applied to the WebView has
            changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onScaleChanged(android.webkit.WebView,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onScaleChanged(android.webkit.WebView, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTooManyRedirects">
      <MemberSignature Language="F#" Value="abstract member OnTooManyRedirects : Android.Webkit.WebView * Android.OS.Message * Android.OS.Message -&gt; unit&#xA;override this.OnTooManyRedirects : Android.Webkit.WebView * Android.OS.Message * Android.OS.Message -&gt; unit" Usage="webViewClient.OnTooManyRedirects (view, cancelMsg, continueMsg)" />
      <MemberSignature Language="C#" Value="public virtual void OnTooManyRedirects (Android.Webkit.WebView? view, Android.OS.Message? cancelMsg, Android.OS.Message? continueMsg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTooManyRedirects(class Android.Webkit.WebView view, class Android.OS.Message cancelMsg, class Android.OS.Message continueMsg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnTooManyRedirects(Android.Webkit.WebView,Android.OS.Message,Android.OS.Message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTooManyRedirects", "(Landroid/webkit/WebView;Landroid/os/Message;Landroid/os/Message;)V", "GetOnTooManyRedirects_Landroid_webkit_WebView_Landroid_os_Message_Landroid_os_Message_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="cancelMsg" Type="Android.OS.Message" />
        <Parameter Name="continueMsg" Type="Android.OS.Message" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="cancelMsg">The message to send if the host wants to cancel</param>
        <param name="continueMsg">The message to send if the host wants to continue</param>
        <summary>Notify the host application that there have been an excessive number of
            HTTP redirects.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onTooManyRedirects(android.webkit.WebView,%20android.os.Message,%20android.os.Message)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onTooManyRedirects(android.webkit.WebView, android.os.Message, android.os.Message)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledInputEvent">
      <MemberSignature Language="F#" Value="abstract member OnUnhandledInputEvent : Android.Webkit.WebView * Android.Views.InputEvent -&gt; unit&#xA;override this.OnUnhandledInputEvent : Android.Webkit.WebView * Android.Views.InputEvent -&gt; unit" Usage="webViewClient.OnUnhandledInputEvent (view, e)" />
      <MemberSignature Language="C#" Value="public virtual void OnUnhandledInputEvent (Android.Webkit.WebView? view, Android.Views.InputEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUnhandledInputEvent(class Android.Webkit.WebView view, class Android.Views.InputEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnUnhandledInputEvent(Android.Webkit.WebView,Android.Views.InputEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUnhandledInputEvent", "(Landroid/webkit/WebView;Landroid/view/InputEvent;)V", "GetOnUnhandledInputEvent_Landroid_webkit_WebView_Landroid_view_InputEvent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="e" Type="Android.Views.InputEvent" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="e">The input event.
</param>
        <summary>Notify the host application that a input event was not handled by the WebView.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnhandledKeyEvent">
      <MemberSignature Language="F#" Value="abstract member OnUnhandledKeyEvent : Android.Webkit.WebView * Android.Views.KeyEvent -&gt; unit&#xA;override this.OnUnhandledKeyEvent : Android.Webkit.WebView * Android.Views.KeyEvent -&gt; unit" Usage="webViewClient.OnUnhandledKeyEvent (view, e)" />
      <MemberSignature Language="C#" Value="public virtual void OnUnhandledKeyEvent (Android.Webkit.WebView? view, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUnhandledKeyEvent(class Android.Webkit.WebView view, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.OnUnhandledKeyEvent(Android.Webkit.WebView,Android.Views.KeyEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUnhandledKeyEvent", "(Landroid/webkit/WebView;Landroid/view/KeyEvent;)V", "GetOnUnhandledKeyEvent_Landroid_webkit_WebView_Landroid_view_KeyEvent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="event">The key event.</param>
        <summary>Notify the host application that a key was not handled by the WebView.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#onUnhandledKeyEvent(android.webkit.WebView,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.onUnhandledKeyEvent(android.webkit.WebView, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShouldInterceptRequest">
      <MemberSignature Language="F#" Value="abstract member ShouldInterceptRequest : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest -&gt; Android.Webkit.WebResourceResponse&#xA;override this.ShouldInterceptRequest : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest -&gt; Android.Webkit.WebResourceResponse" Usage="webViewClient.ShouldInterceptRequest (view, request)" />
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebResourceResponse? ShouldInterceptRequest (Android.Webkit.WebView? view, Android.Webkit.IWebResourceRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebResourceResponse ShouldInterceptRequest(class Android.Webkit.WebView view, class Android.Webkit.IWebResourceRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.ShouldInterceptRequest(Android.Webkit.WebView,Android.Webkit.IWebResourceRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldInterceptRequest", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;)Landroid/webkit/WebResourceResponse;", "GetShouldInterceptRequest_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebResourceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.IWebResourceRequest" />
      </Parameters>
      <Docs>
        <param name="view">The <c>android.webkit.WebView</c> that is requesting the
                        resource.</param>
        <param name="request">Object containing the details of the request.</param>
        <summary>Notify the host application of a resource request and allow the
            application to return the data.</summary>
        <returns>A <c>android.webkit.WebResourceResponse</c> containing the
                    response information or <c>null</c> if the WebView should load the
                    resource itself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#shouldInterceptRequest(android.webkit.WebView,%20android.webkit.WebResourceRequest)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.shouldInterceptRequest(android.webkit.WebView, android.webkit.WebResourceRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldInterceptRequest">
      <MemberSignature Language="F#" Value="abstract member ShouldInterceptRequest : Android.Webkit.WebView * string -&gt; Android.Webkit.WebResourceResponse&#xA;override this.ShouldInterceptRequest : Android.Webkit.WebView * string -&gt; Android.Webkit.WebResourceResponse" Usage="webViewClient.ShouldInterceptRequest (view, url)" />
      <MemberSignature Language="C#" Value="public virtual Android.Webkit.WebResourceResponse? ShouldInterceptRequest (Android.Webkit.WebView? view, string? url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Webkit.WebResourceResponse ShouldInterceptRequest(class Android.Webkit.WebView view, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.ShouldInterceptRequest(Android.Webkit.WebView,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldInterceptRequest", "(Landroid/webkit/WebView;Ljava/lang/String;)Landroid/webkit/WebResourceResponse;", "GetShouldInterceptRequest_Landroid_webkit_WebView_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Webkit.WebResourceResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The raw url of the resource.</param>
        <param name="view">The <c>android.webkit.WebView</c> that is requesting the
                        resource.</param>
        <param name="request">Object containing the details of the request.</param>
        <summary>Notify the host application of a resource request and allow the
            application to return the data.</summary>
        <returns>A <c>android.webkit.WebResourceResponse</c> containing the
                    response information or <c>null</c> if the WebView should load the
                    resource itself.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#shouldInterceptRequest(android.webkit.WebView,%20android.webkit.WebResourceRequest)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.shouldInterceptRequest(android.webkit.WebView, android.webkit.WebResourceRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ShouldOverrideKeyEvent">
      <MemberSignature Language="F#" Value="abstract member ShouldOverrideKeyEvent : Android.Webkit.WebView * Android.Views.KeyEvent -&gt; bool&#xA;override this.ShouldOverrideKeyEvent : Android.Webkit.WebView * Android.Views.KeyEvent -&gt; bool" Usage="webViewClient.ShouldOverrideKeyEvent (view, e)" />
      <MemberSignature Language="C#" Value="public virtual bool ShouldOverrideKeyEvent (Android.Webkit.WebView? view, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldOverrideKeyEvent(class Android.Webkit.WebView view, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.ShouldOverrideKeyEvent(Android.Webkit.WebView,Android.Views.KeyEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldOverrideKeyEvent", "(Landroid/webkit/WebView;Landroid/view/KeyEvent;)Z", "GetShouldOverrideKeyEvent_Landroid_webkit_WebView_Landroid_view_KeyEvent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event.</param>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="event">The key event.</param>
        <summary>Give the host application a chance to handle the key event synchronously.</summary>
        <returns>
          <c>true</c> if the host application wants to handle the key event
                    itself, otherwise return <c>false</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#shouldOverrideKeyEvent(android.webkit.WebView,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.shouldOverrideKeyEvent(android.webkit.WebView, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShouldOverrideUrlLoading">
      <MemberSignature Language="F#" Value="abstract member ShouldOverrideUrlLoading : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest -&gt; bool&#xA;override this.ShouldOverrideUrlLoading : Android.Webkit.WebView * Android.Webkit.IWebResourceRequest -&gt; bool" Usage="webViewClient.ShouldOverrideUrlLoading (view, request)" />
      <MemberSignature Language="C#" Value="public virtual bool ShouldOverrideUrlLoading (Android.Webkit.WebView? view, Android.Webkit.IWebResourceRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldOverrideUrlLoading(class Android.Webkit.WebView view, class Android.Webkit.IWebResourceRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.ShouldOverrideUrlLoading(Android.Webkit.WebView,Android.Webkit.IWebResourceRequest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldOverrideUrlLoading", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;)Z", "GetShouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="request" Type="Android.Webkit.IWebResourceRequest" />
      </Parameters>
      <Docs>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="request">Object containing the details of the request.</param>
        <summary>Give the host application a chance to take control when a URL is about to be loaded in the
            current WebView.</summary>
        <returns>
          <c>true</c> to cancel the current load, otherwise return <c>false</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#shouldOverrideUrlLoading(android.webkit.WebView,%20android.webkit.WebResourceRequest)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.shouldOverrideUrlLoading(android.webkit.WebView, android.webkit.WebResourceRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldOverrideUrlLoading">
      <MemberSignature Language="F#" Value="abstract member ShouldOverrideUrlLoading : Android.Webkit.WebView * string -&gt; bool&#xA;override this.ShouldOverrideUrlLoading : Android.Webkit.WebView * string -&gt; bool" Usage="webViewClient.ShouldOverrideUrlLoading (view, url)" />
      <MemberSignature Language="C#" Value="public virtual bool ShouldOverrideUrlLoading (Android.Webkit.WebView? view, string? url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldOverrideUrlLoading(class Android.Webkit.WebView view, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Webkit.WebViewClient.ShouldOverrideUrlLoading(Android.Webkit.WebView,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldOverrideUrlLoading", "(Landroid/webkit/WebView;Ljava/lang/String;)Z", "GetShouldOverrideUrlLoading_Landroid_webkit_WebView_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Webkit.WebView" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">The url to be loaded.</param>
        <param name="view">The WebView that is initiating the callback.</param>
        <param name="request">Object containing the details of the request.</param>
        <summary>Give the host application a chance to take control when a URL is about to be loaded in the
            current WebView.</summary>
        <returns>
          <c>true</c> to cancel the current load, otherwise return <c>false</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/webkit/WebViewClient#shouldOverrideUrlLoading(android.webkit.WebView,%20android.webkit.WebResourceRequest)" title="Reference documentation">Java documentation for <code>android.webkit.WebViewClient.shouldOverrideUrlLoading(android.webkit.WebView, android.webkit.WebResourceRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Webkit.WebViewClient.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Webkit.WebViewClient.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Webkit.WebViewClient.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Webkit.WebViewClient.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
