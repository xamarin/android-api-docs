<Type Name="BackupDataInput" FullName="Android.App.Backup.BackupDataInput">
  <TypeSignature Language="C#" Value="public class BackupDataInput : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackupDataInput extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.Backup.BackupDataInput" />
  <TypeSignature Language="F#" Value="type BackupDataInput = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/backup/BackupDataInput", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/backup/BackupDataInput", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Provides the structured interface through which a <c>BackupAgent</c> reads
            information from the backup data set, via its
            <c>BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()</c>
            method.</summary>
    <remarks>
      <para>Provides the structured interface through which a <c>BackupAgent</c> reads
            information from the backup data set, via its
            <c>BackupAgent#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor) onRestore()</c>
            method.  The data is presented as a set of "entities," each
            representing one named record as previously stored by the agent's
            <c>BackupAgent#onBackup(ParcelFileDescriptor,BackupDataOutput,ParcelFileDescriptor)
            onBackup()</c> implementation.  An entity is composed of a descriptive header plus a
            byte array that holds the raw data saved in the remote backup.</para>
      <para>The agent must consume every entity in the data stream, otherwise the
            restored state of the application will be incomplete.
            &lt;h3&gt;Example&lt;/h3&gt;</para>
      <para>A typical
            <c>BackupAgent#onRestore(BackupDataInput,int,ParcelFileDescriptor)
            onRestore()</c> implementation might be structured something like this:</para>
      <code lang="text/java">public void onRestore(BackupDataInput data, int appVersionCode,
                                  ParcelFileDescriptor newState) {
                while (data.readNextHeader()) {
                    String key = data.getKey();
                    int dataSize = data.getDataSize();
            
                    if (key.equals(MY_BACKUP_KEY_ONE)) {
                        // process this kind of record here
                        byte[] buffer = new byte[dataSize];
                        data.readEntityData(buffer, 0, dataSize); // reads the entire entity at once
            
                        // now 'buffer' holds the raw data and can be processed however
                        // the agent wishes
                        processBackupKeyOne(buffer);
                    } else if (key.equals(MY_BACKUP_KEY_TO_IGNORE) {
                        // a key we recognize but wish to discard
                        data.skipEntityData();
                    } // ... etc.
               }
            }</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BackupDataInput (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Backup.BackupDataInput : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Backup.BackupDataInput" Usage="new Android.App.Backup.BackupDataInput (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSize">
      <MemberSignature Language="C#" Value="public virtual int DataSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataSize" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupDataInput.DataSize" />
      <MemberSignature Language="F#" Value="member this.DataSize : int" Usage="Android.App.Backup.BackupDataInput.DataSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDataSize", "()I", "GetGetDataSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDataSize", "()I", "GetGetDataSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Report the size in bytes of the data associated with the current entity in the
            restore stream.</summary>
        <value>The size of the record's raw data, in bytes</value>
        <remarks>
          <para>Report the size in bytes of the data associated with the current entity in the
            restore stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput#getDataSize()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput.getDataSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next record header has not yet been read
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupDataInput.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Backup.BackupDataInput.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual string? Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Key" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupDataInput.Key" />
      <MemberSignature Language="F#" Value="member this.Key : string" Usage="Android.App.Backup.BackupDataInput.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKey", "()Ljava/lang/String;", "GetGetKeyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKey", "()Ljava/lang/String;", "GetGetKeyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Report the key associated with the current entity in the restore stream</summary>
        <value>the current entity's key string</value>
        <remarks>
          <para>Report the key associated with the current entity in the restore stream</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput#getKey()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput.getKey()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">if the next record header has not yet been read
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityData">
      <MemberSignature Language="C#" Value="public virtual int ReadEntityData (byte[]? data, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadEntityData(unsigned int8[] data, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.ReadEntityData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReadEntityData : byte[] * int * int -&gt; int&#xA;override this.ReadEntityData : byte[] * int * int -&gt; int" Usage="backupDataInput.ReadEntityData (data, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readEntityData", "([BII)I", "GetReadEntityData_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readEntityData", "([BII)I", "GetReadEntityData_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">An allocated byte array of at least 'size' bytes</param>
        <param name="offset">Offset within the 'data' array at which the data will be placed
               when read from the stream</param>
        <param name="size">The number of bytes to read in this pass</param>
        <summary>Read a record's raw data from the restore stream.</summary>
        <returns>The number of bytes of data read.  Once all of the data for this entity
               has been read, further calls to this method will return zero.</returns>
        <remarks>
          <para>Read a record's raw data from the restore stream.  The record's header must first
            have been processed by the <c>#readNextHeader()</c> method.  Multiple calls to
            this method may be made in order to process the data in chunks; not all of it
            must be read in a single call.  Once all of the raw data for the current entity
            has been read, further calls to this method will simply return zero.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput#readEntityData(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput.readEntityData(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if an error occurred when trying to read the restore data stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadEntityDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadEntityDataAsync (byte[]? data, int offset, int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadEntityDataAsync(unsigned int8[] data, int32 offset, int32 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.ReadEntityDataAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadEntityDataAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="backupDataInput.ReadEntityDataAsync (data, offset, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="size">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadNextHeader">
      <MemberSignature Language="C#" Value="public virtual bool ReadNextHeader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReadNextHeader() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.ReadNextHeader" />
      <MemberSignature Language="F#" Value="abstract member ReadNextHeader : unit -&gt; bool&#xA;override this.ReadNextHeader : unit -&gt; bool" Usage="backupDataInput.ReadNextHeader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readNextHeader", "()Z", "GetReadNextHeaderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readNextHeader", "()Z", "GetReadNextHeaderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Extract the next entity header from the restore stream.</summary>
        <returns>
          <c>true</c> when there is an entity ready for consumption from the
               restore stream, <c>false</c> if the restore stream has been fully consumed.</returns>
        <remarks>
          <para>Extract the next entity header from the restore stream.  After this method
            return success, the <c>#getKey()</c> and <c>#getDataSize()</c> methods can
            be used to inspect the entity that is now available for processing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput#readNextHeader()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput.readNextHeader()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if an error occurred while reading the restore stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReadNextHeaderAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; ReadNextHeaderAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; ReadNextHeaderAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.ReadNextHeaderAsync" />
      <MemberSignature Language="F#" Value="member this.ReadNextHeaderAsync : unit -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="backupDataInput.ReadNextHeaderAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEntityData">
      <MemberSignature Language="C#" Value="public virtual void SkipEntityData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SkipEntityData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.SkipEntityData" />
      <MemberSignature Language="F#" Value="abstract member SkipEntityData : unit -&gt; unit&#xA;override this.SkipEntityData : unit -&gt; unit" Usage="backupDataInput.SkipEntityData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("skipEntityData", "()V", "GetSkipEntityDataHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("skipEntityData", "()V", "GetSkipEntityDataHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Consume the current entity's data without extracting it into a buffer
            for further processing.</summary>
        <remarks>
          <para>Consume the current entity's data without extracting it into a buffer
            for further processing.  This allows a <c>android.app.backup.BackupAgent</c> to
            efficiently discard obsolete or otherwise uninteresting records during the
            restore operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupDataInput#skipEntityData()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupDataInput.skipEntityData()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException">if an error occurred when trying to read the restore data stream
</exception>
      </Docs>
    </Member>
    <Member MemberName="SkipEntityDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SkipEntityDataAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SkipEntityDataAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupDataInput.SkipEntityDataAsync" />
      <MemberSignature Language="F#" Value="member this.SkipEntityDataAsync : unit -&gt; System.Threading.Tasks.Task" Usage="backupDataInput.SkipEntityDataAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupDataInput.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Backup.BackupDataInput.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupDataInput.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Backup.BackupDataInput.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
