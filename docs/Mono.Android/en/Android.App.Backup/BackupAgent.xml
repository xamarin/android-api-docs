<Type Name="BackupAgent" FullName="Android.App.Backup.BackupAgent">
  <TypeSignature Language="C#" Value="public abstract class BackupAgent : Android.Content.ContextWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BackupAgent extends Android.Content.ContextWrapper" />
  <TypeSignature Language="DocId" Value="T:Android.App.Backup.BackupAgent" />
  <TypeSignature Language="F#" Value="type BackupAgent = class&#xA;    inherit ContextWrapper" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.ContextWrapper</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/backup/BackupAgent", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/backup/BackupAgent", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Provides the central interface between an
            application and Android's data backup infrastructure.</summary>
    <remarks>
      <para>Provides the central interface between an
            application and Android's data backup infrastructure.  An application that wishes
            to participate in the backup and restore mechanism will declare a subclass of
            <c>android.app.backup.BackupAgent</c>, implement the
            <c>#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()</c>
            and <c>#onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()</c> methods,
            and provide the name of its backup agent class in its <c>AndroidManifest.xml</c> file via
            the <c>
            &lt;a href="{@docRoot}guide/topics/manifest/application-element.html"&gt;&amp;lt;application&amp;gt;&lt;/a&gt;</c>
            tag's <c>android:backupAgent</c> attribute.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about using BackupAgent, read the
            <see href="https://developer.android.com/guide/topics/data/backup.html">Data Backup</see> developer guide.</para>
      <para>&lt;/div&gt;
            
            &lt;h3&gt;Basic Operation&lt;/h3&gt;</para>
      <para>When the application makes changes to data that it wishes to keep backed up,
            it should call the
            <c>android.app.backup.BackupManager#dataChanged() BackupManager.dataChanged()</c> method.
            This notifies the Android Backup Manager that the application needs an opportunity
            to update its backup image.  The Backup Manager, in turn, schedules a
            backup pass to be performed at an opportune time.</para>
      <para>Restore operations are typically performed only when applications are first
            installed on a device.  At that time, the operating system checks to see whether
            there is a previously-saved data set available for the application being installed, and if so,
            begins an immediate restore pass to deliver the backup data as part of the installation
            process.</para>
      <para>When a backup or restore pass is run, the application's process is launched
            (if not already running), the manifest-declared backup agent class (in the <c>android:backupAgent</c> attribute) is instantiated within
            that process, and the agent's <c>#onCreate()</c> method is invoked.  This prepares the
            agent instance to run the actual backup or restore logic.  At this point the
            agent's
            <c>#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()</c> or
            <c>#onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()</c> method will be
            invoked as appropriate for the operation being performed.</para>
      <para>A backup data set consists of one or more "entities," flattened binary data
            records that are each identified with a key string unique within the data set.  Adding a
            record to the active data set or updating an existing record is done by simply
            writing new entity data under the desired key.  Deleting an entity from the data set
            is done by writing an entity under that key with header specifying a negative data
            size, and no actual entity data.</para>
      <para>&lt;b&gt;Helper Classes&lt;/b&gt;</para>
      <para>An extensible agent based on convenient helper classes is available in
            <c>android.app.backup.BackupAgentHelper</c>.  That class is particularly
            suited to handling of simple file or <c>android.content.SharedPreferences</c>
            backup and restore.</para>
      <para>&lt;b&gt;Threading&lt;/b&gt;</para>
      <para>The constructor, as well as <c>#onCreate()</c> and <c>#onDestroy()</c> lifecycle callbacks run
            on the main thread (UI thread) of the application that implements the BackupAgent.
            The data-handling callbacks:
            <c>#onBackup(ParcelFileDescriptor, BackupDataOutput, ParcelFileDescriptor) onBackup()</c>,
            <c>#onFullBackup(FullBackupDataOutput)</c>,
            <c>#onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()</c>,
            <c>#onRestoreFile(ParcelFileDescriptor, long, File, int, long, long) onRestoreFile()</c>,
            <c>#onRestoreFinished()</c>, and <c>#onQuotaExceeded(long, long) onQuotaExceeded()</c>
            run on binder pool threads.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/backup/BackupAgent" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackupAgent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary></summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BackupAgent (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Backup.BackupAgent : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Backup.BackupAgent" Usage="new Android.App.Backup.BackupAgent (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagClientSideEncryptionEnabled">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupTransportFlags FlagClientSideEncryptionEnabled = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupTransportFlags FlagClientSideEncryptionEnabled = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Backup.BackupAgent.FlagClientSideEncryptionEnabled" />
      <MemberSignature Language="F#" Value="val mutable FlagClientSideEncryptionEnabled : Android.App.Backup.BackupTransportFlags" Usage="Android.App.Backup.BackupAgent.FlagClientSideEncryptionEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupTransportFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupTransportFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupTransportFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>BackupDataOutput#getTransportFlags()</c> and
            <c>FullBackupDataOutput#getTransportFlags()</c> only.</summary>
        <remarks>
          <para>Flag for <c>BackupDataOutput#getTransportFlags()</c> and
            <c>FullBackupDataOutput#getTransportFlags()</c> only.</para>
          <para>The transport has client-side encryption enabled. i.e., the user's backup has been
            encrypted with a key known only to the device, and not to the remote storage solution. Even
            if an attacker had root access to the remote storage provider they should not be able to
            decrypt the user's backup data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.FLAG_CLIENT_SIDE_ENCRYPTION_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagDeviceToDeviceTransfer">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupTransportFlags FlagDeviceToDeviceTransfer = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupTransportFlags FlagDeviceToDeviceTransfer = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Backup.BackupAgent.FlagDeviceToDeviceTransfer" />
      <MemberSignature Language="F#" Value="val mutable FlagDeviceToDeviceTransfer : Android.App.Backup.BackupTransportFlags" Usage="Android.App.Backup.BackupAgent.FlagDeviceToDeviceTransfer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_DEVICE_TO_DEVICE_TRANSFER", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_DEVICE_TO_DEVICE_TRANSFER", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupTransportFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupTransportFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupTransportFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>BackupDataOutput#getTransportFlags()</c> and
            <c>FullBackupDataOutput#getTransportFlags()</c> only.</summary>
        <remarks>
          <para>Flag for <c>BackupDataOutput#getTransportFlags()</c> and
            <c>FullBackupDataOutput#getTransportFlags()</c> only.</para>
          <para>The transport is for a device-to-device transfer. There is no third party or intermediate
            storage. The user's backup data is sent directly to another device over e.g., USB or WiFi.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#FLAG_DEVICE_TO_DEVICE_TRANSFER" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.FLAG_DEVICE_TO_DEVICE_TRANSFER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullBackupFile">
      <MemberSignature Language="C#" Value="public void FullBackupFile (Java.IO.File? file, Android.App.Backup.FullBackupDataOutput? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FullBackupFile(class Java.IO.File file, class Android.App.Backup.FullBackupDataOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.FullBackupFile(Java.IO.File,Android.App.Backup.FullBackupDataOutput)" />
      <MemberSignature Language="F#" Value="member this.FullBackupFile : Java.IO.File * Android.App.Backup.FullBackupDataOutput -&gt; unit" Usage="backupAgent.FullBackupFile (file, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fullBackupFile", "(Ljava/io/File;Landroid/app/backup/FullBackupDataOutput;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fullBackupFile", "(Ljava/io/File;Landroid/app/backup/FullBackupDataOutput;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="output" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="file">The file to be backed up.  The file must exist and be readable by
                the caller.</param>
        <param name="output">The destination to which the backed-up file data will be sent.</param>
        <summary>Write an entire file as part of a full-backup operation.</summary>
        <remarks>
          <para>Write an entire file as part of a full-backup operation.  The file's contents
            will be delivered to the backup destination along with the metadata necessary
            to place it with the proper location and permissions on the device where the
            data is restored.
            
            &lt;p class="note"&gt;Attempting to back up files in directories that are ignored by
            the backup system will have no effect.  For example, if the app calls this method
            with a file inside the <c>#getNoBackupFilesDir()</c> directory, it will be ignored.
            See <c>#onFullBackup(FullBackupDataOutput)</c> for details on what directories
            are excluded from backups.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#fullBackupFile(java.io.File,%20android.app.backup.FullBackupDataOutput)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.fullBackupFile(java.io.File, android.app.backup.FullBackupDataOutput)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FullBackupFileAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FullBackupFileAsync (Java.IO.File? file, Android.App.Backup.FullBackupDataOutput? output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FullBackupFileAsync(class Java.IO.File file, class Android.App.Backup.FullBackupDataOutput output) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.FullBackupFileAsync(Java.IO.File,Android.App.Backup.FullBackupDataOutput)" />
      <MemberSignature Language="F#" Value="member this.FullBackupFileAsync : Java.IO.File * Android.App.Backup.FullBackupDataOutput -&gt; System.Threading.Tasks.Task" Usage="backupAgent.FullBackupFileAsync (file, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="output" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupAgent.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Backup.BackupAgent.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackup">
      <MemberSignature Language="C#" Value="public abstract void OnBackup (Android.OS.ParcelFileDescriptor? oldState, Android.App.Backup.BackupDataOutput? data, Android.OS.ParcelFileDescriptor? newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBackup(class Android.OS.ParcelFileDescriptor oldState, class Android.App.Backup.BackupDataOutput data, class Android.OS.ParcelFileDescriptor newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnBackup(Android.OS.ParcelFileDescriptor,Android.App.Backup.BackupDataOutput,Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member OnBackup : Android.OS.ParcelFileDescriptor * Android.App.Backup.BackupDataOutput * Android.OS.ParcelFileDescriptor -&gt; unit" Usage="backupAgent.OnBackup (oldState, data, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBackup", "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V", "GetOnBackup_Landroid_os_ParcelFileDescriptor_Landroid_app_backup_BackupDataOutput_Landroid_os_ParcelFileDescriptor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBackup", "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V", "GetOnBackup_Landroid_os_ParcelFileDescriptor_Landroid_app_backup_BackupDataOutput_Landroid_os_ParcelFileDescriptor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldState" Type="Android.OS.ParcelFileDescriptor" />
        <Parameter Name="data" Type="Android.App.Backup.BackupDataOutput" />
        <Parameter Name="newState" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="oldState">An open, read-only ParcelFileDescriptor pointing to the
                       last backup state provided by the application. May be
                       <c>null</c>, in which case no prior state is being
                       provided and the application should perform a full backup.</param>
        <param name="data">A structured wrapper around an open, read/write
                       file descriptor pointing to the backup data destination.
                       Typically the application will use backup helper classes to
                       write to this file.</param>
        <param name="newState">An open, read/write ParcelFileDescriptor pointing to an
                       empty file. The application should record the final backup
                       state here after writing the requested data to the <c>data</c>
                       output stream.</param>
        <summary>The application is being asked to write any data changed since the last
            time it performed a backup operation.</summary>
        <remarks>
          <para>The application is being asked to write any data changed since the last
            time it performed a backup operation. The state data recorded during the
            last backup pass is provided in the <c>oldState</c> file
            descriptor. If <c>oldState</c> is <c>null</c>, no old state
            is available and the application should perform a full backup. In both
            cases, a representation of the final backup state after this pass should
            be written to the file pointed to by the file descriptor wrapped in
            <c>newState</c>.</para>
          <para>Each entity written to the <c>android.app.backup.BackupDataOutput</c><c>data</c> stream will be transmitted
            over the current backup transport and stored in the remote data set under
            the key supplied as part of the entity.  Writing an entity with a negative
            data size instructs the transport to delete whatever entity currently exists
            under that key from the remote data set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onBackup(android.os.ParcelFileDescriptor,%20android.app.backup.BackupDataOutput,%20android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnCreate" />
      <MemberSignature Language="F#" Value="abstract member OnCreate : unit -&gt; unit&#xA;override this.OnCreate : unit -&gt; unit" Usage="backupAgent.OnCreate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreate", "()V", "GetOnCreateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreate", "()V", "GetOnCreateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provided as a convenience for agent implementations that need an opportunity
            to do one-time initialization before the actual backup or restore operation
            is begun.</summary>
        <remarks>
          <para>Provided as a convenience for agent implementations that need an opportunity
            to do one-time initialization before the actual backup or restore operation
            is begun.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onCreate()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onCreate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnDestroy" />
      <MemberSignature Language="F#" Value="abstract member OnDestroy : unit -&gt; unit&#xA;override this.OnDestroy : unit -&gt; unit" Usage="backupAgent.OnDestroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provided as a convenience for agent implementations that need to do some
            sort of shutdown process after backup or restore is completed.</summary>
        <remarks>
          <para>Provided as a convenience for agent implementations that need to do some
            sort of shutdown process after backup or restore is completed.</para>
          <para>Agents do not need to override this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onDestroy()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onDestroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnFullBackup">
      <MemberSignature Language="C#" Value="public virtual void OnFullBackup (Android.App.Backup.FullBackupDataOutput? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFullBackup(class Android.App.Backup.FullBackupDataOutput data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnFullBackup(Android.App.Backup.FullBackupDataOutput)" />
      <MemberSignature Language="F#" Value="abstract member OnFullBackup : Android.App.Backup.FullBackupDataOutput -&gt; unit&#xA;override this.OnFullBackup : Android.App.Backup.FullBackupDataOutput -&gt; unit" Usage="backupAgent.OnFullBackup data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFullBackup", "(Landroid/app/backup/FullBackupDataOutput;)V", "GetOnFullBackup_Landroid_app_backup_FullBackupDataOutput_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFullBackup", "(Landroid/app/backup/FullBackupDataOutput;)V", "GetOnFullBackup_Landroid_app_backup_FullBackupDataOutput_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="data">A structured wrapper pointing to the backup destination.</param>
        <summary>The application is having its entire file system contents backed up.</summary>
        <remarks>
          <para>The application is having its entire file system contents backed up.  <c>data</c>
            points to the backup destination, and the app has the opportunity to choose which
            files are to be stored.  To commit a file as part of the backup, call the
            <c>#fullBackupFile(File, FullBackupDataOutput)</c> helper method.  After all file
            data is written to the output, the agent returns from this method and the backup
            operation concludes.</para>
          <para>Certain parts of the app's data are never backed up even if the app explicitly
            sends them to the output:
            
            &lt;ul&gt;
            &lt;li&gt;The contents of the <c>#getCacheDir()</c> directory&lt;/li&gt;
            &lt;li&gt;The contents of the <c>#getCodeCacheDir()</c> directory&lt;/li&gt;
            &lt;li&gt;The contents of the <c>#getNoBackupFilesDir()</c> directory&lt;/li&gt;
            &lt;li&gt;The contents of the app's shared library directory&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The default implementation of this method backs up the entirety of the
            application's "owned" file system trees to the output other than the few exceptions
            listed above.  Apps only need to override this method if they need to impose special
            limitations on which files are being stored beyond the control that
            <c>#getNoBackupFilesDir()</c> offers.
            Alternatively they can provide an xml resource to specify what data to include or exclude.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onFullBackup(android.app.backup.FullBackupDataOutput)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onFullBackup(android.app.backup.FullBackupDataOutput)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="P:Android.Content.Context.NoBackupFilesDir" />
        <altmember cref="M:Android.App.Backup.BackupAgent.FullBackupFile(Java.IO.File, Android.App.Backup.FullBackupDataOutput)" />
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="OnQuotaExceeded">
      <MemberSignature Language="C#" Value="public virtual void OnQuotaExceeded (long backupDataBytes, long quotaBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnQuotaExceeded(int64 backupDataBytes, int64 quotaBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnQuotaExceeded(System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member OnQuotaExceeded : int64 * int64 -&gt; unit&#xA;override this.OnQuotaExceeded : int64 * int64 -&gt; unit" Usage="backupAgent.OnQuotaExceeded (backupDataBytes, quotaBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onQuotaExceeded", "(JJ)V", "GetOnQuotaExceeded_JJHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onQuotaExceeded", "(JJ)V", "GetOnQuotaExceeded_JJHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backupDataBytes" Type="System.Int64" />
        <Parameter Name="quotaBytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="backupDataBytes">The amount of data measured while initializing the backup
               operation, if the total exceeds the app's alloted quota.  If initial measurement
               suggested that the data would fit but then too much data was actually submitted
               as part of the operation, then this value is the amount of data that had been
               streamed into the transport at the time the quota was reached.</param>
        <param name="quotaBytes">The maximum data size that the transport currently permits
               this application to store as a backup.</param>
        <summary>Notification that the application's current backup operation causes it to exceed
            the maximum size permitted by the transport.</summary>
        <remarks>
          <para>Notification that the application's current backup operation causes it to exceed
            the maximum size permitted by the transport.  The ongoing backup operation is
            halted and rolled back: any data that had been stored by a previous backup operation
            is still intact.  Typically the quota-exceeded state will be detected before any data
            is actually transmitted over the network.</para>
          <para>The <c>quotaBytes</c> value is the total data size currently permitted for this
            application.  If desired, the application can use this as a hint for determining
            how much data to store.  For example, a messaging application might choose to
            store only the newest messages, dropping enough older content to stay under
            the quota.
            
            &lt;p class="note"&gt;Note that the maximum quota for the application can change over
            time.  In particular, in the future the quota may grow.  Applications that adapt
            to the quota when deciding what data to store should be aware of this and implement
            their data storage mechanisms in a way that can take advantage of additional
            quota.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onQuotaExceeded(long,%20long)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onQuotaExceeded(long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRestore">
      <MemberSignature Language="C#" Value="public abstract void OnRestore (Android.App.Backup.BackupDataInput? data, int appVersionCode, Android.OS.ParcelFileDescriptor? newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestore(class Android.App.Backup.BackupDataInput data, int32 appVersionCode, class Android.OS.ParcelFileDescriptor newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int32,Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member OnRestore : Android.App.Backup.BackupDataInput * int * Android.OS.ParcelFileDescriptor -&gt; unit" Usage="backupAgent.OnRestore (data, appVersionCode, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestore", "(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V", "GetOnRestore_Landroid_app_backup_BackupDataInput_ILandroid_os_ParcelFileDescriptor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestore", "(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V", "GetOnRestore_Landroid_app_backup_BackupDataInput_ILandroid_os_ParcelFileDescriptor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.App.Backup.BackupDataInput" />
        <Parameter Name="appVersionCode" Type="System.Int32" />
        <Parameter Name="newState" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="data">A structured wrapper around an open, read-only
                       file descriptor pointing to a full snapshot of the
                       application's data.  The application should consume every
                       entity represented in this data stream.</param>
        <param name="appVersionCode">The value of the <see href="https://developer.android.com/guide/topics/manifest/manifest-element.html#vcode"><c>android:versionCode</c></see> manifest attribute,
                       from the application that backed up this particular data set. This
                       makes it possible for an application's agent to distinguish among any
                       possible older data versions when asked to perform the restore
                       operation.</param>
        <param name="newState">An open, read/write ParcelFileDescriptor pointing to an
                       empty file. The application should record the final backup
                       state here after restoring its data from the <c>data</c> stream.
                       When a full-backup dataset is being restored, this will be <c>null</c>.</param>
        <summary>The application is being restored from backup and should replace any
            existing data with the contents of the backup.</summary>
        <remarks>
          <para>The application is being restored from backup and should replace any
            existing data with the contents of the backup. The backup data is
            provided through the <c>data</c> parameter. Once
            the restore is finished, the application should write a representation of
            the final state to the <c>newState</c> file descriptor.</para>
          <para>The application is responsible for properly erasing its old data and
            replacing it with the data supplied to this method. No "clear user data"
            operation will be performed automatically by the operating system. The
            exception to this is in the case of a failed restore attempt: if
            onRestore() throws an exception, the OS will assume that the
            application's data may now be in an incoherent state, and will clear it
            before proceeding.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onRestore(android.app.backup.BackupDataInput,%20int,%20android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnRestore">
      <MemberSignature Language="C#" Value="public virtual void OnRestore (Android.App.Backup.BackupDataInput? data, long appVersionCode, Android.OS.ParcelFileDescriptor? newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestore(class Android.App.Backup.BackupDataInput data, int64 appVersionCode, class Android.OS.ParcelFileDescriptor newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int64,Android.OS.ParcelFileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member OnRestore : Android.App.Backup.BackupDataInput * int64 * Android.OS.ParcelFileDescriptor -&gt; unit&#xA;override this.OnRestore : Android.App.Backup.BackupDataInput * int64 * Android.OS.ParcelFileDescriptor -&gt; unit" Usage="backupAgent.OnRestore (data, appVersionCode, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestore", "(Landroid/app/backup/BackupDataInput;JLandroid/os/ParcelFileDescriptor;)V", "GetOnRestore_Landroid_app_backup_BackupDataInput_JLandroid_os_ParcelFileDescriptor_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestore", "(Landroid/app/backup/BackupDataInput;JLandroid/os/ParcelFileDescriptor;)V", "GetOnRestore_Landroid_app_backup_BackupDataInput_JLandroid_os_ParcelFileDescriptor_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.App.Backup.BackupDataInput" />
        <Parameter Name="appVersionCode" Type="System.Int64" />
        <Parameter Name="newState" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="data">A structured wrapper around an open, read-only
                       file descriptor pointing to a full snapshot of the
                       application's data.  The application should consume every
                       entity represented in this data stream.</param>
        <param name="appVersionCode">The value of the &lt;a
            href="[TODO: @docRoot]guide/topics/manifest/manifest-element.html#vcode"&gt;<c>android:versionCode</c>&lt;/a&gt; manifest attribute,
                       from the application that backed up this particular data set. This
                       makes it possible for an application's agent to distinguish among any
                       possible older data versions when asked to perform the restore
                       operation.</param>
        <param name="newState">An open, read/write ParcelFileDescriptor pointing to an
                       empty file. The application should record the final backup
                       state here after restoring its data from the &lt;code&gt;data&lt;/code&gt; stream.
                       When a full-backup dataset is being restored, this will be &lt;code&gt;null&lt;/code&gt;.</param>
        <summary>New version of <c>#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor)</c>
            that handles a long app version code.</summary>
        <remarks>
          <para>New version of <c>#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor)</c>
            that handles a long app version code.  Default implementation casts the version code to
            an int and calls <c>#onRestore(BackupDataInput, int, android.os.ParcelFileDescriptor)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onRestore(android.app.backup.BackupDataInput,%20long,%20android.os.ParcelFileDescriptor)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onRestore(android.app.backup.BackupDataInput, long, android.os.ParcelFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRestoreFile">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreFile (Android.OS.ParcelFileDescriptor? data, long size, Java.IO.File? destination, Android.App.Backup.BackupFileType type, long mode, long mtime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreFile(class Android.OS.ParcelFileDescriptor data, int64 size, class Java.IO.File destination, valuetype Android.App.Backup.BackupFileType type, int64 mode, int64 mtime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor,System.Int64,Java.IO.File,Android.App.Backup.BackupFileType,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member OnRestoreFile : Android.OS.ParcelFileDescriptor * int64 * Java.IO.File * Android.App.Backup.BackupFileType * int64 * int64 -&gt; unit&#xA;override this.OnRestoreFile : Android.OS.ParcelFileDescriptor * int64 * Java.IO.File * Android.App.Backup.BackupFileType * int64 * int64 -&gt; unit" Usage="backupAgent.OnRestoreFile (data, size, destination, type, mode, mtime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestoreFile", "(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V", "GetOnRestoreFile_Landroid_os_ParcelFileDescriptor_JLjava_io_File_IJJHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestoreFile", "(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V", "GetOnRestoreFile_Landroid_os_ParcelFileDescriptor_JLjava_io_File_IJJHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.OS.ParcelFileDescriptor" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="destination" Type="Java.IO.File" />
        <Parameter Name="type" Type="Android.App.Backup.BackupFileType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mode" Type="System.Int64" />
        <Parameter Name="mtime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="data">A read-only file descriptor from which the agent can read <c>size</c>
                bytes of file data.</param>
        <param name="size">The number of bytes of file content to be restored to the given
                destination.  If the file system object being restored is a directory, <c>size</c>
                will be zero.</param>
        <param name="destination">The File on disk to be restored with the given data.</param>
        <param name="type">The kind of file system object being restored.  This will be either
                <c>BackupAgent#TYPE_FILE</c> or <c>BackupAgent#TYPE_DIRECTORY</c>.</param>
        <param name="mode">The access mode to be assigned to the destination after its data is
                written.  This is in the standard format used by <c>chmod()</c>.</param>
        <param name="mtime">The modification time of the file when it was backed up, suitable to
                be assigned to the file after its data is written.</param>
        <summary>Handle the data delivered via the given file descriptor during a full restore
            operation.</summary>
        <remarks>
          <para>Handle the data delivered via the given file descriptor during a full restore
            operation.  The agent is given the path to the file's original location as well
            as its size and metadata.</para>
          <para>The file descriptor can only be read for <c>size</c> bytes; attempting to read
            more data has undefined behavior.</para>
          <para>The default implementation creates the destination file/directory and populates it
            with the data from the file descriptor, then sets the file's access mode and
            modification time to match the restore arguments.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onRestoreFile(android.os.ParcelFileDescriptor,%20long,%20java.io.File,%20int,%20long,%20long)" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onRestoreFile(android.os.ParcelFileDescriptor, long, java.io.File, int, long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreFinished">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreFinished ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreFinished() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Backup.BackupAgent.OnRestoreFinished" />
      <MemberSignature Language="F#" Value="abstract member OnRestoreFinished : unit -&gt; unit&#xA;override this.OnRestoreFinished : unit -&gt; unit" Usage="backupAgent.OnRestoreFinished " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestoreFinished", "()V", "GetOnRestoreFinishedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestoreFinished", "()V", "GetOnRestoreFinishedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The application's restore operation has completed.</summary>
        <remarks>
          <para>The application's restore operation has completed.  This method is called after
            all available data has been delivered to the application for restore (via either
            the <c>#onRestore(BackupDataInput, int, ParcelFileDescriptor) onRestore()</c> or
            <c>#onRestoreFile(ParcelFileDescriptor, long, File, int, long, long) onRestoreFile()</c>
            callbacks).  This provides the app with a stable end-of-restore opportunity to
            perform any appropriate post-processing on the data that was just delivered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#onRestoreFinished()" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.onRestoreFinished()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput, System.Int32, System.Int32)" />
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupAgent.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Backup.BackupAgent.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Backup.BackupAgent.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Backup.BackupAgent.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeDirectory">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupFileType TypeDirectory = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupFileType TypeDirectory = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Backup.BackupAgent.TypeDirectory" />
      <MemberSignature Language="F#" Value="val mutable TypeDirectory : Android.App.Backup.BackupFileType" Usage="Android.App.Backup.BackupAgent.TypeDirectory" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPE_DIRECTORY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPE_DIRECTORY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupFileType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>During a full restore, indicates that the file system object being restored
            is a directory.</summary>
        <remarks>
          <para>During a full restore, indicates that the file system object being restored
            is a directory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#TYPE_DIRECTORY" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.TYPE_DIRECTORY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="TypeFile">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupFileType TypeFile = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupFileType TypeFile = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Backup.BackupAgent.TypeFile" />
      <MemberSignature Language="F#" Value="val mutable TypeFile : Android.App.Backup.BackupFileType" Usage="Android.App.Backup.BackupAgent.TypeFile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPE_FILE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPE_FILE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupFileType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>During a full restore, indicates that the file system object being restored
            is an ordinary file.</summary>
        <remarks>
          <para>During a full restore, indicates that the file system object being restored
            is an ordinary file.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/backup/BackupAgent#TYPE_FILE" title="Reference documentation">Java documentation for <code>android.app.backup.BackupAgent.TYPE_FILE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
