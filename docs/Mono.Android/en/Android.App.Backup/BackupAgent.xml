<Type Name="BackupAgent" FullName="Android.App.Backup.BackupAgent">
  <TypeSignature Language="C#" Value="public abstract class BackupAgent : Android.Content.ContextWrapper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BackupAgent extends Android.Content.ContextWrapper" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.ContextWrapper</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/backup/BackupAgent", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Provides the central interface between an
 application and Android's data backup infrastructure.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides the central interface between an
 application and Android's data backup infrastructure.  An application that wishes
 to participate in the backup and restore mechanism will declare a subclass of
 <c><see cref="T:Android.App.Backup.BackupAgent" /></c>, implement the
 <c><see cref="M:Android.App.Backup.BackupAgent.OnBackup(Android.OS.ParcelFileDescriptor,Android.App.Backup.BackupDataOutput,Android.App.Backup.BackupDataOutput)" /></c>
 and <c><see cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int32,System.Int32)" /></c> methods,
 and provide the name of its backup agent class in its <c>AndroidManifest.xml</c> file via
 the <c><format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/application-element.html">&lt;application&gt;</a></format></c>
 tag's <c>android:backupAgent</c> attribute.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For more information about using BackupAgent, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/data/backup.html">Data Backup</a></format> developer guide.</para>
      <format type="text/html">
        <h3>Basic Operation</h3>
      </format>
      <para tool="javadoc-to-mdoc">
 When the application makes changes to data that it wishes to keep backed up,
 it should call the
 <c><see cref="M:Android.App.Backup.BackupManager.DataChanged" /></c> method.
 This notifies the Android Backup Manager that the application needs an opportunity
 to update its backup image.  The Backup Manager, in turn, schedules a
 backup pass to be performed at an opportune time.
 </para>
      <para tool="javadoc-to-mdoc">
 Restore operations are typically performed only when applications are first
 installed on a device.  At that time, the operating system checks to see whether
 there is a previously-saved data set available for the application being installed, and if so,
 begins an immediate restore pass to deliver the backup data as part of the installation
 process.
 </para>
      <para tool="javadoc-to-mdoc">
 When a backup or restore pass is run, the application's process is launched
 (if not already running), the manifest-declared backup agent class (in the <c>android:backupAgent</c> attribute) is instantiated within
 that process, and the agent's <c><see cref="M:Android.App.Backup.BackupAgent.OnCreate" /></c> method is invoked.  This prepares the
 agent instance to run the actual backup or restore logic.  At this point the
 agent's
 <c><see cref="M:Android.App.Backup.BackupAgent.OnBackup(Android.OS.ParcelFileDescriptor,Android.App.Backup.BackupDataOutput,Android.App.Backup.BackupDataOutput)" /></c> or
 <c><see cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int32,System.Int32)" /></c> method will be
 invoked as appropriate for the operation being performed.
 </para>
      <para tool="javadoc-to-mdoc">
 A backup data set consists of one or more "entities," flattened binary data
 records that are each identified with a key string unique within the data set.  Adding a
 record to the active data set or updating an existing record is done by simply
 writing new entity data under the desired key.  Deleting an entity from the data set
 is done by writing an entity under that key with header specifying a negative data
 size, and no actual entity data.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Helper Classes</b>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 An extensible agent based on convenient helper classes is available in
 <c><see cref="T:Android.App.Backup.BackupAgentHelper" /></c>.  That class is particularly
 suited to handling of simple file or <c><see cref="T:Android.Content.ISharedPreferences" /></c>
 backup and restore.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.App.Backup.BackupManager" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.App.Backup.BackupAgentHelper" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.App.Backup.BackupDataInput" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.App.Backup.BackupDataOutput" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackupAgent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#BackupAgent()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BackupAgent (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullBackupFile">
      <MemberSignature Language="C#" Value="public void FullBackupFile (Java.IO.File file, Android.App.Backup.FullBackupDataOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FullBackupFile(class Java.IO.File file, class Android.App.Backup.FullBackupDataOutput output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fullBackupFile", "(Ljava/io/File;Landroid/app/backup/FullBackupDataOutput;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="output" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="file">The file to be backed up.  The file must exist and be readable by
     the caller.</param>
        <param name="output">The destination to which the backed-up file data will be sent.
</param>
        <summary>Write an entire file as part of a full-backup operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Write an entire file as part of a full-backup operation.  The file's contents
 will be delivered to the backup destination along with the metadata necessary
 to place it with the proper location and permissions on the device where the
 data is restored.

 </para>
          <para tool="javadoc-to-mdoc">It is safe to explicitly back up files underneath your application's
 <c><see cref="P:Android.Content.ContextWrapper.NoBackupFilesDir" /></c> directory, and they will be restored to that
 location correctly.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#fullBackupFile(java.io.File, android.app.backup.FullBackupDataOutput)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FullBackupFileAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FullBackupFileAsync (Java.IO.File file, Android.App.Backup.FullBackupDataOutput output);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FullBackupFileAsync(class Java.IO.File file, class Android.App.Backup.FullBackupDataOutput output) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="output" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="output">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackup">
      <MemberSignature Language="C#" Value="public abstract void OnBackup (Android.OS.ParcelFileDescriptor oldState, Android.App.Backup.BackupDataOutput data, Android.OS.ParcelFileDescriptor newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBackup(class Android.OS.ParcelFileDescriptor oldState, class Android.App.Backup.BackupDataOutput data, class Android.OS.ParcelFileDescriptor newState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onBackup", "(Landroid/os/ParcelFileDescriptor;Landroid/app/backup/BackupDataOutput;Landroid/os/ParcelFileDescriptor;)V", "GetOnBackup_Landroid_os_ParcelFileDescriptor_Landroid_app_backup_BackupDataOutput_Landroid_os_ParcelFileDescriptor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldState" Type="Android.OS.ParcelFileDescriptor" />
        <Parameter Name="data" Type="Android.App.Backup.BackupDataOutput" />
        <Parameter Name="newState" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="oldState">An open, read-only ParcelFileDescriptor pointing to the
            last backup state provided by the application. May be
            <c>null</c>, in which case no prior state is being
            provided and the application should perform a full backup.</param>
        <param name="data">A structured wrapper around an open, read/write
            file descriptor pointing to the backup data destination.
            Typically the application will use backup helper classes to
            write to this file.</param>
        <param name="newState">An open, read/write ParcelFileDescriptor pointing to an
            empty file. The application should record the final backup
            state here after writing the requested data to the <c>data</c>
            output stream.
</param>
        <summary>The application is being asked to write any data changed since the last
 time it performed a backup operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The application is being asked to write any data changed since the last
 time it performed a backup operation. The state data recorded during the
 last backup pass is provided in the <c>oldState</c> file
 descriptor. If <c>oldState</c> is <c>null</c>, no old state
 is available and the application should perform a full backup. In both
 cases, a representation of the final backup state after this pass should
 be written to the file pointed to by the file descriptor wrapped in
 <c>newState</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Each entity written to the <c><see cref="T:Android.App.Backup.BackupDataOutput" /></c><c>data</c> stream will be transmitted
 over the current backup transport and stored in the remote data set under
 the key supplied as part of the entity.  Writing an entity with a negative
 data size instructs the transport to delete whatever entity currently exists
 under that key from the remote data set.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onBackup(android.os.ParcelFileDescriptor, android.app.backup.BackupDataOutput, android.os.ParcelFileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreate", "()V", "GetOnCreateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provided as a convenience for agent implementations that need an opportunity
 to do one-time initialization before the actual backup or restore operation
 is begun.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Provided as a convenience for agent implementations that need an opportunity
 to do one-time initialization before the actual backup or restore operation
 is begun.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onCreate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provided as a convenience for agent implementations that need to do some
 sort of shutdown process after backup or restore is completed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Provided as a convenience for agent implementations that need to do some
 sort of shutdown process after backup or restore is completed.
 </para>
          <para tool="javadoc-to-mdoc">
 Agents do not need to override this method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onDestroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnFullBackup">
      <MemberSignature Language="C#" Value="public virtual void OnFullBackup (Android.App.Backup.FullBackupDataOutput data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFullBackup(class Android.App.Backup.FullBackupDataOutput data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onFullBackup", "(Landroid/app/backup/FullBackupDataOutput;)V", "GetOnFullBackup_Landroid_app_backup_FullBackupDataOutput_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.App.Backup.FullBackupDataOutput" />
      </Parameters>
      <Docs>
        <param name="data">A structured wrapper pointing to the backup destination.</param>
        <summary>The application is having its entire file system contents backed up.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The application is having its entire file system contents backed up.  <c>data</c>
 points to the backup destination, and the app has the opportunity to choose which
 files are to be stored.  To commit a file as part of the backup, call the
 <c><see cref="M:Android.App.Backup.BackupAgent.FullBackupFile(Java.IO.File,Android.App.Backup.FullBackupDataOutput)" /></c> helper method.  After all file
 data is written to the output, the agent returns from this method and the backup
 operation concludes.

 </para>
          <para tool="javadoc-to-mdoc">Certain parts of the app's data are never backed up even if the app explicitly
 sends them to the output:

 <list type="bullet"><item><term>The contents of the <c><see cref="P:Android.Content.ContextWrapper.CacheDir" /></c> directory</term></item><item><term>The contents of the <c><see cref="P:Android.Content.ContextWrapper.CodeCacheDir" /></c> directory</term></item><item><term>The contents of the <c><see cref="P:Android.Content.ContextWrapper.NoBackupFilesDir" /></c> directory</term></item><item><term>The contents of the app's shared library directory</term></item></list></para>
          <para tool="javadoc-to-mdoc">The default implementation of this method backs up the entirety of the
 application's "owned" file system trees to the output other than the few exceptions
 listed above.  Apps only need to override this method if they need to impose special
 limitations on which files are being stored beyond the control that
 <c><see cref="P:Android.Content.ContextWrapper.NoBackupFilesDir" /></c> offers.
 Alternatively they can provide an xml resource to specify what data to include or exclude.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onFullBackup(android.app.backup.FullBackupDataOutput)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="!:NoType:IOException" />
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="P:Android.Content.Context.NoBackupFilesDir" />
        <altmember cref="M:Android.App.Backup.BackupAgent.FullBackupFile(Java.IO.File, Android.App.Backup.FullBackupDataOutput)" />
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="OnRestore">
      <MemberSignature Language="C#" Value="public abstract void OnRestore (Android.App.Backup.BackupDataInput data, int appVersionCode, Android.OS.ParcelFileDescriptor newState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestore(class Android.App.Backup.BackupDataInput data, int32 appVersionCode, class Android.OS.ParcelFileDescriptor newState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestore", "(Landroid/app/backup/BackupDataInput;ILandroid/os/ParcelFileDescriptor;)V", "GetOnRestore_Landroid_app_backup_BackupDataInput_ILandroid_os_ParcelFileDescriptor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.App.Backup.BackupDataInput" />
        <Parameter Name="appVersionCode" Type="System.Int32" />
        <Parameter Name="newState" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="data">A structured wrapper around an open, read-only
            file descriptor pointing to a full snapshot of the
            application's data.  The application should consume every
            entity represented in this data stream.</param>
        <param name="appVersionCode">The value of the <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/manifest-element.html#vcode">android:versionCode</a></format> manifest attribute,
            from the application that backed up this particular data set. This
            makes it possible for an application's agent to distinguish among any
            possible older data versions when asked to perform the restore
            operation.</param>
        <param name="newState">An open, read/write ParcelFileDescriptor pointing to an
            empty file. The application should record the final backup
            state here after restoring its data from the <c>data</c> stream.
            When a full-backup dataset is being restored, this will be <c>null</c>.
</param>
        <summary>The application is being restored from backup and should replace any
 existing data with the contents of the backup.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The application is being restored from backup and should replace any
 existing data with the contents of the backup. The backup data is
 provided through the <c>data</c> parameter. Once
 the restore is finished, the application should write a representation of
 the final state to the <c>newState</c> file descriptor.
 </para>
          <para tool="javadoc-to-mdoc">
 The application is responsible for properly erasing its old data and
 replacing it with the data supplied to this method. No "clear user data"
 operation will be performed automatically by the operating system. The
 exception to this is in the case of a failed restore attempt: if
 onRestore() throws an exception, the OS will assume that the
 application's data may now be in an incoherent state, and will clear it
 before proceeding.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestore(android.app.backup.BackupDataInput, int, android.os.ParcelFileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreFile">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreFile (Android.OS.ParcelFileDescriptor data, long size, Java.IO.File destination, Android.App.Backup.BackupFileType type, long mode, long mtime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreFile(class Android.OS.ParcelFileDescriptor data, int64 size, class Java.IO.File destination, valuetype Android.App.Backup.BackupFileType type, int64 mode, int64 mtime) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestoreFile", "(Landroid/os/ParcelFileDescriptor;JLjava/io/File;IJJ)V", "GetOnRestoreFile_Landroid_os_ParcelFileDescriptor_JLjava_io_File_IJJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.OS.ParcelFileDescriptor" />
        <Parameter Name="size" Type="System.Int64" />
        <Parameter Name="destination" Type="Java.IO.File" />
        <Parameter Name="type" Type="Android.App.Backup.BackupFileType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mode" Type="System.Int64" />
        <Parameter Name="mtime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="data">A read-only file descriptor from which the agent can read <c>size</c>
     bytes of file data.</param>
        <param name="size">The number of bytes of file content to be restored to the given
     destination.  If the file system object being restored is a directory, <c>size</c>
     will be zero.</param>
        <param name="destination">The File on disk to be restored with the given data.</param>
        <param name="type">The kind of file system object being restored.  This will be either
     <c><see cref="F:Android.App.Backup.BackupAgent.TypeFile" /></c> or <c><see cref="F:Android.App.Backup.BackupAgent.TypeDirectory" /></c>.</param>
        <param name="mode">The access mode to be assigned to the destination after its data is
     written.  This is in the standard format used by <c>chmod()</c>.</param>
        <param name="mtime">The modification time of the file when it was backed up, suitable to
     be assigned to the file after its data is written.</param>
        <summary>Handle the data delivered via the given file descriptor during a full restore
 operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Handle the data delivered via the given file descriptor during a full restore
 operation.  The agent is given the path to the file's original location as well
 as its size and metadata.
 </para>
          <para tool="javadoc-to-mdoc">
 The file descriptor can only be read for <c>size</c> bytes; attempting to read
 more data has undefined behavior.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation creates the destination file/directory and populates it
 with the data from the file descriptor, then sets the file's access mode and
 modification time to match the restore arguments.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestoreFile(android.os.ParcelFileDescriptor, long, java.io.File, int, long, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="OnRestoreFinished">
      <MemberSignature Language="C#" Value="public virtual void OnRestoreFinished ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRestoreFinished() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onRestoreFinished", "()V", "GetOnRestoreFinishedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The application's restore operation has completed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The application's restore operation has completed.  This method is called after
 all available data has been delivered to the application for restore (via either
 the <c><see cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int32,System.Int32)" /></c> or
 <c><see cref="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor,System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)" /></c>
 callbacks).  This provides the app with a stable end-of-restore opportunity to
 perform any appropriate post-processing on the data that was just delivered.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#onRestoreFinished()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput, System.Int32, System.Int32)" />
        <altmember cref="M:Android.App.Backup.BackupAgent.OnRestoreFile(Android.OS.ParcelFileDescriptor, System.Int64, System.Int64, System.Int64, System.Int64, System.Int64)" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeDirectory">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupFileType TypeDirectory = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupFileType TypeDirectory = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_DIRECTORY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupFileType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>During a full restore, indicates that the file system object being restored
 is a directory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">During a full restore, indicates that the file system object being restored
 is a directory.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#TYPE_DIRECTORY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="TypeFile">
      <MemberSignature Language="C#" Value="public const Android.App.Backup.BackupFileType TypeFile = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Backup.BackupFileType TypeFile = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TYPE_FILE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.App.Backup.BackupFileType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Backup.BackupFileType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>During a full restore, indicates that the file system object being restored
 is an ordinary file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">During a full restore, indicates that the file system object being restored
 is an ordinary file.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupAgent.html#TYPE_FILE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
