<Type Name="BackupManager" FullName="Android.App.Backup.BackupManager">
  <TypeSignature Language="C#" Value="public class BackupManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BackupManager extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/app/backup/BackupManager", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>The interface through which an application interacts with the Android backup service to
 request backup and restore operations.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The interface through which an application interacts with the Android backup service to
 request backup and restore operations.
 Applications instantiate it using the constructor and issue calls through that instance.
 </para>
      <para tool="javadoc-to-mdoc">
 When an application has made changes to data which should be backed up, a
 call to <c><see cref="M:Android.App.Backup.BackupManager.DataChanged" /></c> will notify the backup service. The system
 will then schedule a backup operation to occur in the near future. Repeated
 calls to <c><see cref="M:Android.App.Backup.BackupManager.DataChanged" /></c> have no further effect until the backup
 operation actually occurs.
 </para>
      <para tool="javadoc-to-mdoc">
 A backup or restore operation for your application begins when the system launches the
 <c><see cref="T:Android.App.Backup.BackupAgent" /></c> subclass you've declared in your manifest. See the
 documentation for <c><see cref="T:Android.App.Backup.BackupAgent" /></c> for a detailed description
 of how the operation then proceeds.
 </para>
      <para tool="javadoc-to-mdoc">
 Several attributes affecting the operation of the backup and restore mechanism
 can be set on the <c><format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/manifest/application-element.html">&lt;application&gt;</a></format></c>
 tag in your application's AndroidManifest.xml file.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">For more information about using BackupManager, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/data/backup.html">Data Backup</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/app/backup/BackupManager.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BackupManager (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Constructs a BackupManager object through which the application can
 communicate with the Android backup system.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a BackupManager object through which the application can
 communicate with the Android backup system.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupManager.html#BackupManager(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BackupManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataChanged">
      <MemberSignature Language="C#" Value="public virtual void DataChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DataChanged() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dataChanged", "()V", "GetDataChangedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the Android backup system that your application wishes to back up
 new changes to its data.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies the Android backup system that your application wishes to back up
 new changes to its data.  A backup operation using your application's
 <c><see cref="T:Android.App.Backup.BackupAgent" /></c> subclass will be scheduled when you
 call this method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupManager.html#dataChanged()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DataChanged">
      <MemberSignature Language="C#" Value="public static void DataChanged (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DataChanged(string packageName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dataChanged", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name identifying the application to back up.
</param>
        <summary>Convenience method for callers who need to indicate that some other package
 needs a backup pass.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience method for callers who need to indicate that some other package
 needs a backup pass.  This can be useful in the case of groups of packages
 that share a uid.
 </para>
          <para tool="javadoc-to-mdoc">
 This method requires that the application hold the "android.permission.BACKUP"
 permission if the package named in the argument does not run under the same uid
 as the caller.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupManager.html#dataChanged(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RequestRestore">
      <MemberSignature Language="C#" Value="public virtual int RequestRestore (Android.App.Backup.RestoreObserver observer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 RequestRestore(class Android.App.Backup.RestoreObserver observer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestRestore", "(Landroid/app/backup/RestoreObserver;)I", "GetRequestRestore_Landroid_app_backup_RestoreObserver_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="observer" Type="Android.App.Backup.RestoreObserver" />
      </Parameters>
      <Docs>
        <param name="observer">The <c><see cref="T:Android.App.Backup.RestoreObserver" /></c> to receive callbacks during the restore
 operation. This must not be null.</param>
        <summary>Restore the calling application from backup.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Restore the calling application from backup.  The data will be restored from the
 current backup dataset if the application has stored data there, or from
 the dataset used during the last full device setup operation if the current
 backup dataset has no matching data.  If no backup data exists for this application
 in either source, a nonzero value will be returned.

 </para>
          <para tool="javadoc-to-mdoc">If this method returns zero (meaning success), the OS will attempt to retrieve
 a backed-up dataset from the remote transport, instantiate the application's
 backup agent, and pass the dataset to the agent's
 <c><see cref="M:Android.App.Backup.BackupAgent.OnRestore(Android.App.Backup.BackupDataInput,System.Int32,System.Int32)" /></c>
 method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/app/backup/BackupManager.html#requestRestore(android.app.backup.RestoreObserver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
