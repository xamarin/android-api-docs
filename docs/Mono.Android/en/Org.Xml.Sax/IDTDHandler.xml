<Type Name="IDTDHandler" FullName="Org.Xml.Sax.IDTDHandler">
  <TypeSignature Language="C#" Value="public interface IDTDHandler : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDTDHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.IDTDHandler" />
  <TypeSignature Language="F#" Value="type IDTDHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/DTDHandler", "", "Org.Xml.Sax.IDTDHandlerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/DTDHandler", "", "Org.Xml.Sax.IDTDHandlerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Receive notification of basic DTD-related events.</summary>
    <remarks>
      <para>Receive notification of basic DTD-related events.
            
            &lt;blockquote&gt;
            &lt;em&gt;This module, both source code and documentation, is in the
            Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;
            See <see href="http://www.saxproject.org">http://www.saxproject.org</see>
            for further information.
            &lt;/blockquote&gt;</para>
      <para>If a SAX application needs information about notations and
            unparsed entities, then the application implements this
            interface and registers an instance with the SAX parser using
            the parser's setDTDHandler method.  The parser uses the
            instance to report notation and unparsed entity declarations to
            the application.</para>
      <para>Note that this interface includes only those DTD events that
            the XML recommendation &lt;em&gt;requires&lt;/em&gt; processors to report:
            notation and unparsed entity declarations.</para>
      <para>The SAX parser may report these events in any order, regardless
            of the order in which the notations and unparsed entities were
            declared; however, all DTD events must be reported after the
            document handler's startDocument event, and before the first
            startElement event.
            (If the <c>org.xml.sax.ext.LexicalHandler LexicalHandler</c> is
            used, these events must also be reported before the endDTD event.)</para>
      <para>It is up to the application to store the information for
            future use (perhaps in a hash table or object tree).
            If the application encounters attributes of type "NOTATION",
            "ENTITY", or "ENTITIES", it can use the information that it
            obtained through this interface to find the entity and/or
            notation corresponding with the attribute value.</para>
      <para>Added in SAX 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/DTDHandler" title="Reference documentation">Java documentation for <code>org.xml.sax.DTDHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="NotationDecl">
      <MemberSignature Language="C#" Value="public void NotationDecl (string? name, string? publicId, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotationDecl(string name, string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDTDHandler.NotationDecl(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member NotationDecl : string * string * string -&gt; unit" Usage="iDTDHandler.NotationDecl (name, publicId, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notationDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetNotationDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDTDHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notationDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetNotationDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDTDHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The notation name.</param>
        <param name="publicId">The notation's public identifier, or null if
                   none was given.</param>
        <param name="systemId">The notation's system identifier, or null if
                   none was given.</param>
        <summary>Receive notification of a notation declaration event.</summary>
        <remarks>
          <para>Receive notification of a notation declaration event.</para>
          <para>It is up to the application to record the notation for later
            reference, if necessary;
            notations may appear as attribute values and in unparsed entity
            declarations, and are sometime used with processing instruction
            target names.</para>
          <para>At least one of publicId and systemId must be non-null.
            If a system identifier is present, and it is a URL, the SAX
            parser must resolve it fully before passing it to the
            application through this event.</para>
          <para>There is no guarantee that the notation declaration will be
            reported before any unparsed entities that use it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DTDHandler#notationDecl(java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.DTDHandler.notationDecl(java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDTDHandler.UnparsedEntityDecl(System.String, System.String, System.String, System.String)" />
        <altmember cref="T:Org.Xml.Sax.IAttributes" />
      </Docs>
    </Member>
    <Member MemberName="UnparsedEntityDecl">
      <MemberSignature Language="C#" Value="public void UnparsedEntityDecl (string? name, string? publicId, string? systemId, string? notationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnparsedEntityDecl(string name, string publicId, string systemId, string notationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDTDHandler.UnparsedEntityDecl(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member UnparsedEntityDecl : string * string * string * string -&gt; unit" Usage="iDTDHandler.UnparsedEntityDecl (name, publicId, systemId, notationName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unparsedEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetUnparsedEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDTDHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unparsedEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetUnparsedEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDTDHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="notationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The unparsed entity's name.</param>
        <param name="publicId">The entity's public identifier, or null if none
                   was given.</param>
        <param name="systemId">The entity's system identifier.</param>
        <param name="notationName">The name of the associated notation.</param>
        <summary>Receive notification of an unparsed entity declaration event.</summary>
        <remarks>
          <para>Receive notification of an unparsed entity declaration event.</para>
          <para>Note that the notation name corresponds to a notation
            reported by the <c>#notationDecl notationDecl</c> event.
            It is up to the application to record the entity for later
            reference, if necessary;
            unparsed entities may appear as attribute values.</para>
          <para>If the system identifier is a URL, the parser must resolve it
            fully before passing it to the application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DTDHandler#unparsedEntityDecl(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.DTDHandler.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDTDHandler.NotationDecl(System.String, System.String, System.String)" />
        <altmember cref="T:Org.Xml.Sax.IAttributes" />
      </Docs>
    </Member>
  </Members>
</Type>
