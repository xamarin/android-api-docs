<Type Name="HandlerBase" FullName="Org.Xml.Sax.HandlerBase">
  <TypeSignature Language="C#" Value="public class HandlerBase : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Org.Xml.Sax.IDocumentHandler, Org.Xml.Sax.IDTDHandler, Org.Xml.Sax.IEntityResolver, Org.Xml.Sax.IErrorHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HandlerBase extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Xml.Sax.IDocumentHandler, class Org.Xml.Sax.IDTDHandler, class Org.Xml.Sax.IEntityResolver, class Org.Xml.Sax.IErrorHandler, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.HandlerBase" />
  <TypeSignature Language="VB.NET" Value="Public Class HandlerBase&#xA;Inherits Object&#xA;Implements IDisposable, IDocumentHandler, IDTDHandler, IEntityResolver, IErrorHandler, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HandlerBase : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Org::Xml::Sax::IDocumentHandler, Org::Xml::Sax::IDTDHandler, Org::Xml::Sax::IEntityResolver, Org::Xml::Sax::IErrorHandler" />
  <TypeSignature Language="F#" Value="type HandlerBase = class&#xA;    inherit Object&#xA;    interface IDocumentHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IDTDHandler&#xA;    interface IEntityResolver&#xA;    interface IErrorHandler" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IDocumentHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IDTDHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IEntityResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IErrorHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/HandlerBase", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/HandlerBase", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Default base class for handlers.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1Deprecated since API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandlerBase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandlerBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HandlerBase (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HandlerBase(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="F#" Value="new Org.Xml.Sax.HandlerBase : nativeint * Android.Runtime.JniHandleOwnership -&gt; Org.Xml.Sax.HandlerBase" Usage="new Org.Xml.Sax.HandlerBase (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public virtual void Characters (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.Characters(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Characters (ch As Char(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Characters(cli::array &lt;char&gt; ^ ch, int start, int length);" />
      <MemberSignature Language="F#" Value="abstract member Characters : char[] * int * int -&gt; unit&#xA;override this.Characters : char[] * int * int -&gt; unit" Usage="handlerBase.Characters (ch, start, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The characters.</param>
        <param name="start">The start position in the character array.</param>
        <param name="length">The number of characters to use from the
                          character array.</param>
        <summary>Receive notification of character data inside an element.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#characters(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.characters(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="C#" Value="public virtual void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.EndDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndDocument();" />
      <MemberSignature Language="F#" Value="abstract member EndDocument : unit -&gt; unit&#xA;override this.EndDocument : unit -&gt; unit" Usage="handlerBase.EndDocument " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.EndDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the end of the document.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#endDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.endDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.EndDocument" />
      </Docs>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="C#" Value="public virtual void EndElement (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.EndElement(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndElement (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndElement(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member EndElement : string -&gt; unit&#xA;override this.EndElement : string -&gt; unit" Usage="handlerBase.EndElement name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endElement", "(Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endElement", "(Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">the element name</param>
        <summary>Receive notification of the end of an element.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#endElement(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.endElement(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual void Error (Org.Xml.Sax.SAXParseException? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Error(class Org.Xml.Sax.SAXParseException e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.Error(Org.Xml.Sax.SAXParseException)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Error (e As SAXParseException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Error(Org::Xml::Sax::SAXParseException ^ e);" />
      <MemberSignature Language="F#" Value="abstract member Error : Org.Xml.Sax.SAXParseException -&gt; unit&#xA;override this.Error : Org.Xml.Sax.SAXParseException -&gt; unit" Usage="handlerBase.Error e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IErrorHandler.Error(Org.Xml.Sax.SAXParseException)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("error", "(Lorg/xml/sax/SAXParseException;)V", "GetError_Lorg_xml_sax_SAXParseException_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("error", "(Lorg/xml/sax/SAXParseException;)V", "GetError_Lorg_xml_sax_SAXParseException_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Org.Xml.Sax.SAXParseException" />
      </Parameters>
      <Docs>
        <param name="e">The warning information encoded as an exception.</param>
        <summary>Receive notification of a recoverable parser error.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#error(org.xml.sax.SAXParseException)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.error(org.xml.sax.SAXParseException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IErrorHandler.Warning(Org.Xml.Sax.SAXParseException)" />
        <altmember cref="T:Org.Xml.Sax.SAXParseException" />
      </Docs>
    </Member>
    <Member MemberName="FatalError">
      <MemberSignature Language="C#" Value="public virtual void FatalError (Org.Xml.Sax.SAXParseException? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FatalError(class Org.Xml.Sax.SAXParseException e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.FatalError(Org.Xml.Sax.SAXParseException)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FatalError (e As SAXParseException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FatalError(Org::Xml::Sax::SAXParseException ^ e);" />
      <MemberSignature Language="F#" Value="abstract member FatalError : Org.Xml.Sax.SAXParseException -&gt; unit&#xA;override this.FatalError : Org.Xml.Sax.SAXParseException -&gt; unit" Usage="handlerBase.FatalError e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IErrorHandler.FatalError(Org.Xml.Sax.SAXParseException)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fatalError", "(Lorg/xml/sax/SAXParseException;)V", "GetFatalError_Lorg_xml_sax_SAXParseException_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fatalError", "(Lorg/xml/sax/SAXParseException;)V", "GetFatalError_Lorg_xml_sax_SAXParseException_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Org.Xml.Sax.SAXParseException" />
      </Parameters>
      <Docs>
        <param name="e">The error information encoded as an exception.</param>
        <summary>Report a fatal XML parsing error.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#fatalError(org.xml.sax.SAXParseException)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.fatalError(org.xml.sax.SAXParseException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IErrorHandler.FatalError(Org.Xml.Sax.SAXParseException)" />
        <altmember cref="T:Org.Xml.Sax.SAXParseException" />
      </Docs>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="C#" Value="public virtual void IgnorableWhitespace (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IgnorableWhitespace (ch As Char(), start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IgnorableWhitespace(cli::array &lt;char&gt; ^ ch, int start, int length);" />
      <MemberSignature Language="F#" Value="abstract member IgnorableWhitespace : char[] * int * int -&gt; unit&#xA;override this.IgnorableWhitespace : char[] * int * int -&gt; unit" Usage="handlerBase.IgnorableWhitespace (ch, start, length)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The whitespace characters.</param>
        <param name="start">The start position in the character array.</param>
        <param name="length">The number of characters to use from the
                          character array.</param>
        <summary>Receive notification of ignorable whitespace in element content.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#ignorableWhitespace(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.ignorableWhitespace(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.HandlerBase.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Xml.Sax.HandlerBase.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotationDecl">
      <MemberSignature Language="C#" Value="public virtual void NotationDecl (string? name, string? publicId, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotationDecl(string name, string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.NotationDecl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotationDecl (name As String, publicId As String, systemId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotationDecl(System::String ^ name, System::String ^ publicId, System::String ^ systemId);" />
      <MemberSignature Language="F#" Value="abstract member NotationDecl : string * string * string -&gt; unit&#xA;override this.NotationDecl : string * string * string -&gt; unit" Usage="handlerBase.NotationDecl (name, publicId, systemId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDTDHandler.NotationDecl(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notationDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetNotationDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notationDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetNotationDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The notation name.</param>
        <param name="publicId">The notation public identifier, or null if not
                            available.</param>
        <param name="systemId">The notation system identifier.</param>
        <summary>Receive notification of a notation declaration.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#notationDecl(java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.notationDecl(java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IDTDHandler.NotationDecl(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="C#" Value="public virtual void ProcessingInstruction (string? target, string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.ProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessingInstruction (target As String, data As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessingInstruction(System::String ^ target, System::String ^ data);" />
      <MemberSignature Language="F#" Value="abstract member ProcessingInstruction : string * string -&gt; unit&#xA;override this.ProcessingInstruction : string * string -&gt; unit" Usage="handlerBase.ProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.ProcessingInstruction(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">The processing instruction target.</param>
        <param name="data">The processing instruction data, or null if
                        none is supplied.</param>
        <summary>Receive notification of a processing instruction.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#processingInstruction(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.processingInstruction(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.ProcessingInstruction(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public virtual Org.Xml.Sax.InputSource? ResolveEntity (string? publicId, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource ResolveEntity(string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.ResolveEntity(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveEntity (publicId As String, systemId As String) As InputSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Org::Xml::Sax::InputSource ^ ResolveEntity(System::String ^ publicId, System::String ^ systemId);" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : string * string -&gt; Org.Xml.Sax.InputSource&#xA;override this.ResolveEntity : string * string -&gt; Org.Xml.Sax.InputSource" Usage="handlerBase.ResolveEntity (publicId, systemId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IEntityResolver.ResolveEntity(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicId">The public identifier, or null if none is
                            available.</param>
        <param name="systemId">The system identifier provided in the XML
                            document.</param>
        <summary>Resolve an external entity.</summary>
        <returns>The new input source, or null to require the
                    default behaviour.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#resolveEntity(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.resolveEntity(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IEntityResolver.ResolveEntity(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="C#" Value="public virtual void SetDocumentLocator (Org.Xml.Sax.ILocator? locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDocumentLocator (locator As ILocator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDocumentLocator(Org::Xml::Sax::ILocator ^ locator);" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit&#xA;override this.SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit" Usage="handlerBase.SetDocumentLocator locator" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">A locator for all SAX document events.</param>
        <summary>Receive a Locator object for document events.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#setDocumentLocator(org.xml.sax.Locator)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.setDocumentLocator(org.xml.sax.Locator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="C#" Value="public virtual void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.StartDocument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartDocument ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartDocument();" />
      <MemberSignature Language="F#" Value="abstract member StartDocument : unit -&gt; unit&#xA;override this.StartDocument : unit -&gt; unit" Usage="handlerBase.StartDocument " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.StartDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the beginning of the document.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#startDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.startDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.StartDocument" />
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="C#" Value="public virtual void StartElement (string? name, Org.Xml.Sax.IAttributeList? attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string name, class Org.Xml.Sax.IAttributeList attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.StartElement(System.String,Org.Xml.Sax.IAttributeList)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartElement (name As String, attributes As IAttributeList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartElement(System::String ^ name, Org::Xml::Sax::IAttributeList ^ attributes);" />
      <MemberSignature Language="F#" Value="abstract member StartElement : string * Org.Xml.Sax.IAttributeList -&gt; unit&#xA;override this.StartElement : string * Org.Xml.Sax.IAttributeList -&gt; unit" Usage="handlerBase.StartElement (name, attributes)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDocumentHandler.StartElement(System.String,Org.Xml.Sax.IAttributeList)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startElement", "(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V", "GetStartElement_Ljava_lang_String_Lorg_xml_sax_AttributeList_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startElement", "(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V", "GetStartElement_Ljava_lang_String_Lorg_xml_sax_AttributeList_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attributes" Type="Org.Xml.Sax.IAttributeList" />
      </Parameters>
      <Docs>
        <param name="name">The element type name.</param>
        <param name="attributes">The specified or defaulted attributes.</param>
        <summary>Receive notification of the start of an element.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#startElement(java.lang.String,%20org.xml.sax.AttributeList)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.startElement(java.lang.String, org.xml.sax.AttributeList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.StartElement(System.String, Org.Xml.Sax.IAttributeList)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.HandlerBase.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Xml.Sax.HandlerBase.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.HandlerBase.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Xml.Sax.HandlerBase.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnparsedEntityDecl">
      <MemberSignature Language="C#" Value="public virtual void UnparsedEntityDecl (string? name, string? publicId, string? systemId, string? notationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnparsedEntityDecl(string name, string publicId, string systemId, string notationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.UnparsedEntityDecl(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnparsedEntityDecl (name As String, publicId As String, systemId As String, notationName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnparsedEntityDecl(System::String ^ name, System::String ^ publicId, System::String ^ systemId, System::String ^ notationName);" />
      <MemberSignature Language="F#" Value="abstract member UnparsedEntityDecl : string * string * string * string -&gt; unit&#xA;override this.UnparsedEntityDecl : string * string * string * string -&gt; unit" Usage="handlerBase.UnparsedEntityDecl (name, publicId, systemId, notationName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IDTDHandler.UnparsedEntityDecl(System.String,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unparsedEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetUnparsedEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unparsedEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetUnparsedEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
        <Parameter Name="notationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The entity name.</param>
        <param name="publicId">The entity public identifier, or null if not
                            available.</param>
        <param name="systemId">The entity system identifier.</param>
        <param name="notationName">The name of the associated notation.</param>
        <summary>Receive notification of an unparsed entity declaration.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#unparsedEntityDecl(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.unparsedEntityDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Org.Xml.Sax.IDTDHandler.UnparsedEntityDecl(System.String, System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Warning">
      <MemberSignature Language="C#" Value="public virtual void Warning (Org.Xml.Sax.SAXParseException? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Warning(class Org.Xml.Sax.SAXParseException e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.HandlerBase.Warning(Org.Xml.Sax.SAXParseException)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Warning (e As SAXParseException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Warning(Org::Xml::Sax::SAXParseException ^ e);" />
      <MemberSignature Language="F#" Value="abstract member Warning : Org.Xml.Sax.SAXParseException -&gt; unit&#xA;override this.Warning : Org.Xml.Sax.SAXParseException -&gt; unit" Usage="handlerBase.Warning e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.IErrorHandler.Warning(Org.Xml.Sax.SAXParseException)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("warning", "(Lorg/xml/sax/SAXParseException;)V", "GetWarning_Lorg_xml_sax_SAXParseException_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("warning", "(Lorg/xml/sax/SAXParseException;)V", "GetWarning_Lorg_xml_sax_SAXParseException_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Org.Xml.Sax.SAXParseException" />
      </Parameters>
      <Docs>
        <param name="e">The warning information encoded as an exception.</param>
        <summary>Receive notification of a parser warning.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/HandlerBase#warning(org.xml.sax.SAXParseException)" title="Reference documentation">Java documentation for <code>org.xml.sax.HandlerBase.warning(org.xml.sax.SAXParseException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IErrorHandler.Warning(Org.Xml.Sax.SAXParseException)" />
        <altmember cref="T:Org.Xml.Sax.SAXParseException" />
      </Docs>
    </Member>
  </Members>
</Type>
