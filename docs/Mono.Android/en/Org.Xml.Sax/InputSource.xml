<Type Name="InputSource" FullName="Org.Xml.Sax.InputSource">
  <TypeSignature Language="C#" Value="public class InputSource : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputSource extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/InputSource", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A single input source for an XML entity.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A single input source for an XML entity.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i>
 See 
 for further information.
 </blockquote></format></para>
      <para tool="javadoc-to-mdoc">This class allows a SAX application to encapsulate information
 about an input source in a single object, which may include
 a public identifier, a system identifier, a byte stream (possibly
 with a specified encoding), and/or a character stream.</para>
      <para tool="javadoc-to-mdoc">There are two places that the application can deliver an
 input source to the parser: as the argument to the Parser.parse
 method, or as the return value of the EntityResolver.resolveEntity
 method.</para>
      <para tool="javadoc-to-mdoc">The SAX parser will use the InputSource object to determine how
 to read XML input.  If there is a character stream available, the
 parser will read that stream directly, disregarding any text
 encoding declaration found in that stream.
 If there is no character stream, but there is
 a byte stream, the parser will use that byte stream, using the
 encoding specified in the InputSource or else (if no encoding is
 specified) autodetecting the character encoding using an algorithm
 such as the one in the XML specification.  If neither a character
 stream nor a
 byte stream is available, the parser will attempt to open a URI
 connection to the resource identified by the system
 identifier.</para>
      <para tool="javadoc-to-mdoc">An InputSource object belongs to the application: the SAX parser
 shall never modify it in any way (it may modify a copy if
 necessary).  However, standard processing of both byte and
 character streams is to close them on as part of end-of-parse cleanup,
 so applications should not attempt to re-use such streams after they
 have been handed to a parser.  <format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="M:Org.Xml.Sax.IXMLReader.Parse(Org.Xml.Sax.InputSource)" /></c></term></item><item><term><c><see cref="M:Org.Xml.Sax.IEntityResolver.ResolveEntity(System.String,System.String)" /></c></term></item><item><term><c><see cref="T:Java.IO.InputStream" /></c></term></item><item><term><c><see cref="T:Java.IO.Reader" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Zero-argument default constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Zero-argument default constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#InputSource()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputSource (Java.IO.Reader characterStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.Reader characterStream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/Reader;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="characterStream" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="characterStream">To be added.</param>
        <summary>Create a new input source with a character stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new input source with a character stream.

 </para>
          <para tool="javadoc-to-mdoc">Application writers should use setSystemId() to provide a base
 for resolving relative URIs, and may use setPublicId to include a
 public identifier.</para>
          <para tool="javadoc-to-mdoc">The character stream shall not include a byte order mark.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#InputSource(java.io.Reader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputSource (System.IO.Stream byteStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream byteStream) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/InputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="byteStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="byteStream">To be added.</param>
        <summary>Create a new input source with a byte stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new input source with a byte stream.

 </para>
          <para tool="javadoc-to-mdoc">Application writers should use setSystemId() to provide a base
 for resolving relative URIs, may use setPublicId to include a
 public identifier, and may use setEncoding to specify the object's
 character encoding.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#InputSource(java.io.InputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputSource (string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemId">To be added.</param>
        <summary>Create a new input source with a system identifier.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new input source with a system identifier.

 </para>
          <para tool="javadoc-to-mdoc">Applications may use setPublicId to include a
 public identifier as well, or setEncoding to specify
 the character encoding, if known.</para>
          <para tool="javadoc-to-mdoc">If the system identifier is a URL, it must be fully
 resolved (it may not be a relative URL).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#InputSource(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputSource (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream ByteStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream ByteStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getByteStream", "()Ljava/io/InputStream;", "GetGetByteStreamHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setByteStream", "(Ljava/io/InputStream;)V", "GetSetByteStream_Ljava_io_InputStream_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the byte stream for this input source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#getByteStream()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the byte stream for this input source.

 </para>
          <para tool="javadoc-to-mdoc">The getEncoding method will return the character
 encoding for this byte stream, or null if unknown.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#setByteStream(java.io.InputStream)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the byte stream for this input source.

 </para>
          <para tool="javadoc-to-mdoc">The SAX parser will ignore this if there is also a character
 stream specified, but it will use a byte stream in preference
 to opening a URI connection itself.</para>
          <para tool="javadoc-to-mdoc">If the application knows the character encoding of the
 byte stream, it should set it with the setEncoding method.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="T:Java.IO.InputStream" />
      </Docs>
    </Member>
    <Member MemberName="CharacterStream">
      <MemberSignature Language="C#" Value="public virtual Java.IO.Reader CharacterStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.Reader CharacterStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCharacterStream", "()Ljava/io/Reader;", "GetGetCharacterStreamHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCharacterStream", "(Ljava/io/Reader;)V", "GetSetCharacterStream_Ljava_io_Reader_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.Reader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the character stream for this input source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#getCharacterStream()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the character stream for this input source.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#setCharacterStream(java.io.Reader)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the character stream for this input source.

 </para>
          <para tool="javadoc-to-mdoc">If there is a character stream specified, the SAX parser
 will ignore any byte stream and will not attempt to open
 a URI connection to the system identifier.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.CharacterStream" />
        <altmember cref="T:Java.IO.Reader" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEncoding", "()Ljava/lang/String;", "GetGetEncodingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEncoding", "(Ljava/lang/String;)V", "GetSetEncoding_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the character encoding for a byte stream or URI.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#getEncoding()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the character encoding for a byte stream or URI.
 This value will be ignored when the application provides a
 character stream.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#setEncoding(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the character encoding, if known.

 </para>
          <para tool="javadoc-to-mdoc">The encoding must be a string acceptable for an
 XML encoding declaration (see section 4.3.3 of the XML 1.0
 recommendation).</para>
          <para tool="javadoc-to-mdoc">This method has no effect when the application provides a
 character stream.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.ByteStream" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="PublicId">
      <MemberSignature Language="C#" Value="public virtual string PublicId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PublicId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPublicId", "()Ljava/lang/String;", "GetGetPublicIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPublicId", "(Ljava/lang/String;)V", "GetSetPublicId_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the public identifier for this input source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#getPublicId()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the public identifier for this input source.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#setPublicId(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the public identifier for this input source.

 </para>
          <para tool="javadoc-to-mdoc">The public identifier is always optional: if the application
 writer includes one, it will be provided as part of the
 location information.</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.PublicId" />
        <altmember cref="P:Org.Xml.Sax.ILocator.PublicId" />
        <altmember cref="P:Org.Xml.Sax.SAXParseException.PublicId" />
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public virtual string SystemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystemId", "()Ljava/lang/String;", "GetGetSystemIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSystemId", "(Ljava/lang/String;)V", "GetSetSystemId_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the system identifier for this input source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#getSystemId()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Get the system identifier for this input source.

 </para>
          <para tool="javadoc-to-mdoc">The getEncoding method will return the character encoding
 of the object pointed to, or null if unknown.</para>
          <para tool="javadoc-to-mdoc">If the system ID is a URL, it will be fully resolved.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/xml/sax/InputSource.html#setSystemId(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the system identifier for this input source.

 </para>
          <para tool="javadoc-to-mdoc">The system identifier is optional if there is a byte stream
 or a character stream, but it is still useful to provide one,
 since the application can use it to resolve relative URIs
 and can include it in error messages and warnings (the parser
 will attempt to open a connection to the URI only if
 there is no byte stream or character stream specified).</para>
          <para tool="javadoc-to-mdoc">If the application knows the character encoding of the
 object pointed to by the system identifier, it can register
 the encoding using the setEncoding method.</para>
          <para tool="javadoc-to-mdoc">If the system identifier is a URL, it must be fully
 resolved (it may not be a relative URL).</para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.Encoding" />
        <altmember cref="P:Org.Xml.Sax.InputSource.SystemId" />
        <altmember cref="P:Org.Xml.Sax.ILocator.SystemId" />
        <altmember cref="P:Org.Xml.Sax.SAXParseException.SystemId" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
