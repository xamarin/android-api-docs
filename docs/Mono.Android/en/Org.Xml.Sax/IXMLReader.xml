<Type Name="IXMLReader" FullName="Org.Xml.Sax.IXMLReader">
  <TypeSignature Language="C#" Value="public interface IXMLReader : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IXMLReader implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.IXMLReader" />
  <TypeSignature Language="F#" Value="type IXMLReader = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/XMLReader", "", "Org.Xml.Sax.IXMLReaderInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/XMLReader", "", "Org.Xml.Sax.IXMLReaderInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Interface for reading an XML document using callbacks.</summary>
    <remarks>
      <para>Interface for reading an XML document using callbacks.
            
            &lt;blockquote&gt;
            &lt;em&gt;This module, both source code and documentation, is in the
            Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;
            See <see href="http://www.saxproject.org">http://www.saxproject.org</see>
            for further information.
            &lt;/blockquote&gt;</para>
      <para>&lt;strong&gt;Note:&lt;/strong&gt; despite its name, this interface does
            &lt;em&gt;not&lt;/em&gt; extend the standard Java <c>java.io.Reader Reader</c>
            interface, because reading XML is a fundamentally different activity
            than reading character data.</para>
      <para>XMLReader is the interface that an XML parser's SAX2 driver must
            implement.  This interface allows an application to set and
            query features and properties in the parser, to register
            event handlers for document processing, and to initiate
            a document parse.</para>
      <para>All SAX interfaces are assumed to be synchronous: the
            <c>#parse parse</c> methods must not return until parsing
            is complete, and readers must wait for an event-handler callback
            to return before reporting the next event.</para>
      <para>This interface replaces the (now deprecated) SAX 1.0 <c>org.xml.sax.Parser Parser</c> interface.  The XMLReader interface
            contains two important enhancements over the old Parser
            interface (as well as some minor ones):</para>
      <para>&lt;ol&gt;
            &lt;li&gt;it adds a standard way to query and set features and
             properties; and&lt;/li&gt;
            &lt;li&gt;it adds Namespace support, which is required for many
             higher-level XML standards.&lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>There are adapters available to convert a SAX1 Parser to
            a SAX2 XMLReader and vice-versa.</para>
      <para>Added in SAX 2.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/XMLReader" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ContentHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IContentHandler? ContentHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IContentHandler ContentHandler" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
      <MemberSignature Language="F#" Value="member this.ContentHandler : Org.Xml.Sax.IContentHandler with get, set" Usage="Org.Xml.Sax.IXMLReader.ContentHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentHandler", "()Lorg/xml/sax/ContentHandler;", "GetGetContentHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContentHandler", "(Lorg/xml/sax/ContentHandler;)V", "GetSetContentHandler_Lorg_xml_sax_ContentHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IContentHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current content handler.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
      </Docs>
    </Member>
    <Member MemberName="DTDHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IDTDHandler? DTDHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IDTDHandler DTDHandler" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
      <MemberSignature Language="F#" Value="member this.DTDHandler : Org.Xml.Sax.IDTDHandler with get, set" Usage="Org.Xml.Sax.IXMLReader.DTDHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDTDHandler", "()Lorg/xml/sax/DTDHandler;", "GetGetDTDHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDTDHandler", "()Lorg/xml/sax/DTDHandler;", "GetGetDTDHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDTDHandler", "(Lorg/xml/sax/DTDHandler;)V", "GetSetDTDHandler_Lorg_xml_sax_DTDHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDTDHandler", "(Lorg/xml/sax/DTDHandler;)V", "GetSetDTDHandler_Lorg_xml_sax_DTDHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IDTDHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current DTD handler.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
      </Docs>
    </Member>
    <Member MemberName="EntityResolver">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IEntityResolver? EntityResolver { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IEntityResolver EntityResolver" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
      <MemberSignature Language="F#" Value="member this.EntityResolver : Org.Xml.Sax.IEntityResolver with get, set" Usage="Org.Xml.Sax.IXMLReader.EntityResolver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEntityResolver", "()Lorg/xml/sax/EntityResolver;", "GetGetEntityResolverHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEntityResolver", "()Lorg/xml/sax/EntityResolver;", "GetGetEntityResolverHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setEntityResolver", "(Lorg/xml/sax/EntityResolver;)V", "GetSetEntityResolver_Lorg_xml_sax_EntityResolver_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setEntityResolver", "(Lorg/xml/sax/EntityResolver;)V", "GetSetEntityResolver_Lorg_xml_sax_EntityResolver_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IEntityResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current entity resolver.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
      </Docs>
    </Member>
    <Member MemberName="ErrorHandler">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.IErrorHandler? ErrorHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Xml.Sax.IErrorHandler ErrorHandler" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
      <MemberSignature Language="F#" Value="member this.ErrorHandler : Org.Xml.Sax.IErrorHandler with get, set" Usage="Org.Xml.Sax.IXMLReader.ErrorHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getErrorHandler", "()Lorg/xml/sax/ErrorHandler;", "GetGetErrorHandlerHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setErrorHandler", "(Lorg/xml/sax/ErrorHandler;)V", "GetSetErrorHandler_Lorg_xml_sax_ErrorHandler_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.IErrorHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current error handler.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public bool GetFeature (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.GetFeature(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetFeature : string -&gt; bool" Usage="iXMLReader.GetFeature name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a fully-qualified URI.</param>
        <summary>Look up the value of a feature flag.</summary>
        <returns>The current value of the feature (true or false).</returns>
        <remarks>
          <para>Look up the value of a feature flag.</para>
          <para>The feature name is any fully-qualified URI.  It is
            possible for an XMLReader to recognize a feature name but
            temporarily be unable to return its value.
            Some feature values may be available only in specific
            contexts, such as before, during, or after a parse.
            Also, some feature values may not be programmatically accessible.
            (In the case of an adapter for SAX1 <c>Parser</c>, there is no
            implementation-independent way to expose whether the underlying
            parser is performing validation, expanding external entities,
            and so forth.)</para>
          <para>All XMLReaders are required to recognize the
            http://xml.org/sax/features/namespaces and the
            http://xml.org/sax/features/namespace-prefixes feature names.</para>
          <para>Typical usage is something like this:</para>
          <code lang="text/java">XMLReader r = new MySAXDriver();
            
                                    // try to activate validation
            try {
              r.setFeature("http://xml.org/sax/features/validation", true);
            } catch (SAXException e) {
              System.err.println("Cannot activate validation.");
            }
            
                                    // register event handlers
            r.setContentHandler(new MyContentHandler());
            r.setErrorHandler(new MyErrorHandler());
            
                                    // parse the first document
            try {
              r.parse("http://www.foo.com/mydoc.xml");
            } catch (IOException e) {
              System.err.println("I/O exception reading XML document");
            } catch (SAXException e) {
              System.err.println("XML exception reading document.");
            }
            </code>
          <para>Implementors are free (and encouraged) to invent their own features,
            using names built on their own URIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#getFeature(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.getFeature(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the feature name but
            cannot determine its value at this time.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetFeature(System.String, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetProperty (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Java.Lang.Object" Usage="iXMLReader.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a fully-qualified URI.</param>
        <summary>Look up the value of a property.</summary>
        <returns>The current value of the property.</returns>
        <remarks>
          <para>Look up the value of a property.</para>
          <para>The property name is any fully-qualified URI.  It is
            possible for an XMLReader to recognize a property name but
            temporarily be unable to return its value.
            Some property values may be available only in specific
            contexts, such as before, during, or after a parse.</para>
          <para>XMLReaders are not required to recognize any specific
            property names, though an initial core set is documented for
            SAX2.</para>
          <para>Implementors are free (and encouraged) to invent their own properties,
            using names built on their own URIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot determine its value at this time.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public void Parse (Org.Xml.Sax.InputSource? input);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(class Org.Xml.Sax.InputSource input) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.Parse(Org.Xml.Sax.InputSource)" />
      <MemberSignature Language="F#" Value="abstract member Parse : Org.Xml.Sax.InputSource -&gt; unit" Usage="iXMLReader.Parse input" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;)V", "GetParse_Lorg_xml_sax_InputSource_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Lorg/xml/sax/InputSource;)V", "GetParse_Lorg_xml_sax_InputSource_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="input" Type="Org.Xml.Sax.InputSource" />
      </Parameters>
      <Docs>
        <param name="input">The input source for the top-level of the
                   XML document.</param>
        <summary>Parse an XML document.</summary>
        <remarks>
          <para>Parse an XML document.</para>
          <para>The application can use this method to instruct the XML
            reader to begin parsing an XML document from any valid input
            source (a character stream, a byte stream, or a URI).</para>
          <para>Applications may not invoke this method while a parse is in
            progress (they should create a new XMLReader instead for each
            nested XML document).  Once a parse is complete, an
            application may reuse the same XMLReader object, possibly with a
            different input source.
            Configuration of the XMLReader object (such as handler bindings and
            values established for feature flags and properties) is unchanged
            by completion of a parse, unless the definition of that aspect of
            the configuration explicitly specifies other behavior.
            (For example, feature flags or properties exposing
            characteristics of the document being parsed.)</para>
          <para>During the parse, the XMLReader will provide information
            about the XML document through the registered event
            handlers.</para>
          <para>This method is synchronous: it will not return until parsing
            has ended.  If a client application wants to terminate
            parsing early, it should throw an exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#parse(org.xml.sax.InputSource)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.parse(org.xml.sax.InputSource)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <exception cref="T:Java.IO.IOException">An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.</exception>
        <altmember cref="T:Org.Xml.Sax.InputSource" />
        <altmember cref="M:Org.Xml.Sax.IXMLReader.Parse(System.String)" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.EntityResolver" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.DTDHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ContentHandler" />
        <altmember cref="P:Org.Xml.Sax.IXMLReader.ErrorHandler" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public void Parse (string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Parse(string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.Parse(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string -&gt; unit" Usage="iXMLReader.Parse systemId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;)V", "GetParse_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;)V", "GetParse_Ljava_lang_String_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="systemId">The system identifier (URI).</param>
        <summary>Parse an XML document from a system identifier (URI).</summary>
        <remarks>
          <para>Parse an XML document from a system identifier (URI).</para>
          <para>This method is a shortcut for the common case of reading a
            document from a system identifier.  It is the exact
            equivalent of the following:</para>
          <code lang="text/java">parse(new InputSource(systemId));
            </code>
          <para>If the system identifier is a URL, it must be fully resolved
            by the application before it is passed to the parser.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#parse(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.parse(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <exception cref="T:Java.IO.IOException">An IO exception from the parser,
            possibly from a byte stream or character stream
            supplied by the application.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.Parse(Org.Xml.Sax.InputSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public void SetFeature (string? name, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.SetFeature(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFeature : string * bool -&gt; unit" Usage="iXMLReader.SetFeature (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">The feature name, which is a fully-qualified URI.</param>
        <param name="value">The requested value of the feature (true or false).</param>
        <summary>Set the value of a feature flag.</summary>
        <remarks>
          <para>Set the value of a feature flag.</para>
          <para>The feature name is any fully-qualified URI.  It is
            possible for an XMLReader to expose a feature value but
            to be unable to change the current value.
            Some feature values may be immutable or mutable only
            in specific contexts, such as before, during, or after
            a parse.</para>
          <para>All XMLReaders are required to support setting
            http://xml.org/sax/features/namespaces to true and
            http://xml.org/sax/features/namespace-prefixes to false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#setFeature(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.setFeature(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the feature
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the feature name but
            cannot set the requested value.</exception>
        <altmember cref="M:Org.Xml.Sax.IXMLReader.GetFeature(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : string * Java.Lang.Object -&gt; unit" Usage="iXMLReader.SetProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.Xml.Sax.IXMLReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The property name, which is a fully-qualified URI.</param>
        <param name="value">The requested value for the property.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para>Set the value of a property.</para>
          <para>The property name is any fully-qualified URI.  It is
            possible for an XMLReader to recognize a property name but
            to be unable to change the current value.
            Some property values may be immutable or mutable only
            in specific contexts, such as before, during, or after
            a parse.</para>
          <para>XMLReaders are not required to recognize setting
            any specific property names, though a core set is defined by
            SAX2.</para>
          <para>This method is also the standard mechanism for setting
            extended handlers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/XMLReader#setProperty(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>org.xml.sax.XMLReader.setProperty(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXNotRecognizedException">If the property
            value can't be assigned or retrieved.</exception>
        <exception cref="T:Org.Xml.Sax.SAXNotSupportedException">When the
            XMLReader recognizes the property name but
            cannot set the requested value.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
