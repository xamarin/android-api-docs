<Type Name="IEntityResolver" FullName="Org.Xml.Sax.IEntityResolver">
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityResolver&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEntityResolver : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IEntityResolver : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEntityResolver implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.IEntityResolver" />
  <TypeSignature Language="F#" Value="type IEntityResolver = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/EntityResolver", "", "Org.Xml.Sax.IEntityResolverInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/EntityResolver", "", "Org.Xml.Sax.IEntityResolverInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Basic interface for resolving entities.</summary>
    <remarks>
      <para>Basic interface for resolving entities.
            
            &lt;blockquote&gt;
            &lt;em&gt;This module, both source code and documentation, is in the
            Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;
            See <see href="http://www.saxproject.org">http://www.saxproject.org</see>
            for further information.
            &lt;/blockquote&gt;</para>
      <para>If a SAX application needs to implement customized handling
            for external entities, it must implement this interface and
            register an instance with the SAX driver using the
            <c>org.xml.sax.XMLReader#setEntityResolver setEntityResolver</c>
            method.</para>
      <para>The XML reader will then allow the application to intercept any
            external entities (including the external DTD subset and external
            parameter entities, if any) before including them.</para>
      <para>Many SAX applications will not need to implement this interface,
            but it will be especially useful for applications that build
            XML documents from databases or other specialised input sources,
            or for applications that use URI types other than URLs.</para>
      <para>The following resolver would provide the application
            with a special character stream for the entity with the system
            identifier "http://www.myhost.com/today":</para>
      <code lang="text/java">import org.xml.sax.EntityResolver;
            import org.xml.sax.InputSource;
            
            public class MyResolver implements EntityResolver {
              public InputSource resolveEntity (String publicId, String systemId)
              {
                if (systemId.equals("http://www.myhost.com/today")) {
                         // return a special input source
                  MyReader reader = new MyReader();
                  return new InputSource(reader);
                } else {
                         // use the default behaviour
                  return null;
                }
              }
            }
            </code>
      <para>The application can also use this interface to redirect system
            identifiers to local URIs or to look up replacements in a catalog
            (possibly by using the public identifier).</para>
      <para>Added in SAX 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/EntityResolver" title="Reference documentation">Java documentation for <code>org.xml.sax.EntityResolver</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="VB.NET" Value="Public Function ResolveEntity (publicId As String, systemId As String) As InputSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::Xml::Sax::InputSource ^ ResolveEntity(System::String ^ publicId, System::String ^ systemId);" />
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.InputSource? ResolveEntity (string? publicId, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource ResolveEntity(string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IEntityResolver.ResolveEntity(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : string * string -&gt; Org.Xml.Sax.InputSource" Usage="iEntityResolver.ResolveEntity (publicId, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IEntityResolverInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IEntityResolverInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicId">The public identifier of the external entity
                   being referenced, or null if none was supplied.</param>
        <param name="systemId">The system identifier of the external entity
                   being referenced.</param>
        <summary>Allow the application to resolve external entities.</summary>
        <returns>An InputSource object describing the new input source,
                    or null to request that the parser open a regular
                    URI connection to the system identifier.</returns>
        <remarks>
          <para>Allow the application to resolve external entities.</para>
          <para>The parser will call this method before opening any external
            entity except the top-level document entity.  Such entities include
            the external DTD subset and external parameter entities referenced
            within the DTD (in either case, only if the parser reads external
            parameter entities), and external general entities referenced
            within the document element (if the parser reads external general
            entities).  The application may request that the parser locate
            the entity itself, that it use an alternative URI, or that it
            use data provided by the application (as a character or byte
            input stream).</para>
          <para>Application writers can use this method to redirect external
            system identifiers to secure and/or local URIs, to look up
            public identifiers in a catalogue, or to read an entity from a
            database or other input source (including, for example, a dialog
            box).  Neither XML nor SAX specifies a preferred policy for using
            public or system IDs to resolve resources.  However, SAX specifies
            how to interpret any InputSource returned by this method, and that
            if none is returned, then the system ID will be dereferenced as
            a URL.</para>
          <para>If the system identifier is a URL, the SAX parser must
            resolve it fully before reporting it to the application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/EntityResolver#resolveEntity(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.EntityResolver.resolveEntity(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <exception cref="T:Java.IO.IOException">A Java-specific IO exception,
            possibly the result of creating a new InputStream
            or Reader for the InputSource.</exception>
        <altmember cref="T:Org.Xml.Sax.InputSource" />
      </Docs>
    </Member>
  </Members>
</Type>
