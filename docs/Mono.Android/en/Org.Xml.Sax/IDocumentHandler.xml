<Type Name="IDocumentHandler" FullName="Org.Xml.Sax.IDocumentHandler">
  <TypeSignature Language="C#" Value="public interface IDocumentHandler : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDocumentHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.IDocumentHandler" />
  <TypeSignature Language="F#" Value="type IDocumentHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/DocumentHandler", "", "Org.Xml.Sax.IDocumentHandlerInvoker")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Receive notification of general document events.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1Deprecated since API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public void Characters (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Characters : char[] * int * int -&gt; unit" Usage="iDocumentHandler.Characters (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The characters from the XML document.</param>
        <param name="start">The start position in the array.</param>
        <param name="length">The number of characters to read from the array.</param>
        <summary>Receive notification of character data.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[], System.Int32, System.Int32)" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="C#" Value="public void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.EndDocument" />
      <MemberSignature Language="F#" Value="abstract member EndDocument : unit -&gt; unit" Usage="iDocumentHandler.EndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the end of a document.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="C#" Value="public void EndElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndElement : string -&gt; unit" Usage="iDocumentHandler.EndElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endElement", "(Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The element type name</param>
        <summary>Receive notification of the end of an element.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="C#" Value="public void IgnorableWhitespace (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IgnorableWhitespace : char[] * int * int -&gt; unit" Usage="iDocumentHandler.IgnorableWhitespace (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The characters from the XML document.</param>
        <param name="start">The start position in the array.</param>
        <param name="length">The number of characters to read from the array.</param>
        <summary>Receive notification of ignorable whitespace in element content.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="C#" Value="public void ProcessingInstruction (string target, string data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.ProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ProcessingInstruction : string * string -&gt; unit" Usage="iDocumentHandler.ProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">The processing instruction target.</param>
        <param name="data">The processing instruction data, or null if
                   none was supplied.</param>
        <summary>Receive notification of a processing instruction.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="C#" Value="public void SetDocumentLocator (Org.Xml.Sax.ILocator locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit" Usage="iDocumentHandler.SetDocumentLocator locator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">An object that can return the location of
                           any SAX document event.</param>
        <summary>Receive an object for locating the origin of SAX document events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="C#" Value="public void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.StartDocument" />
      <MemberSignature Language="F#" Value="abstract member StartDocument : unit -&gt; unit" Usage="iDocumentHandler.StartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the beginning of a document.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="C#" Value="public void StartElement (string name, Org.Xml.Sax.IAttributeList atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string name, class Org.Xml.Sax.IAttributeList atts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.StartElement(System.String,Org.Xml.Sax.IAttributeList)" />
      <MemberSignature Language="F#" Value="abstract member StartElement : string * Org.Xml.Sax.IAttributeList -&gt; unit" Usage="iDocumentHandler.StartElement (name, atts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startElement", "(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V", "GetStartElement_Ljava_lang_String_Lorg_xml_sax_AttributeList_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributeList" />
      </Parameters>
      <Docs>
        <param name="name">The element type name.</param>
        <param name="atts">The attributes attached to the element, if any.</param>
        <summary>Receive notification of the beginning of an element.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)" />
        <altmember cref="T:Org.Xml.Sax.IAttributeList" />
      </Docs>
    </Member>
  </Members>
</Type>
