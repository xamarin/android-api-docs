<Type Name="IDocumentHandler" FullName="Org.Xml.Sax.IDocumentHandler">
  <TypeSignature Language="C#" Value="public interface IDocumentHandler : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDocumentHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.IDocumentHandler" />
  <TypeSignature Language="F#" Value="type IDocumentHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/DocumentHandler", "", "Org.Xml.Sax.IDocumentHandlerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/DocumentHandler", "", "Org.Xml.Sax.IDocumentHandlerInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Receive notification of general document events.</summary>
    <remarks>
      <para>Receive notification of general document events.
            
            &lt;blockquote&gt;
            &lt;em&gt;This module, both source code and documentation, is in the
            Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;
            See <see href="http://www.saxproject.org">http://www.saxproject.org</see>
            for further information.
            &lt;/blockquote&gt;</para>
      <para>This was the main event-handling interface for SAX1; in
            SAX2, it has been replaced by <c>org.xml.sax.ContentHandler
            ContentHandler</c>, which provides Namespace support and reporting
            of skipped entities.  This interface is included in SAX2 only
            to support legacy SAX1 applications.</para>
      <para>The order of events in this interface is very important, and
            mirrors the order of information in the document itself.  For
            example, all of an element's content (character data, processing
            instructions, and/or subelements) will appear, in order, between
            the startElement event and the corresponding endElement event.</para>
      <para>Application writers who do not want to implement the entire
            interface can derive a class from HandlerBase, which implements
            the default functionality; parser writers can instantiate
            HandlerBase to obtain a default handler.  The application can find
            the location of any document event using the Locator interface
            supplied by the Parser through the setDocumentLocator method.</para>
      <para>This member is deprecated. This interface has been replaced by the SAX2
                        <c>org.xml.sax.ContentHandler ContentHandler</c>
                        interface, which includes Namespace support.</para>
      <para>Added in SAX 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1Deprecated since API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public void Characters (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Characters(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Characters : char[] * int * int -&gt; unit" Usage="iDocumentHandler.Characters (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("characters", "([CII)V", "GetCharacters_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The characters from the XML document.</param>
        <param name="start">The start position in the array.</param>
        <param name="length">The number of characters to read from the array.</param>
        <summary>Receive notification of character data.</summary>
        <remarks>
          <para>Receive notification of character data.</para>
          <para>The Parser will call this method to report each chunk of
            character data.  SAX parsers may return all contiguous character
            data in a single chunk, or they may split it into several
            chunks; however, all of the characters in any single event
            must come from the same external entity, so that the Locator
            provides useful information.</para>
          <para>The application must not attempt to read from the array
            outside of the specified range.</para>
          <para>Note that some parsers will report whitespace using the
            ignorableWhitespace() method rather than this one (validating
            parsers must do so).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#characters(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.characters(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[], System.Int32, System.Int32)" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName="EndDocument">
      <MemberSignature Language="C#" Value="public void EndDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.EndDocument" />
      <MemberSignature Language="F#" Value="abstract member EndDocument : unit -&gt; unit" Usage="iDocumentHandler.EndDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endDocument", "()V", "GetEndDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the end of a document.</summary>
        <remarks>
          <para>Receive notification of the end of a document.</para>
          <para>The SAX parser will invoke this method only once, and it will
            be the last method invoked during the parse.  The parser shall
            not invoke this method until it has either abandoned parsing
            (because of an unrecoverable error) or reached the end of
            input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#endDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.endDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EndElement">
      <MemberSignature Language="C#" Value="public void EndElement (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndElement(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndElement : string -&gt; unit" Usage="iDocumentHandler.EndElement name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endElement", "(Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endElement", "(Ljava/lang/String;)V", "GetEndElement_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The element type name</param>
        <summary>Receive notification of the end of an element.</summary>
        <remarks>
          <para>Receive notification of the end of an element.</para>
          <para>The SAX parser will invoke this method at the end of every
            element in the XML document; there will be a corresponding
            startElement() event for every endElement() event (even when the
            element is empty).</para>
          <para>If the element name has a namespace prefix, the prefix will
            still be attached to the name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#endElement(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.endElement(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IgnorableWhitespace">
      <MemberSignature Language="C#" Value="public void IgnorableWhitespace (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IgnorableWhitespace(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.IgnorableWhitespace(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IgnorableWhitespace : char[] * int * int -&gt; unit" Usage="iDocumentHandler.IgnorableWhitespace (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ignorableWhitespace", "([CII)V", "GetIgnorableWhitespace_arrayCIIHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">The characters from the XML document.</param>
        <param name="start">The start position in the array.</param>
        <param name="length">The number of characters to read from the array.</param>
        <summary>Receive notification of ignorable whitespace in element content.</summary>
        <remarks>
          <para>Receive notification of ignorable whitespace in element content.</para>
          <para>Validating Parsers must use this method to report each chunk
            of ignorable whitespace (see the W3C XML 1.0 recommendation,
            section 2.10): non-validating parsers may also use this method
            if they are capable of parsing and using content models.</para>
          <para>SAX parsers may return all contiguous whitespace in a single
            chunk, or they may split it into several chunks; however, all of
            the characters in any single event must come from the same
            external entity, so that the Locator provides useful
            information.</para>
          <para>The application must not attempt to read from the array
            outside of the specified range.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#ignorableWhitespace(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.ignorableWhitespace(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.Characters(System.Char[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessingInstruction">
      <MemberSignature Language="C#" Value="public void ProcessingInstruction (string? target, string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.ProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ProcessingInstruction : string * string -&gt; unit" Usage="iDocumentHandler.ProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("processingInstruction", "(Ljava/lang/String;Ljava/lang/String;)V", "GetProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">The processing instruction target.</param>
        <param name="data">The processing instruction data, or null if
                   none was supplied.</param>
        <summary>Receive notification of a processing instruction.</summary>
        <remarks>
          <para>Receive notification of a processing instruction.</para>
          <para>The Parser will invoke this method once for each processing
            instruction found: note that processing instructions may occur
            before or after the main document element.</para>
          <para>A SAX parser should never report an XML declaration (XML 1.0,
            section 2.8) or a text declaration (XML 1.0, section 4.3.1)
            using this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#processingInstruction(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.processingInstruction(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDocumentLocator">
      <MemberSignature Language="C#" Value="public void SetDocumentLocator (Org.Xml.Sax.ILocator? locator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDocumentLocator(class Org.Xml.Sax.ILocator locator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.SetDocumentLocator(Org.Xml.Sax.ILocator)" />
      <MemberSignature Language="F#" Value="abstract member SetDocumentLocator : Org.Xml.Sax.ILocator -&gt; unit" Usage="iDocumentHandler.SetDocumentLocator locator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDocumentLocator", "(Lorg/xml/sax/Locator;)V", "GetSetDocumentLocator_Lorg_xml_sax_Locator_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locator" Type="Org.Xml.Sax.ILocator" />
      </Parameters>
      <Docs>
        <param name="locator">An object that can return the location of
                           any SAX document event.</param>
        <summary>Receive an object for locating the origin of SAX document events.</summary>
        <remarks>
          <para>Receive an object for locating the origin of SAX document events.</para>
          <para>SAX parsers are strongly encouraged (though not absolutely
            required) to supply a locator: if it does so, it must supply
            the locator to the application by invoking this method before
            invoking any of the other methods in the DocumentHandler
            interface.</para>
          <para>The locator allows the application to determine the end
            position of any document-related event, even if the parser is
            not reporting an error.  Typically, the application will
            use this information for reporting its own errors (such as
            character content that does not match an application's
            business rules).  The information returned by the locator
            is probably not sufficient for use with a search engine.</para>
          <para>Note that the locator will return correct information only
            during the invocation of the events in this interface.  The
            application should not attempt to use it at any other time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#setDocumentLocator(org.xml.sax.Locator)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.setDocumentLocator(org.xml.sax.Locator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Org.Xml.Sax.ILocator" />
      </Docs>
    </Member>
    <Member MemberName="StartDocument">
      <MemberSignature Language="C#" Value="public void StartDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.StartDocument" />
      <MemberSignature Language="F#" Value="abstract member StartDocument : unit -&gt; unit" Usage="iDocumentHandler.StartDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDocument", "()V", "GetStartDocumentHandler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive notification of the beginning of a document.</summary>
        <remarks>
          <para>Receive notification of the beginning of a document.</para>
          <para>The SAX parser will invoke this method only once, before any
            other methods in this interface or in DTDHandler (except for
            setDocumentLocator).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#startDocument()" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.startDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartElement">
      <MemberSignature Language="C#" Value="public void StartElement (string? name, Org.Xml.Sax.IAttributeList? atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartElement(string name, class Org.Xml.Sax.IAttributeList atts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.IDocumentHandler.StartElement(System.String,Org.Xml.Sax.IAttributeList)" />
      <MemberSignature Language="F#" Value="abstract member StartElement : string * Org.Xml.Sax.IAttributeList -&gt; unit" Usage="iDocumentHandler.StartElement (name, atts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startElement", "(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V", "GetStartElement_Ljava_lang_String_Lorg_xml_sax_AttributeList_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startElement", "(Ljava/lang/String;Lorg/xml/sax/AttributeList;)V", "GetStartElement_Ljava_lang_String_Lorg_xml_sax_AttributeList_Handler:Org.Xml.Sax.IDocumentHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributeList" />
      </Parameters>
      <Docs>
        <param name="name">The element type name.</param>
        <param name="atts">The attributes attached to the element, if any.</param>
        <summary>Receive notification of the beginning of an element.</summary>
        <remarks>
          <para>Receive notification of the beginning of an element.</para>
          <para>The Parser will invoke this method at the beginning of every
            element in the XML document; there will be a corresponding
            endElement() event for every startElement() event (even when the
            element is empty). All of the element's content will be
            reported, in order, before the corresponding endElement()
            event.</para>
          <para>If the element name has a namespace prefix, the prefix will
            still be attached.  Note that the attribute list provided will
            contain only attributes with explicit values (specified or
            defaulted): #IMPLIED attributes will be omitted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/DocumentHandler#startElement(java.lang.String,%20org.xml.sax.AttributeList)" title="Reference documentation">Java documentation for <code>org.xml.sax.DocumentHandler.startElement(java.lang.String, org.xml.sax.AttributeList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly
            wrapping another exception.</exception>
        <altmember cref="M:Org.Xml.Sax.IDocumentHandler.EndElement(System.String)" />
        <altmember cref="T:Org.Xml.Sax.IAttributeList" />
      </Docs>
    </Member>
  </Members>
</Type>
