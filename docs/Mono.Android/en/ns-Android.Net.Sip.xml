<Namespace Name="Android.Net.Sip">
  <Docs>
    <summary>Provides access to Session Initiation Protocol (SIP) functionality, such as
making and answering VOIP calls using SIP.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides access to Session Initiation Protocol (SIP) functionality, such as
making and answering VOIP calls using SIP.</para>
      <para tool="javadoc-to-mdoc">For more information, see the
<format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/connectivity/sip.html">Session Initiation Protocol</a></format>
developer guide.</para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">To get started, you need to get an instance of the <c><see cref="T:Android.Net.Sip.SipManager" /></c> by
calling <c><see cref="M:Android.Net.Sip.SipManager.NewInstance(Android.Content.Context)" /></c>.</para>
      <para tool="javadoc-to-mdoc">With the <c><see cref="T:Android.Net.Sip.SipManager" /></c>, you can initiate SIP audio calls with <c><see cref="M:Android.Net.Sip.SipManager.MakeAudioCall(Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile)" /></c> and <c><see cref="M:Android.Net.Sip.SipManager.TakeAudioCall(Android.Content.Intent,.Listener)" /></c>. Both methods require
a <c><see cref="!:NoType:android/net/sip/SipAudioCall$Listener;Href=../../../../reference/android/net/sip/SipAudioCall.Listener.html" /></c> that receives callbacks when the state of the
call changes, such as when the call is ringing, established, or ended.</para>
      <para tool="javadoc-to-mdoc">Both <c><see cref="M:Android.Net.Sip.SipManager.MakeAudioCall(Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile,Android.Net.Sip.SipProfile)" /></c> also requires two
<c><see cref="T:Android.Net.Sip.SipProfile" /></c> objects, representing the local device and the peer
device. You can create a <c><see cref="T:Android.Net.Sip.SipProfile" /></c> using the <c><see cref="!:NoType:android/net/sip/SipProfile$Builder;Href=../../../../reference/android/net/sip/SipProfile.Builder.html" /></c> subclass.</para>
      <para tool="javadoc-to-mdoc">Once you have a <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c>, you can perform SIP audio call actions with
the instance, such as make a call, answer a call, mute a call, turn on speaker mode, send DTMF
tones, and more.</para>
      <para tool="javadoc-to-mdoc">If you want to create generic SIP connections (such as for video calls or other), you can
create a SIP connection from the <c><see cref="T:Android.Net.Sip.SipManager" /></c>, using <c><see cref="M:Android.Net.Sip.SipManager.Open(Android.Net.Sip.SipProfile)" /></c>. If you only want to create audio SIP calls, though, you
should use the <c><see cref="T:Android.Net.Sip.SipAudioCall" /></c> class, as described above.</para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i>
Not all Android-powered devices support VOIP functionality with SIP. Before performing any SIP
activity, you should call <c><see cref="M:Android.Net.Sip.SipManager.IsVoipSupported(Android.Content.Context)" /></c>
to verify that the device supports VOIP calling and <c><see cref="M:Android.Net.Sip.SipManager.IsApiSupported(Android.Content.Context)" /></c> to verify that the device supports the
SIP APIs.
Your application must also request the <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#INTERNET" /></c> and <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#USE_SIP" /></c> permissions in order to use the SIP APIs.
</para>
    </remarks>
  </Docs>
</Namespace>
