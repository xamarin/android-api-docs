<Type Name="IRandomAccess" FullName="Java.Util.IRandomAccess">
  <TypeSignature Language="C#" Value="public interface IRandomAccess : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRandomAccess implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.IRandomAccess" />
  <TypeSignature Language="F#" Value="type IRandomAccess = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/RandomAccess", "", "Java.Util.IRandomAccessInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/RandomAccess", "", "Java.Util.IRandomAccessInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Marker interface used by <c>List</c> implementations to indicate that
            they support fast (generally constant time) random access.</summary>
    <remarks>
      <para>Marker interface used by <c>List</c> implementations to indicate that
            they support fast (generally constant time) random access.  The primary
            purpose of this interface is to allow generic algorithms to alter their
            behavior to provide good performance when applied to either random or
            sequential access lists.</para>
      <para>The best algorithms for manipulating random access lists (such as
            <c>ArrayList</c>) can produce quadratic behavior when applied to
            sequential access lists (such as <c>LinkedList</c>).  Generic list
            algorithms are encouraged to check whether the given list is an
            <c>instanceof</c> this interface before applying an algorithm that would
            provide poor performance if it were applied to a sequential access list,
            and to alter their behavior if necessary to guarantee acceptable
            performance.</para>
      <para>It is recognized that the distinction between random and sequential
            access is often fuzzy.  For example, some <c>List</c> implementations
            provide asymptotically linear access times if they get huge, but constant
            access times in practice.  Such a <c>List</c> implementation
            should generally implement this interface.  As a rule of thumb, a
            <c>List</c> implementation should implement this interface if,
            for typical instances of the class, this loop:</para>
      <code lang="text/java">for (int i=0, n=list.size(); i &amp;lt; n; i++)
                    list.get(i);
            </code>
      <para>runs faster than this loop:</para>
      <code lang="text/java">for (Iterator i=list.iterator(); i.hasNext(); )
                    i.next();
            </code>
      <para>This interface is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/RandomAccess" title="Reference documentation">Java documentation for <code>java.util.RandomAccess</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members />
</Type>
