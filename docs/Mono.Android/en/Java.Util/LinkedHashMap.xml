<Type Name="LinkedHashMap" FullName="Java.Util.LinkedHashMap">
  <TypeSignature Language="VB.NET" Value="Public Class LinkedHashMap&#xA;Inherits HashMap&#xA;Implements IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkedHashMap : Java::Util::HashMap, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class LinkedHashMap : Java.Util.HashMap, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkedHashMap extends Java.Util.HashMap implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.IMap, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.LinkedHashMap" />
  <TypeSignature Language="F#" Value="type LinkedHashMap = class&#xA;    inherit HashMap&#xA;    interface IMap&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.HashMap</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IMap</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/LinkedHashMap", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/LinkedHashMap", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "K", "V" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "K", "V" })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;K&gt;&lt;K&gt;">the type of keys maintained by this map</param>
    <param name="&lt;V&gt;&lt;V&gt;">the type of mapped values</param>
    <summary>Hash table and linked list implementation of the <c>Map</c> interface,
            with predictable iteration order.</summary>
    <remarks>
      <para>Hash table and linked list implementation of the <c>Map</c> interface,
            with predictable iteration order.  This implementation differs from
            <c>HashMap</c> in that it maintains a doubly-linked list running through
            all of its entries.  This linked list defines the iteration ordering,
            which is normally the order in which keys were inserted into the map
            (<i>insertion-order</i>).  Note that insertion order is not affected
            if a key is <i>re-inserted</i> into the map.  (A key <c>k</c> is
            reinserted into a map <c>m</c> if <c>m.put(k, v)</c> is invoked when
            <c>m.containsKey(k)</c> would return <c>true</c> immediately prior to
            the invocation.)</para>
      <para>This implementation spares its clients from the unspecified, generally
            chaotic ordering provided by <c>HashMap</c> (and <c>Hashtable</c>),
            without incurring the increased cost associated with <c>TreeMap</c>.  It
            can be used to produce a copy of a map that has the same order as the
            original, regardless of the original map's implementation:</para>
      <code lang="text/java">void foo(Map m) {
                    Map copy = new LinkedHashMap(m);
                    ...
                }
            </code>
      <para>This technique is particularly useful if a module takes a map on input,
            copies it, and later returns results whose order is determined by that of
            the copy.  (Clients generally appreciate having things returned in the same
            order they were presented.)</para>
      <para>A special <c>#LinkedHashMap(int,float,boolean) constructor</c> is
            provided to create a linked hash map whose order of iteration is the order
            in which its entries were last accessed, from least-recently accessed to
            most-recently (<i>access-order</i>).  This kind of map is well-suited to
            building LRU caches.  Invoking the <c>put</c>, <c>putIfAbsent</c>,
            <c>get</c>, <c>getOrDefault</c>, <c>compute</c>, <c>computeIfAbsent</c>,
            <c>computeIfPresent</c>, or <c>merge</c> methods results
            in an access to the corresponding entry (assuming it exists after the
            invocation completes). The <c>replace</c> methods only result in an access
            of the entry if the value is replaced.  The <c>putAll</c> method generates one
            entry access for each mapping in the specified map, in the order that
            key-value mappings are provided by the specified map's entry set iterator.
            <i>No other methods generate entry accesses.</i>  In particular, operations
            on collection-views do <i>not</i> affect the order of iteration of the
            backing map.</para>
      <para>The <c>#removeEldestEntry(Map.Entry)</c> method may be overridden to
            impose a policy for removing stale mappings automatically when new mappings
            are added to the map.</para>
      <para>This class provides all of the optional <c>Map</c> operations, and
            permits null elements.  Like <c>HashMap</c>, it provides constant-time
            performance for the basic operations (<c>add</c>, <c>contains</c> and
            <c>remove</c>), assuming the hash function disperses elements
            properly among the buckets.  Performance is likely to be just slightly
            below that of <c>HashMap</c>, due to the added expense of maintaining the
            linked list, with one exception: Iteration over the collection-views
            of a <c>LinkedHashMap</c> requires time proportional to the <i>size</i>
            of the map, regardless of its capacity.  Iteration over a <c>HashMap</c>
            is likely to be more expensive, requiring time proportional to its
            <i>capacity</i>.</para>
      <para>A linked hash map has two parameters that affect its performance:
            <i>initial capacity</i> and <i>load factor</i>.  They are defined precisely
            as for <c>HashMap</c>.  Note, however, that the penalty for choosing an
            excessively high value for initial capacity is less severe for this class
            than for <c>HashMap</c>, as iteration times for this class are unaffected
            by capacity.</para>
      <para>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt;
            If multiple threads access a linked hash map concurrently, and at least
            one of the threads modifies the map structurally, it &lt;em&gt;must&lt;/em&gt; be
            synchronized externally.  This is typically accomplished by
            synchronizing on some object that naturally encapsulates the map.
            
            If no such object exists, the map should be "wrapped" using the
            <c>Collections#synchronizedMap Collections.synchronizedMap</c>
            method.  This is best done at creation time, to prevent accidental
            unsynchronized access to the map:</para>
      <code lang="text/java">Map m = Collections.synchronizedMap(new LinkedHashMap(...));</code>
      <para>A structural modification is any operation that adds or deletes one or more
            mappings or, in the case of access-ordered linked hash maps, affects
            iteration order.  In insertion-ordered linked hash maps, merely changing
            the value associated with a key that is already contained in the map is not
            a structural modification.  &lt;strong&gt;In access-ordered linked hash maps,
            merely querying the map with <c>get</c> is a structural modification.
            &lt;/strong&gt;)</para>
      <para>The iterators returned by the <c>iterator</c> method of the collections
            returned by all of this class's collection view methods are
            &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after
            the iterator is created, in any way except through the iterator's own
            <c>remove</c> method, the iterator will throw a <c>ConcurrentModificationException</c>.  Thus, in the face of concurrent
            modification, the iterator fails quickly and cleanly, rather than risking
            arbitrary, non-deterministic behavior at an undetermined time in the future.</para>
      <para>Note that the fail-fast behavior of an iterator cannot be guaranteed
            as it is, generally speaking, impossible to make any hard guarantees in the
            presence of unsynchronized concurrent modification.  Fail-fast iterators
            throw <c>ConcurrentModificationException</c> on a best-effort basis.
            Therefore, it would be wrong to write a program that depended on this
            exception for its correctness:   <i>the fail-fast behavior of iterators
            should be used only to detect bugs.</i></para>
      <para>The spliterators returned by the spliterator method of the collections
            returned by all of this class's collection view methods are
            &lt;em&gt;late-binding&lt;/em&gt;,
            &lt;em&gt;fail-fast&lt;/em&gt;, and additionally report <c>Spliterator#ORDERED</c>.
            &lt;em&gt;Note&lt;/em&gt;: The implementation of these spliterators in Android Nougat
            (API levels 24 and 25) uses the wrong order (inconsistent with the
            iterators, which use the correct order), despite reporting
            <c>Spliterator#ORDERED</c>. You may use the following code fragments
            to obtain a correctly ordered Spliterator on API level 24 and 25:
            &lt;ul&gt;
                &lt;li&gt;For a Collection view <c>c = lhm.keySet()</c>,
                    <c>c = lhm.entrySet()</c> or <c>c = lhm.values()</c>, use
                    <c>java.util.Spliterators.spliterator(c, c.spliterator().characteristics())</c>
                    instead of <c>c.spliterator()</c>.
                &lt;li&gt;Instead of <c>c.stream()</c> or <c>c.parallelStream()</c>, use
                    <c>java.util.stream.StreamSupport.stream(spliterator, false)</c>
                    to construct a (nonparallel) <c>java.util.stream.Stream</c> from
                    such a <c>Spliterator</c>.
            &lt;/ul&gt;
            Note that these workarounds are only suggested where <c>lhm</c> is a
            <c>LinkedHashMap</c>.</para>
      <para>This class is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/LinkedHashMap" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedHashMap();" />
      <MemberSignature Language="C#" Value="public LinkedHashMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the default initial capacity (16) and load factor (0.</summary>
        <remarks>
          <para>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the default initial capacity (16) and load factor (0.75).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#LinkedHashMap()" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.LinkedHashMap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (m As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedHashMap(System::Collections::IDictionary ^ m);" />
      <MemberSignature Language="C#" Value="public LinkedHashMap (System.Collections.IDictionary? m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor(System.Collections.IDictionary)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashMap : System.Collections.IDictionary -&gt; Java.Util.LinkedHashMap" Usage="new Java.Util.LinkedHashMap m" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/Map;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="m" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="m">the map whose mappings are to be placed in this map</param>
        <summary>Constructs an insertion-ordered <c>LinkedHashMap</c> instance with
            the same mappings as the specified map.</summary>
        <remarks>
          <para>Constructs an insertion-ordered <c>LinkedHashMap</c> instance with
            the same mappings as the specified map.  The <c>LinkedHashMap</c>
            instance is created with a default load factor (0.75) and an initial
            capacity sufficient to hold the mappings in the specified map.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#LinkedHashMap(java.util.Map%3C?%20extends%20K,%20?%20extends%20V%3E)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.LinkedHashMap(java.util.Map&lt;? extends K, ? extends V&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedHashMap(int initialCapacity);" />
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashMap : int -&gt; Java.Util.LinkedHashMap" Usage="new Java.Util.LinkedHashMap initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity</param>
        <summary>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the specified initial capacity and a default load factor (0.</summary>
        <remarks>
          <para>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the specified initial capacity and a default load factor (0.75).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#LinkedHashMap(int)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.LinkedHashMap(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer, loadFactor As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedHashMap(int initialCapacity, float loadFactor);" />
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashMap : int * single -&gt; Java.Util.LinkedHashMap" Usage="new Java.Util.LinkedHashMap (initialCapacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity</param>
        <param name="loadFactor">the load factor</param>
        <summary>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the specified initial capacity and load factor.</summary>
        <remarks>
          <para>Constructs an empty insertion-ordered <c>LinkedHashMap</c> instance
            with the specified initial capacity and load factor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#LinkedHashMap(int,%20float)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.LinkedHashMap(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero or the load factor is
             less or equal to zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinkedHashMap(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected LinkedHashMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashMap : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.LinkedHashMap" Usage="new Java.Util.LinkedHashMap (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialCapacity As Integer, loadFactor As Single, accessOrder As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkedHashMap(int initialCapacity, float loadFactor, bool accessOrder);" />
      <MemberSignature Language="C#" Value="public LinkedHashMap (int initialCapacity, float loadFactor, bool accessOrder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor, bool accessOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.#ctor(System.Int32,System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashMap : int * single * bool -&gt; Java.Util.LinkedHashMap" Usage="new Java.Util.LinkedHashMap (initialCapacity, loadFactor, accessOrder)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IFZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IFZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
        <Parameter Name="accessOrder" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity</param>
        <param name="loadFactor">the load factor</param>
        <param name="accessOrder">the ordering mode - <c>true</c> for
                    access-order, <c>false</c> for insertion-order</param>
        <summary>Constructs an empty <c>LinkedHashMap</c> instance with the
            specified initial capacity, load factor and ordering mode.</summary>
        <remarks>
          <para>Constructs an empty <c>LinkedHashMap</c> instance with the
            specified initial capacity, load factor and ordering mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#LinkedHashMap(int,%20float,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.LinkedHashMap(int, float, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">when the capacity is less than zero or the load factor is
             less or equal to zero.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashMap.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.LinkedHashMap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEldestEntry">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemoveEldestEntry (eldest As IMapEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool RemoveEldestEntry(Java::Util::IMapEntry ^ eldest);" />
      <MemberSignature Language="C#" Value="protected virtual bool RemoveEldestEntry (Java.Util.IMapEntry? eldest);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool RemoveEldestEntry(class Java.Util.IMapEntry eldest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashMap.RemoveEldestEntry(Java.Util.IMapEntry)" />
      <MemberSignature Language="F#" Value="abstract member RemoveEldestEntry : Java.Util.IMapEntry -&gt; bool&#xA;override this.RemoveEldestEntry : Java.Util.IMapEntry -&gt; bool" Usage="linkedHashMap.RemoveEldestEntry eldest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeEldestEntry", "(Ljava/util/Map$Entry;)Z", "GetRemoveEldestEntry_Ljava_util_Map_Entry_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeEldestEntry", "(Ljava/util/Map$Entry;)Z", "GetRemoveEldestEntry_Ljava_util_Map_Entry_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eldest" Type="Java.Util.IMapEntry" />
      </Parameters>
      <Docs>
        <param name="eldest">The least recently inserted entry in the map, or if
                      this is an access-ordered map, the least recently accessed
                      entry.  This is the entry that will be removed it this
                      method returns <c>true</c>.  If the map was empty prior
                      to the <c>put</c> or <c>putAll</c> invocation resulting
                      in this invocation, this will be the entry that was just
                      inserted; in other words, if the map contains a single
                      entry, the eldest entry is also the newest.</param>
        <summary>Returns <c>true</c> if this map should remove its eldest entry.</summary>
        <returns>
          <c>true</c> if the eldest entry should be removed
                      from the map; <c>false</c> if it should be retained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashMap#removeEldestEntry(java.util.Entry)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashMap.removeEldestEntry(java.util.Entry)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashMap.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.LinkedHashMap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashMap.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.LinkedHashMap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
