<Type Name="LinkedHashSet" FullName="Java.Util.LinkedHashSet">
  <TypeSignature Language="C#" Value="public class LinkedHashSet : Java.Util.HashSet, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkedHashSet extends Java.Util.HashSet implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.ICloneable, class Java.Lang.IIterable, class Java.Util.ICollection, class Java.Util.ISet, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.LinkedHashSet" />
  <TypeSignature Language="F#" Value="type LinkedHashSet = class&#xA;    inherit HashSet&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ICloneable&#xA;    interface ISet&#xA;    interface ICollection&#xA;    interface IIterable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.HashSet</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IIterable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.ISet</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/LinkedHashSet", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/LinkedHashSet", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;E&gt;&lt;E&gt;">the type of elements maintained by this set</param>
    <summary>Hash table and linked list implementation of the <c>Set</c> interface,
            with predictable iteration order.</summary>
    <remarks>
      <para>Hash table and linked list implementation of the <c>Set</c> interface,
            with predictable iteration order.  This implementation differs from
            <c>HashSet</c> in that it maintains a doubly-linked list running through
            all of its entries.  This linked list defines the iteration ordering,
            which is the order in which elements were inserted into the set
            (<i>insertion-order</i>).  Note that insertion order is <i>not</i> affected
            if an element is <i>re-inserted</i> into the set.  (An element <c>e</c>
            is reinserted into a set <c>s</c> if <c>s.add(e)</c> is invoked when
            <c>s.contains(e)</c> would return <c>true</c> immediately prior to
            the invocation.)</para>
      <para>This implementation spares its clients from the unspecified, generally
            chaotic ordering provided by <c>HashSet</c>, without incurring the
            increased cost associated with <c>TreeSet</c>.  It can be used to
            produce a copy of a set that has the same order as the original, regardless
            of the original set's implementation:</para>
      <code lang="text/java">{@code
                void foo(Set&lt;String&gt; s) {
                    Set&lt;String&gt; copy = new LinkedHashSet&lt;&gt;(s);
                    ...
                }
            }</code>
      <para>This technique is particularly useful if a module takes a set on input,
            copies it, and later returns results whose order is determined by that of
            the copy.  (Clients generally appreciate having things returned in the same
            order they were presented.)</para>
      <para>This class provides all of the optional <c>Set</c> operations, and
            permits null elements.  Like <c>HashSet</c>, it provides constant-time
            performance for the basic operations (<c>add</c>, <c>contains</c> and
            <c>remove</c>), assuming the hash function disperses elements
            properly among the buckets.  Performance is likely to be just slightly
            below that of <c>HashSet</c>, due to the added expense of maintaining the
            linked list, with one exception: Iteration over a <c>LinkedHashSet</c>
            requires time proportional to the <i>size</i> of the set, regardless of
            its capacity.  Iteration over a <c>HashSet</c> is likely to be more
            expensive, requiring time proportional to its <i>capacity</i>.</para>
      <para>A linked hash set has two parameters that affect its performance:
            <i>initial capacity</i> and <i>load factor</i>.  They are defined precisely
            as for <c>HashSet</c>.  Note, however, that the penalty for choosing an
            excessively high value for initial capacity is less severe for this class
            than for <c>HashSet</c>, as iteration times for this class are unaffected
            by capacity.</para>
      <para>&lt;strong&gt;Note that this implementation is not synchronized.&lt;/strong&gt;
            If multiple threads access a linked hash set concurrently, and at least
            one of the threads modifies the set, it &lt;em&gt;must&lt;/em&gt; be synchronized
            externally.  This is typically accomplished by synchronizing on some
            object that naturally encapsulates the set.
            
            If no such object exists, the set should be "wrapped" using the
            <c>Collections#synchronizedSet Collections.synchronizedSet</c>
            method.  This is best done at creation time, to prevent accidental
            unsynchronized access to the set:</para>
      <code lang="text/java">Set s = Collections.synchronizedSet(new LinkedHashSet(...));</code>
      <para>The iterators returned by this class's <c>iterator</c> method are
            &lt;em&gt;fail-fast&lt;/em&gt;: if the set is modified at any time after the iterator
            is created, in any way except through the iterator's own <c>remove</c>
            method, the iterator will throw a <c>ConcurrentModificationException</c>.
            Thus, in the face of concurrent modification, the iterator fails quickly
            and cleanly, rather than risking arbitrary, non-deterministic behavior at
            an undetermined time in the future.</para>
      <para>Note that the fail-fast behavior of an iterator cannot be guaranteed
            as it is, generally speaking, impossible to make any hard guarantees in the
            presence of unsynchronized concurrent modification.  Fail-fast iterators
            throw <c>ConcurrentModificationException</c> on a best-effort basis.
            Therefore, it would be wrong to write a program that depended on this
            exception for its correctness:   <i>the fail-fast behavior of iterators
            should be used only to detect bugs.</i></para>
      <para>This class is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/LinkedHashSet" title="Reference documentation">Java documentation for <code>java.util.LinkedHashSet</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashSet.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a new, empty linked hash set with the default initial
            capacity (16) and load factor (0.</summary>
        <remarks>
          <para>Constructs a new, empty linked hash set with the default initial
            capacity (16) and load factor (0.75).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashSet#LinkedHashSet()" title="Reference documentation">Java documentation for <code>java.util.LinkedHashSet.LinkedHashSet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashSet (System.Collections.ICollection? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashSet.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashSet : System.Collections.ICollection -&gt; Java.Util.LinkedHashSet" Usage="new Java.Util.LinkedHashSet c" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/Collection;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/Collection;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">the collection whose elements are to be placed into
                      this set</param>
        <summary>Constructs a new linked hash set with the same elements as the
            specified collection.</summary>
        <remarks>
          <para>Constructs a new linked hash set with the same elements as the
            specified collection.  The linked hash set is created with an initial
            capacity sufficient to hold the elements in the specified collection
            and the default load factor (0.75).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashSet#LinkedHashSet(java.util.Collection%3C?%20extends%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashSet.LinkedHashSet(java.util.Collection&lt;? extends E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashSet (int initialCapacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashSet.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashSet : int -&gt; Java.Util.LinkedHashSet" Usage="new Java.Util.LinkedHashSet initialCapacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity of the LinkedHashSet</param>
        <summary>Constructs a new, empty linked hash set with the specified initial
            capacity and the default load factor (0.</summary>
        <remarks>
          <para>Constructs a new, empty linked hash set with the specified initial
            capacity and the default load factor (0.75).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashSet#LinkedHashSet(int)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashSet.LinkedHashSet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkedHashSet (int initialCapacity, float loadFactor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialCapacity, float32 loadFactor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashSet.#ctor(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashSet : int * single -&gt; Java.Util.LinkedHashSet" Usage="new Java.Util.LinkedHashSet (initialCapacity, loadFactor)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialCapacity" Type="System.Int32" />
        <Parameter Name="loadFactor" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="initialCapacity">the initial capacity of the linked hash set</param>
        <param name="loadFactor">the load factor of the linked hash set</param>
        <summary>Constructs a new, empty linked hash set with the specified initial
            capacity and load factor.</summary>
        <remarks>
          <para>Constructs a new, empty linked hash set with the specified initial
            capacity and load factor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/LinkedHashSet#LinkedHashSet(int,%20float)" title="Reference documentation">Java documentation for <code>java.util.LinkedHashSet.LinkedHashSet(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinkedHashSet (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.LinkedHashSet.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.LinkedHashSet : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.LinkedHashSet" Usage="new Java.Util.LinkedHashSet (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashSet.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.LinkedHashSet.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashSet.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.LinkedHashSet.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.LinkedHashSet.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.LinkedHashSet.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
