<Type Name="ISpliterator" FullName="Java.Util.ISpliterator">
  <TypeSignature Language="C#" Value="public interface ISpliterator : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISpliterator implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.ISpliterator" />
  <TypeSignature Language="F#" Value="type ISpliterator = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/Spliterator", "", "Java.Util.ISpliteratorInvoker", ApiSince=24)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Java.Interop.JavaTypeParameters(Mono.Cecil.CustomAttributeArgument[])</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/Spliterator" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Characteristics">
      <MemberSignature Language="C#" Value="public Java.Util.SpliteratorCharacteristics Characteristics ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Java.Util.SpliteratorCharacteristics Characteristics() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.Characteristics" />
      <MemberSignature Language="F#" Value="abstract member Characteristics : unit -&gt; Java.Util.SpliteratorCharacteristics" Usage="iSpliterator.Characteristics " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("characteristics", "()I", "GetCharacteristicsHandler:Java.Util.ISpliteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.SpliteratorCharacteristics</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set of characteristics of this Spliterator and its
            elements.</summary>
        <returns>a representation of characteristics</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Comparator">
      <MemberSignature Language="C#" Value="public virtual Java.Util.IComparator Comparator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IComparator Comparator" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ISpliterator.Comparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getComparator", "()Ljava/util/Comparator;", "GetGetComparatorHandler:Java.Util.ISpliterator, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IComparator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this Spliterator's source is <c>#SORTED</c> by a <c>Comparator</c>,
            returns that <c>Comparator</c>.</summary>
        <value>a Comparator, or <c>null</c> if the elements are sorted in the
            natural order.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EstimateSize">
      <MemberSignature Language="C#" Value="public long EstimateSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 EstimateSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.EstimateSize" />
      <MemberSignature Language="F#" Value="abstract member EstimateSize : unit -&gt; int64" Usage="iSpliterator.EstimateSize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("estimateSize", "()J", "GetEstimateSizeHandler:Java.Util.ISpliteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an estimate of the number of elements that would be
            encountered by a <c>#forEachRemaining</c> traversal, or returns <c>Long#MAX_VALUE</c> if infinite, unknown, or too expensive to compute.</summary>
        <returns>the estimated size, or <c>Long.MAX_VALUE</c> if infinite,
                    unknown, or too expensive to compute.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExactSizeIfKnown">
      <MemberSignature Language="C#" Value="public virtual long ExactSizeIfKnown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ExactSizeIfKnown" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ISpliterator.ExactSizeIfKnown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExactSizeIfKnown", "()J", "GetGetExactSizeIfKnownHandler:Java.Util.ISpliterator, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience method that returns <c>#estimateSize()</c> if this
            Spliterator is <c>#SIZED</c>, else <c>-1</c>.</summary>
        <value>the exact size, if known, else <c>-1</c>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachRemaining">
      <MemberSignature Language="C#" Value="public virtual void ForEachRemaining (Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachRemaining(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.ForEachRemaining(Java.Util.Functions.IConsumer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachRemaining", "(Ljava/util/function/Consumer;)V", "GetForEachRemaining_Ljava_util_function_Consumer_Handler:Java.Util.ISpliterator, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">The action</param>
        <summary>Performs the given action for each remaining element, sequentially in
            the current thread, until all elements have been processed or the action
            throws an exception.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCharacteristics">
      <MemberSignature Language="C#" Value="public virtual bool HasCharacteristics (int characteristics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasCharacteristics(int32 characteristics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.HasCharacteristics(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasCharacteristics", "(I)Z", "GetHasCharacteristics_IHandler:Java.Util.ISpliterator, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="characteristics" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="characteristics">the characteristics to check for</param>
        <summary>Returns <c>true</c> if this Spliterator's <c>#characteristics</c> contain all of the given characteristics.</summary>
        <returns>
          <c>true</c> if all the specified characteristics are present,
            else <c>false</c></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAdvance">
      <MemberSignature Language="C#" Value="public bool TryAdvance (Java.Util.Functions.IConsumer action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAdvance(class Java.Util.Functions.IConsumer action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.TryAdvance(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member TryAdvance : Java.Util.Functions.IConsumer -&gt; bool" Usage="iSpliterator.TryAdvance action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("tryAdvance", "(Ljava/util/function/Consumer;)Z", "GetTryAdvance_Ljava_util_function_Consumer_Handler:Java.Util.ISpliteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="action">The action</param>
        <summary>If a remaining element exists, performs the given action on it,
            returning <c>true</c>; else returns <c>false</c>.</summary>
        <returns>
          <c>false</c> if no remaining elements existed
            upon entry to this method, else <c>true</c>.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrySplit">
      <MemberSignature Language="C#" Value="public Java.Util.ISpliterator TrySplit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.ISpliterator TrySplit() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ISpliterator.TrySplit" />
      <MemberSignature Language="F#" Value="abstract member TrySplit : unit -&gt; Java.Util.ISpliterator" Usage="iSpliterator.TrySplit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("trySplit", "()Ljava/util/Spliterator;", "GetTrySplitHandler:Java.Util.ISpliteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If this spliterator can be partitioned, returns a Spliterator
            covering elements, that will, upon return from this method, not
            be covered by this Spliterator.</summary>
        <returns>a <c>Spliterator</c> covering some portion of the
            elements, or <c>null</c> if this spliterator cannot be split</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
