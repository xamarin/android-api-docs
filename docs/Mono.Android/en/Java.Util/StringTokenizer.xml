<Type Name="StringTokenizer" FullName="Java.Util.StringTokenizer">
  <TypeSignature Language="C#" Value="public class StringTokenizer : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Util.IEnumeration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringTokenizer extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.IEnumeration, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.StringTokenizer" />
  <TypeSignature Language="F#" Value="type StringTokenizer = class&#xA;    inherit Object&#xA;    interface IEnumeration&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IEnumeration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/StringTokenizer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/StringTokenizer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The string tokenizer class allows an application to break a
            string into tokens.</summary>
    <remarks>
      <para>The string tokenizer class allows an application to break a
            string into tokens. The tokenization method is much simpler than
            the one used by the <c>StreamTokenizer</c> class. The
            <c>StringTokenizer</c> methods do not distinguish among
            identifiers, numbers, and quoted strings, nor do they recognize
            and skip comments.</para>
      <para>The set of delimiters (the characters that separate tokens) may
            be specified either at creation time or on a per-token basis.</para>
      <para>An instance of <c>StringTokenizer</c> behaves in one of two
            ways, depending on whether it was created with the
            <c>returnDelims</c> flag having the value <c>true</c>
            or <c>false</c>:
            &lt;ul&gt;
            &lt;li&gt;If the flag is <c>false</c>, delimiter characters serve to
                separate tokens. A token is a maximal sequence of consecutive
                characters that are not delimiters.
            &lt;li&gt;If the flag is <c>true</c>, delimiter characters are themselves
                considered to be tokens. A token is thus either one delimiter
                character, or a maximal sequence of consecutive characters that are
                not delimiters.
            &lt;/ul&gt;</para>
      <para>A <c>StringTokenizer</c> object internally maintains a current
            position within the string to be tokenized. Some operations advance this
            current position past the characters processed.</para>
      <para>A token is returned by taking a substring of the string that was used to
            create the <c>StringTokenizer</c> object.</para>
      <para>The following is one example of the use of the tokenizer. The code:
            &lt;blockquote&gt;</para>
      <code lang="text/java">StringTokenizer st = new StringTokenizer("this is a test");
                while (st.hasMoreTokens()) {
                    System.out.println(st.nextToken());
                }
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>prints the following output:
            &lt;blockquote&gt;</para>
      <code lang="text/java">this
                is
                a
                test
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>
        <c>StringTokenizer</c> is a legacy class that is retained for
            compatibility reasons although its use is discouraged in new code. It is
            recommended that anyone seeking this functionality use the <c>split</c>
            method of <c>String</c> or the java.util.regex package instead.</para>
      <para>The following example illustrates how the <c>String.split</c>
            method can be used to break up a string into its basic tokens:
            &lt;blockquote&gt;</para>
      <code lang="text/java">String[] result = "this is a test".split("\\s");
                for (int x=0; x&amp;lt;result.length; x++)
                    System.out.println(result[x]);
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>prints the following output:
            &lt;blockquote&gt;</para>
      <code lang="text/java">this
                is
                a
                test
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>Added in 1.0.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/StringTokenizer" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringTokenizer (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Util.StringTokenizer : string -&gt; Java.Util.StringTokenizer" Usage="new Java.Util.StringTokenizer str" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">a string to be parsed.</param>
        <summary>Constructs a string tokenizer for the specified string.</summary>
        <remarks>
          <para>Constructs a string tokenizer for the specified string. The
            tokenizer uses the default delimiter set, which is
            <c>"&amp;nbsp;&amp;#92;t&amp;#92;n&amp;#92;r&amp;#92;f"</c>: the space character,
            the tab character, the newline character, the carriage-return character,
            and the form-feed character. Delimiter characters themselves will
            not be treated as tokens.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#StringTokenizer(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.StringTokenizer(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StringTokenizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.StringTokenizer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.StringTokenizer" Usage="new Java.Util.StringTokenizer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringTokenizer (string? str, string? delim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str, string delim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.#ctor(System.String,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Util.StringTokenizer : string * string -&gt; Java.Util.StringTokenizer" Usage="new Java.Util.StringTokenizer (str, delim)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="delim" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">a string to be parsed.</param>
        <param name="delim">the delimiters.</param>
        <summary>Constructs a string tokenizer for the specified string.</summary>
        <remarks>
          <para>Constructs a string tokenizer for the specified string. The
            characters in the <c>delim</c> argument are the delimiters
            for separating tokens. Delimiter characters themselves will not
            be treated as tokens.</para>
          <para>Note that if <c>delim</c> is <c>null</c>, this constructor does
            not throw an exception. However, trying to invoke other methods on the
            resulting <c>StringTokenizer</c> may result in a
            <c>NullPointerException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#StringTokenizer(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringTokenizer (string? str, string? delim, bool returnDelims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string str, string delim, bool returnDelims) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.#ctor(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Java.Util.StringTokenizer : string * string * bool -&gt; Java.Util.StringTokenizer" Usage="new Java.Util.StringTokenizer (str, delim, returnDelims)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;Z)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;Z)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="delim" Type="System.String" />
        <Parameter Name="returnDelims" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">a string to be parsed.</param>
        <param name="delim">the delimiters.</param>
        <param name="returnDelims">flag indicating whether to return the delimiters
                                    as tokens.</param>
        <summary>Constructs a string tokenizer for the specified string.</summary>
        <remarks>
          <para>Constructs a string tokenizer for the specified string. All
            characters in the <c>delim</c> argument are the delimiters
            for separating tokens.</para>
          <para>If the <c>returnDelims</c> flag is <c>true</c>, then
            the delimiter characters are also returned as tokens. Each
            delimiter is returned as a string of length one. If the flag is
            <c>false</c>, the delimiter characters are skipped and only
            serve as separators between tokens.</para>
          <para>Note that if <c>delim</c> is <c>null</c>, this constructor does
            not throw an exception. However, trying to invoke other methods on the
            resulting <c>StringTokenizer</c> may result in a
            <c>NullPointerException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#StringTokenizer(java.lang.String,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.StringTokenizer(java.lang.String, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CountTokens">
      <MemberSignature Language="C#" Value="public virtual int CountTokens ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CountTokens() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.CountTokens" />
      <MemberSignature Language="F#" Value="abstract member CountTokens : unit -&gt; int&#xA;override this.CountTokens : unit -&gt; int" Usage="stringTokenizer.CountTokens " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("countTokens", "()I", "GetCountTokensHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("countTokens", "()I", "GetCountTokensHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calculates the number of times that this tokenizer's
            <c>nextToken</c> method can be called before it generates an
            exception.</summary>
        <returns>the number of tokens remaining in the string using the current
                     delimiter set.</returns>
        <remarks>
          <para>Calculates the number of times that this tokenizer's
            <c>nextToken</c> method can be called before it generates an
            exception. The current position is not advanced.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#countTokens()" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.countTokens()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasMoreElements">
      <MemberSignature Language="C#" Value="public virtual bool HasMoreElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMoreElements" />
      <MemberSignature Language="DocId" Value="P:Java.Util.StringTokenizer.HasMoreElements" />
      <MemberSignature Language="F#" Value="member this.HasMoreElements : bool" Usage="Java.Util.StringTokenizer.HasMoreElements" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Util.IEnumeration.HasMoreElements</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasMoreElements", "()Z", "GetHasMoreElementsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasMoreElements", "()Z", "GetHasMoreElementsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the same value as the <c>hasMoreTokens</c>
            method.</summary>
        <value>
          <c>true</c> if there are more tokens;
                     <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns the same value as the <c>hasMoreTokens</c>
            method. It exists so that this class can implement the
            <c>Enumeration</c> interface.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#hasMoreElements()" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.hasMoreElements()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasMoreTokens">
      <MemberSignature Language="C#" Value="public virtual bool HasMoreTokens { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasMoreTokens" />
      <MemberSignature Language="DocId" Value="P:Java.Util.StringTokenizer.HasMoreTokens" />
      <MemberSignature Language="F#" Value="member this.HasMoreTokens : bool" Usage="Java.Util.StringTokenizer.HasMoreTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasMoreTokens", "()Z", "GetHasMoreTokensHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasMoreTokens", "()Z", "GetHasMoreTokensHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tests if there are more tokens available from this tokenizer's string.</summary>
        <value>
          <c>true</c> if and only if there is at least one token
                     in the string after the current position; <c>false</c>
                     otherwise.</value>
        <remarks>
          <para>Tests if there are more tokens available from this tokenizer's string.
            If this method returns <c>true</c>, then a subsequent call to
            <c>nextToken</c> with no argument will successfully return a token.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#hasMoreTokens()" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.hasMoreTokens()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Util.IEnumeration.NextElement">
      <MemberSignature Language="C#" Value="Java.Lang.Object? IEnumeration.NextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class Java.Lang.Object Java.Util.IEnumeration.NextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.Java#Util#IEnumeration#NextElement" />
      <MemberSignature Language="F#" Value="abstract member Java.Util.IEnumeration.NextElement : unit -&gt; Java.Lang.Object&#xA;override this.Java.Util.IEnumeration.NextElement : unit -&gt; Java.Lang.Object" Usage="stringTokenizer.Java.Util.IEnumeration.NextElement " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IEnumeration.NextElement</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.StringTokenizer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.StringTokenizer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextElement">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? NextElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object NextElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.NextElement" />
      <MemberSignature Language="F#" Value="abstract member NextElement : unit -&gt; Java.Lang.Object&#xA;override this.NextElement : unit -&gt; Java.Lang.Object" Usage="stringTokenizer.NextElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextElement", "()Ljava/lang/Object;", "GetNextElementHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextElement", "()Ljava/lang/Object;", "GetNextElementHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the same value as the <c>nextToken</c> method,
            except that its declared return value is <c>Object</c> rather than
            <c>String</c>.</summary>
        <returns>the next token in the string.</returns>
        <remarks>
          <para>Returns the same value as the <c>nextToken</c> method,
            except that its declared return value is <c>Object</c> rather than
            <c>String</c>. It exists so that this class can implement the
            <c>Enumeration</c> interface.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#nextElement()" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.nextElement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if no tokens remain.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public virtual string? NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NextToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.NextToken" />
      <MemberSignature Language="F#" Value="abstract member NextToken : unit -&gt; string&#xA;override this.NextToken : unit -&gt; string" Usage="stringTokenizer.NextToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextToken", "()Ljava/lang/String;", "GetNextTokenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextToken", "()Ljava/lang/String;", "GetNextTokenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the next token from this string tokenizer.</summary>
        <returns>the next token from this string tokenizer.</returns>
        <remarks>
          <para>Returns the next token from this string tokenizer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#nextToken()" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.nextToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if no tokens remain.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public virtual string? NextToken (string? delim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NextToken(string delim) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.StringTokenizer.NextToken(System.String)" />
      <MemberSignature Language="F#" Value="abstract member NextToken : string -&gt; string&#xA;override this.NextToken : string -&gt; string" Usage="stringTokenizer.NextToken delim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextToken", "(Ljava/lang/String;)Ljava/lang/String;", "GetNextToken_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextToken", "(Ljava/lang/String;)Ljava/lang/String;", "GetNextToken_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delim" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="delim">the new delimiters.</param>
        <summary>Returns the next token in this string tokenizer's string.</summary>
        <returns>the next token, after switching to the new delimiter set.</returns>
        <remarks>
          <para>Returns the next token in this string tokenizer's string. First,
            the set of characters considered to be delimiters by this
            <c>StringTokenizer</c> object is changed to be the characters in
            the string <c>delim</c>. Then the next token in the string
            after the current position is returned. The current position is
            advanced beyond the recognized token.  The new delimiter set
            remains the default after this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/StringTokenizer#nextToken(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.StringTokenizer.nextToken(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if no tokens remain.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.StringTokenizer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.StringTokenizer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.StringTokenizer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.StringTokenizer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
