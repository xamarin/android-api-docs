<Type Name="IFormattable" FullName="Java.Util.IFormattable">
  <TypeSignature Language="C#" Value="public interface IFormattable : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFormattable implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.IFormattable" />
  <TypeSignature Language="F#" Value="type IFormattable = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/Formattable", "", "Java.Util.IFormattableInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Classes that handle custom formatting for the 's' specifier of <c>Formatter</c>
 should implement the <c>Formattable</c> interface.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/Formattable" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="FormatTo">
      <MemberSignature Language="C#" Value="public void FormatTo (Java.Util.Formatter formatter, Java.Util.FormatFlags flags, int width, int precision);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FormatTo(class Java.Util.Formatter formatter, valuetype Java.Util.FormatFlags flags, int32 width, int32 precision) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IFormattable.FormatTo(Java.Util.Formatter,Java.Util.FormatFlags,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FormatTo : Java.Util.Formatter * Java.Util.FormatFlags * int * int -&gt; unit" Usage="iFormattable.FormatTo (formatter, flags, width, precision)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatTo", "(Ljava/util/Formatter;III)V", "GetFormatTo_Ljava_util_Formatter_IIIHandler:Java.Util.IFormattableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatter" Type="Java.Util.Formatter" />
        <Parameter Name="flags" Type="Java.Util.FormatFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="precision" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="formatter">The <c>Formatter formatter</c>.  Implementing classes may call
                    <c>Formatter#out() formatter.out()</c> or <c>Formatter#locale() formatter.locale()</c> to obtain the <c>Appendable</c> or <c>Locale</c> used by this
                    <c>formatter</c> respectively.</param>
        <param name="flags">The flags modify the output format.  The value is interpreted as
                    a bitmask.  Any combination of the following flags may be set:
                    <c>FormattableFlags#LEFT_JUSTIFY</c>, <c>FormattableFlags#UPPERCASE</c>, and <c>FormattableFlags#ALTERNATE</c>.  If no flags are set, the default
                    formatting of the implementing class will apply.</param>
        <param name="width">The minimum number of characters to be written to the output.
                    If the length of the converted value is less than the
                    <c>width</c> then the output will be padded by
                    <c>'&amp;nbsp;&amp;nbsp;'</c> until the total number of characters
                    equals width.  The padding is at the beginning by default.  If
                    the <c>FormattableFlags#LEFT_JUSTIFY</c> flag is set then the
                    padding will be at the end.  If <c>width</c> is <c>-1</c>
                    then there is no minimum.</param>
        <param name="precision">The maximum number of characters to be written to the output.
                    The precision is applied before the width, thus the output will
                    be truncated to <c>precision</c> characters even if the
                    <c>width</c> is greater than the <c>precision</c>.  If
                    <c>precision</c> is <c>-1</c> then there is no explicit
                    limit on the number of characters.</param>
        <summary>Formats the object using the provided <c>Formatter formatter</c>.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.IllegalFormatException">if any of the parameters is not supported.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
