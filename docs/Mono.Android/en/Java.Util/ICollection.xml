<Type Name="ICollection" FullName="Java.Util.ICollection">
  <TypeSignature Language="C#" Value="public interface ICollection : IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IIterable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ICollection implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IIterable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.ICollection" />
  <TypeSignature Language="F#" Value="type ICollection = interface&#xA;    interface IIterable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IIterable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/Collection", "", "Java.Util.ICollectionInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/Collection", "", "Java.Util.ICollectionInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;E&gt;&lt;E&gt;">the type of elements in this collection</param>
    <summary>The root interface in the <i>collection hierarchy</i>.</summary>
    <remarks>
      <para>The root interface in the <i>collection hierarchy</i>.  A collection
            represents a group of objects, known as its <i>elements</i>.  Some
            collections allow duplicate elements and others do not.  Some are ordered
            and others unordered.  The JDK does not provide any <i>direct</i>
            implementations of this interface: it provides implementations of more
            specific subinterfaces like <c>Set</c> and <c>List</c>.  This interface
            is typically used to pass collections around and manipulate them where
            maximum generality is desired.</para>
      <para>
        <i>Bags</i> or <i>multisets</i> (unordered collections that may contain
            duplicate elements) should implement this interface directly.</para>
      <para>All general-purpose <c>Collection</c> implementation classes (which
            typically implement <c>Collection</c> indirectly through one of its
            subinterfaces) should provide two "standard" constructors: a void (no
            arguments) constructor, which creates an empty collection, and a
            constructor with a single argument of type <c>Collection</c>, which
            creates a new collection with the same elements as its argument.  In
            effect, the latter constructor allows the user to copy any collection,
            producing an equivalent collection of the desired implementation type.
            There is no way to enforce this convention (as interfaces cannot contain
            constructors) but all of the general-purpose <c>Collection</c>
            implementations in the Java platform libraries comply.</para>
      <para>Certain methods are specified to be
            <i>optional</i>. If a collection implementation doesn't implement a
            particular operation, it should define the corresponding method to throw
            <c>UnsupportedOperationException</c>. Such methods are marked "optional
            operation" in method specifications of the collections interfaces.</para>
      <para>"optional-restrictions"&gt;Some collection implementations
            have restrictions on the elements that they may contain.
            For example, some implementations prohibit null elements,
            and some have restrictions on the types of their elements.  Attempting to
            add an ineligible element throws an unchecked exception, typically
            <c>NullPointerException</c> or <c>ClassCastException</c>.  Attempting
            to query the presence of an ineligible element may throw an exception,
            or it may simply return false; some implementations will exhibit the former
            behavior and some will exhibit the latter.  More generally, attempting an
            operation on an ineligible element whose completion would not result in
            the insertion of an ineligible element into the collection may throw an
            exception or it may succeed, at the option of the implementation.
            Such exceptions are marked as "optional" in the specification for this
            interface.</para>
      <para>It is up to each collection to determine its own synchronization
            policy.  In the absence of a stronger guarantee by the
            implementation, undefined behavior may result from the invocation
            of any method on a collection that is being mutated by another
            thread; this includes direct invocations, passing the collection to
            a method that might perform invocations, and using an existing
            iterator to examine the collection.</para>
      <para>Many methods in Collections Framework interfaces are defined in
            terms of the <c>Object#equals(Object) equals</c> method.  For example,
            the specification for the <c>#contains(Object) contains(Object o)</c>
            method says: "returns <c>true</c> if and only if this collection
            contains at least one element <c>e</c> such that
            <c>(o==null ? e==null : o.equals(e))</c>."  This specification should
            <i>not</i> be construed to imply that invoking <c>Collection.contains</c>
            with a non-null argument <c>o</c> will cause <c>o.equals(e)</c> to be
            invoked for any element <c>e</c>.  Implementations are free to implement
            optimizations whereby the <c>equals</c> invocation is avoided, for
            example, by first comparing the hash codes of the two elements.  (The
            <c>Object#hashCode()</c> specification guarantees that two objects with
            unequal hash codes cannot be equal.)  More generally, implementations of
            the various Collections Framework interfaces are free to take advantage of
            the specified behavior of underlying <c>Object</c> methods wherever the
            implementor deems it appropriate.</para>
      <para>Some collection operations which perform recursive traversal of the
            collection may fail with an exception for self-referential instances where
            the collection directly or indirectly contains itself. This includes the
            <c>clone()</c>, <c>equals()</c>, <c>hashCode()</c> and <c>toString()</c>
            methods. Implementations may optionally handle the self-referential scenario,
            however most current implementations do not do so.
            
            &lt;h2&gt;"view"&gt;View Collections&lt;/h2&gt;</para>
      <para>Most collections manage storage for elements they contain. By contrast, <i>view
            collections</i> themselves do not store elements, but instead they rely on a
            backing collection to store the actual elements. Operations that are not handled
            by the view collection itself are delegated to the backing collection. Examples of
            view collections include the wrapper collections returned by methods such as
            <c>Collections#checkedCollection Collections.checkedCollection</c>,
            <c>Collections#synchronizedCollection Collections.synchronizedCollection</c>, and
            <c>Collections#unmodifiableCollection Collections.unmodifiableCollection</c>.
            Other examples of view collections include collections that provide a
            different representation of the same elements, for example, as
            provided by <c>List#subList List.subList</c>,
            <c>NavigableSet#subSet NavigableSet.subSet</c>, or
            <c>Map#entrySet Map.entrySet</c>.
            Any changes made to the backing collection are visible in the view collection.
            Correspondingly, any changes made to the view collection &amp;mdash; if changes
            are permitted &amp;mdash; are written through to the backing collection.
            Although they technically aren't collections, instances of
            <c>Iterator</c> and <c>ListIterator</c> can also allow modifications
            to be written through to the backing collection, and in some cases,
            modifications to the backing collection will be visible to the Iterator
            during iteration.
            
            &lt;h2&gt;"unmodifiable"&gt;Unmodifiable Collections&lt;/h2&gt;</para>
      <para>Certain methods of this interface are considered "destructive" and are called
            "mutator" methods in that they modify the group of objects contained within
            the collection on which they operate. They can be specified to throw
            <c>UnsupportedOperationException</c> if this collection implementation
            does not support the operation. Such methods should (but are not required
            to) throw an <c>UnsupportedOperationException</c> if the invocation would
            have no effect on the collection. For example, consider a collection that
            does not support the <c>#add add</c> operation. What will happen if the
            <c>#addAll addAll</c> method is invoked on this collection, with an empty
            collection as the argument? The addition of zero elements has no effect,
            so it is permissible for this collection simply to do nothing and not to throw
            an exception. However, it is recommended that such cases throw an exception
            unconditionally, as throwing only in certain cases can lead to
            programming errors.</para>
      <para>An <i>unmodifiable collection</i> is a collection, all of whose
            mutator methods (as defined above) are specified to throw
            <c>UnsupportedOperationException</c>. Such a collection thus cannot be
            modified by calling any methods on it. For a collection to be properly
            unmodifiable, any view collections derived from it must also be unmodifiable.
            For example, if a List is unmodifiable, the List returned by
            <c>List#subList List.subList</c> is also unmodifiable.</para>
      <para>An unmodifiable collection is not necessarily immutable. If the
            contained elements are mutable, the entire collection is clearly
            mutable, even though it might be unmodifiable. For example, consider
            two unmodifiable lists containing mutable elements. The result of calling
            <c>list1.equals(list2)</c> might differ from one call to the next if
            the elements had been mutated, even though both lists are unmodifiable.
            However, if an unmodifiable collection contains all immutable elements,
            it can be considered effectively immutable.
            
            &lt;h2&gt;"unmodview"&gt;Unmodifiable View Collections&lt;/h2&gt;</para>
      <para>An <i>unmodifiable view collection</i> is a collection that is unmodifiable
            and that is also a view onto a backing collection. Its mutator methods throw
            <c>UnsupportedOperationException</c>, as described above, while
            reading and querying methods are delegated to the backing collection.
            The effect is to provide read-only access to the backing collection.
            This is useful for a component to provide users with read access to
            an internal collection, while preventing them from modifying such
            collections unexpectedly. Examples of unmodifiable view collections
            are those returned by the
            <c>Collections#unmodifiableCollection Collections.unmodifiableCollection</c>,
            <c>Collections#unmodifiableList Collections.unmodifiableList</c>, and
            related methods.</para>
      <para>Note that changes to the backing collection might still be possible,
            and if they occur, they are visible through the unmodifiable view. Thus,
            an unmodifiable view collection is not necessarily immutable. However,
            if the backing collection of an unmodifiable view is effectively immutable,
            or if the only reference to the backing collection is through an
            unmodifiable view, the view can be considered effectively immutable.
            
            &lt;h2&gt;"serializable"&gt;Serializability of Collections&lt;/h2&gt;</para>
      <para>Serializability of collections is optional. As such, none of the collections
            interfaces are declared to implement the <c>java.io.Serializable</c> interface.
            However, serializability is regarded as being generally useful, so most collection
            implementations are serializable.</para>
      <para>The collection implementations that are public classes (such as <c>ArrayList</c>
            or <c>HashMap</c>) are declared to implement the <c>Serializable</c> interface if they
            are in fact serializable. Some collections implementations are not public classes,
            such as the unmodifiable collections. In such cases, the
            serializability of such collections is described in the specification of the method
            that creates them, or in some other suitable place. In cases where the serializability
            of a collection is not specified, there is no guarantee about the serializability of such
            collections. In particular, many view collections are not serializable.</para>
      <para>A collection implementation that implements the <c>Serializable</c> interface cannot
            be guaranteed to be serializable. The reason is that in general, collections
            contain elements of other types, and it is not possible to determine statically
            whether instances of some element type are actually serializable. For example, consider
            a serializable <c>Collection&lt;E&gt;</c>, where <c>E</c> does not implement the
            <c>Serializable</c> interface. The collection may be serializable, if it contains only
            elements of some serializable subtype of <c>E</c>, or if it is empty. Collections are
            thus said to be <i>conditionally serializable,</i> as the serializability of the collection
            as a whole depends on whether the collection itself is serializable and on whether all
            contained elements are also serializable.</para>
      <para>An additional case occurs with instances of <c>SortedSet</c> and <c>SortedMap</c>.
            These collections can be created with a <c>Comparator</c> that imposes an ordering on
            the set elements or map keys. Such a collection is serializable only if the provided
            <c>Comparator</c> is also serializable.</para>
      <para>This interface is a member of the
            <see href="https://developer.android.com//../technotes/guides/collections/index.html">
            Java Collections Framework</see>.</para>
      <para>Added in 1.2.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/Collection" title="Reference documentation">Java documentation for <code>java.util.Collection</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public bool Add (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Add(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : Java.Lang.Object -&gt; bool" Usage="iCollection.Add e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("add", "(Ljava/lang/Object;)Z", "GetAdd_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("add", "(Ljava/lang/Object;)Z", "GetAdd_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">element whose presence in this collection is to be ensured</param>
        <summary>Ensures that this collection contains the specified element (optional
            operation).</summary>
        <returns>
          <c>true</c> if this collection changed as a result of the
                    call</returns>
        <remarks>
          <para>Ensures that this collection contains the specified element (optional
            operation).  Returns <c>true</c> if this collection changed as a
            result of the call.  (Returns <c>false</c> if this collection does
            not permit duplicates and already contains the specified element.)</para>
          <para>Collections that support this operation may place limitations on what
            elements may be added to this collection.  In particular, some
            collections will refuse to add <c>null</c> elements, and others will
            impose restrictions on the type of elements that may be added.
            Collection classes should clearly specify in their documentation any
            restrictions on what elements may be added.</para>
          <para>If a collection refuses to add a particular element for any reason
            other than that it already contains the element, it <i>must</i> throw
            an exception (rather than returning <c>false</c>).  This preserves
            the invariant that a collection always contains the specified element
            after this call returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#add(E)" title="Reference documentation">Java documentation for <code>java.util.Collection.add(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAll">
      <MemberSignature Language="C#" Value="public bool AddAll (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddAll(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.AddAll(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member AddAll : System.Collections.ICollection -&gt; bool" Usage="iCollection.AddAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAll", "(Ljava/util/Collection;)Z", "GetAddAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAll", "(Ljava/util/Collection;)Z", "GetAddAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">collection containing elements to be added to this collection</param>
        <summary>Adds all of the elements in the specified collection to this collection
            (optional operation).</summary>
        <returns>
          <c>true</c> if this collection changed as a result of the call</returns>
        <remarks>
          <para>Adds all of the elements in the specified collection to this collection
            (optional operation).  The behavior of this operation is undefined if
            the specified collection is modified while the operation is in progress.
            (This implies that the behavior of this call is undefined if the
            specified collection is this collection, and this collection is
            nonempty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#addAll(java.util.Collection%3C?%20extends%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.addAll(java.util.Collection&lt;? extends E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iCollection.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()V", "GetClearHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()V", "GetClearHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all of the elements from this collection (optional operation).</summary>
        <remarks>
          <para>Removes all of the elements from this collection (optional operation).
            The collection will be empty after this method returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#clear()" title="Reference documentation">Java documentation for <code>java.util.Collection.clear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if removing from this <c>Collection</c> is not supported.</exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Contains(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Contains : Java.Lang.Object -&gt; bool" Usage="iCollection.Contains o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">element whose presence in this collection is to be tested</param>
        <summary>Returns <c>true</c> if this collection contains the specified element.</summary>
        <returns>
          <c>true</c> if this collection contains the specified
                    element</returns>
        <remarks>
          <para>Returns <c>true</c> if this collection contains the specified element.
            More formally, returns <c>true</c> if and only if this collection
            contains at least one element <c>e</c> such that
            <c>Objects.equals(o, e)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#contains(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Collection.contains(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if the object to look for isn't of the correct
                type.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the object to look for is <c>null</c> and this
                <c>Collection</c> doesn't support <c>null</c> elements.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsAll">
      <MemberSignature Language="C#" Value="public bool ContainsAll (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsAll(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.ContainsAll(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member ContainsAll : System.Collections.ICollection -&gt; bool" Usage="iCollection.ContainsAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("containsAll", "(Ljava/util/Collection;)Z", "GetContainsAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("containsAll", "(Ljava/util/Collection;)Z", "GetContainsAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">collection to be checked for containment in this collection</param>
        <summary>Returns <c>true</c> if this collection contains all of the elements
            in the specified collection.</summary>
        <returns>
          <c>true</c> if this collection contains all of the elements
                    in the specified collection</returns>
        <remarks>
          <para>Returns <c>true</c> if this collection contains all of the elements
            in the specified collection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#containsAll(java.util.Collection%3C?%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.containsAll(java.util.Collection&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Equals(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Equals : Java.Lang.Object -&gt; bool" Usage="iCollection.Equals o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">object to be compared for equality with this collection</param>
        <summary>Compares the specified object with this collection for equality.</summary>
        <returns>
          <c>true</c> if the specified object is equal to this
            collection</returns>
        <remarks>
          <para>Compares the specified object with this collection for equality.</para>
          <para>While the <c>Collection</c> interface adds no stipulations to the
            general contract for the <c>Object.equals</c>, programmers who
            implement the <c>Collection</c> interface "directly" (in other words,
            create a class that is a <c>Collection</c> but is not a <c>Set</c>
            or a <c>List</c>) must exercise care if they choose to override the
            <c>Object.equals</c>.  It is not necessary to do so, and the simplest
            course of action is to rely on <c>Object</c>'s implementation, but
            the implementor may wish to implement a "value comparison" in place of
            the default "reference comparison."  (The <c>List</c> and
            <c>Set</c> interfaces mandate such value comparisons.)</para>
          <para>The general contract for the <c>Object.equals</c> method states that
            equals must be symmetric (in other words, <c>a.equals(b)</c> if and
            only if <c>b.equals(a)</c>).  The contracts for <c>List.equals</c>
            and <c>Set.equals</c> state that lists are only equal to other lists,
            and sets to other sets.  Thus, a custom <c>equals</c> method for a
            collection class that implements neither the <c>List</c> nor
            <c>Set</c> interface must return <c>false</c> when this collection
            is compared to any list or set.  (By the same logic, it is not possible
            to write a class that correctly implements both the <c>Set</c> and
            <c>List</c> interfaces.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#equals(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Collection.equals(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.GetHashCode" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int" Usage="iCollection.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "()I", "GetGetHashCodeHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code value for this collection.</summary>
        <returns>the hash code value for this collection</returns>
        <remarks>
          <para>Returns the hash code value for this collection.  While the
            <c>Collection</c> interface adds no stipulations to the general
            contract for the <c>Object.hashCode</c> method, programmers should
            take note that any class that overrides the <c>Object.equals</c>
            method must also override the <c>Object.hashCode</c> method in order
            to satisfy the general contract for the <c>Object.hashCode</c> method.
            In particular, <c>c1.equals(c2)</c> implies that
            <c>c1.hashCode()==c2.hashCode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#hashCode()" title="Reference documentation">Java documentation for <code>java.util.Collection.hashCode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ICollection.IsEmpty" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="Java.Util.ICollection.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEmpty", "()Z", "GetIsEmptyHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns if this <c>Collection</c> contains no elements.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Iterator">
      <MemberSignature Language="C#" Value="public Java.Util.IIterator Iterator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.IIterator Iterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Iterator" />
      <MemberSignature Language="F#" Value="abstract member Iterator : unit -&gt; Java.Util.IIterator" Usage="iCollection.Iterator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IIterable.Iterator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("iterator", "()Ljava/util/Iterator;", "GetIteratorHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IIterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an iterator over the elements in this collection.</summary>
        <returns>an <c>Iterator</c> over the elements in this collection</returns>
        <remarks>
          <para>Returns an iterator over the elements in this collection.  There are no
            guarantees concerning the order in which the elements are returned
            (unless this collection is an instance of some class that provides a
            guarantee).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#iterator()" title="Reference documentation">Java documentation for <code>java.util.Collection.iterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IIterable.Spliterator">
      <MemberSignature Language="C#" Value="override sealed Java.Util.ISpliterator IIterable.Spliterator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig virtual instance class Java.Util.ISpliterator Java.Lang.IIterable.Spliterator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Java#Lang#IIterable#Spliterator" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IIterable.Spliterator : unit -&gt; Java.Util.ISpliterator&#xA;override this.Java.Lang.IIterable.Spliterator : unit -&gt; Java.Util.ISpliterator" Usage="iCollection.Java.Lang.IIterable.Spliterator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IIterable.Spliterator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spliterator", "()Ljava/util/Spliterator;", "GetSpliteratorHandler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a <c>Spliterator</c> over the elements in this collection.</summary>
        <returns>a <c>Spliterator</c> over the elements in this collection</returns>
        <remarks>
          <para>Creates a <c>Spliterator</c> over the elements in this collection.
            
            Implementations should document characteristic values reported by the
            spliterator.  Such characteristic values are not required to be reported
            if the spliterator reports <c>Spliterator#SIZED</c> and this collection
            contains no elements.</para>
          <para>The default implementation should be overridden by subclasses that
            can return a more efficient spliterator.  In order to
            preserve expected laziness behavior for the <c>#stream()</c> and
            <c>#parallelStream()</c> methods, spliterators should either have the
            characteristic of <c>IMMUTABLE</c> or <c>CONCURRENT</c>, or be
            &lt;em&gt;late-binding&lt;/em&gt;.
            If none of these is practical, the overriding class should describe the
            spliterator's documented policy of binding and structural interference,
            and should override the <c>#stream()</c> and <c>#parallelStream()</c>
            methods to create streams using a <c>Supplier</c> of the spliterator,
            as in:</para>
          <code lang="text/java">{@code
                Stream&lt;E&gt; s = StreamSupport.stream(() -&gt; spliterator(), spliteratorCharacteristics)
            }</code>
          <para>These requirements ensure that streams produced by the
            <c>#stream()</c> and <c>#parallelStream()</c> methods will reflect the
            contents of the collection as of initiation of the terminal stream
            operation.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#spliterator()" title="Reference documentation">Java documentation for <code>java.util.Collection.spliterator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (Java.Lang.Object? o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Remove(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Remove : Java.Lang.Object -&gt; bool" Usage="iCollection.Remove o" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/Object;)Z", "GetRemove_Ljava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">element to be removed from this collection, if present</param>
        <summary>Removes a single instance of the specified element from this
            collection, if it is present (optional operation).</summary>
        <returns>
          <c>true</c> if an element was removed as a result of this call</returns>
        <remarks>
          <para>Removes a single instance of the specified element from this
            collection, if it is present (optional operation).  More formally,
            removes an element <c>e</c> such that
            <c>Objects.equals(o, e)</c>, if
            this collection contains one or more such elements.  Returns
            <c>true</c> if this collection contained the specified element (or
            equivalently, if this collection changed as a result of the call).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#remove(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Collection.remove(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if removing from this <c>Collection</c> is not supported.</exception>
        <exception cref="T:Java.Lang.ClassCastException">if the object passed is not of the correct type.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>object</c> is <c>null</c> and this <c>Collection</c>
                doesn't support <c>null</c> elements.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public bool RemoveAll (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveAll(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.RemoveAll(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member RemoveAll : System.Collections.ICollection -&gt; bool" Usage="iCollection.RemoveAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeAll", "(Ljava/util/Collection;)Z", "GetRemoveAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeAll", "(Ljava/util/Collection;)Z", "GetRemoveAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">collection containing elements to be removed from this collection</param>
        <summary>Removes all of this collection's elements that are also contained in the
            specified collection (optional operation).</summary>
        <returns>
          <c>true</c> if this collection changed as a result of the
                    call</returns>
        <remarks>
          <para>Removes all of this collection's elements that are also contained in the
            specified collection (optional operation).  After this call returns,
            this collection will contain no elements in common with the specified
            collection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#removeAll(java.util.Collection%3C?%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.removeAll(java.util.Collection&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveIf">
      <MemberSignature Language="C#" Value="public virtual bool RemoveIf (Java.Util.Functions.IPredicate filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveIf(class Java.Util.Functions.IPredicate filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.RemoveIf(Java.Util.Functions.IPredicate)" />
      <MemberSignature Language="F#" Value="abstract member RemoveIf : Java.Util.Functions.IPredicate -&gt; bool&#xA;override this.RemoveIf : Java.Util.Functions.IPredicate -&gt; bool" Usage="iCollection.RemoveIf filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeIf", "(Ljava/util/function/Predicate;)Z", "GetRemoveIf_Ljava_util_function_Predicate_Handler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeIf", "(Ljava/util/function/Predicate;)Z", "GetRemoveIf_Ljava_util_function_Predicate_Handler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Java.Util.Functions.IPredicate" />
      </Parameters>
      <Docs>
        <param name="filter">a predicate which returns <c>true</c> for elements to be
                   removed</param>
        <summary>Removes all of the elements of this collection that satisfy the given
            predicate.</summary>
        <returns>
          <c>true</c> if any elements were removed</returns>
        <remarks>
          <para>Removes all of the elements of this collection that satisfy the given
            predicate.  Errors or runtime exceptions thrown during iteration or by
            the predicate are relayed to the caller.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#removeIf(java.util.function.Predicate%3C?%20super%20E%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.removeIf(java.util.function.Predicate&lt;? super E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetainAll">
      <MemberSignature Language="C#" Value="public bool RetainAll (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RetainAll(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.RetainAll(System.Collections.ICollection)" />
      <MemberSignature Language="F#" Value="abstract member RetainAll : System.Collections.ICollection -&gt; bool" Usage="iCollection.RetainAll c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("retainAll", "(Ljava/util/Collection;)Z", "GetRetainAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("retainAll", "(Ljava/util/Collection;)Z", "GetRetainAll_Ljava_util_Collection_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c">collection containing elements to be retained in this collection</param>
        <summary>Retains only the elements in this collection that are contained in the
            specified collection (optional operation).</summary>
        <returns>
          <c>true</c> if this collection changed as a result of the call</returns>
        <remarks>
          <para>Retains only the elements in this collection that are contained in the
            specified collection (optional operation).  In other words, removes from
            this collection all of its elements that are not contained in the
            specified collection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#retainAll(java.util.Collection%3C?%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.retainAll(java.util.Collection&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Size() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.Size" />
      <MemberSignature Language="F#" Value="abstract member Size : unit -&gt; int" Usage="iCollection.Size " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("size", "()I", "GetSizeHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("size", "()I", "GetSizeHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of elements in this collection.</summary>
        <returns>the number of elements in this collection</returns>
        <remarks>
          <para>Returns the number of elements in this collection.  If this collection
            contains more than <c>Integer.MAX_VALUE</c> elements, returns
            <c>Integer.MAX_VALUE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#size()" title="Reference documentation">Java documentation for <code>java.util.Collection.size()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.ToArray" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; Java.Lang.Object[]" Usage="iCollection.ToArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toArray", "()[Ljava/lang/Object;", "GetToArrayHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toArray", "()[Ljava/lang/Object;", "GetToArrayHandler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array containing all of the elements in this collection.</summary>
        <returns>an array, whose Class#getComponentType runtime component
            type is <c>Object</c>, containing all of the elements in this collection</returns>
        <remarks>
          <para>Returns an array containing all of the elements in this collection.
            If this collection makes any guarantees as to what order its elements
            are returned by its iterator, this method must return the elements in
            the same order. The returned array's Class#getComponentType
            runtime component type is <c>Object</c>.</para>
          <para>The returned array will be "safe" in that no references to it are
            maintained by this collection.  (In other words, this method must
            allocate a new array even if this collection is backed by an array).
            The caller is thus free to modify the returned array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#toArray()" title="Reference documentation">Java documentation for <code>java.util.Collection.toArray()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public Java.Lang.Object[] ToArray (Java.Lang.Object[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] ToArray(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.ToArray(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Java.Lang.Object[] -&gt; Java.Lang.Object[]" Usage="iCollection.ToArray a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toArray", "([Ljava/lang/Object;)[Ljava/lang/Object;", "GetToArray_arrayLjava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toArray", "([Ljava/lang/Object;)[Ljava/lang/Object;", "GetToArray_arrayLjava_lang_Object_Handler:Java.Util.ICollectionInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the component type of the array to contain the collection</param>
        <param name="a">the array into which the elements of this collection are to be
                   stored, if it is big enough; otherwise, a new array of the same
                   runtime type is allocated for this purpose.</param>
        <summary>Returns an array containing all of the elements in this collection;
            the runtime type of the returned array is that of the specified array.</summary>
        <returns>an array containing all of the elements in this collection</returns>
        <remarks>
          <para>Returns an array containing all of the elements in this collection;
            the runtime type of the returned array is that of the specified array.
            If the collection fits in the specified array, it is returned therein.
            Otherwise, a new array is allocated with the runtime type of the
            specified array and the size of this collection.</para>
          <para>If this collection fits in the specified array with room to spare
            (i.e., the array has more elements than this collection), the element
            in the array immediately following the end of the collection is set to
            <c>null</c>.  (This is useful in determining the length of this
            collection <i>only</i> if the caller knows that this collection does
            not contain any <c>null</c> elements.)</para>
          <para>If this collection makes any guarantees as to what order its elements
            are returned by its iterator, this method must return the elements in
            the same order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#toArray(T[])" title="Reference documentation">Java documentation for <code>java.util.Collection.toArray(T[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object[] ToArray (Java.Util.Functions.IIntFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] ToArray(class Java.Util.Functions.IIntFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ICollection.ToArray(Java.Util.Functions.IIntFunction)" />
      <MemberSignature Language="F#" Value="abstract member ToArray : Java.Util.Functions.IIntFunction -&gt; Java.Lang.Object[]&#xA;override this.ToArray : Java.Util.Functions.IIntFunction -&gt; Java.Lang.Object[]" Usage="iCollection.ToArray generator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toArray", "(Ljava/util/function/IntFunction;)[Ljava/lang/Object;", "GetToArray_Ljava_util_function_IntFunction_Handler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toArray", "(Ljava/util/function/IntFunction;)[Ljava/lang/Object;", "GetToArray_Ljava_util_function_IntFunction_Handler:Java.Util.ICollection, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="generator" Type="Java.Util.Functions.IIntFunction" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the component type of the array to contain the collection</param>
        <param name="generator">a function which produces a new array of the desired
                             type and the provided length</param>
        <summary>Returns an array containing all of the elements in this collection,
            using the provided <c>generator</c> function to allocate the returned array.</summary>
        <returns>an array containing all of the elements in this collection</returns>
        <remarks>
          <para>Returns an array containing all of the elements in this collection,
            using the provided <c>generator</c> function to allocate the returned array.</para>
          <para>If this collection makes any guarantees as to what order its elements
            are returned by its iterator, this method must return the elements in
            the same order.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Collection#toArray(java.util.function.IntFunction%3CT[]%3E)" title="Reference documentation">Java documentation for <code>java.util.Collection.toArray(java.util.function.IntFunction&lt;T[]&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
