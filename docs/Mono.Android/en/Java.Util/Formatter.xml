<Type Name="Formatter" FullName="Java.Util.Formatter">
  <TypeSignature Language="C#" Value="public sealed class Formatter : Java.Lang.Object, IDisposable, Java.IO.ICloseable, Java.IO.IFlushable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Formatter extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class Java.IO.IFlushable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.IFlushable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/util/Formatter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Formats arguments according to a format string (like <c>printf</c> in C).</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Formats arguments according to a format string (like <c>printf</c> in C).
 </para>
      <para tool="javadoc-to-mdoc">
 It's relatively rare to use a <c>Formatter</c> directly. A variety of classes offer convenience
 methods for accessing formatter functionality.
 Of these, <c><see cref="!:Java.Lang.String.format(java.lang.String,java.lang.Object...)" /></c> is generally the most useful.
 <c><see cref="T:Java.IO.PrintStream" /></c> and <c><see cref="T:Java.IO.PrintWriter" /></c> both offer
 <c>format</c> and <c>printf</c> methods.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Format strings</i>
        </format> consist of plain text interspersed with format specifiers, such
 as <c>"name: %s weight: %03dkg\n"</c>. Being a Java string, the usual Java string literal
 backslash escapes are of course available.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Format specifiers</i>
        </format> (such as <c>"%s"</c> or <c>"%03d"</c> in the example) start with a
 <c>%</c> and describe how to format their corresponding argument. It includes an optional
 argument index, optional flags, an optional width, an optional precision, and a mandatory
 conversion type.
 In the example, <c>"%s"</c> has no flags, no width, and no precision, while
 <c>"%03d"</c> has the flag <c>0</c>, the width 3, and no precision.
 </para>
      <para tool="javadoc-to-mdoc">
 Not all combinations of argument index, flags, width, precision, and conversion type
 are valid.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Argument index</i>
        </format>. Normally, each format specifier consumes the next argument to
 <c>format</c>.
 For convenient localization, it's possible to reorder arguments so that they appear in a
 different order in the output than the order in which they were supplied.
 For example, <c>"%4$s"</c> formats the fourth argument (<c>4$</c>) as a string (<c>s</c>).
 It's also possible to reuse an argument with <c />. For example,
 <c>format("%o %&lt;d %&lt;x", 64)</c> results in <c>"100 64 40"</c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Flags</i>
        </format>. The available flags are:
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <table border="1" width="100%" cellpadding="3" cellspacing="0" summary="">
            <tr bgcolor="#CCCCFF" class="TableHeadingColor">
              <td colspan="4">
                <b>Flags</b>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>,</c>
              </td>
              <td width="25%">Use grouping separators for large numbers. (Decimal only.)</td>
              <td width="30%">
                <c>format("%,d", 1024);</c>
              </td>
              <td width="30%">
                <c>1,234</c>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>+</c>
              </td>
              <td width="25%">Always show sign. (Decimal only.)</td>
              <td width="30%">
                <c>format("%+d, %+4d", 5, 5);</c>
              </td>
              <td width="30%">
                <example>
                  <code lang="java">+5,   +5</code>
                </example>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c />
              </td>
              <td width="25%">A space indicates that non-negative numbers
 should have a leading space. (Decimal only.)</td>
              <td width="30%">
                <c>format("x% d% 5d", 4, 4);</c>
              </td>
              <td width="30%">
                <example>
                  <code lang="java">x 4    4</code>
                </example>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>(</c>
              </td>
              <td width="25%">Put parentheses around negative numbers. (Decimal only.)</td>
              <td width="30%">
                <c>format("%(d, %(d, %(6d", 12, -12, -12);</c>
              </td>
              <td width="30%">
                <example>
                  <code lang="java">12, (12),   (12)</code>
                </example>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>-</c>
              </td>
              <td width="25%">Left-justify. (Requires width.)</td>
              <td width="30%">
                <c>format("%-6dx", 5);</c>
                <br />
                <c>format("%-3C, %3C", 'd', 0x65);</c>
              </td>
              <td width="30%">
                <example>
                  <code lang="java">5      x</code>
                </example>
                <br />
                <example>
                  <code lang="java">D  ,   E</code>
                </example>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>0</c>
              </td>
              <td width="25%">Pad the number with leading zeros. (Requires width.)</td>
              <td width="30%">
                <c>format("%07d, %03d", 4, 5555);</c>
              </td>
              <td width="30%">
                <c>0000004, 5555</c>
              </td>
            </tr>
            <tr>
              <td width="5%">
                <c>#</c>
              </td>
              <td width="25%">Alternate form. (Octal and hex only.) </td>
              <td width="30%">
                <c>format("%o %#o", 010, 010);</c>
                <br />
                <c>format("%x %#x", 0x12, 0x12);</c>
              </td>
              <td width="30%">
                <c>10 010</c>
                <br />
                <c>12 0x12</c>
              </td>
            </tr>
          </table>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Width</i>
        </format>. The width is a decimal integer specifying the minimum number of characters to be
 used to represent the argument. If the result would otherwise be shorter than the width, padding
 will be added (the exact details of which depend on the flags). Note that you can't use width to
 truncate a field, only to make it wider: see precision for control over the maximum width.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Precision</i>
        </format>. The precision is a <c>.</c> followed by a decimal integer, giving the minimum
 number of digits for <c>d</c>, <c>o</c>, <c>x</c>, or <c>X</c>; the minimum number of digits
 after the decimal point for <c>a</c>, <c>A</c>, <c>e</c>, <c>E</c>, <c>f</c>, or <c>F</c>;
 the maximum number of significant digits for <c>g</c> or <c>G</c>; or the maximum number of
 characters for <c>s</c> or <c>S</c>.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Conversion type</i>
        </format>. One or two characters describing how to interpret the argument. Most
 conversions are a single character, but date/time conversions all start with <c>t</c> and
 have a single extra character describing the desired output.
 </para>
      <para tool="javadoc-to-mdoc">
 Many conversion types have a corresponding uppercase variant that converts its result to
 uppercase using the rules of the relevant locale (either the default or the locale set for
 this formatter).
 </para>
      <para tool="javadoc-to-mdoc">
 This table shows the available single-character (non-date/time) conversion types:
 <format type="text/html"><table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>String conversions</b><br />
 All types are acceptable arguments. Values of type <c><see cref="T:Java.Util.IFormattable" /></c> have their
 <c>formatTo</c> method invoked; all other types use <c>toString</c>.
 </td></tr><tr><td width="5%"><c>s</c></td><td width="25%">String.</td><td width="30%"><c>format("%s %s", "hello", "Hello");</c></td><td width="30%"><c>hello Hello</c></td></tr><tr><td width="5%"><c>S</c></td><td width="25%">Uppercase string.</td><td width="30%"><c>format("%S %S", "hello", "Hello");</c></td><td width="30%"><c>HELLO HELLO</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Character conversions</b><br />
 Byte, Character, Short, and Integer (and primitives that box to those types) are all acceptable
 as character arguments. Any other type is an error.
 </td></tr><tr><td width="5%"><c>c</c></td><td width="25%">Character.</td><td width="30%"><c>format("%c %c", 'd', 'E');</c></td><td width="30%"><c>d E</c></td></tr><tr><td width="5%"><c>C</c></td><td width="25%">Uppercase character.</td><td width="30%"><c>format("%C %C", 'd', 'E');</c></td><td width="30%"><c>D E</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Integer conversions</b><br />
 Byte, Short, Integer, Long, and BigInteger (and primitives that box to those types) are all
 acceptable as integer arguments. Any other type is an error.
 </td></tr><tr><td width="5%"><c>d</c></td><td width="25%">Decimal.</td><td width="30%"><c>format("%d", 26);</c></td><td width="30%"><c>26</c></td></tr><tr><td width="5%"><c>o</c></td><td width="25%">Octal.</td><td width="30%"><c>format("%o", 032);</c></td><td width="30%"><c>32</c></td></tr><tr><td width="5%"><c>x</c>, <c>X</c></td><td width="25%">Hexadecimal.</td><td width="30%"><c>format("%x %X", 0x1a, 0x1a);</c></td><td width="30%"><c>1a 1A</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Floating-point conversions</b><br />
 Float, Double, and BigDecimal (and primitives that box to those types) are all acceptable as
 floating-point arguments. Any other type is an error.
 </td></tr><tr><td width="5%"><c>f</c></td><td width="25%">Decimal floating point.</td><td width="30%"><example><code lang="java">
format("%f", 123.456f);
format("%.1f", 123.456f);
format("%1.5f", 123.456f);
format("%10f", 123.456f);
format("%6.0f", 123.456f);</code></example></td><td width="30%" valign="top"><example><code lang="java">
123.456001
123.5
123.45600
123.456001
   123</code></example></td></tr><tr><td width="5%"><c>e</c>, <c>E</c></td><td width="25%">Engineering/exponential floating point.</td><td width="30%"><example><code lang="java">
format("%e", 123.456f);
format("%.1e", 123.456f);
format("%1.5E", 123.456f);
format("%10E", 123.456f);
format("%6.0E", 123.456f);</code></example></td><td width="30%" valign="top"><example><code lang="java">
1.234560e+02
1.2e+02
1.23456E+02
1.234560E+02
 1E+02</code></example></td></tr><tr><td width="5%" valign="top"><c>g</c>, <c>G</c></td><td width="25%" valign="top">Decimal or engineering, depending on the magnitude of the value.</td><td width="30%" valign="top"><c>format("%g %g", 0.123, 0.0000123);</c></td><td width="30%" valign="top"><c>0.123000 1.23000e-05</c></td></tr><tr><td width="5%"><c>a</c>, <c>A</c></td><td width="25%">Hexadecimal floating point.</td><td width="30%"><c>format("%a", 123.456f);</c></td><td width="30%"><c>0x1.edd2f2p6</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Boolean conversion</b><br />
 Accepts Boolean values. <c>null</c> is considered false, and instances of all other
 types are considered true.
 </td></tr><tr><td width="5%"><c>b</c>, <c>B</c></td><td width="25%">Boolean.</td><td width="30%"><c>format("%b %b", true, false);</c><br /><c>format("%B %B", true, false);</c><br /><c>format("%b", null);</c><br /><c>format("%b", "hello");</c></td><td width="30%"><c>true false</c><br /><c>TRUE FALSE</c><br /><c>false</c><br /><c>true</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Hash code conversion</b><br />
 Invokes <c>hashCode</c> on its argument, which may be of any type.
 </td></tr><tr><td width="5%"><c>h</c>, <c>H</c></td><td width="25%">Hexadecimal hash code.</td><td width="30%"><c>format("%h", this);</c><br /><c>format("%H", this);</c><br /><c>format("%h", null);</c></td><td width="30%"><c>190d11</c><br /><c>190D11</c><br /><c>null</c></td></tr><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Zero-argument conversions</b></td></tr><tr><td width="5%"><c>%</c></td><td width="25%">A literal % character.</td><td width="30%"><c>format("%d%%", 50);</c></td><td width="30%"><c>50%</c></td></tr><tr><td width="5%"><c>n</c></td><td width="25%">Newline. (The value of <c><see cref="M:Java.Lang.JavaSystem.LineSeparator" /></c>.)</td><td width="30%"><c>format("first%nsecond");</c></td><td width="30%"><c>first\nsecond</c></td></tr></table></format></para>
      <para tool="javadoc-to-mdoc">
 It's also possible to format dates and times with <c>Formatter</c>, though you should
 use <c><see cref="T:Java.Text.SimpleDateFormat" /></c> (probably via the factory methods in
 <c><see cref="T:Java.Text.DateFormat" /></c>) instead.
 The facilities offered by <c>Formatter</c> are low-level and place the burden of localization
 on the developer. Using <c><see cref="P:Java.Text.DateFormat.DateInstance" /></c>,
 <c><see cref="P:Java.Text.DateFormat.TimeInstance" /></c>, and
 <c><see cref="P:Java.Text.DateFormat.DateTimeInstance" /></c> is preferable for dates and times that will be
 presented to a human. Those methods will select the best format strings for the user's locale.
 </para>
      <para tool="javadoc-to-mdoc">
 The best non-localized form is ,
 which you can get with <c>"%tF"</c> (2010-01-22), <c>"%tF %tR"</c> (2010-01-22 13:39),
 <c>"%tF %tT"</c> (2010-01-22 13:39:15), or <c>"%tF %tT%z"</c> (2010-01-22 13:39:15-0800).
 </para>
      <para tool="javadoc-to-mdoc">
 This table shows the date/time conversions, but you should use <c><see cref="T:Java.Text.SimpleDateFormat" /></c>
 instead:
 <format type="text/html"><table border="1" width="100%" cellpadding="3" cellspacing="0" summary=""><tr bgcolor="#CCCCFF" class="TableHeadingColor"><td colspan="4"><b>Date/time conversions</b><br />
 Calendar, Date, and Long (representing milliseconds past the epoch) are all acceptable
 as date/time arguments. Any other type is an error. The epoch is 1970-01-01 00:00:00 UTC.
 <font color="red">Use <c><see cref="T:Java.Text.SimpleDateFormat" /></c> instead.</font></td></tr><tr><td width="5%"><c>ta</c></td><td width="25%">Localized weekday name (abbreviated).</td><td width="30%"><c>format("%ta", cal, cal);</c></td><td width="30%"><c>Tue</c></td></tr><tr><td width="5%"><c>tA</c></td><td width="25%">Localized weekday name (full).</td><td width="30%"><c>format("%tA", cal, cal);</c></td><td width="30%"><c>Tuesday</c></td></tr><tr><td width="5%"><c>tb</c></td><td width="25%">Localized month name (abbreviated).</td><td width="30%"><c>format("%tb", cal);</c></td><td width="30%"><c>Apr</c></td></tr><tr><td width="5%"><c>tB</c></td><td width="25%">Localized month name (full).</td><td width="30%"><c>format("%tB", cal);</c></td><td width="30%"><c>April</c></td></tr><tr><td width="5%"><c>tc</c></td><td width="25%">C library <i>asctime(3)</i>-like output. Do not use.</td><td width="30%"><c>format("%tc", cal);</c></td><td width="30%"><c>Tue Apr 01 16:19:17 CEST 2008</c></td></tr><tr><td width="5%"><c>tC</c></td><td width="25%">2-digit century.</td><td width="30%"><c>format("%tC", cal);</c></td><td width="30%"><c>20</c></td></tr><tr><td width="5%"><c>td</c></td><td width="25%">2-digit day of month (01-31).</td><td width="30%"><c>format("%td", cal);</c></td><td width="30%"><c>01</c></td></tr><tr><td width="5%"><c>tD</c></td><td width="25%">Ambiguous US date format (MM/DD/YY). Do not use.</td><td width="30%"><c>format("%tD", cal);</c></td><td width="30%"><c>04/01/08</c></td></tr><tr><td width="5%"><c>te</c></td><td width="25%">Day of month (1-31).</td><td width="30%"><c>format("%te", cal);</c></td><td width="30%"><c>1</c></td></tr><tr><td width="5%"><c>tF</c></td><td width="25%">Full date in ISO 8601 format (YYYY-MM-DD).</td><td width="30%"><c>format("%tF", cal);</c></td><td width="30%"><c>2008-04-01</c></td></tr><tr><td width="5%"><c>th</c></td><td width="25%">Synonym for <c>%tb</c>.</td><td width="30%" /><td width="30%" /></tr><tr><td width="5%"><c>tH</c></td><td width="25%">2-digit 24-hour hour of day (00-23).</td><td width="30%"><c>format("%tH", cal);</c></td><td width="30%"><c>16</c></td></tr><tr><td width="5%"><c>tI</c></td><td width="25%">2-digit 12-hour hour of day (01-12).</td><td width="30%"><c>format("%tI", cal);</c></td><td width="30%"><c>04</c></td></tr><tr><td width="5%"><c>tj</c></td><td width="25%">3-digit day of year (001-366).</td><td width="30%"><c>format("%tj", cal);</c></td><td width="30%"><c>092</c></td></tr><tr><td width="5%"><c>tk</c></td><td width="25%">24-hour hour of day (0-23).</td><td width="30%"><c>format("%tk", cal);</c></td><td width="30%"><c>16</c></td></tr><tr><td width="5%"><c>tl</c></td><td width="25%">12-hour hour of day (1-12).</td><td width="30%"><c>format("%tl", cal);</c></td><td width="30%"><c>4</c></td></tr><tr><td width="5%"><c>tL</c></td><td width="25%">Milliseconds.</td><td width="30%"><c>format("%tL", cal);</c></td><td width="30%"><c>359</c></td></tr><tr><td width="5%"><c>tm</c></td><td width="25%">2-digit month of year (01-12).</td><td width="30%"><c>format("%tm", cal);</c></td><td width="30%"><c>04</c></td></tr><tr><td width="5%"><c>tM</c></td><td width="25%">2-digit minute.</td><td width="30%"><c>format("%tM", cal);</c></td><td width="30%"><c>08</c></td></tr><tr><td width="5%"><c>tN</c></td><td width="25%">Nanoseconds.</td><td width="30%"><c>format("%tN", cal);</c></td><td width="30%"><c>359000000</c></td></tr><tr><td width="5%"><c>tp</c></td><td width="25%">a.m. or p.m.</td><td width="30%"><c>format("%tp %Tp", cal, cal);</c></td><td width="30%"><c>pm PM</c></td></tr><tr><td width="5%"><c>tQ</c></td><td width="25%">Milliseconds since the epoch.</td><td width="30%"><c>format("%tQ", cal);</c></td><td width="30%"><c>1207059412656</c></td></tr><tr><td width="5%"><c>tr</c></td><td width="25%">Full 12-hour time (<c>%tI:%tM:%tS %Tp</c>).</td><td width="30%"><c>format("%tr", cal);</c></td><td width="30%"><c>04:15:32 PM</c></td></tr><tr><td width="5%"><c>tR</c></td><td width="25%">Short 24-hour time (<c>%tH:%tM</c>).</td><td width="30%"><c>format("%tR", cal);</c></td><td width="30%"><c>16:15</c></td></tr><tr><td width="5%"><c>ts</c></td><td width="25%">Seconds since the epoch.</td><td width="30%"><c>format("%ts", cal);</c></td><td width="30%"><c>1207059412</c></td></tr><tr><td width="5%"><c>tS</c></td><td width="25%">2-digit seconds (00-60).</td><td width="30%"><c>format("%tS", cal);</c></td><td width="30%"><c>17</c></td></tr><tr><td width="5%"><c>tT</c></td><td width="25%">Full 24-hour time (<c>%tH:%tM:%tS</c>).</td><td width="30%"><c>format("%tT", cal);</c></td><td width="30%"><c>16:15:32</c></td></tr><tr><td width="5%"><c>ty</c></td><td width="25%">2-digit year (00-99).</td><td width="30%"><c>format("%ty", cal);</c></td><td width="30%"><c>08</c></td></tr><tr><td width="5%"><c>tY</c></td><td width="25%">4-digit year.</td><td width="30%"><c>format("%tY", cal);</c></td><td width="30%"><c>2008</c></td></tr><tr><td width="5%"><c>tz</c></td><td width="25%">Time zone GMT offset.</td><td width="30%"><c>format("%tz", cal);</c></td><td width="30%"><c>+0100</c></td></tr><tr><td width="5%"><c>tZ</c></td><td width="25%">Localized time zone abbreviation.</td><td width="30%"><c>format("%tZ", cal);</c></td><td width="30%"><c>CEST</c></td></tr></table></format></para>
      <para tool="javadoc-to-mdoc">
 As with the other conversions, date/time conversion has an uppercase format. Replacing
 <c>%t</c> with <c>%T</c> will uppercase the field according to the rules of the formatter's
 locale.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Number localization</i>
        </format>. Some conversions use localized decimal digits rather than the
 usual ASCII digits. So formatting <c>123</c> with <c>%d</c> will give 123 in English locales
 but &amp;#x0661;&amp;#x0662;&amp;#x0663; in appropriate Arabic locales, for example. This number localization
 occurs for the decimal integer conversion <c>%d</c>, the floating point conversions <c>%e</c>,
 <c>%f</c>, and <c>%g</c>, and all date/time <c>%t</c> or <c>%T</c> conversions, but no other
 conversions.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <i>Thread safety</i>
        </format>. Formatter is not thread-safe.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Java.Text.DateFormat" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Util.IFormattable" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Java.Text.SimpleDateFormat" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/util/Formatter.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a <c>Formatter</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c>.

 </para>
          <para tool="javadoc-to-mdoc">The output is written to a <c>StringBuilder</c> which can be acquired by invoking
 <c><see cref="M:Java.Util.Formatter.Out" /></c> and whose content can be obtained by calling <c>toString</c>.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output is written to the specified <c>File</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output is written to the specified <c>File</c>.

 The charset of the <c>Formatter</c> is the default charset.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.File)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the <c>File</c> is not a normal and writable <c>File</c>, or if a
             new <c>File</c> cannot be created, or if any error rises when opening or
             creating the <c>File</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.IO.PrintStream ps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.PrintStream ps) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/PrintStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="ps" Type="Java.IO.PrintStream" />
      </Parameters>
      <Docs>
        <param name="ps">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output is written to the specified <c>PrintStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output is written to the specified <c>PrintStream</c>.

 </para>
          <para tool="javadoc-to-mdoc">The charset of the <c>Formatter</c> is the default charset.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.PrintStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.Lang.IAppendable a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.IAppendable a) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/Appendable;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.IAppendable" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output will be written to the
 specified <c>Appendable</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output will be written to the
 specified <c>Appendable</c>.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.lang.Appendable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.Util.Locale l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.Locale l) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="l" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the specified <c>Locale</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the specified <c>Locale</c>.

 </para>
          <para tool="javadoc-to-mdoc">The output is written to a <c>StringBuilder</c> which can be acquired by invoking
 <c><see cref="M:Java.Util.Formatter.Out" /></c> and whose content can be obtained by calling <c>toString</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (System.IO.Stream os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream os) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output is written to the specified <c>OutputStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output is written to the specified <c>OutputStream</c>.

 </para>
          <para tool="javadoc-to-mdoc">The charset of the <c>Formatter</c> is the default charset.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.OutputStream)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output is written to the specified file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output is written to the specified file.

 </para>
          <para tool="javadoc-to-mdoc">The charset of the <c>Formatter</c> is the default charset.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the filename does not denote a normal and writable file,
             or if a new file cannot be created, or if any error arises when
             opening or creating the file.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.IO.File file, string csn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file, string csn) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="csn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="csn">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the given charset,
 and whose output is written to the specified <c>File</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the given charset,
 and whose output is written to the specified <c>File</c>.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.File, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the <c>File</c> is not a normal and writable <c>File</c>, or if a
             new <c>File</c> cannot be created, or if any error rises when opening or
             creating the <c>File</c>.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.Lang.IAppendable a, Java.Util.Locale l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.IAppendable a, class Java.Util.Locale l) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/Appendable;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.IAppendable" />
        <Parameter Name="l" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <param name="l">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the specified <c>Locale</c>
 and whose output will be written to the
 specified <c>Appendable</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the specified <c>Locale</c>
 and whose output will be written to the
 specified <c>Appendable</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.lang.Appendable, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (System.IO.Stream os, string csn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream os, string csn) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
        <Parameter Name="csn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <param name="csn">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the given charset,
 and whose output is written to the specified <c>OutputStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the given charset,
 and whose output is written to the specified <c>OutputStream</c>.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.OutputStream, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (string fileName, string csn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string csn) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="csn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="csn">To be added.</param>
        <summary>Constructs a <c>Formatter</c> whose output is written to the specified file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> whose output is written to the specified file.

 </para>
          <para tool="javadoc-to-mdoc">The <c>Locale</c> used is the user's default locale.
 See "<format type="text/html"><a href="http://developer.android.com/reference/../util/Locale.html#default_locale">Be wary of the default locale</a></format>".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the filename does not denote a normal and writable file,
             or if a new file cannot be created, or if any error arises when
             opening or creating the file.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (Java.IO.File file, string csn, Java.Util.Locale l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file, string csn, class Java.Util.Locale l) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/File;Ljava/lang/String;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="csn" Type="System.String" />
        <Parameter Name="l" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="csn">To be added.</param>
        <param name="l">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified <c>File</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified <c>File</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.File, java.lang.String, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the <c>File</c> is not a normal and writable <c>File</c>, or if a
             new <c>File</c> cannot be created, or if any error rises when opening or
             creating the <c>File</c>.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (System.IO.Stream os, string csn, Java.Util.Locale l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream os, string csn, class Java.Util.Locale l) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/io/OutputStream;Ljava/lang/String;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
        <Parameter Name="csn" Type="System.String" />
        <Parameter Name="l" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <param name="csn">To be added.</param>
        <param name="l">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified <c>OutputStream</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified <c>OutputStream</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.io.OutputStream, java.lang.String, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter (string fileName, string csn, Java.Util.Locale l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, string csn, class Java.Util.Locale l) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/util/Locale;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="csn" Type="System.String" />
        <Parameter Name="l" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <param name="csn">To be added.</param>
        <param name="l">To be added.</param>
        <summary>Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a <c>Formatter</c> with the given <c>Locale</c> and charset,
 and whose output is written to the specified file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#Formatter(java.lang.String, java.lang.String, java.util.Locale)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the filename does not denote a normal and writable file,
             or if a new file cannot be created, or if any error arises when
             opening or creating the file.</exception>
        <exception cref="T:Java.IO.UnsupportedEncodingException">if the charset with the specified name is not supported.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the <c>Formatter</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Closes the <c>Formatter</c>. If the output destination is <c><see cref="T:Java.IO.ICloseable" /></c>,
 then the method <c>close()</c> will be called on that destination.

 If the <c>Formatter</c> has been closed, then calling the this method will have no
 effect.

 Any method but the <c><see cref="M:Java.Util.Formatter.IoException" /></c> that is called after the
 <c>Formatter</c> has been closed will raise a <c>FormatterClosedException</c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes the <c>Formatter</c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes the <c>Formatter</c>. If the output destination is <c><see cref="T:Java.IO.IFlushable" /></c>,
 then the method <c>flush()</c> will be called on that destination.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#flush()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.FormatterClosedException">if the <c>Formatter</c> has been closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Java.Util.Formatter Format (string format, Java.Lang.Object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Formatter Format(string format, class Java.Lang.Object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Formatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Java.Util.Formatter Format (Java.Util.Locale l, string format, Java.Lang.Object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Formatter Format(class Java.Util.Locale l, string format, class Java.Lang.Object[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("format", "(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Formatter;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Formatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Java.Util.Locale" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="l">To be added.</param>
        <param name="format">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IoException">
      <MemberSignature Language="C#" Value="public Java.IO.IOException IoException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.IO.IOException IoException() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ioException", "()Ljava/io/IOException;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.IOException</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the last <c>IOException</c> thrown by the <c>Formatter</c>'s output
 destination.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the last <c>IOException</c> thrown by the <c>Formatter</c>'s output
 destination. If the <c>append()</c> method of the destination does not throw
 <c>IOException</c>s, the <c>ioException()</c> method will always return <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#ioException()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="C#" Value="public Java.Util.Locale Locale ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Util.Locale Locale() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("locale", "()Ljava/util/Locale;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c>Locale</c> of the <c>Formatter</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c>Locale</c> of the <c>Formatter</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#locale()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.FormatterClosedException">if the <c>Formatter</c> has been closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable Out ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.IAppendable Out() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("out", "()Ljava/lang/Appendable;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the output destination of the <c>Formatter</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the output destination of the <c>Formatter</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/util/Formatter.html#out()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.FormatterClosedException">if the <c>Formatter</c> has been closed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
