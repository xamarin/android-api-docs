<Type Name="ResourceBundle" FullName="Java.Util.ResourceBundle">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ResourceBundle&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ResourceBundle abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class ResourceBundle : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ResourceBundle extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.ResourceBundle" />
  <TypeSignature Language="F#" Value="type ResourceBundle = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/ResourceBundle", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/ResourceBundle", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Resource bundles contain locale-specific objects.</summary>
    <remarks>
      <para>Resource bundles contain locale-specific objects.  When your program needs a
            locale-specific resource, a <c>String</c> for example, your program can
            load it from the resource bundle that is appropriate for the current user's
            locale. In this way, you can write program code that is largely independent
            of the user's locale isolating most, if not all, of the locale-specific
            information in resource bundles.</para>
      <para>This allows you to write programs that can:
            &lt;UL&gt;
            &lt;LI&gt; be easily localized, or translated, into different languages
            &lt;LI&gt; handle multiple locales at once
            &lt;LI&gt; be easily modified later to support even more locales
            &lt;/UL&gt;</para>
      <para>Resource bundles belong to families whose members share a common base
            name, but whose names also have additional components that identify
            their locales. For example, the base name of a family of resource
            bundles might be "MyResources". The family should have a default
            resource bundle which simply has the same name as its family -
            "MyResources" - and will be used as the bundle of last resort if a
            specific locale is not supported. The family can then provide as
            many locale-specific members as needed, for example a German one
            named "MyResources_de".</para>
      <para>Each resource bundle in a family contains the same items, but the items have
            been translated for the locale represented by that resource bundle.
            For example, both "MyResources" and "MyResources_de" may have a
            <c>String</c> that's used on a button for canceling operations.
            In "MyResources" the <c>String</c> may contain "Cancel" and in
            "MyResources_de" it may contain "Abbrechen".</para>
      <para>If there are different resources for different countries, you
            can make specializations: for example, "MyResources_de_CH" contains objects for
            the German language (de) in Switzerland (CH). If you want to only
            modify some of the resources
            in the specialization, you can do so.</para>
      <para>When your program needs a locale-specific object, it loads
            the <c>ResourceBundle</c> class using the
            <c>#getBundle(java.lang.String, java.util.Locale) getBundle</c>
            method:
            &lt;blockquote&gt;</para>
      <code lang="text/java">ResourceBundle myResources =
                 ResourceBundle.getBundle("MyResources", currentLocale);
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>Resource bundles contain key/value pairs. The keys uniquely
            identify a locale-specific object in the bundle. Here's an
            example of a <c>ListResourceBundle</c> that contains
            two key/value pairs:
            &lt;blockquote&gt;</para>
      <code lang="text/java">public class MyResources extends ListResourceBundle {
                protected Object[][] getContents() {
                    return new Object[][] {
                        // LOCALIZE THE SECOND STRING OF EACH ARRAY (e.g., "OK")
                        {"OkKey", "OK"},
                        {"CancelKey", "Cancel"},
                        // END OF MATERIAL TO LOCALIZE
                   };
                }
            }
            </code>
      <para>&lt;/blockquote&gt;
            Keys are always <c>String</c>s.
            In this example, the keys are "OkKey" and "CancelKey".
            In the above example, the values
            are also <c>String</c>s--"OK" and "Cancel"--but
            they don't have to be. The values can be any type of object.</para>
      <para>You retrieve an object from resource bundle using the appropriate
            getter method. Because "OkKey" and "CancelKey"
            are both strings, you would use <c>getString</c> to retrieve them:
            &lt;blockquote&gt;</para>
      <code lang="text/java">button1 = new Button(myResources.getString("OkKey"));
            button2 = new Button(myResources.getString("CancelKey"));
            </code>
      <para>&lt;/blockquote&gt;
            The getter methods all require the key as an argument and return
            the object if found. If the object is not found, the getter method
            throws a <c>MissingResourceException</c>.</para>
      <para>Besides <c>getString</c>, <c>ResourceBundle</c> also provides
            a method for getting string arrays, <c>getStringArray</c>,
            as well as a generic <c>getObject</c> method for any other
            type of object. When using <c>getObject</c>, you'll
            have to cast the result to the appropriate type. For example:
            &lt;blockquote&gt;</para>
      <code lang="text/java">int[] myIntegers = (int[]) myResources.getObject("intList");
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>The Java Platform provides two subclasses of <c>ResourceBundle</c>,
            <c>ListResourceBundle</c> and <c>PropertyResourceBundle</c>,
            that provide a fairly simple way to create resources.
            As you saw briefly in a previous example, <c>ListResourceBundle</c>
            manages its resource as a list of key/value pairs.
            <c>PropertyResourceBundle</c> uses a properties file to manage
            its resources.</para>
      <para>If <c>ListResourceBundle</c> or <c>PropertyResourceBundle</c>
            do not suit your needs, you can write your own <c>ResourceBundle</c>
            subclass.  Your subclasses must override two methods: <c>handleGetObject</c>
            and <c>getKeys()</c>.</para>
      <para>The implementation of a <c>ResourceBundle</c> subclass must be thread-safe
            if it's simultaneously used by multiple threads. The default implementations
            of the non-abstract methods in this class, and the methods in the direct
            known concrete subclasses <c>ListResourceBundle</c> and
            <c>PropertyResourceBundle</c> are thread-safe.
            
            &lt;h3&gt;ResourceBundle.Control&lt;/h3&gt;
            
            The <c>ResourceBundle.Control</c> class provides information necessary
            to perform the bundle loading process by the <c>getBundle</c>
            factory methods that take a <c>ResourceBundle.Control</c>
            instance. You can implement your own subclass in order to enable
            non-standard resource bundle formats, change the search strategy, or
            define caching parameters. Refer to the descriptions of the class and the
            <c>#getBundle(String, Locale, ClassLoader, Control) getBundle</c>
            factory method for details.
            
            &lt;h3&gt;Cache Management&lt;/h3&gt;
            
            Resource bundle instances created by the <c>getBundle</c> factory
            methods are cached by default, and the factory methods return the same
            resource bundle instance multiple times if it has been
            cached. <c>getBundle</c> clients may clear the cache, manage the
            lifetime of cached resource bundle instances using time-to-live values,
            or specify not to cache resource bundle instances. Refer to the
            descriptions of the #getBundle(String, Locale, ClassLoader,
            Control) &lt;code&gt;getBundle&lt;/code&gt; factory method, <c>#clearCache(ClassLoader) clearCache</c>, <c>Control#getTimeToLive(String, Locale)
            ResourceBundle.Control.getTimeToLive</c>, and <c>Control#needsReload(String, Locale, String, ClassLoader, ResourceBundle,
            long) ResourceBundle.Control.needsReload</c> for details.
            
            &lt;h3&gt;Example&lt;/h3&gt;
            
            The following is a very simple example of a <c>ResourceBundle</c>
            subclass, <c>MyResources</c>, that manages two resources (for a larger number of
            resources you would probably use a <c>Map</c>).
            Notice that you don't need to supply a value if
            a "parent-level" <c>ResourceBundle</c> handles the same
            key with the same value (as for the okKey below).
            &lt;blockquote&gt;</para>
      <code lang="text/java">// default (English language, United States)
            public class MyResources extends ResourceBundle {
                public Object handleGetObject(String key) {
                    if (key.equals("okKey")) return "Ok";
                    if (key.equals("cancelKey")) return "Cancel";
                    return null;
                }
            
                public Enumeration&amp;lt;String&amp;gt; getKeys() {
                    return Collections.enumeration(keySet());
                }
            
                // Overrides handleKeySet() so that the getKeys() implementation
                // can rely on the keySet() value.
                protected Set&amp;lt;String&amp;gt; handleKeySet() {
                    return new HashSet&amp;lt;String&amp;gt;(Arrays.asList("okKey", "cancelKey"));
                }
            }
            
            // German language
            public class MyResources_de extends MyResources {
                public Object handleGetObject(String key) {
                    // don't need okKey, since parent level handles it.
                    if (key.equals("cancelKey")) return "Abbrechen";
                    return null;
                }
            
                protected Set&amp;lt;String&amp;gt; handleKeySet() {
                    return new HashSet&amp;lt;String&amp;gt;(Arrays.asList("cancelKey"));
                }
            }
            </code>
      <para>&lt;/blockquote&gt;
            You do not have to restrict yourself to using a single family of
            <c>ResourceBundle</c>s. For example, you could have a set of bundles for
            exception messages, <c>ExceptionResources</c>
            (<c>ExceptionResources_fr</c>, <c>ExceptionResources_de</c>, ...),
            and one for widgets, <c>WidgetResource</c> (<c>WidgetResources_fr</c>,
            <c>WidgetResources_de</c>, ...); breaking up the resources however you like.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/ResourceBundle" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ResourceBundle();" />
      <MemberSignature Language="C#" Value="public ResourceBundle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Sole constructor.</summary>
        <remarks>
          <para>Sole constructor.  (For invocation by subclass constructors, typically
            implicit.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#ResourceBundle()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.ResourceBundle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ResourceBundle(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ResourceBundle (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.ResourceBundle : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.ResourceBundle" Usage="new Java.Util.ResourceBundle (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseBundleName">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BaseBundleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BaseBundleName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string? BaseBundleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseBundleName" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.BaseBundleName" />
      <MemberSignature Language="F#" Value="member this.BaseBundleName : string" Usage="Java.Util.ResourceBundle.BaseBundleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBaseBundleName", "()Ljava/lang/String;", "GetGetBaseBundleNameHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBaseBundleName", "()Ljava/lang/String;", "GetGetBaseBundleNameHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the base name of this bundle, if known, or <c>null</c> if unknown.</summary>
        <value>The base name of the resource bundle, as provided to and expected
            by the <c>ResourceBundle.getBundle(...)</c> methods.</value>
        <remarks>
          <para>Returns the base name of this bundle, if known, or <c>null</c> if unknown.
            
            If not null, then this is the value of the <c>baseName</c> parameter
            that was passed to the <c>ResourceBundle.getBundle(...)</c> method
            when the resource bundle was loaded.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBaseBundleName()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBaseBundleName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache();" />
      <MemberSignature Language="C#" Value="public static void ClearCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.ClearCache" />
      <MemberSignature Language="F#" Value="static member ClearCache : unit -&gt; unit" Usage="Java.Util.ResourceBundle.ClearCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCache", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCache", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all resource bundles from the cache that have been loaded
            using the caller's class loader.</summary>
        <remarks>
          <para>Removes all resource bundles from the cache that have been loaded
            using the caller's class loader.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#clearCache()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.clearCache()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ClearCache">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearCache (loader As ClassLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearCache(Java::Lang::ClassLoader ^ loader);" />
      <MemberSignature Language="C#" Value="public static void ClearCache (Java.Lang.ClassLoader? loader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearCache(class Java.Lang.ClassLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.ClearCache(Java.Lang.ClassLoader)" />
      <MemberSignature Language="F#" Value="static member ClearCache : Java.Lang.ClassLoader -&gt; unit" Usage="Java.Util.ResourceBundle.ClearCache loader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCache", "(Ljava/lang/ClassLoader;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCache", "(Ljava/lang/ClassLoader;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="loader">the class loader</param>
        <summary>Removes all resource bundles from the cache that have been loaded
            by the given class loader.</summary>
        <remarks>
          <para>Removes all resource bundles from the cache that have been loaded
            by the given class loader.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#clearCache(java.lang.ClassLoader)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.clearCache(java.lang.ClassLoader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.ContainsKey(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ContainsKey : string -&gt; bool&#xA;override this.ContainsKey : string -&gt; bool" Usage="resourceBundle.ContainsKey key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("containsKey", "(Ljava/lang/String;)Z", "GetContainsKey_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("containsKey", "(Ljava/lang/String;)Z", "GetContainsKey_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the resource <c>key</c></param>
        <summary>Determines whether the given <c>key</c> is contained in
            this <c>ResourceBundle</c> or its parent bundles.</summary>
        <returns>
          <c>true</c> if the given <c>key</c> is
                   contained in this <c>ResourceBundle</c> or its
                   parent bundles; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determines whether the given <c>key</c> is contained in
            this <c>ResourceBundle</c> or its parent bundles.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#containsKey(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.containsKey(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle baseName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <summary>Gets a resource bundle using the specified base name, the default locale,
            and the caller's class loader.</summary>
        <returns>a resource bundle for the given base name and the default locale</returns>
        <remarks>
          <para>Gets a resource bundle using the specified base name, the default locale,
            and the caller's class loader. Calling this method is equivalent to calling
            &lt;blockquote&gt;
            <c>getBundle(baseName, Locale.getDefault(), this.getClass().getClassLoader())</c>,
            &lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the <c>ResourceBundle</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String, locale As Locale) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName, Java::Util::Locale ^ locale);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName, Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String,Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string * Java.Util.Locale -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle (baseName, locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <param name="locale">the locale for which a resource bundle is desired</param>
        <summary>Gets a resource bundle using the specified base name and locale,
            and the caller's class loader.</summary>
        <returns>a resource bundle for the given base name and locale</returns>
        <remarks>
          <para>Gets a resource bundle using the specified base name and locale,
            and the caller's class loader. Calling this method is equivalent to calling
            &lt;blockquote&gt;
            <c>getBundle(baseName, locale, this.getClass().getClassLoader())</c>,
            &lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String,%20java.util.Locale)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource bundle cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String, control As ResourceBundle.Control) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName, Java::Util::ResourceBundle::Control ^ control);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName, Java.Util.ResourceBundle.Control? control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String,Java.Util.ResourceBundle.Control)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string * Java.Util.ResourceBundle.Control -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle (baseName, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="control" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Gets a resource bundle using the specified base name, the default locale,
            and the caller's class loader.</summary>
        <returns>a resource bundle for the given base name and the default locale</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String, locale As Locale, loader As ClassLoader) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName, Java::Util::Locale ^ locale, Java::Lang::ClassLoader ^ loader);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName, Java.Util.Locale? locale, Java.Lang.ClassLoader? loader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale locale, class Java.Lang.ClassLoader loader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String,Java.Util.Locale,Java.Lang.ClassLoader)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string * Java.Util.Locale * Java.Lang.ClassLoader -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle (baseName, locale, loader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <param name="locale">the locale for which a resource bundle is desired</param>
        <param name="loader">the class loader from which to load the resource bundle</param>
        <summary>Gets a resource bundle using the specified base name, locale, and class
            loader.</summary>
        <returns>a resource bundle for the given base name and locale</returns>
        <remarks>
          <para>Gets a resource bundle using the specified base name, locale, and class
            loader.
            
            This is equivalent to calling:
            &lt;blockquote&gt;</para>
          <code lang="text/java">getBundle(baseName, targetLocale, loader, control)
            </code>
          <para>&lt;/blockquote&gt;
            passing a default instance of <c>Control</c>.
            Refer to the
            description of modifying the default
            behavior. The following describes the default behavior.</para>
          <para>&lt;b&gt;"default_behavior"&gt;Resource Bundle Search and Loading Strategy&lt;/b&gt;</para>
          <para>
            <c>getBundle</c> uses the base name, the specified locale, and
            the default locale (obtained from <c>java.util.Locale#getDefault()
            Locale.getDefault</c>) to generate a sequence of "candidates"&gt;&lt;em&gt;candidate bundle names&lt;/em&gt;.  If the specified
            locale's language, script, country, and variant are all empty strings,
            then the base name is the only candidate bundle name.  Otherwise, a list
            of candidate locales is generated from the attribute values of the
            specified locale (language, script, country and variant) and appended to
            the base name.  Typically, this will look like the following:</para>
          <code lang="text/java">baseName + "_" + language + "_" + script + "_" + country + "_" + variant
                baseName + "_" + language + "_" + script + "_" + country
                baseName + "_" + language + "_" + script
                baseName + "_" + language + "_" + country + "_" + variant
                baseName + "_" + language + "_" + country
                baseName + "_" + language
            </code>
          <para>Candidate bundle names where the final component is an empty string
            are omitted, along with the underscore.  For example, if country is an
            empty string, the second and the fifth candidate bundle names above
            would be omitted.  Also, if script is an empty string, the candidate names
            including script are omitted.  For example, a locale with language "de"
            and variant "JAVA" will produce candidate names with base name
            "MyResource" below.</para>
          <code lang="text/java">MyResource_de__JAVA
                MyResource_de
            </code>
          <para>In the case that the variant contains one or more underscores ('_'), a
            sequence of bundle names generated by truncating the last underscore and
            the part following it is inserted after a candidate bundle name with the
            original variant.  For example, for a locale with language "en", script
            "Latn, country "US" and variant "WINDOWS_VISTA", and bundle base name
            "MyResource", the list of candidate bundle names below is generated:</para>
          <code lang="text/java">MyResource_en_Latn_US_WINDOWS_VISTA
            MyResource_en_Latn_US_WINDOWS
            MyResource_en_Latn_US
            MyResource_en_Latn
            MyResource_en_US_WINDOWS_VISTA
            MyResource_en_US_WINDOWS
            MyResource_en_US
            MyResource_en
            </code>
          <para>&lt;blockquote&gt;&lt;b&gt;Note:&lt;/b&gt; For some <c>Locale</c>s, the list of
            candidate bundle names contains extra names, or the order of bundle names
            is slightly modified.  See the description of the default implementation
            of <c>Control#getCandidateLocales(String, Locale)
            getCandidateLocales</c> for details.&lt;/blockquote&gt;</para>
          <para>
            <c>getBundle</c> then iterates over the candidate bundle names
            to find the first one for which it can &lt;em&gt;instantiate&lt;/em&gt; an actual
            resource bundle. It uses the default controls' <c>Control#getFormats
            getFormats</c> method, which generates two bundle names for each generated
            name, the first a class name and the second a properties file name. For
            each candidate bundle name, it attempts to create a resource bundle:
            
            &lt;ul&gt;&lt;li&gt;First, it attempts to load a class using the generated class name.
            If such a class can be found and loaded using the specified class
            loader, is assignment compatible with ResourceBundle, is accessible from
            ResourceBundle, and can be instantiated, <c>getBundle</c> creates a
            new instance of this class and uses it as the &lt;em&gt;result resource
            bundle&lt;/em&gt;.
            
            &lt;li&gt;Otherwise, <c>getBundle</c> attempts to locate a property
            resource file using the generated properties file name.  It generates a
            path name from the candidate bundle name by replacing all "." characters
            with "/" and appending the string ".properties".  It attempts to find a
            "resource" with this name using <c>java.lang.ClassLoader#getResource(java.lang.String)
            ClassLoader.getResource</c>.  (Note that a "resource" in the sense of
            <c>getResource</c> has nothing to do with the contents of a
            resource bundle, it is just a container of data, such as a file.)  If it
            finds a "resource", it attempts to create a new <c>PropertyResourceBundle</c> instance from its contents.  If successful, this
            instance becomes the &lt;em&gt;result resource bundle&lt;/em&gt;.  &lt;/ul&gt;</para>
          <para>This continues until a result resource bundle is instantiated or the
            list of candidate bundle names is exhausted.  If no matching resource
            bundle is found, the default control's <c>Control#getFallbackLocale
            getFallbackLocale</c> method is called, which returns the current default
            locale.  A new sequence of candidate locale names is generated using this
            locale and searched again, as above.</para>
          <para>If still no result bundle is found, the base name alone is looked up. If
            this still fails, a <c>MissingResourceException</c> is thrown.</para>
          <para>"parent_chain"&gt; Once a result resource bundle has been found,
            its &lt;em&gt;parent chain&lt;/em&gt; is instantiated.  If the result bundle already
            has a parent (perhaps because it was returned from a cache) the chain is
            complete.</para>
          <para>Otherwise, <c>getBundle</c> examines the remainder of the
            candidate locale list that was used during the pass that generated the
            result resource bundle.  (As before, candidate bundle names where the
            final component is an empty string are omitted.)  When it comes to the
            end of the candidate list, it tries the plain bundle name.  With each of the
            candidate bundle names it attempts to instantiate a resource bundle (first
            looking for a class and then a properties file, as described above).</para>
          <para>Whenever it succeeds, it calls the previously instantiated resource
            bundle's <c>#setParent(java.util.ResourceBundle) setParent</c> method
            with the new resource bundle.  This continues until the list of names
            is exhausted or the current bundle already has a non-null parent.</para>
          <para>Once the parent chain is complete, the bundle is returned.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; <c>getBundle</c> caches instantiated resource
            bundles and might return the same resource bundle instance multiple times.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt;The <c>baseName</c> argument should be a fully
            qualified class name. However, for compatibility with earlier versions,
            Java SE Runtime Environments do not verify this, and so it is
            possible to access <c>PropertyResourceBundle</c>s by specifying a
            path name (using "/") instead of a fully qualified class name (using
            ".").</para>
          <para>"default_behavior_example"&gt;
            &lt;strong&gt;Example:&lt;/strong&gt;</para>
          <para>The following class and property files are provided:
            &lt;ul&gt;
                &lt;li&gt;MyResources.class
                &lt;li&gt;MyResources.properties
                &lt;li&gt;MyResources_fr.properties
                &lt;li&gt;MyResources_fr_CH.class
                &lt;li&gt;MyResources_fr_CH.properties
                &lt;li&gt;MyResources_en.properties
                &lt;li&gt;MyResources_es_ES.class
            &lt;/ul&gt;
            
            The contents of all files are valid (that is, public non-abstract
            subclasses of <c>ResourceBundle</c> for the ".class" files,
            syntactically correct ".properties" files).  The default locale is
            <c>Locale("en", "GB")</c>.</para>
          <para>Calling <c>getBundle</c> with the locale arguments below will
            instantiate resource bundles as follows:
            
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;getBundle() locale to resource bundle mapping&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col"&gt;Locale&lt;/th&gt;&lt;th scope="col"&gt;Resource bundle&lt;/th&gt;&lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Locale("fr", "CH")&lt;/th&gt;&lt;td&gt;MyResources_fr_CH.class, parent MyResources_fr.properties, parent MyResources.class&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Locale("fr", "FR")&lt;/th&gt;&lt;td&gt;MyResources_fr.properties, parent MyResources.class&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Locale("de", "DE")&lt;/th&gt;&lt;td&gt;MyResources_en.properties, parent MyResources.class&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Locale("en", "US")&lt;/th&gt;&lt;td&gt;MyResources_en.properties, parent MyResources.class&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row"&gt;Locale("es", "ES")&lt;/th&gt;&lt;td&gt;MyResources_es_ES.class, parent MyResources.class&lt;/td&gt;&lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>The file MyResources_fr_CH.properties is never used because it is
            hidden by the MyResources_fr_CH.class. Likewise, MyResources.properties
            is also hidden by MyResources.class.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String,%20java.util.Locale,%20java.lang.ClassLoader)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String, java.util.Locale, java.lang.ClassLoader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the <c>ResourceBundle</c> cannot be found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String, targetLocale As Locale, control As ResourceBundle.Control) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName, Java::Util::Locale ^ targetLocale, Java::Util::ResourceBundle::Control ^ control);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName, Java.Util.Locale? targetLocale, Java.Util.ResourceBundle.Control? control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale targetLocale, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String,Java.Util.Locale,Java.Util.ResourceBundle.Control)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string * Java.Util.Locale * Java.Util.ResourceBundle.Control -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle (baseName, targetLocale, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="targetLocale" Type="Java.Util.Locale" />
        <Parameter Name="control" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <param name="targetLocale">the target locale of the resource bundle</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Gets a resource bundle using the specified base name, the default locale,
            and the caller's class loader.</summary>
        <returns>a resource bundle for the given base name and the default locale</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetBundle">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBundle (baseName As String, targetLocale As Locale, loader As ClassLoader, control As ResourceBundle.Control) As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ResourceBundle ^ GetBundle(System::String ^ baseName, Java::Util::Locale ^ targetLocale, Java::Lang::ClassLoader ^ loader, Java::Util::ResourceBundle::Control ^ control);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ResourceBundle? GetBundle (string? baseName, Java.Util.Locale? targetLocale, Java.Lang.ClassLoader? loader, Java.Util.ResourceBundle.Control? control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ResourceBundle GetBundle(string baseName, class Java.Util.Locale targetLocale, class Java.Lang.ClassLoader loader, class Java.Util.ResourceBundle/Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetBundle(System.String,Java.Util.Locale,Java.Lang.ClassLoader,Java.Util.ResourceBundle.Control)" />
      <MemberSignature Language="F#" Value="static member GetBundle : string * Java.Util.Locale * Java.Lang.ClassLoader * Java.Util.ResourceBundle.Control -&gt; Java.Util.ResourceBundle" Usage="Java.Util.ResourceBundle.GetBundle (baseName, targetLocale, loader, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBundle", "(Ljava/lang/String;Ljava/util/Locale;Ljava/lang/ClassLoader;Ljava/util/ResourceBundle$Control;)Ljava/util/ResourceBundle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseName" Type="System.String" />
        <Parameter Name="targetLocale" Type="Java.Util.Locale" />
        <Parameter Name="loader" Type="Java.Lang.ClassLoader" />
        <Parameter Name="control" Type="Java.Util.ResourceBundle+Control" />
      </Parameters>
      <Docs>
        <param name="baseName">the base name of the resource bundle, a fully qualified class name</param>
        <param name="targetLocale">the target locale of the resource bundle</param>
        <param name="loader">the class loader to load resource</param>
        <param name="control">the control that control the access sequence</param>
        <summary>Gets a resource bundle using the specified base name, the default locale,
            and the caller's class loader.</summary>
        <returns>a resource bundle for the given base name and the default locale</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getBundle(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getBundle(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="VB.NET" Value="Public Function GetObject (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ GetObject(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetObject (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetObject(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetObject(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetObject : string -&gt; Java.Lang.Object" Usage="resourceBundle.GetObject key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getObject", "(Ljava/lang/String;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getObject", "(Ljava/lang/String;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key for the desired object</param>
        <summary>Gets an object for the given key from this resource bundle or one of its parents.</summary>
        <returns>the object for the given key</returns>
        <remarks>
          <para>Gets an object for the given key from this resource bundle or one of its parents.
            This method first tries to obtain the object from this resource bundle using
            <c>#handleGetObject(java.lang.String) handleGetObject</c>.
            If not successful, and the parent resource bundle is not null,
            it calls the parent's <c>getObject</c> method.
            If still not successful, it throws a MissingResourceException.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getObject(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getObject(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="VB.NET" Value="Public Function GetString (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetString(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public string? GetString (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetString(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetString(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetString : string -&gt; string" Usage="resourceBundle.GetString key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key for the desired string</param>
        <summary>Gets a string for the given key from this resource bundle or one of its parents.</summary>
        <returns>the string for the given key</returns>
        <remarks>
          <para>Gets a string for the given key from this resource bundle or one of its parents.
            Calling this method is equivalent to calling
            &lt;blockquote&gt;
            <c>(String) {@link #getObject(java.lang.String) getObject}(key)</c>.
            &lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getString(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getString(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.</exception>
        <exception cref="T:Java.Lang.ClassCastException">if the resource found is not a string.</exception>
        <altmember cref="M:Java.Util.ResourceBundle.GetObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetStringArray">
      <MemberSignature Language="VB.NET" Value="Public Function GetStringArray (key As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetStringArray(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public string[]? GetStringArray (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetStringArray(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.GetStringArray(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetStringArray : string -&gt; string[]" Usage="resourceBundle.GetStringArray key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStringArray", "(Ljava/lang/String;)[Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStringArray", "(Ljava/lang/String;)[Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key for the desired string array</param>
        <summary>Gets a string array for the given key from this resource bundle or one of its parents.</summary>
        <returns>the string array for the given key</returns>
        <remarks>
          <para>Gets a string array for the given key from this resource bundle or one of its parents.
            Calling this method is equivalent to calling
            &lt;blockquote&gt;
            <c>(String[]) {@link #getObject(java.lang.String) getObject}(key)</c>.
            &lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getStringArray(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getStringArray(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.MissingResourceException">if the resource is not found.</exception>
        <exception cref="T:Java.Lang.ClassCastException">if the resource found is not an array of strings.</exception>
        <altmember cref="M:Java.Util.ResourceBundle.GetObject(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HandleGetObject">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function HandleGetObject (key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Lang::Object ^ HandleGetObject(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object? HandleGetObject (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object HandleGetObject(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.HandleGetObject(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HandleGetObject : string -&gt; Java.Lang.Object" Usage="resourceBundle.HandleGetObject key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleGetObject", "(Ljava/lang/String;)Ljava/lang/Object;", "GetHandleGetObject_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleGetObject", "(Ljava/lang/String;)Ljava/lang/Object;", "GetHandleGetObject_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key for the desired object</param>
        <summary>Gets an object for the given key from this resource bundle.</summary>
        <returns>the object for the given key, or null</returns>
        <remarks>
          <para>Gets an object for the given key from this resource bundle.
            Returns null if this resource bundle does not contain an
            object for the given key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#handleGetObject(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.handleGetObject(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HandleKeySet">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleKeySet () As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ HandleKeySet();" />
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.ICollection&lt;string&gt;? HandleKeySet ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; HandleKeySet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.HandleKeySet" />
      <MemberSignature Language="F#" Value="abstract member HandleKeySet : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.HandleKeySet : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="resourceBundle.HandleKeySet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleKeySet", "()Ljava/util/Set;", "GetHandleKeySetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleKeySet", "()Ljava/util/Set;", "GetHandleKeySetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Set</c> of the keys contained &lt;em&gt;only&lt;/em&gt;
            in this <c>ResourceBundle</c>.</summary>
        <returns>a <c>Set</c> of the keys contained only in this
                   <c>ResourceBundle</c></returns>
        <remarks>
          <para>Returns a <c>Set</c> of the keys contained &lt;em&gt;only&lt;/em&gt;
            in this <c>ResourceBundle</c>.</para>
          <para>The default implementation returns a <c>Set</c> of the
            keys returned by the <c>#getKeys() getKeys</c> method except
            for the ones for which the <c>#handleGetObject(String)
            handleGetObject</c> method returns <c>null</c>. Once the
            <c>Set</c> has been created, the value is kept in this
            <c>ResourceBundle</c> in order to avoid producing the
            same <c>Set</c> in subsequent calls. Subclasses can
            override this method for faster handling.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#handleKeySet()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.handleKeySet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.ResourceBundle.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Keys As IEnumeration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Java::Util::IEnumeration ^ Keys { Java::Util::IEnumeration ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.IEnumeration? Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.IEnumeration Keys" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.Keys" />
      <MemberSignature Language="F#" Value="member this.Keys : Java.Util.IEnumeration" Usage="Java.Util.ResourceBundle.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeys", "()Ljava/util/Enumeration;", "GetGetKeysHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeys", "()Ljava/util/Enumeration;", "GetGetKeysHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.IEnumeration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the names of the resources contained in this <c>ResourceBundle</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeySet">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function KeySet () As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ KeySet();" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt;? KeySet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; KeySet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.KeySet" />
      <MemberSignature Language="F#" Value="abstract member KeySet : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.KeySet : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="resourceBundle.KeySet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keySet", "()Ljava/util/Set;", "GetKeySetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keySet", "()Ljava/util/Set;", "GetKeySetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Set</c> of all keys contained in this
            <c>ResourceBundle</c> and its parent bundles.</summary>
        <returns>a <c>Set</c> of all keys contained in this
                    <c>ResourceBundle</c> and its parent bundles.</returns>
        <remarks>
          <para>Returns a <c>Set</c> of all keys contained in this
            <c>ResourceBundle</c> and its parent bundles.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#keySet()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.keySet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Locale">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Locale As Locale" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Util::Locale ^ Locale { Java::Util::Locale ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Locale? Locale { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Locale Locale" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.Locale" />
      <MemberSignature Language="F#" Value="member this.Locale : Java.Util.Locale" Usage="Java.Util.ResourceBundle.Locale" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocale", "()Ljava/util/Locale;", "GetGetLocaleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocale", "()Ljava/util/Locale;", "GetGetLocaleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the locale of this resource bundle.</summary>
        <value>the locale of this resource bundle</value>
        <remarks>
          <para>Returns the locale of this resource bundle. This method can be used after a
            call to getBundle() to determine whether the resource bundle returned really
            corresponds to the requested locale or is a fallback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#getLocale()" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.getLocale()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="VB.NET" Value="Protected Property Parent As ResourceBundle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Java::Util::ResourceBundle ^ Parent { Java::Util::ResourceBundle ^ get(); void set(Java::Util::ResourceBundle ^ value); };" />
      <MemberSignature Language="C#" Value="protected Java.Util.ResourceBundle? Parent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.ResourceBundle Parent" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Java.Util.ResourceBundle with get, set" Usage="Java.Util.ResourceBundle.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parent")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parent")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ResourceBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The parent bundle of this bundle.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The parent bundle of this bundle.
            The parent bundle is searched by <c>#getObject getObject</c>
            when this bundle does not contain a particular resource.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#parent" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.parent</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetParent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetParent (parent As ResourceBundle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetParent(Java::Util::ResourceBundle ^ parent);" />
      <MemberSignature Language="C#" Value="protected virtual void SetParent (Java.Util.ResourceBundle? parent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetParent(class Java.Util.ResourceBundle parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.ResourceBundle.SetParent(Java.Util.ResourceBundle)" />
      <MemberSignature Language="F#" Value="abstract member SetParent : Java.Util.ResourceBundle -&gt; unit&#xA;override this.SetParent : Java.Util.ResourceBundle -&gt; unit" Usage="resourceBundle.SetParent parent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParent", "(Ljava/util/ResourceBundle;)V", "GetSetParent_Ljava_util_ResourceBundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParent", "(Ljava/util/ResourceBundle;)V", "GetSetParent_Ljava_util_ResourceBundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Java.Util.ResourceBundle" />
      </Parameters>
      <Docs>
        <param name="parent">this bundle's parent bundle.</param>
        <summary>Sets the parent bundle of this bundle.</summary>
        <remarks>
          <para>Sets the parent bundle of this bundle.
            The parent bundle is searched by <c>#getObject getObject</c>
            when this bundle does not contain a particular resource.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ResourceBundle#setParent(java.util.ResourceBundle)" title="Reference documentation">Java documentation for <code>java.util.ResourceBundle.setParent(java.util.ResourceBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.ResourceBundle.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.ResourceBundle.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.ResourceBundle.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
