<Type Name="Arrays" FullName="Java.Util.Arrays">
  <TypeSignature Language="VB.NET" Value="Public Class Arrays&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Arrays : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class Arrays : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Arrays extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Arrays" />
  <TypeSignature Language="F#" Value="type Arrays = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/Arrays", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/Arrays", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class contains various methods for manipulating arrays (such as
            sorting and searching).</summary>
    <remarks>
      <para>This class contains various methods for manipulating arrays (such as
            sorting and searching). This class also contains a static factory
            that allows arrays to be viewed as lists.</para>
      <para>The methods in this class all throw a <c>NullPointerException</c>,
            if the specified array reference is null, except where noted.</para>
      <para>The documentation for the methods contained in this class includes
            brief descriptions of the <i>implementations</i>. Such descriptions should
            be regarded as <i>implementation notes</i>, rather than parts of the
            <i>specification</i>. Implementors should feel free to substitute other
            algorithms, so long as the specification itself is adhered to. (For
            example, the algorithm used by <c>sort(Object[])</c> does not have to be
            a MergeSort, but it does have to be <i>stable</i>.)</para>
      <para>This class is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.2.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/Arrays" title="Reference documentation">Java documentation for <code>java.util.Arrays</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Arrays(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Arrays (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Arrays : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Arrays" Usage="new Java.Util.Arrays (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsList">
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsList (ParamArray a As Object()) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ AsList(... cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static System.Collections.IList AsList (params Java.Lang.Object[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList AsList(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.AsList(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member AsList : Java.Lang.Object[] -&gt; System.Collections.IList" Usage="Java.Util.Arrays.AsList a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("asList", "([Ljava/lang/Object;)Ljava/util/List;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("asList", "([Ljava/lang/Object;)Ljava/util/List;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="a">the array by which the list will be backed</param>
        <summary>Returns a fixed-size list backed by the specified array.</summary>
        <returns>a list view of the specified array</returns>
        <remarks>
          <para>Returns a fixed-size list backed by the specified array. Changes made to
            the array will be visible in the returned list, and changes made to the
            list will be visible in the array. The returned list is
            <c>Serializable</c> and implements <c>RandomAccess</c>.</para>
          <para>The returned list implements the optional <c>Collection</c> methods, except
            those that would change the size of the returned list. Those methods leave
            the list unchanged and throw <c>UnsupportedOperationException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#asList(T...)" title="Reference documentation">Java documentation for <code>java.util.Arrays.asList(T...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Object(), key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, Java::Lang::Object ^ key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (Java.Lang.Object[] a, Java.Lang.Object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class Java.Lang.Object[] a, class Java.Lang.Object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(Java.Lang.Object[],Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Java.Lang.Object[] * Java.Lang.Object -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="key" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array for the specified object using the binary
            search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array for the specified object using the binary
            search algorithm. The array must be sorted into ascending order
            according to the
            Comparable natural ordering
            of its elements (as by the
            <c>#sort(Object[])</c> method) prior to making this call.
            If it is not sorted, the results are undefined.
            (If the array contains elements that are not mutually comparable (for
            example, strings and integers), it <i>cannot</i> be sorted according
            to the natural ordering of its elements, hence results are undefined.)
            If the array contains multiple
            elements equal to the specified object, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(java.lang.Object[],%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(java.lang.Object[], java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if an element in the array or the search element does not
         implement <c>Comparable</c>, or cannot be compared to each other.
</exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Byte(), key As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;System::Byte&gt; ^ a, System::SByte key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (byte[] a, sbyte key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(unsigned int8[] a, int8 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Byte[],System.SByte)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : byte[] * sbyte -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([BB)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([BB)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="key" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of bytes for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of bytes for the specified value using the
            binary search algorithm.  The array must be sorted (as
            by the <c>#sort(byte[])</c> method) prior to making this call.  If it
            is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(byte[],%20byte)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(byte[], byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Char(), key As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;char&gt; ^ a, char key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (char[] a, char key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(char[] a, char key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Char[],System.Char)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : char[] * char -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([CC)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([CC)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="key" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of chars for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of chars for the specified value using the
            binary search algorithm.  The array must be sorted (as
            by the <c>#sort(char[])</c> method) prior to making this call.  If it
            is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(char[],%20char)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(char[], char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Double(), key As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;double&gt; ^ a, double key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (double[] a, double key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(float64[] a, float64 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Double[],System.Double)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : double[] * double -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([DD)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([DD)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="key" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of doubles for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of doubles for the specified value using
            the binary search algorithm.  The array must be sorted
            (as by the <c>#sort(double[])</c> method) prior to making this call.
            If it is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.  This method considers all NaN values to be
            equivalent and equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(double[],%20double)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(double[], double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Short(), key As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;short&gt; ^ a, short key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (short[] a, short key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int16[] a, int16 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int16[],System.Int16)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int16[] * int16 -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([SS)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([SS)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="key" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of shorts for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of shorts for the specified value using
            the binary search algorithm.  The array must be sorted
            (as by the <c>#sort(short[])</c> method) prior to making this call.  If
            it is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(short[],%20short)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(short[], short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Integer(), key As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;int&gt; ^ a, int key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (int[] a, int key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int32[] a, int32 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int32[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int[] * int -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="key" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of ints for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of ints for the specified value using the
            binary search algorithm.  The array must be sorted (as
            by the <c>#sort(int[])</c> method) prior to making this call.  If it
            is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(int[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(int[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Long(), key As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;long&gt; ^ a, long key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (long[] a, long key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int64[] a, int64 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int64[],System.Int64)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int64[] * int64 -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([JJ)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([JJ)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="key" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of longs for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of longs for the specified value using the
            binary search algorithm.  The array must be sorted (as
            by the <c>#sort(long[])</c> method) prior to making this call.  If it
            is not sorted, the results are undefined.  If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(long[],%20long)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(long[], long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Single(), key As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;float&gt; ^ a, float key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (float[] a, float key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(float32[] a, float32 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Single[],System.Single)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : single[] * single -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([FF)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([FF)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="key" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches the specified array of floats for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>. The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key. Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array of floats for the specified value using
            the binary search algorithm. The array must be sorted
            (as by the <c>#sort(float[])</c> method) prior to making this call. If
            it is not sorted, the results are undefined. If the array contains
            multiple elements with the specified value, there is no guarantee which
            one will be found. This method considers all NaN values to be
            equivalent and equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(float[],%20float)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(float[], float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Object(), key As Object, c As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, Java::Lang::Object ^ key, Java::Util::IComparator ^ c);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (Java.Lang.Object[] a, Java.Lang.Object? key, Java.Util.IComparator? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class Java.Lang.Object[] a, class Java.Lang.Object key, class Java.Util.IComparator c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(Java.Lang.Object[],Java.Lang.Object,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Java.Lang.Object[] * Java.Lang.Object * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, key, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="c" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="a">the array to be searched</param>
        <param name="key">the value to be searched for</param>
        <param name="c">the comparator by which the array is ordered.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Searches the specified array for the specified object using the binary
            search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element greater than the key, or <c>a.length</c> if all
                    elements in the array are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches the specified array for the specified object using the binary
            search algorithm.  The array must be sorted into ascending order
            according to the specified comparator (as by the
            <c>#sort(Object[], Comparator) sort(T[], Comparator)</c>
            method) prior to making this call.  If it is
            not sorted, the results are undefined.
            If the array contains multiple
            elements equal to the specified object, there is no guarantee which one
            will be found.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(T[],%20T,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(T[], T, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Object(), fromIndex As Integer, toIndex As Integer, key As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex, Java::Lang::Object ^ key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (Java.Lang.Object[] a, int fromIndex, int toIndex, Java.Lang.Object key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex, class Java.Lang.Object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Java.Lang.Object[] * int * int * Java.Lang.Object -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;IILjava/lang/Object;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;IILjava/lang/Object;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array for the specified object using the binary
            search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array for the specified object using the binary
            search algorithm.
            The range must be sorted into ascending order
            according to the
            Comparable natural ordering
            of its elements (as by the
            <c>#sort(Object[], int, int)</c> method) prior to making this
            call.  If it is not sorted, the results are undefined.
            (If the range contains elements that are not mutually comparable (for
            example, strings and integers), it <i>cannot</i> be sorted according
            to the natural ordering of its elements, hence results are undefined.)
            If the range contains multiple
            elements equal to the specified object, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(java.lang.Object[],%20int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(java.lang.Object[], int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ClassCastException">if an element in the array or the search element does not
         implement <c>Comparable</c>, or cannot be compared to each other.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Byte(), fromIndex As Integer, toIndex As Integer, key As SByte) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;System::Byte&gt; ^ a, int fromIndex, int toIndex, System::SByte key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (byte[] a, int fromIndex, int toIndex, sbyte key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(unsigned int8[] a, int32 fromIndex, int32 toIndex, int8 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Byte[],System.Int32,System.Int32,System.SByte)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : byte[] * int * int * sbyte -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([BIIB)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([BIIB)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of bytes for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of bytes for the specified value using the
            binary search algorithm.
            The range must be sorted (as
            by the <c>#sort(byte[], int, int)</c> method)
            prior to making this call.  If it
            is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(byte[],%20int,%20int,%20byte)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(byte[], int, int, byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Char(), fromIndex As Integer, toIndex As Integer, key As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;char&gt; ^ a, int fromIndex, int toIndex, char key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (char[] a, int fromIndex, int toIndex, char key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(char[] a, int32 fromIndex, int32 toIndex, char key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Char[],System.Int32,System.Int32,System.Char)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : char[] * int * int * char -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([CIIC)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([CIIC)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of chars for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of chars for the specified value using the
            binary search algorithm.
            The range must be sorted (as
            by the <c>#sort(char[], int, int)</c> method)
            prior to making this call.  If it
            is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(char[],%20int,%20int,%20char)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(char[], int, int, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Double(), fromIndex As Integer, toIndex As Integer, key As Double) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;double&gt; ^ a, int fromIndex, int toIndex, double key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (double[] a, int fromIndex, int toIndex, double key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(float64[] a, int32 fromIndex, int32 toIndex, float64 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Double[],System.Int32,System.Int32,System.Double)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : double[] * int * int * double -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([DIID)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([DIID)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of doubles for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of doubles for the specified value using
            the binary search algorithm.
            The range must be sorted
            (as by the <c>#sort(double[], int, int)</c> method)
            prior to making this call.
            If it is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.  This method considers all NaN values to be
            equivalent and equal.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(double[],%20int,%20int,%20double)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(double[], int, int, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Short(), fromIndex As Integer, toIndex As Integer, key As Short) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;short&gt; ^ a, int fromIndex, int toIndex, short key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (short[] a, int fromIndex, int toIndex, short key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int16[] a, int32 fromIndex, int32 toIndex, int16 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int16[],System.Int32,System.Int32,System.Int16)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int16[] * int * int * int16 -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([SIIS)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([SIIS)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of shorts for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of shorts for the specified value using
            the binary search algorithm.
            The range must be sorted
            (as by the <c>#sort(short[], int, int)</c> method)
            prior to making this call.  If
            it is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(short[],%20int,%20int,%20short)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(short[], int, int, short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Integer(), fromIndex As Integer, toIndex As Integer, key As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;int&gt; ^ a, int fromIndex, int toIndex, int key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (int[] a, int fromIndex, int toIndex, int key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int32[] a, int32 fromIndex, int32 toIndex, int32 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int32[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int[] * int * int * int -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([IIII)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([IIII)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of ints for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of ints for the specified value using the
            binary search algorithm.
            The range must be sorted (as
            by the <c>#sort(int[], int, int)</c> method)
            prior to making this call.  If it
            is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(int[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(int[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Long(), fromIndex As Integer, toIndex As Integer, key As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;long&gt; ^ a, int fromIndex, int toIndex, long key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (long[] a, int fromIndex, int toIndex, long key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(int64[] a, int32 fromIndex, int32 toIndex, int64 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Int64[],System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : int64[] * int * int * int64 -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([JIIJ)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([JIIJ)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of longs for the specified value using the
            binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of longs for the specified value using the
            binary search algorithm.
            The range must be sorted (as
            by the <c>#sort(long[], int, int)</c> method)
            prior to making this call.  If it
            is not sorted, the results are undefined.  If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(long[],%20int,%20int,%20long)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(long[], int, int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Single(), fromIndex As Integer, toIndex As Integer, key As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;float&gt; ^ a, int fromIndex, int toIndex, float key);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (float[] a, int fromIndex, int toIndex, float key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(float32[] a, int32 fromIndex, int32 toIndex, float32 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(System.Single[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : single[] * int * int * single -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([FIIF)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([FIIF)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <summary>Searches a range of
            the specified array of floats for the specified value using
            the binary search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>. The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key. Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array of floats for the specified value using
            the binary search algorithm.
            The range must be sorted
            (as by the <c>#sort(float[], int, int)</c> method)
            prior to making this call. If
            it is not sorted, the results are undefined. If the range contains
            multiple elements with the specified value, there is no guarantee which
            one will be found. This method considers all NaN values to be
            equivalent and equal.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(float[],%20int,%20int,%20float)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(float[], int, int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>startIndex &gt; endIndex</c></exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>startIndex  array.length</c></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch (a As Object(), fromIndex As Integer, toIndex As Integer, key As Object, c As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex, Java::Lang::Object ^ key, Java::Util::IComparator ^ c);" />
      <MemberSignature Language="C#" Value="public static int BinarySearch (Java.Lang.Object[] a, int fromIndex, int toIndex, Java.Lang.Object? key, Java.Util.IComparator? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex, class Java.Lang.Object key, class Java.Util.IComparator c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.BinarySearch(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Java.Lang.Object[] * int * int * Java.Lang.Object * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.BinarySearch (a, fromIndex, toIndex, key, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("binarySearch", "([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="key" Type="Java.Lang.Object" />
        <Parameter Name="c" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="a">the array to be searched</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                     searched</param>
        <param name="toIndex">the index of the last element (exclusive) to be searched</param>
        <param name="key">the value to be searched for</param>
        <param name="c">the comparator by which the array is ordered.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Searches a range of
            the specified array for the specified object using the binary
            search algorithm.</summary>
        <returns>index of the search key, if it is contained in the array
                    within the specified range;
                    otherwise, <c>(-(&lt;i&gt;insertion point&lt;/i&gt;) - 1)</c>.  The
                    <i>insertion point</i> is defined as the point at which the
                    key would be inserted into the array: the index of the first
                    element in the range greater than the key,
                    or <c>toIndex</c> if all
                    elements in the range are less than the specified key.  Note
                    that this guarantees that the return value will be &amp;gt;= 0 if
                    and only if the key is found.</returns>
        <remarks>
          <para>Searches a range of
            the specified array for the specified object using the binary
            search algorithm.
            The range must be sorted into ascending order
            according to the specified comparator (as by the
            <c>#sort(Object[], int, int, Comparator)
            sort(T[], int, int, Comparator)</c>
            method) prior to making this call.
            If it is not sorted, the results are undefined.
            If the range contains multiple elements equal to the specified object,
            there is no guarantee which one will be found.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#binarySearch(T[],%20int,%20int,%20T,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.binarySearch(T[], int, int, T, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Object(), b As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.Object[]? a, Java.Lang.Object[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.Object[] a, class Java.Lang.Object[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(Java.Lang.Object[],Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.Object[] * Java.Lang.Object[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([Ljava/lang/Comparable;[Ljava/lang/Comparable;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([Ljava/lang/Comparable;[Ljava/lang/Comparable;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="b" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of comparable array elements</param>
        <summary>Compares two <c>Object</c> arrays, within comparable elements,
            lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>Object</c> arrays, within comparable elements,
            lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements of type <c>T</c> at
            an index <c>i</c> within the respective arrays that is the prefix
            length, as if by:</para>
          <code lang="text/java">{@code
                Comparator.nullsFirst(Comparator.&lt;T&gt;naturalOrder()).
                    compare(a[i], b[i])
            }</code>
          <para>Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(Object[], Object[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference. Two <c>null</c> array
            references are considered equal.
            A <c>null</c> array element is considered lexicographically less than a
            non-<c>null</c> array element. Two <c>null</c> array elements are
            considered equal.</para>
          <para>The comparison is consistent with <c>#equals(Object[], Object[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(T[],%20T[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(T[], T[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Boolean(), b As Boolean()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;bool&gt; ^ a, cli::array &lt;bool&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (bool[]? a, bool[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(bool[] a, bool[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Boolean[],System.Boolean[])" />
      <MemberSignature Language="F#" Value="static member Compare : bool[] * bool[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([Z[Z)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([Z[Z)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="b" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>boolean</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>boolean</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Boolean#compare(boolean, boolean)</c>, at an index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(boolean[], boolean[])</c> for the definition of a
            common and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(boolean[], boolean[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(boolean[],%20boolean[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(boolean[], boolean[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Byte(), b As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;System::Byte&gt; ^ a, cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (byte[]? a, byte[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(unsigned int8[] a, unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="static member Compare : byte[] * byte[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([B[B)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([B[B)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>byte</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>byte</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Byte#compare(byte, byte)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(byte[], byte[])</c> for the definition of a common and
            proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(byte[], byte[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(byte[],%20byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Char(), b As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;char&gt; ^ a, cli::array &lt;char&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (char[]? a, char[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char[] a, char[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Char[],System.Char[])" />
      <MemberSignature Language="F#" Value="static member Compare : char[] * char[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([C[C)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([C[C)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="b" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>char</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>char</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Character#compare(char, char)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(char[], char[])</c> for the definition of a common and
            proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(char[], char[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(char[],%20char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(char[], char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Double(), b As Double()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;double&gt; ^ a, cli::array &lt;double&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (double[]? a, double[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float64[] a, float64[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Double[],System.Double[])" />
      <MemberSignature Language="F#" Value="static member Compare : double[] * double[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([D[D)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([D[D)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="b" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>double</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>double</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Double#compare(double, double)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(double[], double[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(double[], double[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(double[],%20double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(double[], double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Short(), b As Short()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;short&gt; ^ a, cli::array &lt;short&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (short[]? a, short[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int16[] a, int16[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int16[],System.Int16[])" />
      <MemberSignature Language="F#" Value="static member Compare : int16[] * int16[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([S[S)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([S[S)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="b" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>short</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>short</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Short#compare(short, short)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(short[], short[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(short[], short[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(short[],%20short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(short[], short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Integer(), b As Integer()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;int&gt; ^ a, cli::array &lt;int&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (int[]? a, int[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int32[] a, int32[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="static member Compare : int[] * int[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([I[I)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([I[I)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="b" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>int</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>int</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Integer#compare(int, int)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(int[], int[])</c> for the definition of a common and
            proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(int[], int[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(int[],%20int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Long(), b As Long()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;long&gt; ^ a, cli::array &lt;long&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (long[]? a, long[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int64[] a, int64[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int64[],System.Int64[])" />
      <MemberSignature Language="F#" Value="static member Compare : int64[] * int64[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([J[J)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([J[J)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="b" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>long</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>long</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Long#compare(long, long)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(long[], long[])</c> for the definition of a common and
            proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(long[], long[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(long[],%20long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(long[], long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Single(), b As Single()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;float&gt; ^ a, cli::array &lt;float&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Compare (float[]? a, float[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float32[] a, float32[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member Compare : single[] * single[] -&gt; int" Usage="Java.Util.Arrays.Compare (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([F[F)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([F[F)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="b" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>float</c> arrays lexicographically.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>float</c> arrays lexicographically.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Float#compare(float, float)</c>, at an index within the respective
            arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(float[], float[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>The comparison is consistent with <c>#equals(float[], float[]) equals</c>,
            more specifically the following holds for arrays <c>a</c> and <c>b</c>:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, b) == (Arrays.compare(a, b) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(float[],%20float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Object(), b As Object(), cmp As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ b, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.Object[]? a, Java.Lang.Object[]? b, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.Object[] a, class Java.Lang.Object[] b, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(Java.Lang.Object[],Java.Lang.Object[],Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.Object[] * Java.Lang.Object[] * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.Compare (a, b, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="b" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Compares two <c>Object</c> arrays lexicographically using a specified
            comparator.</summary>
        <returns>the value <c>0</c> if the first and second array are equal and
                    contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>Object</c> arrays lexicographically using a specified
            comparator.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing with the specified comparator two
            elements at an index within the respective arrays that is the prefix
            length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(Object[], Object[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(T[],%20T[],%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(T[], T[], java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([Ljava/lang/Comparable;II[Ljava/lang/Comparable;II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([Ljava/lang/Comparable;II[Ljava/lang/Comparable;II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of comparable array elements</param>
        <summary>Compares two <c>Object</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>Object</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements of type <c>T</c> at a relative index <c>i</c> within the
            respective arrays that is the prefix length, as if by:</para>
          <code lang="text/java">{@code
                Comparator.nullsFirst(Comparator.&lt;T&gt;naturalOrder()).
                    compare(a[aFromIndex + i, b[bFromIndex + i])
            }</code>
          <para>Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(Object[], int, int, Object[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(Object[], int, int, Object[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(T[],%20int,%20int,%20T[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(T[], int, int, T[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Boolean(), aFromIndex As Integer, aToIndex As Integer, b As Boolean(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;bool&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;bool&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (bool[] a, int aFromIndex, int aToIndex, bool[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(bool[] a, int32 aFromIndex, int32 aToIndex, bool[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Boolean[],System.Int32,System.Int32,System.Boolean[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : bool[] * int * int * bool[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([ZII[ZII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([ZII[ZII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Boolean[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>boolean</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>boolean</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Boolean#compare(boolean, boolean)</c>, at a
            relative index within the respective arrays that is the length of the
            prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(boolean[], int, int, boolean[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(boolean[], int, int, boolean[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(boolean[],%20int,%20int,%20boolean[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(boolean[], int, int, boolean[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Byte(), aFromIndex As Integer, aToIndex As Integer, b As Byte(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;System::Byte&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;System::Byte&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(unsigned int8[] a, int32 aFromIndex, int32 aToIndex, unsigned int8[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : byte[] * int * int * byte[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([BII[BII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([BII[BII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>byte</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>byte</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Byte#compare(byte, byte)</c>, at a relative index
            within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(byte[], int, int, byte[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(byte[], int, int, byte[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(byte[],%20int,%20int,%20byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(byte[], int, int, byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Char(), aFromIndex As Integer, aToIndex As Integer, b As Char(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;char&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;char&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(char[] a, int32 aFromIndex, int32 aToIndex, char[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Char[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : char[] * int * int * char[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([CII[CII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([CII[CII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Char[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>char</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>char</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Character#compare(char, char)</c>, at a relative
            index within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(char[], int, int, char[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(char[], int, int, char[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(char[],%20int,%20int,%20char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(char[], int, int, char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Double(), aFromIndex As Integer, aToIndex As Integer, b As Double(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;double&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;double&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float64[] a, int32 aFromIndex, int32 aToIndex, float64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : double[] * int * int * double[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([DII[DII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([DII[DII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Double[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>double</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>double</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Double#compare(double, double)</c>, at a relative
            index within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(double[], int, int, double[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(double[], int, int, double[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(double[],%20int,%20int,%20double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(double[], int, int, double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Short(), aFromIndex As Integer, aToIndex As Integer, b As Short(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;short&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;short&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int16[] a, int32 aFromIndex, int32 aToIndex, int16[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int16[],System.Int32,System.Int32,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : int16[] * int * int * int16[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([SII[SII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([SII[SII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>short</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>short</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Short#compare(short, short)</c>, at a relative
            index within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(short[], int, int, short[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(short[], int, int, short[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(short[],%20int,%20int,%20short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(short[], int, int, short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Integer(), aFromIndex As Integer, aToIndex As Integer, b As Integer(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;int&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;int&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int32[] a, int32 aFromIndex, int32 aToIndex, int32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : int[] * int * int * int[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([III[III)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([III[III)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>int</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>int</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Integer#compare(int, int)</c>, at a relative index
            within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(int[], int, int, int[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(int[], int, int, int[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(int[],%20int,%20int,%20int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(int[], int, int, int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Long(), aFromIndex As Integer, aToIndex As Integer, b As Long(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;long&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;long&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(int64[] a, int32 aFromIndex, int32 aToIndex, int64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Int64[],System.Int32,System.Int32,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : int64[] * int * int * int64[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([JII[JII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([JII[JII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int64[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>long</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>long</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Long#compare(long, long)</c>, at a relative index
            within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(long[], int, int, long[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(long[], int, int, long[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(long[],%20int,%20int,%20long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(long[], int, int, long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Single(), aFromIndex As Integer, aToIndex As Integer, b As Single(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;float&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;float&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Compare (float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(float32[] a, int32 aFromIndex, int32 aToIndex, float32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Compare : single[] * int * int * single[] * int * int -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([FII[FII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([FII[FII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Single[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>float</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>float</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Float#compare(float, float)</c>, at a relative
            index within the respective arrays that is the length of the prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(float[], int, int, float[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>The comparison is consistent with
            <c>#equals(float[], int, int, float[], int, int) equals</c>, more
            specifically the following holds for arrays <c>a</c> and <c>b</c> with
            specified ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively:</para>
          <code lang="text/java">{@code
                Arrays.equals(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) ==
                    (Arrays.compare(a, aFromIndex, aToIndex, b, bFromIndex, bToIndex) == 0)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(float[],%20int,%20int,%20float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(float[], int, int, float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer, cmp As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static int Compare (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Compare(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Compare : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.Compare (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compare", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compare", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Compares two <c>Object</c> arrays lexicographically over the specified
            ranges.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>Object</c> arrays lexicographically over the specified
            ranges.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing with the
            specified comparator two elements at a relative index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(Object[], int, int, Object[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compare(T[],%20int,%20int,%20T[],%20int,%20int,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compare(T[], int, int, T[], int, int, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Byte(), b As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;System::Byte&gt; ^ a, cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (byte[]? a, byte[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(unsigned int8[] a, unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : byte[] * byte[] -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([B[B)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([B[B)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>byte</c> arrays lexicographically, numerically treating
            elements as unsigned.</summary>
        <returns>the value <c>0</c> if the first and second array are
                    equal and contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>byte</c> arrays lexicographically, numerically treating
            elements as unsigned.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Byte#compareUnsigned(byte, byte)</c>, at an index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(byte[], byte[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(byte[],%20byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Short(), b As Short()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;short&gt; ^ a, cli::array &lt;short&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (short[]? a, short[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int16[] a, int16[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int16[],System.Int16[])" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int16[] * int16[] -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([S[S)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([S[S)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="b" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>short</c> arrays lexicographically, numerically treating
            elements as unsigned.</summary>
        <returns>the value <c>0</c> if the first and second array are
                    equal and contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>short</c> arrays lexicographically, numerically treating
            elements as unsigned.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Short#compareUnsigned(short, short)</c>, at an index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(short[], short[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(short[],%20short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(short[], short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Integer(), b As Integer()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;int&gt; ^ a, cli::array &lt;int&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (int[]? a, int[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int32[] a, int32[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int[] * int[] -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([I[I)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([I[I)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="b" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>int</c> arrays lexicographically, numerically treating
            elements as unsigned.</summary>
        <returns>the value <c>0</c> if the first and second array are
                    equal and contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>int</c> arrays lexicographically, numerically treating
            elements as unsigned.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Integer#compareUnsigned(int, int)</c>, at an index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(int[], int[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(int[],%20int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Long(), b As Long()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;long&gt; ^ a, cli::array &lt;long&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (long[]? a, long[]? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int64[] a, int64[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int64[],System.Int64[])" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int64[] * int64[] -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([J[J)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([J[J)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="b" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="b">the second array to compare</param>
        <summary>Compares two <c>long</c> arrays lexicographically, numerically treating
            elements as unsigned.</summary>
        <returns>the value <c>0</c> if the first and second array are
                    equal and contain the same elements in the same order;
                    a value less than <c>0</c> if the first array is
                    lexicographically less than the second array; and
                    a value greater than <c>0</c> if the first array is
                    lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>long</c> arrays lexicographically, numerically treating
            elements as unsigned.</para>
          <para>If the two arrays share a common prefix then the lexicographic
            comparison is the result of comparing two elements, as if by
            <c>Long#compareUnsigned(long, long)</c>, at an index within the
            respective arrays that is the prefix length.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two array lengths.
            (See <c>#mismatch(long[], long[])</c> for the definition of a common
            and proper prefix.)</para>
          <para>A <c>null</c> array reference is considered lexicographically less
            than a non-<c>null</c> array reference.  Two <c>null</c> array
            references are considered equal.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(long[],%20long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(long[], long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Byte(), aFromIndex As Integer, aToIndex As Integer, b As Byte(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;System::Byte&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;System::Byte&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(unsigned int8[] a, int32 aFromIndex, int32 aToIndex, unsigned int8[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : byte[] * int * int * byte[] * int * int -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([BII[BII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([BII[BII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>byte</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>byte</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Byte#compareUnsigned(byte, byte)</c>, at a
            relative index within the respective arrays that is the length of the
            prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(byte[], int, int, byte[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(byte[],%20int,%20int,%20byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(byte[], int, int, byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Short(), aFromIndex As Integer, aToIndex As Integer, b As Short(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;short&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;short&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int16[] a, int32 aFromIndex, int32 aToIndex, int16[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int16[],System.Int32,System.Int32,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int16[] * int * int * int16[] * int * int -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([SII[SII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([SII[SII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>short</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>short</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Short#compareUnsigned(short, short)</c>, at a
            relative index within the respective arrays that is the length of the
            prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(short[], int, int, short[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(short[],%20int,%20int,%20short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(short[], int, int, short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Integer(), aFromIndex As Integer, aToIndex As Integer, b As Integer(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;int&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;int&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int32[] a, int32 aFromIndex, int32 aToIndex, int32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int[] * int * int * int[] * int * int -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([III[III)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([III[III)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>int</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>int</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Integer#compareUnsigned(int, int)</c>, at a
            relative index within the respective arrays that is the length of the
            prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(int[], int, int, int[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(int[],%20int,%20int,%20int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(int[], int, int, int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareUnsigned">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareUnsigned (a As Long(), aFromIndex As Integer, aToIndex As Integer, b As Long(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareUnsigned(cli::array &lt;long&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;long&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int CompareUnsigned (long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareUnsigned(int64[] a, int32 aFromIndex, int32 aToIndex, int64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CompareUnsigned(System.Int64[],System.Int32,System.Int32,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CompareUnsigned : int64[] * int * int * int64[] * int * int -&gt; int" Usage="Java.Util.Arrays.CompareUnsigned (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareUnsigned", "([JII[JII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareUnsigned", "([JII[JII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int64[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to compare</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be compared</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be compared</param>
        <param name="b">the second array to compare</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be compared</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be compared</param>
        <summary>Compares two <c>long</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</summary>
        <returns>the value <c>0</c> if, over the specified ranges, the first and
                    second array are equal and contain the same elements in the same
                    order;
                    a value less than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically less than the second array; and
                    a value greater than <c>0</c> if, over the specified ranges, the
                    first array is lexicographically greater than the second array</returns>
        <remarks>
          <para>Compares two <c>long</c> arrays lexicographically over the specified
            ranges, numerically treating elements as unsigned.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the lexicographic comparison is the result of comparing two
            elements, as if by <c>Long#compareUnsigned(long, long)</c>, at a
            relative index within the respective arrays that is the length of the
            prefix.
            Otherwise, one array is a proper prefix of the other and, lexicographic
            comparison is the result of comparing the two range lengths.
            (See <c>#mismatch(long[], int, int, long[], int, int)</c> for the
            definition of a common and proper prefix.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#compareUnsigned(long[],%20int,%20int,%20long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.compareUnsigned(long[], int, int, long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Object(), newLength As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Java::Lang::Object ^&gt; ^ CopyOf(cli::array &lt;Java::Lang::Object ^&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Object[] CopyOf (Java.Lang.Object[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object[] CopyOf(class Java.Lang.Object[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(Java.Lang.Object[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : Java.Lang.Object[] * int -&gt; Java.Lang.Object[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([Ljava/lang/Object;I)[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([Ljava/lang/Object;I)[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="Java.Lang.Object[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with nulls (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with nulls
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with nulls (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>null</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.
            The resulting array is of exactly the same class as the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(T[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(T[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Boolean(), newLength As Integer) As Boolean()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;bool&gt; ^ CopyOf(cli::array &lt;bool&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static bool[] CopyOf (bool[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] CopyOf(bool[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Boolean[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : bool[] * int -&gt; bool[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([ZI)[Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([ZI)[Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Boolean[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with <c>false</c> (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with false elements
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with <c>false</c> (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>false</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(boolean[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(boolean[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Byte(), newLength As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ CopyOf(cli::array &lt;System::Byte&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static byte[] CopyOf (byte[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] CopyOf(unsigned int8[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : byte[] * int -&gt; byte[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([BI)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([BI)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Byte[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>(byte)0</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(byte[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Char(), newLength As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ CopyOf(cli::array &lt;char&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static char[] CopyOf (char[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] CopyOf(char[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : char[] * int -&gt; char[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([CI)[C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([CI)[C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Char[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with null characters (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with null characters
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with null characters (if necessary)
            so the copy has the specified length.  For all indices that are valid
            in both the original array and the copy, the two arrays will contain
            identical values.  For any indices that are valid in the copy but not
            the original, the copy will contain <c>'\u005cu0000'</c>.  Such indices
            will exist if and only if the specified length is greater than that of
            the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(char[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Double(), newLength As Integer) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;double&gt; ^ CopyOf(cli::array &lt;double&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static double[] CopyOf (double[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] CopyOf(float64[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Double[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : double[] * int -&gt; double[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([DI)[D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([DI)[D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Double[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>0d</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(double[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(double[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Short(), newLength As Integer) As Short()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;short&gt; ^ CopyOf(cli::array &lt;short&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static short[] CopyOf (short[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16[] CopyOf(int16[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Int16[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : int16[] * int -&gt; int16[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([SI)[S", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([SI)[S", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int16[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>(short)0</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(short[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(short[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Integer(), newLength As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ CopyOf(cli::array &lt;int&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static int[] CopyOf (int[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] CopyOf(int32[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Int32[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : int[] * int -&gt; int[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([II)[I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([II)[I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int32[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>0</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(int[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(int[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Long(), newLength As Integer) As Long()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;long&gt; ^ CopyOf(cli::array &lt;long&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static long[] CopyOf (long[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64[] CopyOf(int64[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Int64[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : int64[] * int -&gt; int64[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([JI)[J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([JI)[J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int64[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>0L</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(long[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(long[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Single(), newLength As Integer) As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;float&gt; ^ CopyOf(cli::array &lt;float&gt; ^ original, int newLength);" />
      <MemberSignature Language="C#" Value="public static float[] CopyOf (float[] original, int newLength);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] CopyOf(float32[] original, int32 newLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(System.Single[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOf : single[] * int -&gt; single[]" Usage="Java.Util.Arrays.CopyOf (original, newLength)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([FI)[F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([FI)[F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Single[]" />
        <Parameter Name="newLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with zeros
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with zeros (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>0f</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(float[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(float[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.NegativeArraySizeException">if <c>newLength </c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOf">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOf (original As Object(), newLength As Integer, newType As Class) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Java::Lang::Object ^&gt; ^ CopyOf(cli::array &lt;Java::Lang::Object ^&gt; ^ original, int newLength, Java::Lang::Class ^ newType);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Object[] CopyOf (Java.Lang.Object[] original, int newLength, Java.Lang.Class newType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object[] CopyOf(class Java.Lang.Object[] original, int32 newLength, class Java.Lang.Class newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOf(Java.Lang.Object[],System.Int32,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member CopyOf : Java.Lang.Object[] * int * Java.Lang.Class -&gt; Java.Lang.Object[]" Usage="Java.Util.Arrays.CopyOf (original, newLength, newType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOf", "([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOf", "([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T", "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T", "U" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="Java.Lang.Object[]" />
        <Parameter Name="newLength" Type="System.Int32" />
        <Parameter Name="newType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="&lt;U&gt;&lt;U&gt;">the class of the objects in the original array</param>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the returned array</param>
        <param name="original">the array to be copied</param>
        <param name="newLength">the length of the copy to be returned</param>
        <param name="newType">the class of the copy to be returned</param>
        <summary>Copies the specified array, truncating or padding with nulls (if necessary)
            so the copy has the specified length.</summary>
        <returns>a copy of the original array, truncated or padded with nulls
                to obtain the specified length</returns>
        <remarks>
          <para>Copies the specified array, truncating or padding with nulls (if necessary)
            so the copy has the specified length.  For all indices that are
            valid in both the original array and the copy, the two arrays will
            contain identical values.  For any indices that are valid in the
            copy but not the original, the copy will contain <c>null</c>.
            Such indices will exist if and only if the specified length
            is greater than that of the original array.
            The resulting array is of the class <c>newType</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOf(U[],%20int,%20java.lang.Class%3C?%20extends%20T[]%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOf(U[], int, java.lang.Class&lt;? extends T[]&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Object(), from As Integer, to As Integer) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Java::Lang::Object ^&gt; ^ CopyOfRange(cli::array &lt;Java::Lang::Object ^&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Object[] CopyOfRange (Java.Lang.Object[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object[] CopyOfRange(class Java.Lang.Object[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : Java.Lang.Object[] * int * int -&gt; Java.Lang.Object[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([Ljava/lang/Object;II)[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([Ljava/lang/Object;II)[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="Java.Lang.Object[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with nulls to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>null</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>The resulting array is of exactly the same class as the original array.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(T[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(T[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Boolean(), from As Integer, to As Integer) As Boolean()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;bool&gt; ^ CopyOfRange(cli::array &lt;bool&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static bool[] CopyOfRange (bool[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] CopyOfRange(bool[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Boolean[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : bool[] * int * int -&gt; bool[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([ZII)[Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([ZII)[Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Boolean[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with false elements to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>false</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(boolean[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(boolean[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Byte(), from As Integer, to As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ CopyOfRange(cli::array &lt;System::Byte&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static byte[] CopyOfRange (byte[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] CopyOfRange(unsigned int8[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : byte[] * int * int -&gt; byte[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([BII)[B", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([BII)[B", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Byte[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>(byte)0</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Char(), from As Integer, to As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;char&gt; ^ CopyOfRange(cli::array &lt;char&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static char[] CopyOfRange (char[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig char[] CopyOfRange(char[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : char[] * int * int -&gt; char[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([CII)[C", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([CII)[C", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Char[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with null characters to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>'\u005cu0000'</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Double(), from As Integer, to As Integer) As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;double&gt; ^ CopyOfRange(cli::array &lt;double&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static double[] CopyOfRange (double[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64[] CopyOfRange(float64[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : double[] * int * int -&gt; double[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([DII)[D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([DII)[D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Double[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>0d</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Short(), from As Integer, to As Integer) As Short()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;short&gt; ^ CopyOfRange(cli::array &lt;short&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static short[] CopyOfRange (short[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int16[] CopyOfRange(int16[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : int16[] * int * int -&gt; int16[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([SII)[S", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([SII)[S", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int16[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>(short)0</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Integer(), from As Integer, to As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;int&gt; ^ CopyOfRange(cli::array &lt;int&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static int[] CopyOfRange (int[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] CopyOfRange(int32[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : int[] * int * int -&gt; int[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([III)[I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([III)[I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int32[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>0</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Long(), from As Integer, to As Integer) As Long()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;long&gt; ^ CopyOfRange(cli::array &lt;long&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static long[] CopyOfRange (long[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64[] CopyOfRange(int64[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : int64[] * int * int -&gt; int64[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([JII)[J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([JII)[J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Int64[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>0L</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Single(), from As Integer, to As Integer) As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;float&gt; ^ CopyOfRange(cli::array &lt;float&gt; ^ original, int from, int to);" />
      <MemberSignature Language="C#" Value="public static float[] CopyOfRange (float[] original, int from, int to);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32[] CopyOfRange(float32[] original, int32 from, int32 to) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : single[] * int * int -&gt; single[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([FII)[F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([FII)[F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Single[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with zeros to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>0f</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start  original.length</c></exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c></exception>
        <exception cref="T:Java.Lang.NullPointerException">if <c>original == null</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyOfRange">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CopyOfRange (original As Object(), from As Integer, to As Integer, newType As Class) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Java::Lang::Object ^&gt; ^ CopyOfRange(cli::array &lt;Java::Lang::Object ^&gt; ^ original, int from, int to, Java::Lang::Class ^ newType);" />
      <MemberSignature Language="C#" Value="public static Java.Lang.Object[] CopyOfRange (Java.Lang.Object[] original, int from, int to, Java.Lang.Class newType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Lang.Object[] CopyOfRange(class Java.Lang.Object[] original, int32 from, int32 to, class Java.Lang.Class newType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.CopyOfRange(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member CopyOfRange : Java.Lang.Object[] * int * int * Java.Lang.Class -&gt; Java.Lang.Object[]" Usage="Java.Util.Arrays.CopyOfRange (original, from, to, newType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyOfRange", "([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyOfRange", "([Ljava/lang/Object;IILjava/lang/Class;)[Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T", "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T", "U" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="Java.Lang.Object[]" />
        <Parameter Name="from" Type="System.Int32" />
        <Parameter Name="to" Type="System.Int32" />
        <Parameter Name="newType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="&lt;U&gt;&lt;U&gt;">the class of the objects in the original array</param>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the returned array</param>
        <param name="original">the array from which a range is to be copied</param>
        <param name="from">the initial index of the range to be copied, inclusive</param>
        <param name="to">the final index of the range to be copied, exclusive.
                (This index may lie outside the array.)</param>
        <param name="newType">the class of the copy to be returned</param>
        <summary>Copies the specified range of the specified array into a new array.</summary>
        <returns>a new array containing the specified range from the original array,
                truncated or padded with nulls to obtain the required length</returns>
        <remarks>
          <para>Copies the specified range of the specified array into a new array.
            The initial index of the range (<c>from</c>) must lie between zero
            and <c>original.length</c>, inclusive.  The value at
            <c>original[from]</c> is placed into the initial element of the copy
            (unless <c>from == original.length</c> or <c>from == to</c>).
            Values from subsequent elements in the original array are placed into
            subsequent elements in the copy.  The final index of the range
            (<c>to</c>), which must be greater than or equal to <c>from</c>,
            may be greater than <c>original.length</c>, in which case
            <c>null</c> is placed in all elements of the copy whose index is
            greater than or equal to <c>original.length - from</c>.  The length
            of the returned array will be <c>to - from</c>.
            The resulting array is of the class <c>newType</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#copyOfRange(U[],%20int,%20int,%20java.lang.Class%3C?%20extends%20T[]%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.copyOfRange(U[], int, int, java.lang.Class&lt;? extends T[]&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepEquals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeepEquals (a1 As Object(), a2 As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DeepEquals(cli::array &lt;Java::Lang::Object ^&gt; ^ a1, cli::array &lt;Java::Lang::Object ^&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool DeepEquals (Java.Lang.Object[]? a1, Java.Lang.Object[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeepEquals(class Java.Lang.Object[] a1, class Java.Lang.Object[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.DeepEquals(Java.Lang.Object[],Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member DeepEquals : Java.Lang.Object[] * Java.Lang.Object[] -&gt; bool" Usage="Java.Util.Arrays.DeepEquals (a1, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deepEquals", "([Ljava/lang/Object;[Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deepEquals", "([Ljava/lang/Object;[Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a1" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="a2" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a1">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays are <i>deeply
            equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays are <i>deeply
            equal</i> to one another.  Unlike the <c>#equals(Object[],Object[])</c>
            method, this method is appropriate for use with nested arrays of
            arbitrary depth.</para>
          <para>Two array references are considered deeply equal if both
            are <c>null</c>, or if they refer to arrays that contain the same
            number of elements and all corresponding pairs of elements in the two
            arrays are deeply equal.</para>
          <para>Two possibly <c>null</c> elements <c>e1</c> and <c>e2</c> are
            deeply equal if any of the following conditions hold:
            &lt;ul&gt;
               &lt;li&gt; <c>e1</c> and <c>e2</c> are both arrays of object reference
                    types, and <c>Arrays.deepEquals(e1, e2) would return true</c>&lt;li&gt; <c>e1</c> and <c>e2</c> are arrays of the same primitive
                    type, and the appropriate overloading of
                    <c>Arrays.equals(e1, e2)</c> would return true.
               &lt;li&gt; <c>e1 == e2</c>&lt;li&gt; <c>e1.equals(e2)</c> would return true.
            &lt;/ul&gt;
            Note that this definition permits <c>null</c> elements at any depth.</para>
          <para>If either of the specified arrays contain themselves as elements
            either directly or indirectly through one or more levels of arrays,
            the behavior of this method is undefined.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#deepEquals(java.lang.Object[],%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.deepEquals(java.lang.Object[], java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeepHashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeepHashCode (a As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int DeepHashCode(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int DeepHashCode (Java.Lang.Object[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 DeepHashCode(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.DeepHashCode(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member DeepHashCode : Java.Lang.Object[] -&gt; int" Usage="Java.Util.Arrays.DeepHashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deepHashCode", "([Ljava/lang/Object;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deepHashCode", "([Ljava/lang/Object;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose deep-content-based hash code to compute</param>
        <summary>Returns a hash code based on the "deep contents" of the specified
            array.</summary>
        <returns>a deep-content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the "deep contents" of the specified
            array.  If the array contains other arrays as elements, the
            hash code is based on their contents and so on, ad infinitum.
            It is therefore unacceptable to invoke this method on an array that
            contains itself as an element, either directly or indirectly through
            one or more levels of arrays.  The behavior of such an invocation is
            undefined.</para>
          <para>For any two arrays <c>a</c> and <c>b</c> such that
            <c>Arrays.deepEquals(a, b)</c>, it is also the case that
            <c>Arrays.deepHashCode(a) == Arrays.deepHashCode(b)</c>.</para>
          <para>The computation of the value returned by this method is similar to
            that of the value returned by <c>List#hashCode()</c> on a list
            containing the same elements as <c>a</c> in the same order, with one
            difference: If an element <c>e</c> of <c>a</c> is itself an array,
            its hash code is computed not by calling <c>e.hashCode()</c>, but as
            by calling the appropriate overloading of <c>Arrays.hashCode(e)</c>
            if <c>e</c> is an array of a primitive type, or as by calling
            <c>Arrays.deepHashCode(e)</c> recursively if <c>e</c> is an array
            of a reference type.  If <c>a</c> is <c>null</c>, this method
            returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#deepHashCode(java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.deepHashCode(java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeepToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeepToString (a As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ DeepToString(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string DeepToString (Java.Lang.Object[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string DeepToString(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.DeepToString(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member DeepToString : Java.Lang.Object[] -&gt; string" Usage="Java.Util.Arrays.DeepToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deepToString", "([Ljava/lang/Object;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deepToString", "([Ljava/lang/Object;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the "deep contents" of the specified
            array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the "deep contents" of the specified
            array.  If the array contains other arrays as elements, the string
            representation contains their contents and so on.  This method is
            designed for converting multidimensional arrays to strings.</para>
          <para>The string representation consists of a list of the array's
            elements, enclosed in square brackets (<c>"[]"</c>).  Adjacent
            elements are separated by the characters <c>", "</c> (a comma
            followed by a space).  Elements are converted to strings as by
            <c>String.valueOf(Object)</c>, unless they are themselves
            arrays.</para>
          <para>If an element <c>e</c> is an array of a primitive type, it is
            converted to a string as by invoking the appropriate overloading of
            <c>Arrays.toString(e)</c>.  If an element <c>e</c> is an array of a
            reference type, it is converted to a string as by invoking
            this method recursively.</para>
          <para>To avoid infinite recursion, if the specified array contains itself
            as an element, or contains an indirect reference to itself through one
            or more levels of arrays, the self-reference is converted to the string
            <c>"[...]"</c>.  For example, an array containing only a reference
            to itself would be rendered as <c>"[[...]]"</c>.</para>
          <para>This method returns <c>"null"</c> if the specified array
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#deepToString(java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.deepToString(java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Object(), a2 As Object()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (Java.Lang.Object[]? a, Java.Lang.Object[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class Java.Lang.Object[] a, class Java.Lang.Object[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(Java.Lang.Object[],Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member Equals : Java.Lang.Object[] * Java.Lang.Object[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([Ljava/lang/Object;[Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([Ljava/lang/Object;[Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="a2" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of Objects are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of Objects are
            <i>equal</i> to one another.  The two arrays are considered equal if
            both arrays contain the same number of elements, and all corresponding
            pairs of elements in the two arrays are equal.  Two objects <c>e1</c>
            and <c>e2</c> are considered <i>equal</i> if
            <c>Objects.equals(e1, e2)</c>.
            In other words, the two arrays are equal if
            they contain the same elements in the same order.  Also, two array
            references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(java.lang.Object[],%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(java.lang.Object[], java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Boolean(), a2 As Boolean()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;bool&gt; ^ a, cli::array &lt;bool&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (bool[]? a, bool[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(bool[] a, bool[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Boolean[],System.Boolean[])" />
      <MemberSignature Language="F#" Value="static member Equals : bool[] * bool[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([Z[Z)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([Z[Z)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="a2" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of booleans are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of booleans are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(boolean[],%20boolean[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(boolean[], boolean[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Byte(), a2 As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;System::Byte&gt; ^ a, cli::array &lt;System::Byte&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (byte[]? a, byte[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(unsigned int8[] a, unsigned int8[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="static member Equals : byte[] * byte[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([B[B)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([B[B)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="a2" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of bytes are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of bytes are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(byte[],%20byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Char(), a2 As Char()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;char&gt; ^ a, cli::array &lt;char&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (char[]? a, char[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(char[] a, char[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Char[],System.Char[])" />
      <MemberSignature Language="F#" Value="static member Equals : char[] * char[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([C[C)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([C[C)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="a2" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of chars are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of chars are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(char[],%20char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(char[], char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Double(), a2 As Double()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;double&gt; ^ a, cli::array &lt;double&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (double[]? a, double[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(float64[] a, float64[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Double[],System.Double[])" />
      <MemberSignature Language="F#" Value="static member Equals : double[] * double[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([D[D)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([D[D)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="a2" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of doubles are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of doubles are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.
            
            Two doubles <c>d1</c> and <c>d2</c> are considered equal if:</para>
          <code lang="text/java">{@code new Double(d1).equals(new Double(d2))}</code>
          <para>(Unlike the <c>==</c> operator, this method considers
            <c>NaN</c> equal to itself, and 0.0d unequal to -0.0d.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(double[],%20double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(double[], double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Short(), a2 As Short()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;short&gt; ^ a, cli::array &lt;short&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (short[]? a, short[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int16[] a, int16[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int16[],System.Int16[])" />
      <MemberSignature Language="F#" Value="static member Equals : int16[] * int16[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([S[S)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([S[S)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="a2" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of shorts are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of shorts are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(short[],%20short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(short[], short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Integer(), a2 As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;int&gt; ^ a, cli::array &lt;int&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (int[]? a, int[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int32[] a, int32[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="static member Equals : int[] * int[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([I[I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([I[I)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="a2" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of ints are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of ints are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(int[],%20int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Long(), a2 As Long()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;long&gt; ^ a, cli::array &lt;long&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (long[]? a, long[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int64[] a, int64[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int64[],System.Int64[])" />
      <MemberSignature Language="F#" Value="static member Equals : int64[] * int64[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([J[J)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([J[J)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="a2" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of longs are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of longs are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(long[],%20long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(long[], long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Single(), a2 As Single()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;float&gt; ^ a, cli::array &lt;float&gt; ^ a2);" />
      <MemberSignature Language="C#" Value="public static bool Equals (float[]? a, float[]? a2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(float32[] a, float32[] a2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member Equals : single[] * single[] -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([F[F)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([F[F)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="a2" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <summary>Returns <c>true</c> if the two specified arrays of floats are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of floats are
            <i>equal</i> to one another.  Two arrays are considered equal if both
            arrays contain the same number of elements, and all corresponding pairs
            of elements in the two arrays are equal.  In other words, two arrays
            are equal if they contain the same elements in the same order.  Also,
            two array references are considered equal if both are <c>null</c>.
            
            Two floats <c>f1</c> and <c>f2</c> are considered equal if:</para>
          <code lang="text/java">{@code new Float(f1).equals(new Float(f2))}</code>
          <para>(Unlike the <c>==</c> operator, this method considers
            <c>NaN</c> equal to itself, and 0.0f unequal to -0.0f.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(float[],%20float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Object(), a2 As Object(), cmp As IComparator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ a2, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static bool Equals (Java.Lang.Object[]? a, Java.Lang.Object[]? a2, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class Java.Lang.Object[] a, class Java.Lang.Object[] a2, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(Java.Lang.Object[],Java.Lang.Object[],Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Equals : Java.Lang.Object[] * Java.Lang.Object[] * Java.Util.IComparator -&gt; bool" Usage="Java.Util.Arrays.Equals (a, a2, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="a2" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">one array to be tested for equality</param>
        <param name="a2">the other array to be tested for equality</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Returns <c>true</c> if the two specified arrays of Objects are
            <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays are equal</returns>
        <remarks>
          <para>Returns <c>true</c> if the two specified arrays of Objects are
            <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if both arrays contain the same number
            of elements, and all corresponding pairs of elements in the two arrays
            are equal.  In other words, the two arrays are equal if they contain the
            same elements in the same order.  Also, two array references are
            considered equal if both are <c>null</c>.</para>
          <para>Two objects <c>e1</c> and <c>e2</c> are considered <i>equal</i> if,
            given the specified comparator, <c>cmp.compare(e1, e2) == 0</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(T[],%20T[],%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(T[], T[], java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([Ljava/lang/Object;II[Ljava/lang/Object;II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([Ljava/lang/Object;II[Ljava/lang/Object;II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of Objects, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of Objects, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Two objects <c>e1</c> and <c>e2</c> are considered <i>equal</i> if
            <c>Objects.equals(e1, e2)</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(java.lang.Object[],%20int,%20int,%20java.lang.Object[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(java.lang.Object[], int, int, java.lang.Object[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Boolean(), aFromIndex As Integer, aToIndex As Integer, b As Boolean(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;bool&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;bool&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (bool[] a, int aFromIndex, int aToIndex, bool[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(bool[] a, int32 aFromIndex, int32 aToIndex, bool[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Boolean[],System.Int32,System.Int32,System.Boolean[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : bool[] * int * int * bool[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([ZII[ZII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([ZII[ZII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Boolean[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of booleans, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of booleans, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(boolean[],%20int,%20int,%20boolean[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(boolean[], int, int, boolean[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Byte(), aFromIndex As Integer, aToIndex As Integer, b As Byte(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;System::Byte&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;System::Byte&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(unsigned int8[] a, int32 aFromIndex, int32 aToIndex, unsigned int8[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : byte[] * int * int * byte[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([BII[BII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([BII[BII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of bytes, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of bytes, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(byte[],%20int,%20int,%20byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(byte[], int, int, byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Char(), aFromIndex As Integer, aToIndex As Integer, b As Char(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;char&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;char&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(char[] a, int32 aFromIndex, int32 aToIndex, char[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Char[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : char[] * int * int * char[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([CII[CII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([CII[CII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Char[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of chars, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of chars, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(char[],%20int,%20int,%20char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(char[], int, int, char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Double(), aFromIndex As Integer, aToIndex As Integer, b As Double(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;double&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;double&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(float64[] a, int32 aFromIndex, int32 aToIndex, float64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : double[] * int * int * double[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([DII[DII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([DII[DII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Double[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of doubles, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of doubles, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Two doubles <c>d1</c> and <c>d2</c> are considered equal if:</para>
          <code lang="text/java">{@code new Double(d1).equals(new Double(d2))}</code>
          <para>(Unlike the <c>==</c> operator, this method considers
            <c>NaN</c> equal to itself, and 0.0d unequal to -0.0d.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(double[],%20int,%20int,%20double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(double[], int, int, double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Short(), aFromIndex As Integer, aToIndex As Integer, b As Short(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;short&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;short&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int16[] a, int32 aFromIndex, int32 aToIndex, int16[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int16[],System.Int32,System.Int32,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : int16[] * int * int * int16[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([SII[SII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([SII[SII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of shorts, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of shorts, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(short[],%20int,%20int,%20short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(short[], int, int, short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Integer(), aFromIndex As Integer, aToIndex As Integer, b As Integer(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;int&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;int&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int32[] a, int32 aFromIndex, int32 aToIndex, int32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : int[] * int * int * int[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([III[III)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([III[III)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of ints, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of ints, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(int[],%20int,%20int,%20int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(int[], int, int, int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Long(), aFromIndex As Integer, aToIndex As Integer, b As Long(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;long&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;long&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(int64[] a, int32 aFromIndex, int32 aToIndex, int64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Int64[],System.Int32,System.Int32,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : int64[] * int * int * int64[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([JII[JII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([JII[JII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int64[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of longs, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of longs, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(long[],%20int,%20int,%20long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(long[], int, int, long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Single(), aFromIndex As Integer, aToIndex As Integer, b As Single(), bFromIndex As Integer, bToIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;float&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;float&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static bool Equals (float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(float32[] a, int32 aFromIndex, int32 aToIndex, float32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Equals : single[] * int * int * single[] * int * int -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([FII[FII)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([FII[FII)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Single[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Returns true if the two specified arrays of floats, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of floats, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Two floats <c>f1</c> and <c>f2</c> are considered equal if:</para>
          <code lang="text/java">{@code new Float(f1).equals(new Float(f2))}</code>
          <para>(Unlike the <c>==</c> operator, this method considers
            <c>NaN</c> equal to itself, and 0.0f unequal to -0.0f.)</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(float[],%20int,%20int,%20float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(float[], int, int, float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer, cmp As IComparator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static bool Equals (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Equals(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Equals : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int * Java.Util.IComparator -&gt; bool" Usage="Java.Util.Arrays.Equals (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for equality</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for equality</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Returns true if the two specified arrays of Objects, over the specified
            ranges, are <i>equal</i> to one another.</summary>
        <returns>
          <c>true</c> if the two arrays, over the specified ranges, are
                    equal</returns>
        <remarks>
          <para>Returns true if the two specified arrays of Objects, over the specified
            ranges, are <i>equal</i> to one another.</para>
          <para>Two arrays are considered equal if the number of elements covered by
            each range is the same, and all corresponding pairs of elements over the
            specified ranges in the two arrays are equal.  In other words, two arrays
            are equal if they contain, over the specified ranges, the same elements
            in the same order.</para>
          <para>Two objects <c>e1</c> and <c>e2</c> are considered <i>equal</i> if,
            given the specified comparator, <c>cmp.compare(e1, e2) == 0</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#equals(T[],%20int,%20int,%20T[],%20int,%20int,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.equals(T[], int, int, T[], int, int, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Object(), val As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;Java::Lang::Object ^&gt; ^ a, Java::Lang::Object ^ val);" />
      <MemberSignature Language="C#" Value="public static void Fill (Java.Lang.Object[] a, Java.Lang.Object? val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(class Java.Lang.Object[] a, class Java.Lang.Object val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(Java.Lang.Object[],Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member Fill : Java.Lang.Object[] * Java.Lang.Object -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([Ljava/lang/Object;Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([Ljava/lang/Object;Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="val" Type="Java.Lang.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified Object reference to each element of the specified
            array of Objects.</summary>
        <remarks>
          <para>Assigns the specified Object reference to each element of the specified
            array of Objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(java.lang.Object[],%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(java.lang.Object[], java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Boolean(), val As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;bool&gt; ^ a, bool val);" />
      <MemberSignature Language="C#" Value="public static void Fill (bool[] a, bool val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(bool[] a, bool val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Boolean[],System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Fill : bool[] * bool -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([ZZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([ZZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="val" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified boolean value to each element of the specified
            array of booleans.</summary>
        <remarks>
          <para>Assigns the specified boolean value to each element of the specified
            array of booleans.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(boolean[],%20boolean)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(boolean[], boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Byte(), val As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;System::Byte&gt; ^ a, System::SByte val);" />
      <MemberSignature Language="C#" Value="public static void Fill (byte[] a, sbyte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(unsigned int8[] a, int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Byte[],System.SByte)" />
      <MemberSignature Language="F#" Value="static member Fill : byte[] * sbyte -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([BB)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([BB)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="val" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified byte value to each element of the specified array
            of bytes.</summary>
        <remarks>
          <para>Assigns the specified byte value to each element of the specified array
            of bytes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(byte[],%20byte)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(byte[], byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Char(), val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;char&gt; ^ a, char val);" />
      <MemberSignature Language="C#" Value="public static void Fill (char[] a, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(char[] a, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Char[],System.Char)" />
      <MemberSignature Language="F#" Value="static member Fill : char[] * char -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([CC)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([CC)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified char value to each element of the specified array
            of chars.</summary>
        <remarks>
          <para>Assigns the specified char value to each element of the specified array
            of chars.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(char[],%20char)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(char[], char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Double(), val As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;double&gt; ^ a, double val);" />
      <MemberSignature Language="C#" Value="public static void Fill (double[] a, double val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(float64[] a, float64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Double[],System.Double)" />
      <MemberSignature Language="F#" Value="static member Fill : double[] * double -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([DD)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([DD)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified double value to each element of the specified
            array of doubles.</summary>
        <remarks>
          <para>Assigns the specified double value to each element of the specified
            array of doubles.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(double[],%20double)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(double[], double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Short(), val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;short&gt; ^ a, short val);" />
      <MemberSignature Language="C#" Value="public static void Fill (short[] a, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int16[] a, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int16[],System.Int16)" />
      <MemberSignature Language="F#" Value="static member Fill : int16[] * int16 -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([SS)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([SS)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified short value to each element of the specified array
            of shorts.</summary>
        <remarks>
          <para>Assigns the specified short value to each element of the specified array
            of shorts.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(short[],%20short)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(short[], short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Integer(), val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;int&gt; ^ a, int val);" />
      <MemberSignature Language="C#" Value="public static void Fill (int[] a, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int32[] a, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int32[],System.Int32)" />
      <MemberSignature Language="F#" Value="static member Fill : int[] * int -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified int value to each element of the specified array
            of ints.</summary>
        <remarks>
          <para>Assigns the specified int value to each element of the specified array
            of ints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(int[],%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(int[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Long(), val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;long&gt; ^ a, long val);" />
      <MemberSignature Language="C#" Value="public static void Fill (long[] a, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int64[] a, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int64[],System.Int64)" />
      <MemberSignature Language="F#" Value="static member Fill : int64[] * int64 -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([JJ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([JJ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified long value to each element of the specified array
            of longs.</summary>
        <remarks>
          <para>Assigns the specified long value to each element of the specified array
            of longs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(long[],%20long)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(long[], long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Single(), val As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;float&gt; ^ a, float val);" />
      <MemberSignature Language="C#" Value="public static void Fill (float[] a, float val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(float32[] a, float32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Single[],System.Single)" />
      <MemberSignature Language="F#" Value="static member Fill : single[] * single -&gt; unit" Usage="Java.Util.Arrays.Fill (a, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([FF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([FF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="val" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified float value to each element of the specified array
            of floats.</summary>
        <remarks>
          <para>Assigns the specified float value to each element of the specified array
            of floats.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(float[],%20float)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(float[], float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Object(), fromIndex As Integer, toIndex As Integer, val As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex, Java::Lang::Object ^ val);" />
      <MemberSignature Language="C#" Value="public static void Fill (Java.Lang.Object[] a, int fromIndex, int toIndex, Java.Lang.Object? val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex, class Java.Lang.Object val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member Fill : Java.Lang.Object[] * int * int * Java.Lang.Object -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([Ljava/lang/Object;IILjava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([Ljava/lang/Object;IILjava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="Java.Lang.Object">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified Object reference to each element of the specified
            range of the specified array of Objects.</summary>
        <remarks>
          <para>Assigns the specified Object reference to each element of the specified
            range of the specified array of Objects.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(java.lang.Object[],%20int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(java.lang.Object[], int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Boolean(), fromIndex As Integer, toIndex As Integer, val As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;bool&gt; ^ a, int fromIndex, int toIndex, bool val);" />
      <MemberSignature Language="C#" Value="public static void Fill (bool[] a, int fromIndex, int toIndex, bool val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(bool[] a, int32 fromIndex, int32 toIndex, bool val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Boolean[],System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Fill : bool[] * int * int * bool -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([ZIIZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([ZIIZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified boolean value to each element of the specified
            range of the specified array of booleans.</summary>
        <remarks>
          <para>Assigns the specified boolean value to each element of the specified
            range of the specified array of booleans.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(boolean[],%20int,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(boolean[], int, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Byte(), fromIndex As Integer, toIndex As Integer, val As SByte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;System::Byte&gt; ^ a, int fromIndex, int toIndex, System::SByte val);" />
      <MemberSignature Language="C#" Value="public static void Fill (byte[] a, int fromIndex, int toIndex, sbyte val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(unsigned int8[] a, int32 fromIndex, int32 toIndex, int8 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Byte[],System.Int32,System.Int32,System.SByte)" />
      <MemberSignature Language="F#" Value="static member Fill : byte[] * int * int * sbyte -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([BIIB)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([BIIB)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified byte value to each element of the specified
            range of the specified array of bytes.</summary>
        <remarks>
          <para>Assigns the specified byte value to each element of the specified
            range of the specified array of bytes.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(byte[],%20int,%20int,%20byte)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(byte[], int, int, byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Char(), fromIndex As Integer, toIndex As Integer, val As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;char&gt; ^ a, int fromIndex, int toIndex, char val);" />
      <MemberSignature Language="C#" Value="public static void Fill (char[] a, int fromIndex, int toIndex, char val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(char[] a, int32 fromIndex, int32 toIndex, char val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Char[],System.Int32,System.Int32,System.Char)" />
      <MemberSignature Language="F#" Value="static member Fill : char[] * int * int * char -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([CIIC)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([CIIC)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified char value to each element of the specified
            range of the specified array of chars.</summary>
        <remarks>
          <para>Assigns the specified char value to each element of the specified
            range of the specified array of chars.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(char[],%20int,%20int,%20char)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(char[], int, int, char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Double(), fromIndex As Integer, toIndex As Integer, val As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;double&gt; ^ a, int fromIndex, int toIndex, double val);" />
      <MemberSignature Language="C#" Value="public static void Fill (double[] a, int fromIndex, int toIndex, double val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(float64[] a, int32 fromIndex, int32 toIndex, float64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Double[],System.Int32,System.Int32,System.Double)" />
      <MemberSignature Language="F#" Value="static member Fill : double[] * int * int * double -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([DIID)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([DIID)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified double value to each element of the specified
            range of the specified array of doubles.</summary>
        <remarks>
          <para>Assigns the specified double value to each element of the specified
            range of the specified array of doubles.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(double[],%20int,%20int,%20double)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(double[], int, int, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Short(), fromIndex As Integer, toIndex As Integer, val As Short)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;short&gt; ^ a, int fromIndex, int toIndex, short val);" />
      <MemberSignature Language="C#" Value="public static void Fill (short[] a, int fromIndex, int toIndex, short val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int16[] a, int32 fromIndex, int32 toIndex, int16 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int16[],System.Int32,System.Int32,System.Int16)" />
      <MemberSignature Language="F#" Value="static member Fill : int16[] * int * int * int16 -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([SIIS)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([SIIS)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified short value to each element of the specified
            range of the specified array of shorts.</summary>
        <remarks>
          <para>Assigns the specified short value to each element of the specified
            range of the specified array of shorts.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(short[],%20int,%20int,%20short)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(short[], int, int, short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Integer(), fromIndex As Integer, toIndex As Integer, val As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;int&gt; ^ a, int fromIndex, int toIndex, int val);" />
      <MemberSignature Language="C#" Value="public static void Fill (int[] a, int fromIndex, int toIndex, int val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int32[] a, int32 fromIndex, int32 toIndex, int32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int32[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Fill : int[] * int * int * int -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([IIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([IIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified int value to each element of the specified
            range of the specified array of ints.</summary>
        <remarks>
          <para>Assigns the specified int value to each element of the specified
            range of the specified array of ints.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(int[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(int[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Long(), fromIndex As Integer, toIndex As Integer, val As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;long&gt; ^ a, int fromIndex, int toIndex, long val);" />
      <MemberSignature Language="C#" Value="public static void Fill (long[] a, int fromIndex, int toIndex, long val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(int64[] a, int32 fromIndex, int32 toIndex, int64 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Int64[],System.Int32,System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="static member Fill : int64[] * int * int * int64 -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([JIIJ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([JIIJ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified long value to each element of the specified
            range of the specified array of longs.</summary>
        <remarks>
          <para>Assigns the specified long value to each element of the specified
            range of the specified array of longs.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(long[],%20int,%20int,%20long)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(long[], int, int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Fill">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill (a As Single(), fromIndex As Integer, toIndex As Integer, val As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Fill(cli::array &lt;float&gt; ^ a, int fromIndex, int toIndex, float val);" />
      <MemberSignature Language="C#" Value="public static void Fill (float[] a, int fromIndex, int toIndex, float val);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill(float32[] a, int32 fromIndex, int32 toIndex, float32 val) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Fill(System.Single[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="static member Fill : single[] * int * int * single -&gt; unit" Usage="Java.Util.Arrays.Fill (a, fromIndex, toIndex, val)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fill", "([FIIF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fill", "([FIIF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="val" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="a">the array to be filled</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   filled with the specified value</param>
        <param name="toIndex">the index of the last element (exclusive) to be
                   filled with the specified value</param>
        <param name="val">the value to be stored in all elements of the array</param>
        <summary>Assigns the specified float value to each element of the specified
            range of the specified array of floats.</summary>
        <remarks>
          <para>Assigns the specified float value to each element of the specified
            range of the specified array of floats.  The range to be filled
            extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be filled is empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#fill(float[],%20int,%20int,%20float)" title="Reference documentation">Java documentation for <code>java.util.Arrays.fill(float[], int, int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (Java.Lang.Object[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member HashCode : Java.Lang.Object[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([Ljava/lang/Object;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([Ljava/lang/Object;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose content-based hash code to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.  If
            the array contains other arrays as elements, the hash code is based on
            their identities rather than their contents.  It is therefore
            acceptable to invoke this method on an array that contains itself as an
            element,  either directly or indirectly through one or more levels of
            arrays.</para>
          <para>For any two arrays <c>a</c> and <c>b</c> such that
            <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is equal to the value that would
            be returned by <c>Arrays.asList(a).hashCode()</c>, unless <c>a</c>
            is <c>null</c>, in which case <c>0</c> is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Boolean()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;bool&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (bool[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(bool[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Boolean[])" />
      <MemberSignature Language="F#" Value="static member HashCode : bool[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([Z)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([Z)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>boolean</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Boolean</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(boolean[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(boolean[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;System::Byte&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (byte[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(unsigned int8[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member HashCode : byte[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([B)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([B)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>byte</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Byte</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;char&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (char[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(char[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Char[])" />
      <MemberSignature Language="F#" Value="static member HashCode : char[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([C)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([C)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>char</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Character</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Double()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;double&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (double[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(float64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Double[])" />
      <MemberSignature Language="F#" Value="static member HashCode : double[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([D)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([D)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>double</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Double</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Short()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;short&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (short[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(int16[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Int16[])" />
      <MemberSignature Language="F#" Value="static member HashCode : int16[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([S)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([S)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>short</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Short</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Integer()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;int&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (int[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(int32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Int32[])" />
      <MemberSignature Language="F#" Value="static member HashCode : int[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([I)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two non-null <c>int</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Integer</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Long()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;long&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (long[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(int64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Int64[])" />
      <MemberSignature Language="F#" Value="static member HashCode : int64[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([J)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([J)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>long</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Long</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HashCode">
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashCode (a As Single()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int HashCode(cli::array &lt;float&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static int HashCode (float[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 HashCode(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.HashCode(System.Single[])" />
      <MemberSignature Language="F#" Value="static member HashCode : single[] -&gt; int" Usage="Java.Util.Arrays.HashCode a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "([F)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "([F)I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">the array whose hash value to compute</param>
        <summary>Returns a hash code based on the contents of the specified array.</summary>
        <returns>a content-based hash code for <c>a</c></returns>
        <remarks>
          <para>Returns a hash code based on the contents of the specified array.
            For any two <c>float</c> arrays <c>a</c> and <c>b</c>
            such that <c>Arrays.equals(a, b)</c>, it is also the case that
            <c>Arrays.hashCode(a) == Arrays.hashCode(b)</c>.</para>
          <para>The value returned by this method is the same value that would be
            obtained by invoking the <c>List#hashCode() hashCode</c>
            method on a <c>List</c> containing a sequence of <c>Float</c>
            instances representing the elements of <c>a</c> in the same order.
            If <c>a</c> is <c>null</c>, this method returns 0.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#hashCode(float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.hashCode(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Arrays.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Arrays.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Object(), b As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (Java.Lang.Object[] a, Java.Lang.Object[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(class Java.Lang.Object[] a, class Java.Lang.Object[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(Java.Lang.Object[],Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : Java.Lang.Object[] * Java.Lang.Object[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([Ljava/lang/Object;[Ljava/lang/Object;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([Ljava/lang/Object;[Ljava/lang/Object;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two
            <c>Object</c> arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two
            <c>Object</c> arrays, otherwise return -1 if no mismatch is found.  The
            index will be in the range of 0 (inclusive) up to the length (inclusive)
            of the smaller array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                !Objects.equals(a[pl], b[pl])
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(java.lang.Object[],%20java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(java.lang.Object[], java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Boolean(), b As Boolean()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;bool&gt; ^ a, cli::array &lt;bool&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (bool[] a, bool[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(bool[] a, bool[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Boolean[],System.Boolean[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : bool[] * bool[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([Z[Z)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([Z[Z)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="b" Type="System.Boolean[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two
            <c>boolean</c> arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two
            <c>boolean</c> arrays, otherwise return -1 if no mismatch is found.  The
            index will be in the range of 0 (inclusive) up to the length (inclusive)
            of the smaller array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(boolean[],%20boolean[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(boolean[], boolean[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Byte(), b As Byte()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;System::Byte&gt; ^ a, cli::array &lt;System::Byte&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (byte[] a, byte[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(unsigned int8[] a, unsigned int8[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : byte[] * byte[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([B[B)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([B[B)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="b" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>byte</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>byte</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(byte[],%20byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(byte[], byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Char(), b As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;char&gt; ^ a, cli::array &lt;char&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (char[] a, char[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(char[] a, char[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Char[],System.Char[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : char[] * char[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([C[C)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([C[C)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="b" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>char</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>char</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(char[],%20char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(char[], char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Double(), b As Double()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;double&gt; ^ a, cli::array &lt;double&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (double[] a, double[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(float64[] a, float64[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Double[],System.Double[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : double[] * double[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([D[D)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([D[D)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="b" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two
            <c>double</c> arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two
            <c>double</c> arrays, otherwise return -1 if no mismatch is found.  The
            index will be in the range of 0 (inclusive) up to the length (inclusive)
            of the smaller array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                Double.compare(a[pl], b[pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(double[],%20double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(double[], double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Short(), b As Short()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;short&gt; ^ a, cli::array &lt;short&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (short[] a, short[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int16[] a, int16[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int16[],System.Int16[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : int16[] * int16[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([S[S)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([S[S)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="b" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>short</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>short</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(short[],%20short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(short[], short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Integer(), b As Integer()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;int&gt; ^ a, cli::array &lt;int&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (int[] a, int[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int32[] a, int32[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : int[] * int[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([I[I)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([I[I)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="b" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>int</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>int</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(int[],%20int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Long(), b As Long()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;long&gt; ^ a, cli::array &lt;long&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (long[] a, long[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int64[] a, int64[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int64[],System.Int64[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : int64[] * int64[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([J[J)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([J[J)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="b" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>long</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>long</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                a[pl] != b[pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(long[],%20long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(long[], long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Single(), b As Single()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;float&gt; ^ a, cli::array &lt;float&gt; ^ b);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (float[] a, float[] b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(float32[] a, float32[] b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Single[],System.Single[])" />
      <MemberSignature Language="F#" Value="static member Mismatch : single[] * single[] -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([F[F)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([F[F)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="b" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <summary>Finds and returns the index of the first mismatch between two <c>float</c>
            arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two <c>float</c>
            arrays, otherwise return -1 if no mismatch is found.  The index will be
            in the range of 0 (inclusive) up to the length (inclusive) of the smaller
            array.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl) &amp;&amp;
                Float.compare(a[pl], b[pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(float[],%20float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(float[], float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Object(), b As Object(), cmp As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, cli::array &lt;Java::Lang::Object ^&gt; ^ b, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (Java.Lang.Object[] a, Java.Lang.Object[] b, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(class Java.Lang.Object[] a, class Java.Lang.Object[] b, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(Java.Lang.Object[],Java.Lang.Object[],Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Mismatch : Java.Lang.Object[] * Java.Lang.Object[] * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, b, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Finds and returns the index of the first mismatch between two
            <c>Object</c> arrays, otherwise return -1 if no mismatch is found.</summary>
        <returns>the index of the first mismatch between the two arrays,
                    otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the index of the first mismatch between two
            <c>Object</c> arrays, otherwise return -1 if no mismatch is found.
            The index will be in the range of 0 (inclusive) up to the length
            (inclusive) of the smaller array.</para>
          <para>The specified comparator is used to determine if two array elements
            from the each array are not equal.</para>
          <para>If the two arrays share a common prefix then the returned index is the
            length of the common prefix and it follows that there is a mismatch
            between the two elements at that index within the respective arrays.
            If one array is a proper prefix of the other then the returned index is
            the length of the smaller array and it follows that the index is only
            valid for the larger array.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(a.length, b.length) &amp;&amp;
                Arrays.equals(a, 0, pl, b, 0, pl, cmp)
                cmp.compare(a[pl], b[pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c>, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                a.length != b.length &amp;&amp;
                Arrays.equals(a, 0, Math.min(a.length, b.length),
                              b, 0, Math.min(a.length, b.length),
                              cmp)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(T[],%20T[],%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(T[], T[], java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([Ljava/lang/Object;II[Ljava/lang/Object;II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([Ljava/lang/Object;II[Ljava/lang/Object;II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>Object</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>Object</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.  The index will be in the range of 0 (inclusive) up
            to the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                !Objects.equals(a[aFromIndex + pl], b[bFromIndex + pl])
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(java.lang.Object[],%20int,%20int,%20java.lang.Object[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(java.lang.Object[], int, int, java.lang.Object[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Boolean(), aFromIndex As Integer, aToIndex As Integer, b As Boolean(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;bool&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;bool&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (bool[] a, int aFromIndex, int aToIndex, bool[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(bool[] a, int32 aFromIndex, int32 aToIndex, bool[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Boolean[],System.Int32,System.Int32,System.Boolean[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : bool[] * int * int * bool[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([ZII[ZII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([ZII[ZII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Boolean[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>boolean</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>boolean</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.  The index will be in the range of 0 (inclusive) up
            to the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(boolean[],%20int,%20int,%20boolean[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(boolean[], int, int, boolean[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Byte(), aFromIndex As Integer, aToIndex As Integer, b As Byte(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;System::Byte&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;System::Byte&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (byte[]? a, int aFromIndex, int aToIndex, byte[]? b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(unsigned int8[] a, int32 aFromIndex, int32 aToIndex, unsigned int8[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : byte[] * int * int * byte[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([BII[BII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([BII[BII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Byte[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>byte</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>byte</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(byte[],%20int,%20int,%20byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(byte[], int, int, byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Char(), aFromIndex As Integer, aToIndex As Integer, b As Char(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;char&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;char&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (char[] a, int aFromIndex, int aToIndex, char[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(char[] a, int32 aFromIndex, int32 aToIndex, char[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Char[],System.Int32,System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : char[] * int * int * char[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([CII[CII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([CII[CII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Char[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>char</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>char</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(char[],%20int,%20int,%20char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(char[], int, int, char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Double(), aFromIndex As Integer, aToIndex As Integer, b As Double(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;double&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;double&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (double[] a, int aFromIndex, int aToIndex, double[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(float64[] a, int32 aFromIndex, int32 aToIndex, float64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : double[] * int * int * double[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([DII[DII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([DII[DII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Double[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>double</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>double</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.  The index will be in the range of 0 (inclusive) up
            to the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                Double.compare(a[aFromIndex + pl], b[bFromIndex + pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(double[],%20int,%20int,%20double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(double[], int, int, double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Short(), aFromIndex As Integer, aToIndex As Integer, b As Short(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;short&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;short&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (short[] a, int aFromIndex, int aToIndex, short[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int16[] a, int32 aFromIndex, int32 aToIndex, int16[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int16[],System.Int32,System.Int32,System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : int16[] * int * int * int16[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([SII[SII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([SII[SII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int16[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>short</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>short</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(short[],%20int,%20int,%20short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(short[], int, int, short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Integer(), aFromIndex As Integer, aToIndex As Integer, b As Integer(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;int&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;int&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (int[] a, int aFromIndex, int aToIndex, int[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int32[] a, int32 aFromIndex, int32 aToIndex, int32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int32[],System.Int32,System.Int32,System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : int[] * int * int * int[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([III[III)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([III[III)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>int</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>int</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(int[],%20int,%20int,%20int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(int[], int, int, int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Long(), aFromIndex As Integer, aToIndex As Integer, b As Long(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;long&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;long&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (long[] a, int aFromIndex, int aToIndex, long[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(int64[] a, int32 aFromIndex, int32 aToIndex, int64[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Int64[],System.Int32,System.Int32,System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : int64[] * int * int * int64[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([JII[JII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([JII[JII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int64[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>long</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>long</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                a[aFromIndex + pl] != b[bFromIndex + pl]
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(long[],%20int,%20int,%20long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(long[], int, int, long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Single(), aFromIndex As Integer, aToIndex As Integer, b As Single(), bFromIndex As Integer, bToIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;float&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;float&gt; ^ b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (float[] a, int aFromIndex, int aToIndex, float[] b, int bFromIndex, int bToIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(float32[] a, int32 aFromIndex, int32 aToIndex, float32[] b, int32 bFromIndex, int32 bToIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Mismatch : single[] * int * int * single[] * int * int -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([FII[FII)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([FII[FII)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="System.Single[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>float</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>float</c> arrays over the specified ranges, otherwise return -1 if no
            mismatch is found.  The index will be in the range of 0 (inclusive) up to
            the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl) &amp;&amp;
                Float.compare(a[aFromIndex + pl], b[bFromIndex + pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex))
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(float[],%20int,%20int,%20float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(float[], int, int, float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mismatch">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Mismatch (a As Object(), aFromIndex As Integer, aToIndex As Integer, b As Object(), bFromIndex As Integer, bToIndex As Integer, cmp As IComparator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Mismatch(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int aFromIndex, int aToIndex, cli::array &lt;Java::Lang::Object ^&gt; ^ b, int bFromIndex, int bToIndex, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static int Mismatch (Java.Lang.Object[] a, int aFromIndex, int aToIndex, Java.Lang.Object[] b, int bFromIndex, int bToIndex, Java.Util.IComparator cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Mismatch(class Java.Lang.Object[] a, int32 aFromIndex, int32 aToIndex, class Java.Lang.Object[] b, int32 bFromIndex, int32 bToIndex, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Mismatch(Java.Lang.Object[],System.Int32,System.Int32,Java.Lang.Object[],System.Int32,System.Int32,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Mismatch : Java.Lang.Object[] * int * int * Java.Lang.Object[] * int * int * Java.Util.IComparator -&gt; int" Usage="Java.Util.Arrays.Mismatch (a, aFromIndex, aToIndex, b, bFromIndex, bToIndex, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mismatch", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mismatch", "([Ljava/lang/Object;II[Ljava/lang/Object;IILjava/util/Comparator;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="aFromIndex" Type="System.Int32" />
        <Parameter Name="aToIndex" Type="System.Int32" />
        <Parameter Name="b" Type="Java.Lang.Object[]" />
        <Parameter Name="bFromIndex" Type="System.Int32" />
        <Parameter Name="bToIndex" Type="System.Int32" />
        <Parameter Name="cmp" Type="Java.Util.IComparator" />
      </Parameters>
      <Docs>
        <param name="a">the first array to be tested for a mismatch</param>
        <param name="aFromIndex">the index (inclusive) of the first element in the
                              first array to be tested</param>
        <param name="aToIndex">the index (exclusive) of the last element in the
                            first array to be tested</param>
        <param name="b">the second array to be tested for a mismatch</param>
        <param name="bFromIndex">the index (inclusive) of the first element in the
                              second array to be tested</param>
        <param name="bToIndex">the index (exclusive) of the last element in the
                            second array to be tested</param>
        <param name="cmp">the comparator to compare array elements</param>
        <param name="&lt;T&gt;&lt;T&gt;">the type of array elements</param>
        <summary>Finds and returns the relative index of the first mismatch between two
            <c>Object</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.</summary>
        <returns>the relative index of the first mismatch between the two arrays
                    over the specified ranges, otherwise <c>-1</c>.</returns>
        <remarks>
          <para>Finds and returns the relative index of the first mismatch between two
            <c>Object</c> arrays over the specified ranges, otherwise return -1 if
            no mismatch is found.  The index will be in the range of 0 (inclusive) up
            to the length (inclusive) of the smaller range.</para>
          <para>If the two arrays, over the specified ranges, share a common prefix
            then the returned relative index is the length of the common prefix and
            it follows that there is a mismatch between the two elements at that
            relative index within the respective arrays.
            If one array is a proper prefix of the other, over the specified ranges,
            then the returned relative index is the length of the smaller range and
            it follows that the relative index is only valid for the array with the
            larger range.
            Otherwise, there is no mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a common
            prefix of length <c>pl</c> if the following expression is true:</para>
          <code lang="text/java">{@code
                pl &gt;= 0 &amp;&amp;
                pl &lt; Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, aFromIndex, aFromIndex + pl, b, bFromIndex, bFromIndex + pl, cmp) &amp;&amp;
                cmp.compare(a[aFromIndex + pl], b[bFromIndex + pl]) != 0
            }</code>
          <para>Note that a common prefix length of <c>0</c> indicates that the first
            elements from each array mismatch.</para>
          <para>Two non-<c>null</c> arrays, <c>a</c> and <c>b</c> with specified
            ranges [<c>aFromIndex</c>, <c>atoIndex</c>) and
            [<c>bFromIndex</c>, <c>btoIndex</c>) respectively, share a proper
            prefix if the following expression is true:</para>
          <code lang="text/java">{@code
                (aToIndex - aFromIndex) != (bToIndex - bFromIndex) &amp;&amp;
                Arrays.equals(a, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              b, 0, Math.min(aToIndex - aFromIndex, bToIndex - bFromIndex),
                              cmp)
            }</code>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#mismatch(T[],%20int,%20int,%20T[],%20int,%20int,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.mismatch(T[], int, int, T[], int, int, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Object(), op As IBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;Java::Lang::Object ^&gt; ^ array, Java::Util::Functions::IBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (Java.Lang.Object[] array, Java.Util.Functions.IBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(class Java.Lang.Object[] array, class Java.Util.Functions.IBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(Java.Lang.Object[],Java.Util.Functions.IBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : Java.Lang.Object[] * Java.Util.Functions.IBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([Ljava/lang/Object;Ljava/util/function/BinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
        <Parameter Name="op" Type="Java.Util.Functions.IBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="array">the array, which is modified in-place by this method</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Cumulates, in parallel, each element of the given array in place,
            using the supplied function.</summary>
        <remarks>
          <para>Cumulates, in parallel, each element of the given array in place,
            using the supplied function. For example if the array initially
            holds <c>[2, 1, 0, 3]</c> and the operation performs addition,
            then upon return the array holds <c>[2, 3, 3, 6]</c>.
            Parallel prefix computation is usually more efficient than
            sequential loops for large arrays.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(T[],%20java.util.function.BinaryOperator%3CT%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(T[], java.util.function.BinaryOperator&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Double(), op As IDoubleBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;double&gt; ^ array, Java::Util::Functions::IDoubleBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (double[] array, Java.Util.Functions.IDoubleBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(float64[] array, class Java.Util.Functions.IDoubleBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Double[],Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : double[] * Java.Util.Functions.IDoubleBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([DLjava/util/function/DoubleBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([DLjava/util/function/DoubleBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="op" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array, which is modified in-place by this method</param>
        <param name="op">a side-effect-free function to perform the cumulation</param>
        <summary>Cumulates, in parallel, each element of the given array in place,
            using the supplied function.</summary>
        <remarks>
          <para>Cumulates, in parallel, each element of the given array in place,
            using the supplied function. For example if the array initially
            holds <c>[2.0, 1.0, 0.0, 3.0]</c> and the operation performs addition,
            then upon return the array holds <c>[2.0, 3.0, 3.0, 6.0]</c>.
            Parallel prefix computation is usually more efficient than
            sequential loops for large arrays.</para>
          <para>Because floating-point operations may not be strictly associative,
            the returned result may not be identical to the value that would be
            obtained if the operation was performed sequentially.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(double[],%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(double[], java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Integer(), op As IIntBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;int&gt; ^ array, Java::Util::Functions::IIntBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (int[] array, Java.Util.Functions.IIntBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(int32[] array, class Java.Util.Functions.IIntBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Int32[],Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : int[] * Java.Util.Functions.IIntBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([ILjava/util/function/IntBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([ILjava/util/function/IntBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="op" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array, which is modified in-place by this method</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Cumulates, in parallel, each element of the given array in place,
            using the supplied function.</summary>
        <remarks>
          <para>Cumulates, in parallel, each element of the given array in place,
            using the supplied function. For example if the array initially
            holds <c>[2, 1, 0, 3]</c> and the operation performs addition,
            then upon return the array holds <c>[2, 3, 3, 6]</c>.
            Parallel prefix computation is usually more efficient than
            sequential loops for large arrays.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(int[],%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(int[], java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Long(), op As ILongBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;long&gt; ^ array, Java::Util::Functions::ILongBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (long[] array, Java.Util.Functions.ILongBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(int64[] array, class Java.Util.Functions.ILongBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Int64[],Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : int64[] * Java.Util.Functions.ILongBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([JLjava/util/function/LongBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([JLjava/util/function/LongBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="op" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array, which is modified in-place by this method</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Cumulates, in parallel, each element of the given array in place,
            using the supplied function.</summary>
        <remarks>
          <para>Cumulates, in parallel, each element of the given array in place,
            using the supplied function. For example if the array initially
            holds <c>[2, 1, 0, 3]</c> and the operation performs addition,
            then upon return the array holds <c>[2, 3, 3, 6]</c>.
            Parallel prefix computation is usually more efficient than
            sequential loops for large arrays.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(long[],%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(long[], java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Object(), fromIndex As Integer, toIndex As Integer, op As IBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;Java::Lang::Object ^&gt; ^ array, int fromIndex, int toIndex, Java::Util::Functions::IBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (Java.Lang.Object[] array, int fromIndex, int toIndex, Java.Util.Functions.IBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(class Java.Lang.Object[] array, int32 fromIndex, int32 toIndex, class Java.Util.Functions.IBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(Java.Lang.Object[],System.Int32,System.Int32,Java.Util.Functions.IBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : Java.Lang.Object[] * int * int * Java.Util.Functions.IBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, fromIndex, toIndex, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([Ljava/lang/Object;IILjava/util/function/BinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([Ljava/lang/Object;IILjava/util/function/BinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="op" Type="Java.Util.Functions.IBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects in the array</param>
        <param name="array">the array</param>
        <param name="fromIndex">the index of the first element, inclusive</param>
        <param name="toIndex">the index of the last element, exclusive</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Performs <c>#parallelPrefix(Object[], BinaryOperator)</c>
            for the given subrange of the array.</summary>
        <remarks>
          <para>Performs <c>#parallelPrefix(Object[], BinaryOperator)</c>
            for the given subrange of the array.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(T[],%20int,%20int,%20java.util.function.BinaryOperator%3CT%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(T[], int, int, java.util.function.BinaryOperator&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Double(), fromIndex As Integer, toIndex As Integer, op As IDoubleBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;double&gt; ^ array, int fromIndex, int toIndex, Java::Util::Functions::IDoubleBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (double[] array, int fromIndex, int toIndex, Java.Util.Functions.IDoubleBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(float64[] array, int32 fromIndex, int32 toIndex, class Java.Util.Functions.IDoubleBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Double[],System.Int32,System.Int32,Java.Util.Functions.IDoubleBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : double[] * int * int * Java.Util.Functions.IDoubleBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, fromIndex, toIndex, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([DIILjava/util/function/DoubleBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([DIILjava/util/function/DoubleBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="op" Type="Java.Util.Functions.IDoubleBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array</param>
        <param name="fromIndex">the index of the first element, inclusive</param>
        <param name="toIndex">the index of the last element, exclusive</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Performs <c>#parallelPrefix(double[], DoubleBinaryOperator)</c>
            for the given subrange of the array.</summary>
        <remarks>
          <para>Performs <c>#parallelPrefix(double[], DoubleBinaryOperator)</c>
            for the given subrange of the array.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(double[],%20int,%20int,%20java.util.function.DoubleBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(double[], int, int, java.util.function.DoubleBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Integer(), fromIndex As Integer, toIndex As Integer, op As IIntBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;int&gt; ^ array, int fromIndex, int toIndex, Java::Util::Functions::IIntBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (int[] array, int fromIndex, int toIndex, Java.Util.Functions.IIntBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(int32[] array, int32 fromIndex, int32 toIndex, class Java.Util.Functions.IIntBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Int32[],System.Int32,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : int[] * int * int * Java.Util.Functions.IIntBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, fromIndex, toIndex, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([IIILjava/util/function/IntBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([IIILjava/util/function/IntBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="op" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array</param>
        <param name="fromIndex">the index of the first element, inclusive</param>
        <param name="toIndex">the index of the last element, exclusive</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Performs <c>#parallelPrefix(int[], IntBinaryOperator)</c>
            for the given subrange of the array.</summary>
        <remarks>
          <para>Performs <c>#parallelPrefix(int[], IntBinaryOperator)</c>
            for the given subrange of the array.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(int[],%20int,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(int[], int, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelPrefix">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelPrefix (array As Long(), fromIndex As Integer, toIndex As Integer, op As ILongBinaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelPrefix(cli::array &lt;long&gt; ^ array, int fromIndex, int toIndex, Java::Util::Functions::ILongBinaryOperator ^ op);" />
      <MemberSignature Language="C#" Value="public static void ParallelPrefix (long[] array, int fromIndex, int toIndex, Java.Util.Functions.ILongBinaryOperator op);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelPrefix(int64[] array, int32 fromIndex, int32 toIndex, class Java.Util.Functions.ILongBinaryOperator op) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelPrefix(System.Int64[],System.Int32,System.Int32,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelPrefix : int64[] * int * int * Java.Util.Functions.ILongBinaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelPrefix (array, fromIndex, toIndex, op)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelPrefix", "([JIILjava/util/function/LongBinaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelPrefix", "([JIILjava/util/function/LongBinaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="op" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">the array</param>
        <param name="fromIndex">the index of the first element, inclusive</param>
        <param name="toIndex">the index of the last element, exclusive</param>
        <param name="op">a side-effect-free, associative function to perform the
            cumulation</param>
        <summary>Performs <c>#parallelPrefix(long[], LongBinaryOperator)</c>
            for the given subrange of the array.</summary>
        <remarks>
          <para>Performs <c>#parallelPrefix(long[], LongBinaryOperator)</c>
            for the given subrange of the array.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelPrefix(long[],%20int,%20int,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelPrefix(long[], int, int, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSetAll (array As Object(), generator As IIntFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSetAll(cli::array &lt;Java::Lang::Object ^&gt; ^ array, Java::Util::Functions::IIntFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void ParallelSetAll (Java.Lang.Object[] array, Java.Util.Functions.IIntFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSetAll(class Java.Lang.Object[] array, class Java.Util.Functions.IIntFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSetAll(Java.Lang.Object[],Java.Util.Functions.IIntFunction)" />
      <MemberSignature Language="F#" Value="static member ParallelSetAll : Java.Lang.Object[] * Java.Util.Functions.IIntFunction -&gt; unit" Usage="Java.Util.Arrays.ParallelSetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSetAll", "([Ljava/lang/Object;Ljava/util/function/IntFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSetAll", "([Ljava/lang/Object;Ljava/util/function/IntFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntFunction" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">type of elements of the array</param>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</para>
          <para>If the generator function throws an exception, an unchecked exception
            is thrown from <c>parallelSetAll</c> and the array is left in an
            indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSetAll(T[],%20java.util.function.IntFunction%3C?%20extends%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSetAll(T[], java.util.function.IntFunction&lt;? extends T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSetAll (array As Double(), generator As IIntToDoubleFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSetAll(cli::array &lt;double&gt; ^ array, Java::Util::Functions::IIntToDoubleFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void ParallelSetAll (double[] array, Java.Util.Functions.IIntToDoubleFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSetAll(float64[] array, class Java.Util.Functions.IIntToDoubleFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSetAll(System.Double[],Java.Util.Functions.IIntToDoubleFunction)" />
      <MemberSignature Language="F#" Value="static member ParallelSetAll : double[] * Java.Util.Functions.IIntToDoubleFunction -&gt; unit" Usage="Java.Util.Arrays.ParallelSetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSetAll", "([DLjava/util/function/IntToDoubleFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSetAll", "([DLjava/util/function/IntToDoubleFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntToDoubleFunction" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</para>
          <para>If the generator function throws an exception, an unchecked exception
            is thrown from <c>parallelSetAll</c> and the array is left in an
            indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSetAll(double[],%20java.util.function.IntToDoubleFunction)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSetAll(double[], java.util.function.IntToDoubleFunction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSetAll (array As Integer(), generator As IIntUnaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSetAll(cli::array &lt;int&gt; ^ array, Java::Util::Functions::IIntUnaryOperator ^ generator);" />
      <MemberSignature Language="C#" Value="public static void ParallelSetAll (int[] array, Java.Util.Functions.IIntUnaryOperator generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSetAll(int32[] array, class Java.Util.Functions.IIntUnaryOperator generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSetAll(System.Int32[],Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="static member ParallelSetAll : int[] * Java.Util.Functions.IIntUnaryOperator -&gt; unit" Usage="Java.Util.Arrays.ParallelSetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSetAll", "([ILjava/util/function/IntUnaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSetAll", "([ILjava/util/function/IntUnaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
            value for that position</param>
        <summary>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</para>
          <para>If the generator function throws an exception, an unchecked exception
            is thrown from <c>parallelSetAll</c> and the array is left in an
            indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSetAll(int[],%20java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSetAll(int[], java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSetAll (array As Long(), generator As IIntToLongFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSetAll(cli::array &lt;long&gt; ^ array, Java::Util::Functions::IIntToLongFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void ParallelSetAll (long[] array, Java.Util.Functions.IIntToLongFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSetAll(int64[] array, class Java.Util.Functions.IIntToLongFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSetAll(System.Int64[],Java.Util.Functions.IIntToLongFunction)" />
      <MemberSignature Language="F#" Value="static member ParallelSetAll : int64[] * Java.Util.Functions.IIntToLongFunction -&gt; unit" Usage="Java.Util.Arrays.ParallelSetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSetAll", "([JLjava/util/function/IntToLongFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSetAll", "([JLjava/util/function/IntToLongFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntToLongFunction" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, in parallel, using the
            provided generator function to compute each element.</para>
          <para>If the generator function throws an exception, an unchecked exception
            is thrown from <c>parallelSetAll</c> and the array is left in an
            indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSetAll(long[],%20java.util.function.IntToLongFunction)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSetAll(long[], java.util.function.IntToLongFunction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (Java.Lang.Object[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : Java.Lang.Object[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([Ljava/lang/Comparable;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([Ljava/lang/Comparable;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array of objects into ascending order, according
            to the Comparable natural ordering of its elements.</summary>
        <remarks>
          <para>Sorts the specified array of objects into ascending order, according
            to the Comparable natural ordering of its elements.
            All elements in the array must implement the <c>Comparable</c>
            interface.  Furthermore, all elements in the array must be
            <i>mutually comparable</i> (that is, <c>e1.compareTo(e2)</c> must
            not throw a <c>ClassCastException</c> for any elements <c>e1</c>
            and <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(T[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(T[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;System::Byte&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (byte[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(unsigned int8[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : byte[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([B)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([B)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;char&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (char[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(char[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Char[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : char[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([C)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([C)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;double&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (double[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(float64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Double[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : double[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([D)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([D)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all double
            values: <c>-0.0d == 0.0d</c> is <c>true</c> and a <c>Double.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Double#compareTo</c>: <c>-0.0d</c> is treated as less than value
            <c>0.0d</c> and <c>Double.NaN</c> is considered greater than any
            other value and all <c>Double.NaN</c> values are considered equal.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;short&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (short[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int16[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int16[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int16[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([S)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([S)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;int&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (int[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int32[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([I)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([I)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;long&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (long[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int64[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int64[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([J)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([J)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;float&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Single[])" />
      <MemberSignature Language="F#" Value="static member ParallelSort : single[] -&gt; unit" Usage="Java.Util.Arrays.ParallelSort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([F)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([F)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all float
            values: <c>-0.0f == 0.0f</c> is <c>true</c> and a <c>Float.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Float#compareTo</c>: <c>-0.0f</c> is treated as less than value
            <c>0.0f</c> and <c>Float.NaN</c> is considered greater than any
            other value and all <c>Float.NaN</c> values are considered equal.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Object(), cmp As IComparator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (Java.Lang.Object[] a, Java.Util.IComparator? cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(class Java.Lang.Object[] a, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(Java.Lang.Object[],Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : Java.Lang.Object[] * Java.Util.IComparator -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([Ljava/lang/Object;Ljava/util/Comparator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([Ljava/lang/Object;Ljava/util/Comparator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="cmp" Type="Java.Util.IComparator">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <param name="cmp">the comparator to determine the order of the array.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Sorts the specified array of objects according to the order induced by
            the specified comparator.</summary>
        <remarks>
          <para>Sorts the specified array of objects according to the order induced by
            the specified comparator.  All elements in the array must be
            <i>mutually comparable</i> by the specified comparator (that is,
            <c>c.compare(e1, e2)</c> must not throw a <c>ClassCastException</c>
            for any elements <c>e1</c> and <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(T[],%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(T[], java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Object(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (Java.Lang.Object[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : Java.Lang.Object[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([Ljava/lang/Comparable;II)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([Ljava/lang/Comparable;II)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends java.lang.Comparable&lt;? super T&gt;" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   sorted</param>
        <param name="toIndex">the index of the last element (exclusive) to be sorted</param>
        <summary>Sorts the specified range of the specified array of objects into
            ascending order, according to the
            Comparable natural ordering of its
            elements.</summary>
        <remarks>
          <para>Sorts the specified range of the specified array of objects into
            ascending order, according to the
            Comparable natural ordering of its
            elements.  The range to be sorted extends from index
            <c>fromIndex</c>, inclusive, to index <c>toIndex</c>, exclusive.
            (If <c>fromIndex==toIndex</c>, the range to be sorted is empty.)  All
            elements in this range must implement the <c>Comparable</c>
            interface.  Furthermore, all elements in this range must be <i>mutually
            comparable</i> (that is, <c>e1.compareTo(e2)</c> must not throw a
            <c>ClassCastException</c> for any elements <c>e1</c> and
            <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(T[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(T[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Byte(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;System::Byte&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (byte[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(unsigned int8[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : byte[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([BII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([BII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Char(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;char&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (char[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(char[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : char[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([CII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([CII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Double(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;double&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (double[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(float64[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : double[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([DII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([DII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all double
            values: <c>-0.0d == 0.0d</c> is <c>true</c> and a <c>Double.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Double#compareTo</c>: <c>-0.0d</c> is treated as less than value
            <c>0.0d</c> and <c>Double.NaN</c> is considered greater than any
            other value and all <c>Double.NaN</c> values are considered equal.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Short(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;short&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (short[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int16[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int16[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([SII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([SII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Integer(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;int&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (int[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int32[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([III)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([III)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Long(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;long&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (long[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(int64[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : int64[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([JII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([JII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Single(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;float&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (float[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(float32[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : single[] * int * int -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([FII)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([FII)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending numerical order.
            The range to be sorted extends from the index <c>fromIndex</c>,
            inclusive, to the index <c>toIndex</c>, exclusive. If
            <c>fromIndex == toIndex</c>, the range to be sorted is empty.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all float
            values: <c>-0.0f == 0.0f</c> is <c>true</c> and a <c>Float.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Float#compareTo</c>: <c>-0.0f</c> is treated as less than value
            <c>0.0f</c> and <c>Float.NaN</c> is considered greater than any
            other value and all <c>Float.NaN</c> values are considered equal.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParallelSort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ParallelSort (a As Object(), fromIndex As Integer, toIndex As Integer, cmp As IComparator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ParallelSort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex, Java::Util::IComparator ^ cmp);" />
      <MemberSignature Language="C#" Value="public static void ParallelSort (Java.Lang.Object[] a, int fromIndex, int toIndex, Java.Util.IComparator? cmp);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ParallelSort(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex, class Java.Util.IComparator cmp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ParallelSort(Java.Lang.Object[],System.Int32,System.Int32,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member ParallelSort : Java.Lang.Object[] * int * int * Java.Util.IComparator -&gt; unit" Usage="Java.Util.Arrays.ParallelSort (a, fromIndex, toIndex, cmp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parallelSort", "([Ljava/lang/Object;IILjava/util/Comparator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parallelSort", "([Ljava/lang/Object;IILjava/util/Comparator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="cmp" Type="Java.Util.IComparator">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   sorted</param>
        <param name="toIndex">the index of the last element (exclusive) to be sorted</param>
        <param name="cmp">the comparator to determine the order of the array.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Sorts the specified range of the specified array of objects according
            to the order induced by the specified comparator.</summary>
        <remarks>
          <para>Sorts the specified range of the specified array of objects according
            to the order induced by the specified comparator.  The range to be
            sorted extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be sorted is empty.)  All elements in the range must be
            <i>mutually comparable</i> by the specified comparator (that is,
            <c>c.compare(e1, e2)</c> must not throw a <c>ClassCastException</c>
            for any elements <c>e1</c> and <c>e2</c> in the range).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#parallelSort(T[],%20int,%20int,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.parallelSort(T[], int, int, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAll (array As Object(), generator As IIntFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAll(cli::array &lt;Java::Lang::Object ^&gt; ^ array, Java::Util::Functions::IIntFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void SetAll (Java.Lang.Object[] array, Java.Util.Functions.IIntFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAll(class Java.Lang.Object[] array, class Java.Util.Functions.IIntFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.SetAll(Java.Lang.Object[],Java.Util.Functions.IIntFunction)" />
      <MemberSignature Language="F#" Value="static member SetAll : Java.Lang.Object[] * Java.Util.Functions.IIntFunction -&gt; unit" Usage="Java.Util.Arrays.SetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAll", "([Ljava/lang/Object;Ljava/util/function/IntFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAll", "([Ljava/lang/Object;Ljava/util/function/IntFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntFunction" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">type of elements of the array</param>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, using the provided
            generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, using the provided
            generator function to compute each element.</para>
          <para>If the generator function throws an exception, it is relayed to
            the caller and the array is left in an indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#setAll(T[],%20java.util.function.IntFunction%3C?%20extends%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.setAll(T[], java.util.function.IntFunction&lt;? extends T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAll (array As Double(), generator As IIntToDoubleFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAll(cli::array &lt;double&gt; ^ array, Java::Util::Functions::IIntToDoubleFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void SetAll (double[] array, Java.Util.Functions.IIntToDoubleFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAll(float64[] array, class Java.Util.Functions.IIntToDoubleFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.SetAll(System.Double[],Java.Util.Functions.IIntToDoubleFunction)" />
      <MemberSignature Language="F#" Value="static member SetAll : double[] * Java.Util.Functions.IIntToDoubleFunction -&gt; unit" Usage="Java.Util.Arrays.SetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAll", "([DLjava/util/function/IntToDoubleFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAll", "([DLjava/util/function/IntToDoubleFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Double[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntToDoubleFunction" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, using the provided
            generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, using the provided
            generator function to compute each element.</para>
          <para>If the generator function throws an exception, it is relayed to
            the caller and the array is left in an indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#setAll(double[],%20java.util.function.IntToDoubleFunction)" title="Reference documentation">Java documentation for <code>java.util.Arrays.setAll(double[], java.util.function.IntToDoubleFunction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAll (array As Integer(), generator As IIntUnaryOperator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAll(cli::array &lt;int&gt; ^ array, Java::Util::Functions::IIntUnaryOperator ^ generator);" />
      <MemberSignature Language="C#" Value="public static void SetAll (int[] array, Java.Util.Functions.IIntUnaryOperator generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAll(int32[] array, class Java.Util.Functions.IIntUnaryOperator generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.SetAll(System.Int32[],Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="static member SetAll : int[] * Java.Util.Functions.IIntUnaryOperator -&gt; unit" Usage="Java.Util.Arrays.SetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAll", "([ILjava/util/function/IntUnaryOperator;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAll", "([ILjava/util/function/IntUnaryOperator;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int32[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, using the provided
            generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, using the provided
            generator function to compute each element.</para>
          <para>If the generator function throws an exception, it is relayed to
            the caller and the array is left in an indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#setAll(int[],%20java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.Arrays.setAll(int[], java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAll">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAll (array As Long(), generator As IIntToLongFunction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAll(cli::array &lt;long&gt; ^ array, Java::Util::Functions::IIntToLongFunction ^ generator);" />
      <MemberSignature Language="C#" Value="public static void SetAll (long[] array, Java.Util.Functions.IIntToLongFunction generator);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAll(int64[] array, class Java.Util.Functions.IIntToLongFunction generator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.SetAll(System.Int64[],Java.Util.Functions.IIntToLongFunction)" />
      <MemberSignature Language="F#" Value="static member SetAll : int64[] * Java.Util.Functions.IIntToLongFunction -&gt; unit" Usage="Java.Util.Arrays.SetAll (array, generator)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAll", "([JLjava/util/function/IntToLongFunction;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAll", "([JLjava/util/function/IntToLongFunction;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
        <Parameter Name="generator" Type="Java.Util.Functions.IIntToLongFunction" />
      </Parameters>
      <Docs>
        <param name="array">array to be initialized</param>
        <param name="generator">a function accepting an index and producing the desired
                   value for that position</param>
        <summary>Set all elements of the specified array, using the provided
            generator function to compute each element.</summary>
        <remarks>
          <para>Set all elements of the specified array, using the provided
            generator function to compute each element.</para>
          <para>If the generator function throws an exception, it is relayed to
            the caller and the array is left in an indeterminate state.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#setAll(long[],%20java.util.function.IntToLongFunction)" title="Reference documentation">Java documentation for <code>java.util.Arrays.setAll(long[], java.util.function.IntToLongFunction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (Java.Lang.Object[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member Sort : Java.Lang.Object[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array of objects into ascending order, according
            to the Comparable natural ordering of its elements.</summary>
        <remarks>
          <para>Sorts the specified array of objects into ascending order, according
            to the Comparable natural ordering of its elements.
            All elements in the array must implement the <c>Comparable</c>
            interface.  Furthermore, all elements in the array must be
            <i>mutually comparable</i> (that is, <c>e1.compareTo(e2)</c> must
            not throw a <c>ClassCastException</c> for any elements <c>e1</c>
            and <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Implementation note: This implementation is a stable, adaptive,
            iterative mergesort that requires far fewer than n lg(n) comparisons
            when the input array is partially sorted, while offering the
            performance of a traditional mergesort when the input array is
            randomly ordered.  If the input array is nearly sorted, the
            implementation requires approximately n comparisons.  Temporary
            storage requirements vary from a small constant for nearly sorted
            input arrays to n/2 object references for randomly ordered input
            arrays.</para>
          <para>The implementation takes equal advantage of ascending and
            descending order in its input array, and can take advantage of
            ascending and descending order in different parts of the same
            input array.  It is well-suited to merging two or more sorted arrays:
            simply concatenate the arrays and sort the resulting array.</para>
          <para>The implementation was adapted from Tim Peters's list sort for Python
            (<see href="http://svn.python.org/projects/python/trunk/Objects/listsort.txt">
            TimSort</see>).  It uses techniques from Peter McIlroy's "Optimistic
            Sorting and Information Theoretic Complexity", in Proceedings of the
            Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
            January 1993.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if any element does not implement <c>Comparable</c>,
     or if <c>compareTo</c> throws for any pair of elements.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;System::Byte&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (byte[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(unsigned int8[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member Sort : byte[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([B)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([B)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;char&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (char[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(char[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Char[])" />
      <MemberSignature Language="F#" Value="static member Sort : char[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([C)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([C)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Double())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;double&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (double[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(float64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Double[])" />
      <MemberSignature Language="F#" Value="static member Sort : double[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([D)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([D)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all double
            values: <c>-0.0d == 0.0d</c> is <c>true</c> and a <c>Double.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Double#compareTo</c>: <c>-0.0d</c> is treated as less than value
            <c>0.0d</c> and <c>Double.NaN</c> is considered greater than any
            other value and all <c>Double.NaN</c> values are considered equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.Arrays.Sort(System.Double[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;short&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (short[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int16[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int16[])" />
      <MemberSignature Language="F#" Value="static member Sort : int16[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([S)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([S)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;int&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (int[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int32[])" />
      <MemberSignature Language="F#" Value="static member Sort : int[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;long&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (long[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int64[])" />
      <MemberSignature Language="F#" Value="static member Sort : int64[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;float&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static void Sort (float[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Single[])" />
      <MemberSignature Language="F#" Value="static member Sort : single[] -&gt; unit" Usage="Java.Util.Arrays.Sort a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([F)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([F)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <summary>Sorts the specified array into ascending numerical order.</summary>
        <remarks>
          <para>Sorts the specified array into ascending numerical order.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all float
            values: <c>-0.0f == 0.0f</c> is <c>true</c> and a <c>Float.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Float#compareTo</c>: <c>-0.0f</c> is treated as less than value
            <c>0.0f</c> and <c>Float.NaN</c> is considered greater than any
            other value and all <c>Float.NaN</c> values are considered equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.Arrays.Sort(System.Single[], System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Object(), c As IComparator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, Java::Util::IComparator ^ c);" />
      <MemberSignature Language="C#" Value="public static void Sort (Java.Lang.Object[] a, Java.Util.IComparator? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class Java.Lang.Object[] a, class Java.Util.IComparator c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(Java.Lang.Object[],Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Sort : Java.Lang.Object[] * Java.Util.IComparator -&gt; unit" Usage="Java.Util.Arrays.Sort (a, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([Ljava/lang/Object;Ljava/util/Comparator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([Ljava/lang/Object;Ljava/util/Comparator;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="c" Type="Java.Util.IComparator">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <param name="c">the comparator to determine the order of the array.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Sorts the specified array of objects according to the order induced by
            the specified comparator.</summary>
        <remarks>
          <para>Sorts the specified array of objects according to the order induced by
            the specified comparator.  All elements in the array must be
            <i>mutually comparable</i> by the specified comparator (that is,
            <c>c.compare(e1, e2)</c> must not throw a <c>ClassCastException</c>
            for any elements <c>e1</c> and <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Implementation note: This implementation is a stable, adaptive,
            iterative mergesort that requires far fewer than n lg(n) comparisons
            when the input array is partially sorted, while offering the
            performance of a traditional mergesort when the input array is
            randomly ordered.  If the input array is nearly sorted, the
            implementation requires approximately n comparisons.  Temporary
            storage requirements vary from a small constant for nearly sorted
            input arrays to n/2 object references for randomly ordered input
            arrays.</para>
          <para>The implementation takes equal advantage of ascending and
            descending order in its input array, and can take advantage of
            ascending and descending order in different parts of the same
            input array.  It is well-suited to merging two or more sorted arrays:
            simply concatenate the arrays and sort the resulting array.</para>
          <para>The implementation was adapted from Tim Peters's list sort for Python
            (<see href="http://svn.python.org/projects/python/trunk/Objects/listsort.txt">
            TimSort</see>).  It uses techniques from Peter McIlroy's "Optimistic
            Sorting and Information Theoretic Complexity", in Proceedings of the
            Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
            January 1993.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(T[],%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(T[], java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Object(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (Java.Lang.Object[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : Java.Lang.Object[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([Ljava/lang/Object;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([Ljava/lang/Object;II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   sorted</param>
        <param name="toIndex">the index of the last element (exclusive) to be sorted</param>
        <summary>Sorts the specified range of the specified array of objects into
            ascending order, according to the
            Comparable natural ordering of its
            elements.</summary>
        <remarks>
          <para>Sorts the specified range of the specified array of objects into
            ascending order, according to the
            Comparable natural ordering of its
            elements.  The range to be sorted extends from index
            <c>fromIndex</c>, inclusive, to index <c>toIndex</c>, exclusive.
            (If <c>fromIndex==toIndex</c>, the range to be sorted is empty.)  All
            elements in this range must implement the <c>Comparable</c>
            interface.  Furthermore, all elements in this range must be <i>mutually
            comparable</i> (that is, <c>e1.compareTo(e2)</c> must not throw a
            <c>ClassCastException</c> for any elements <c>e1</c> and
            <c>e2</c> in the array).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Implementation note: This implementation is a stable, adaptive,
            iterative mergesort that requires far fewer than n lg(n) comparisons
            when the input array is partially sorted, while offering the
            performance of a traditional mergesort when the input array is
            randomly ordered.  If the input array is nearly sorted, the
            implementation requires approximately n comparisons.  Temporary
            storage requirements vary from a small constant for nearly sorted
            input arrays to n/2 object references for randomly ordered input
            arrays.</para>
          <para>The implementation takes equal advantage of ascending and
            descending order in its input array, and can take advantage of
            ascending and descending order in different parts of the same
            input array.  It is well-suited to merging two or more sorted arrays:
            simply concatenate the arrays and sort the resulting array.</para>
          <para>The implementation was adapted from Tim Peters's list sort for Python
            (<see href="http://svn.python.org/projects/python/trunk/Objects/listsort.txt">
            TimSort</see>).  It uses techniques from Peter McIlroy's "Optimistic
            Sorting and Information Theoretic Complexity", in Proceedings of the
            Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
            January 1993.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(java.lang.Object[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(java.lang.Object[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassCastException">if any element does not implement <c>Comparable</c>,
     or if <c>compareTo</c> throws for any pair of elements.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Byte(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;System::Byte&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (byte[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(unsigned int8[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : byte[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([BII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([BII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Char(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;char&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (char[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(char[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : char[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([CII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([CII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Double(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;double&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (double[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(float64[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Double[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : double[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([DII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([DII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all double
            values: <c>-0.0d == 0.0d</c> is <c>true</c> and a <c>Double.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Double#compareTo</c>: <c>-0.0d</c> is treated as less than value
            <c>0.0d</c> and <c>Double.NaN</c> is considered greater than any
            other value and all <c>Double.NaN</c> values are considered equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(double[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(double[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.</exception>
        <altmember cref="M:Java.Lang.Double.CompareTo(Java.Lang.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Short(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;short&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (short[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int16[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : int16[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([SII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([SII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Integer(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;int&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (int[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int32[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int32[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : int[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([III)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([III)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(int[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(int[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Long(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;long&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (long[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(int64[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Int64[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : int64[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([JII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([JII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(long[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(long[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Single(), fromIndex As Integer, toIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;float&gt; ^ a, int fromIndex, int toIndex);" />
      <MemberSignature Language="C#" Value="public static void Sort (float[] a, int fromIndex, int toIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(float32[] a, int32 fromIndex, int32 toIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(System.Single[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Sort : single[] * int * int -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([FII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([FII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element, inclusive, to be sorted</param>
        <param name="toIndex">the index of the last element, exclusive, to be sorted</param>
        <summary>Sorts the specified range of the array into ascending order.</summary>
        <remarks>
          <para>Sorts the specified range of the array into ascending order. The range
            to be sorted extends from the index <c>fromIndex</c>, inclusive, to
            the index <c>toIndex</c>, exclusive. If <c>fromIndex == toIndex</c>,
            the range to be sorted is empty.</para>
          <para>The <c>&lt;</c> relation does not provide a total order on all float
            values: <c>-0.0f == 0.0f</c> is <c>true</c> and a <c>Float.NaN</c>
            value compares neither less than, greater than, nor equal to any value,
            even itself. This method uses the total order imposed by the method
            <c>Float#compareTo</c>: <c>-0.0f</c> is treated as less than value
            <c>0.0f</c> and <c>Float.NaN</c> is considered greater than any
            other value and all <c>Float.NaN</c> values are considered equal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(float[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(float[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start &gt; end</c>.</exception>
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">if <c>start </c> or <c>end &gt; array.length</c>.</exception>
        <altmember cref="M:Java.Lang.Float.CompareTo(Java.Lang.Float)" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (a As Object(), fromIndex As Integer, toIndex As Integer, c As IComparator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(cli::array &lt;Java::Lang::Object ^&gt; ^ a, int fromIndex, int toIndex, Java::Util::IComparator ^ c);" />
      <MemberSignature Language="C#" Value="public static void Sort (Java.Lang.Object[] a, int fromIndex, int toIndex, Java.Util.IComparator? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class Java.Lang.Object[] a, int32 fromIndex, int32 toIndex, class Java.Util.IComparator c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Sort(Java.Lang.Object[],System.Int32,System.Int32,Java.Util.IComparator)" />
      <MemberSignature Language="F#" Value="static member Sort : Java.Lang.Object[] * int * int * Java.Util.IComparator -&gt; unit" Usage="Java.Util.Arrays.Sort (a, fromIndex, toIndex, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sort", "([Ljava/lang/Object;IILjava/util/Comparator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sort", "([Ljava/lang/Object;IILjava/util/Comparator;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]" />
        <Parameter Name="fromIndex" Type="System.Int32" />
        <Parameter Name="toIndex" Type="System.Int32" />
        <Parameter Name="c" Type="Java.Util.IComparator">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the class of the objects to be sorted</param>
        <param name="a">the array to be sorted</param>
        <param name="fromIndex">the index of the first element (inclusive) to be
                   sorted</param>
        <param name="toIndex">the index of the last element (exclusive) to be sorted</param>
        <param name="c">the comparator to determine the order of the array.  A
                   <c>null</c> value indicates that the elements'
                   Comparable natural ordering should be used.</param>
        <summary>Sorts the specified range of the specified array of objects according
            to the order induced by the specified comparator.</summary>
        <remarks>
          <para>Sorts the specified range of the specified array of objects according
            to the order induced by the specified comparator.  The range to be
            sorted extends from index <c>fromIndex</c>, inclusive, to index
            <c>toIndex</c>, exclusive.  (If <c>fromIndex==toIndex</c>, the
            range to be sorted is empty.)  All elements in the range must be
            <i>mutually comparable</i> by the specified comparator (that is,
            <c>c.compare(e1, e2)</c> must not throw a <c>ClassCastException</c>
            for any elements <c>e1</c> and <c>e2</c> in the range).</para>
          <para>This sort is guaranteed to be <i>stable</i>:  equal elements will
            not be reordered as a result of the sort.</para>
          <para>Implementation note: This implementation is a stable, adaptive,
            iterative mergesort that requires far fewer than n lg(n) comparisons
            when the input array is partially sorted, while offering the
            performance of a traditional mergesort when the input array is
            randomly ordered.  If the input array is nearly sorted, the
            implementation requires approximately n comparisons.  Temporary
            storage requirements vary from a small constant for nearly sorted
            input arrays to n/2 object references for randomly ordered input
            arrays.</para>
          <para>The implementation takes equal advantage of ascending and
            descending order in its input array, and can take advantage of
            ascending and descending order in different parts of the same
            input array.  It is well-suited to merging two or more sorted arrays:
            simply concatenate the arrays and sort the resulting array.</para>
          <para>The implementation was adapted from Tim Peters's list sort for Python
            (<see href="http://svn.python.org/projects/python/trunk/Objects/listsort.txt">
            TimSort</see>).  It uses techniques from Peter McIlroy's "Optimistic
            Sorting and Information Theoretic Complexity", in Proceedings of the
            Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474,
            January 1993.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#sort(T[],%20int,%20int,%20java.util.Comparator%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.Arrays.sort(T[], int, int, java.util.Comparator&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spliterator">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Spliterator (array As Object()) As ISpliterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ISpliterator ^ Spliterator(cli::array &lt;Java::Lang::Object ^&gt; ^ array);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ISpliterator Spliterator (Java.Lang.Object[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ISpliterator Spliterator(class Java.Lang.Object[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Spliterator(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member Spliterator : Java.Lang.Object[] -&gt; Java.Util.ISpliterator" Usage="Java.Util.Arrays.Spliterator array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spliterator", "([Ljava/lang/Object;)Ljava/util/Spliterator;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spliterator", "([Ljava/lang/Object;)Ljava/util/Spliterator;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">type of elements</param>
        <param name="array">the array, assumed to be unmodified during use</param>
        <summary>Returns a <c>Spliterator</c> covering all of the specified array.</summary>
        <returns>a spliterator for the array elements</returns>
        <remarks>
          <para>Returns a <c>Spliterator</c> covering all of the specified array.</para>
          <para>The spliterator reports <c>Spliterator#SIZED</c>,
            <c>Spliterator#SUBSIZED</c>, <c>Spliterator#ORDERED</c>, and
            <c>Spliterator#IMMUTABLE</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#spliterator(T[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.spliterator(T[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spliterator">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Spliterator (array As Object(), startInclusive As Integer, endExclusive As Integer) As ISpliterator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::ISpliterator ^ Spliterator(cli::array &lt;Java::Lang::Object ^&gt; ^ array, int startInclusive, int endExclusive);" />
      <MemberSignature Language="C#" Value="public static Java.Util.ISpliterator Spliterator (Java.Lang.Object[] array, int startInclusive, int endExclusive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.ISpliterator Spliterator(class Java.Lang.Object[] array, int32 startInclusive, int32 endExclusive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.Spliterator(Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Spliterator : Java.Lang.Object[] * int * int -&gt; Java.Util.ISpliterator" Usage="Java.Util.Arrays.Spliterator (array, startInclusive, endExclusive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("spliterator", "([Ljava/lang/Object;II)Ljava/util/Spliterator;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("spliterator", "([Ljava/lang/Object;II)Ljava/util/Spliterator;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.ISpliterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
        <Parameter Name="startInclusive" Type="System.Int32" />
        <Parameter Name="endExclusive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">type of elements</param>
        <param name="array">the array, assumed to be unmodified during use</param>
        <param name="startInclusive">the first index to cover, inclusive</param>
        <param name="endExclusive">index immediately past the last index to cover</param>
        <summary>Returns a <c>Spliterator</c> covering the specified range of the
            specified array.</summary>
        <returns>a spliterator for the array elements</returns>
        <remarks>
          <para>Returns a <c>Spliterator</c> covering the specified range of the
            specified array.</para>
          <para>The spliterator reports <c>Spliterator#SIZED</c>,
            <c>Spliterator#SUBSIZED</c>, <c>Spliterator#ORDERED</c>, and
            <c>Spliterator#IMMUTABLE</c>.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#spliterator(T[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.Arrays.spliterator(T[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Arrays.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Arrays.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Arrays.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Arrays.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;Java::Lang::Object ^&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (Java.Lang.Object[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(class Java.Lang.Object[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="static member ToString : Java.Lang.Object[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([Ljava/lang/Object;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([Ljava/lang/Object;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            If the array contains other arrays as elements, they are converted to
            strings by the <c>Object#toString</c> method inherited from
            <c>Object</c>, which describes their <i>identities</i> rather than
            their contents.</para>
          <para>The value returned by this method is equal to the value that would
            be returned by <c>Arrays.asList(a).toString()</c>, unless <c>a</c>
            is <c>null</c>, in which case <c>"null"</c> is returned.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(java.lang.Object[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(java.lang.Object[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Boolean()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;bool&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (bool[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(bool[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Boolean[])" />
      <MemberSignature Language="F#" Value="static member ToString : bool[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([Z)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([Z)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Boolean[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(boolean)</c>.  Returns <c>"null"</c> if
            <c>a</c> is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(boolean[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(boolean[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Byte()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;System::Byte&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (byte[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(unsigned int8[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Byte[])" />
      <MemberSignature Language="F#" Value="static member ToString : byte[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([B)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([B)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Byte[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements
            are separated by the characters <c>", "</c> (a comma followed
            by a space).  Elements are converted to strings as by
            <c>String.valueOf(byte)</c>.  Returns <c>"null"</c> if
            <c>a</c> is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(byte[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;char&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (char[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(char[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Char[])" />
      <MemberSignature Language="F#" Value="static member ToString : char[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([C)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([C)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(char)</c>.  Returns <c>"null"</c> if <c>a</c>
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(char[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Double()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;double&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (double[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Double[])" />
      <MemberSignature Language="F#" Value="static member ToString : double[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([D)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([D)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Double[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(double)</c>.  Returns <c>"null"</c> if <c>a</c>
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(double[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(double[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Short()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;short&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (short[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int16[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Int16[])" />
      <MemberSignature Language="F#" Value="static member ToString : int16[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([S)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([S)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int16[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(short)</c>.  Returns <c>"null"</c> if <c>a</c>
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(short[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Integer()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;int&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (int[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Int32[])" />
      <MemberSignature Language="F#" Value="static member ToString : int[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([I)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([I)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(int)</c>.  Returns <c>"null"</c> if <c>a</c> is
            <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(int[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Long()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;long&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (long[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(int64[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Int64[])" />
      <MemberSignature Language="F#" Value="static member ToString : int64[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([J)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([J)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(long)</c>.  Returns <c>"null"</c> if <c>a</c>
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(long[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(long[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToString (a As Single()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ ToString(cli::array &lt;float&gt; ^ a);" />
      <MemberSignature Language="C#" Value="public static string ToString (float[]? a);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ToString(float32[] a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Arrays.ToString(System.Single[])" />
      <MemberSignature Language="F#" Value="static member ToString : single[] -&gt; string" Usage="Java.Util.Arrays.ToString a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "([F)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "([F)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Single[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">the array whose string representation to return</param>
        <summary>Returns a string representation of the contents of the specified array.</summary>
        <returns>a string representation of <c>a</c></returns>
        <remarks>
          <para>Returns a string representation of the contents of the specified array.
            The string representation consists of a list of the array's elements,
            enclosed in square brackets (<c>"[]"</c>).  Adjacent elements are
            separated by the characters <c>", "</c> (a comma followed by a
            space).  Elements are converted to strings as by
            <c>String.valueOf(float)</c>.  Returns <c>"null"</c> if <c>a</c>
            is <c>null</c>.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/Arrays#toString(float[])" title="Reference documentation">Java documentation for <code>java.util.Arrays.toString(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
