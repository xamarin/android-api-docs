<Type Name="IListIterator" FullName="Java.Util.IListIterator">
  <TypeSignature Language="C#" Value="public interface IListIterator : IDisposable, Java.Interop.IJavaPeerable, Java.Util.IIterator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IListIterator implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Util.IIterator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.IListIterator" />
  <TypeSignature Language="F#" Value="type IListIterator = interface&#xA;    interface IIterator&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Util.IIterator</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/ListIterator", "", "Java.Util.IListIteratorInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/ListIterator", "", "Java.Util.IListIteratorInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An iterator for lists that allows the programmer
            to traverse the list in either direction, modify
            the list during iteration, and obtain the iterator's
            current position in the list.</summary>
    <remarks>
      <para>An iterator for lists that allows the programmer
            to traverse the list in either direction, modify
            the list during iteration, and obtain the iterator's
            current position in the list. A <c>ListIterator</c>
            has no current element; its <i>cursor position</i> always
            lies between the element that would be returned by a call
            to <c>previous()</c> and the element that would be
            returned by a call to <c>next()</c>.
            An iterator for a list of length <c>n</c> has <c>n+1</c> possible
            cursor positions, as illustrated by the carets (<c>^</c>) below:</para>
      <code lang="text/java">Element(0)   Element(1)   Element(2)   ... Element(n-1)
            cursor positions:  ^            ^            ^            ^                  ^
            </code>
      <para>Note that the <c>#remove</c> and <c>#set(Object)</c> methods are
            <i>not</i> defined in terms of the cursor position;  they are defined to
            operate on the last element returned by a call to <c>#next</c> or
            <c>#previous()</c>.</para>
      <para>This interface is a member of the
            <see href="https://developer.android.com//java.base/java/util/package-summary.html#CollectionsFramework">
            Java Collections Framework</see>.</para>
      <para>Added in 1.2.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/ListIterator" title="Reference documentation">Java documentation for <code>java.util.ListIterator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.Add(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Add : Java.Lang.Object -&gt; unit" Usage="iListIterator.Add e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("add", "(Ljava/lang/Object;)V", "GetAdd_Ljava_lang_Object_Handler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("add", "(Ljava/lang/Object;)V", "GetAdd_Ljava_lang_Object_Handler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element to insert</param>
        <summary>Inserts the specified element into the list (optional operation).</summary>
        <remarks>
          <para>Inserts the specified element into the list (optional operation).
            The element is inserted immediately before the element that
            would be returned by <c>#next</c>, if any, and after the element
            that would be returned by <c>#previous</c>, if any.  (If the
            list contains no elements, the new element becomes the sole element
            on the list.)  The new element is inserted before the implicit
            cursor: a subsequent call to <c>next</c> would be unaffected, and a
            subsequent call to <c>previous</c> would return the new element.
            (This call increases by one the value that would be returned by a
            call to <c>nextIndex</c> or <c>previousIndex</c>.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#add(E)" title="Reference documentation">Java documentation for <code>java.util.ListIterator.add(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNext">
      <MemberSignature Language="C#" Value="public bool HasNext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNext" />
      <MemberSignature Language="DocId" Value="P:Java.Util.IListIterator.HasNext" />
      <MemberSignature Language="F#" Value="member this.HasNext : bool" Usage="Java.Util.IListIterator.HasNext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Util.IIterator.HasNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasNext", "()Z", "GetHasNextHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasNext", "()Z", "GetHasNextHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether there are more elements to iterate.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.IListIterator.Next" />
      </Docs>
    </Member>
    <Member MemberName="HasPrevious">
      <MemberSignature Language="C#" Value="public bool HasPrevious { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrevious" />
      <MemberSignature Language="DocId" Value="P:Java.Util.IListIterator.HasPrevious" />
      <MemberSignature Language="F#" Value="member this.HasPrevious : bool" Usage="Java.Util.IListIterator.HasPrevious" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasPrevious", "()Z", "GetHasPreviousHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasPrevious", "()Z", "GetHasPreviousHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether there are previous elements to iterate.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Java.Util.IListIterator.Previous" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.Next" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; Java.Lang.Object" Usage="iListIterator.Next " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IIterator.Next</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("next", "()Ljava/lang/Object;", "GetNextHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("next", "()Ljava/lang/Object;", "GetNextHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the next element in the list and advances the cursor position.</summary>
        <returns>the next element in the list</returns>
        <remarks>
          <para>Returns the next element in the list and advances the cursor position.
            This method may be called repeatedly to iterate through the list,
            or intermixed with calls to <c>#previous</c> to go back and forth.
            (Note that alternating calls to <c>next</c> and <c>previous</c>
            will return the same element repeatedly.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#next()" title="Reference documentation">Java documentation for <code>java.util.ListIterator.next()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if there are no more elements.</exception>
        <altmember cref="P:Java.Util.IListIterator.HasNext" />
      </Docs>
    </Member>
    <Member MemberName="NextIndex">
      <MemberSignature Language="C#" Value="public int NextIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NextIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.NextIndex" />
      <MemberSignature Language="F#" Value="abstract member NextIndex : unit -&gt; int" Usage="iListIterator.NextIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextIndex", "()I", "GetNextIndexHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextIndex", "()I", "GetNextIndexHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the index of the element that would be returned by a
            subsequent call to <c>#next</c>.</summary>
        <returns>the index of the element that would be returned by a
                    subsequent call to <c>next</c>, or list size if the list
                    iterator is at the end of the list</returns>
        <remarks>
          <para>Returns the index of the element that would be returned by a
            subsequent call to <c>#next</c>. (Returns list size if the list
            iterator is at the end of the list.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#nextIndex()" title="Reference documentation">Java documentation for <code>java.util.ListIterator.nextIndex()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if there are no more elements.</exception>
        <altmember cref="M:Java.Util.IListIterator.Next" />
      </Docs>
    </Member>
    <Member MemberName="Previous">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Previous ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Previous() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.Previous" />
      <MemberSignature Language="F#" Value="abstract member Previous : unit -&gt; Java.Lang.Object" Usage="iListIterator.Previous " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("previous", "()Ljava/lang/Object;", "GetPreviousHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("previous", "()Ljava/lang/Object;", "GetPreviousHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the previous element in the list and moves the cursor
            position backwards.</summary>
        <returns>the previous element in the list</returns>
        <remarks>
          <para>Returns the previous element in the list and moves the cursor
            position backwards.  This method may be called repeatedly to
            iterate through the list backwards, or intermixed with calls to
            <c>#next</c> to go back and forth.  (Note that alternating calls
            to <c>next</c> and <c>previous</c> will return the same
            element repeatedly.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#previous()" title="Reference documentation">Java documentation for <code>java.util.ListIterator.previous()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if there are no previous elements.</exception>
        <altmember cref="P:Java.Util.IListIterator.HasPrevious" />
      </Docs>
    </Member>
    <Member MemberName="PreviousIndex">
      <MemberSignature Language="C#" Value="public int PreviousIndex ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 PreviousIndex() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.PreviousIndex" />
      <MemberSignature Language="F#" Value="abstract member PreviousIndex : unit -&gt; int" Usage="iListIterator.PreviousIndex " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("previousIndex", "()I", "GetPreviousIndexHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("previousIndex", "()I", "GetPreviousIndexHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the index of the element that would be returned by a
            subsequent call to <c>#previous</c>.</summary>
        <returns>the index of the element that would be returned by a
                    subsequent call to <c>previous</c>, or -1 if the list
                    iterator is at the beginning of the list</returns>
        <remarks>
          <para>Returns the index of the element that would be returned by a
            subsequent call to <c>#previous</c>. (Returns -1 if the list
            iterator is at the beginning of the list.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#previousIndex()" title="Reference documentation">Java documentation for <code>java.util.ListIterator.previousIndex()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if there are no previous elements.</exception>
        <altmember cref="M:Java.Util.IListIterator.Previous" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.Remove" />
      <MemberSignature Language="F#" Value="abstract member Remove : unit -&gt; unit" Usage="iListIterator.Remove " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Util.IIterator.Remove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "()V", "GetRemoveHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "()V", "GetRemoveHandler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes from the list the last element that was returned by <c>#next</c> or <c>#previous</c> (optional operation).</summary>
        <remarks>
          <para>Removes from the list the last element that was returned by <c>#next</c> or <c>#previous</c> (optional operation).  This call can
            only be made once per call to <c>next</c> or <c>previous</c>.
            It can be made only if <c>#add</c> has not been
            called after the last call to <c>next</c> or <c>previous</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#remove()" title="Reference documentation">Java documentation for <code>java.util.ListIterator.remove()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if removing is not supported by the list being iterated.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if <c>next</c> or <c>previous</c> have not been called, or
             <c>remove</c> or <c>add</c> have already been called after
             the last call to <c>next</c> or <c>previous</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (Java.Lang.Object? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Java.Lang.Object e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.IListIterator.Set(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Set : Java.Lang.Object -&gt; unit" Usage="iListIterator.Set e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Ljava/lang/Object;)V", "GetSet_Ljava_lang_Object_Handler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Ljava/lang/Object;)V", "GetSet_Ljava_lang_Object_Handler:Java.Util.IListIteratorInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">the element with which to replace the last element returned by
                     <c>next</c> or <c>previous</c></param>
        <summary>Replaces the last element returned by <c>#next</c> or
            <c>#previous</c> with the specified element (optional operation).</summary>
        <remarks>
          <para>Replaces the last element returned by <c>#next</c> or
            <c>#previous</c> with the specified element (optional operation).
            This call can be made only if neither <c>#remove</c> nor <c>#add</c> have been called after the last call to <c>next</c> or
            <c>previous</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/ListIterator#set(E)" title="Reference documentation">Java documentation for <code>java.util.ListIterator.set(E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
