<Type Name="KeyCharacterMap" FullName="Android.Views.KeyCharacterMap">
  <TypeSignature Language="C#" Value="public class KeyCharacterMap : Java.Lang.Object, Android.OS.IParcelable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyCharacterMap extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/KeyCharacterMap", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Describes the keys provided by a keyboard device and their associated labels.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Describes the keys provided by a keyboard device and their associated labels.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyCharacterMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombiningAccent">
      <MemberSignature Language="C#" Value="public const int CombiningAccent = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CombiningAccent = (-2147483648)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMBINING_ACCENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#COMBINING_ACCENT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CombiningAccentMask">
      <MemberSignature Language="C#" Value="public const int CombiningAccentMask = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CombiningAccentMask = (2147483647)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("COMBINING_ACCENT_MASK")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary>Mask the return value from <c><see cref="M:Android.Views.KeyCharacterMap.Get(Android.Views.Keycode,Android.Views.MetaKeyStates)" /></c> with this value to get
 a printable representation of the accent character of a "dead key.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Mask the return value from <c><see cref="M:Android.Views.KeyCharacterMap.Get(Android.Views.Keycode,Android.Views.MetaKeyStates)" /></c> with this value to get
 a printable representation of the accent character of a "dead key."
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#COMBINING_ACCENT_MASK" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#CREATOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#describeContents()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DeviceHasKey">
      <MemberSignature Language="C#" Value="public static bool DeviceHasKey (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeviceHasKey(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deviceHasKey", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code to query.</param>
        <summary>Queries the framework about whether any physical keys exist on the
 any keyboard attached to the device that are capable of producing the given key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Queries the framework about whether any physical keys exist on the
 any keyboard attached to the device that are capable of producing the given key code.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#deviceHasKey(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeviceHasKeys">
      <MemberSignature Language="C#" Value="public static bool[] DeviceHasKeys (Android.Views.Keycode[] keyCodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] DeviceHasKeys(valuetype Android.Views.Keycode[] keyCodes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deviceHasKeys", "([I)[Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCodes" Type="Android.Views.Keycode[]">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCodes">The array of key codes to query.</param>
        <summary>Queries the framework about whether any physical keys exist on the
 any keyboard attached to the device that are capable of producing the given
 array of key codes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Queries the framework about whether any physical keys exist on the
 any keyboard attached to the device that are capable of producing the given
 array of key codes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#deviceHasKeys(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual int Get (Android.Views.Keycode keyCode, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Get(valuetype Android.Views.Keycode keyCode, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("get", "(II)I", "GetGet_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="meta" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <param name="metaState">The meta key modifier state.</param>
        <summary>Gets the Unicode character generated by the specified key and meta
 key state combination.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the Unicode character generated by the specified key and meta
 key state combination.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns the Unicode character that the specified key would produce
 when the specified meta bits (see <c><see cref="T:Android.Text.Method.MetaKeyKeyListener" /></c>)
 were active.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns 0 if the key is not one that is used to type Unicode
 characters.
 </para>
          <para tool="javadoc-to-mdoc">
 If the return value has bit <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccent" /></c> set, the
 key is a "dead key" that should be combined with another to
 actually produce a character -- see <c><see cref="M:Android.Views.KeyCharacterMap.GetDeadChar(System.Int32,System.Int32)" /></c> --
 after masking with <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccentMask" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#get(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public int Get (Android.Views.Keycode keyCode, int metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Get(valuetype Android.Views.Keycode keyCode, int32 metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="metaState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeadChar">
      <MemberSignature Language="C#" Value="public static int GetDeadChar (int accent, int c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDeadChar(int32 accent, int32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDeadChar", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accent" Type="System.Int32" />
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accent">The accent character.  eg. '`'</param>
        <param name="c">The basic character.</param>
        <summary>Get the character that is produced by combining the dead key producing accent
 with the key producing character c.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the character that is produced by combining the dead key producing accent
 with the key producing character c.
 For example, getDeadChar('`', 'e') returns &amp;egrave;.
 getDeadChar('^', ' ') returns '^' and getDeadChar('^', '^') returns '^'.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getDeadChar(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayLabel">
      <MemberSignature Language="C#" Value="public virtual char GetDisplayLabel (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetDisplayLabel(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDisplayLabel", "(I)C", "GetGetDisplayLabel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Gets the primary character for this key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the primary character for this key.
 In other words, the label that is physically printed on it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getDisplayLabel(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyEvent[] GetEvents (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.KeyEvent[] GetEvents(char[] chars) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEvents", "([C)[Landroid/view/KeyEvent;", "GetGetEvents_arrayCHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">The sequence of characters to generate.</param>
        <summary>Get an array of KeyEvent objects that if put into the input stream
 could plausibly generate the provided sequence of characters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an array of KeyEvent objects that if put into the input stream
 could plausibly generate the provided sequence of characters.  It is
 not guaranteed that the sequence is the only way to generate these
 events or that it is optimal.
 </para>
          <para tool="javadoc-to-mdoc">
 This function is primarily offered for instrumentation and testing purposes.
 It may fail to map characters to key codes.  In particular, the key character
 map for the <c><see cref="!:Android.Views.KeyCharacterMap.BUILT_IN_KEYBOARD" /></c> device id may be empty.
 Consider using the key character map associated with the
 <c><see cref="!:Android.Views.KeyCharacterMap.VIRTUAL_KEYBOARD" /></c> device id instead.
 </para>
          <para tool="javadoc-to-mdoc">
 For robust text entry, do not use this function.  Instead construct a
 <c><see cref="T:Android.Views.KeyEvent" /></c> with action code <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c> that contains
 the desired string using <c><see cref="C:Android.Views.KeyEvent(System.Int64,System.String,System.String,System.String)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getEvents(char[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyData">
      <MemberSignature Language="C#" Value="public virtual bool GetKeyData (Android.Views.Keycode keyCode, Android.Views.KeyCharacterMap.KeyData results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetKeyData(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyCharacterMap/KeyData results) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getKeyData", "(ILandroid/view/KeyCharacterMap$KeyData;)Z", "GetGetKeyData_ILandroid_view_KeyCharacterMap_KeyData_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="results" Type="Android.Views.KeyCharacterMap+KeyData" />
      </Parameters>
      <Docs>
        <param name="keyCode">The keyCode to query.</param>
        <param name="results">A <c><see cref="!:NoType:android/view/KeyCharacterMap$KeyData;Href=../../../reference/android/view/KeyCharacterMap.KeyData.html" /></c> instance that will be filled with the results.</param>
        <summary>Get the character conversion data for a given key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the character conversion data for a given key code.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getKeyData(int, android.view.KeyCharacterMap.KeyData)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (Android.Views.Keycode keyCode, char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMatch", "(I[C)C", "GetGetMatch_IarrayCHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="keyCode">The keycode.</param>
        <param name="chars">The array of matching characters to consider.</param>
        <summary>Gets the first character in the character array that can be generated
 by the specified key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the first character in the character array that can be generated
 by the specified key code.
 </para>
          <para tool="javadoc-to-mdoc">
 This is a convenience function that returns the same value as
 <c><see cref="M:Android.Views.KeyCharacterMap.GetMatch(Android.Views.Keycode,System.Char[],System.Char[])" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getMatch(int, char[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (Android.Views.Keycode keyCode, char[] chars, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMatch", "(I[CI)C", "GetGetMatch_IarrayCIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="modifiers" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <param name="chars">The array of matching characters to consider.</param>
        <param name="metaState">The preferred meta key modifier state.</param>
        <summary>Gets the first character in the character array that can be generated
 by the specified key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the first character in the character array that can be generated
 by the specified key code.  If there are multiple choices, prefers
 the one that would be generated with the specified meta key modifier state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getMatch(int, char[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public char GetMatch (Android.Views.Keycode keyCode, char[] chars, int metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars, int32 metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="metaState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumber">
      <MemberSignature Language="C#" Value="public virtual char GetNumber (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNumber(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNumber", "(I)C", "GetGetNumber_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Gets the number or symbol associated with the key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the number or symbol associated with the key.
 </para>
          <para tool="javadoc-to-mdoc">
 The character value is returned, not the numeric value.
 If the key is not a number, but is a symbol, the symbol is retuned.
 </para>
          <para tool="javadoc-to-mdoc">
 This method is intended to to support dial pads and other numeric or
 symbolic entry on keyboards where certain keys serve dual function
 as alphabetic and symbolic keys.  This method returns the number
 or symbol associated with the key independent of whether the user
 has pressed the required modifier.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, on one particular keyboard the keys on the top QWERTY row generate
 numbers when ALT is pressed such that ALT-Q maps to '1'.  So for that keyboard
 when <c><see cref="M:Android.Views.KeyCharacterMap.GetNumber(Android.Views.Keycode)" /></c> is called with <c><see cref="!:Android.Views.KeyEvent.KEYCODE_Q" /></c> it returns '1'
 so that the user can type numbers without pressing ALT when it makes sense.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getNumber(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HexInput">
      <MemberSignature Language="C#" Value="public const char HexInput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char HexInput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("HEX_INPUT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This private-use character is used to trigger Unicode character
 input by hex digits.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This private-use character is used to trigger Unicode character
 input by hex digits.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#HEX_INPUT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsPrintingKey">
      <MemberSignature Language="C#" Value="public virtual bool IsPrintingKey (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrintingKey(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isPrintingKey", "(I)Z", "GetIsPrintingKey_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Returns true if the specified key produces a glyph.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the specified key produces a glyph.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#isPrintingKey(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardType">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyboardType KeyboardType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyboardType KeyboardType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeyboardType", "()I", "GetGetKeyboardTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyboardType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the keyboard type.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the keyboard type.
 Returns <c><see cref="!:Android.Views.KeyCharacterMap.NUMERIC" /></c>, <c><see cref="!:Android.Views.KeyCharacterMap.PREDICTIVE" /></c>, <c><see cref="!:Android.Views.KeyCharacterMap.ALPHA" /></c>, <c><see cref="!:Android.Views.KeyCharacterMap.FULL" /></c>
 or <c><see cref="!:Android.Views.KeyCharacterMap.SPECIAL_FUNCTION" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Different keyboard types have different semantics.  Refer to the documentation
 associated with the keyboard type constants for details.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getKeyboardType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyCharacterMap Load (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyCharacterMap Load(int32 deviceId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("load", "(I)Landroid/view/KeyCharacterMap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyCharacterMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyboard" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device id of the keyboard.</param>
        <summary>Loads the key character maps for the keyboard with the specified device id.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Loads the key character maps for the keyboard with the specified device id.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#load(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="!:NoType:UnavailableException} if the key character map&#xA; could not be loaded because it was malformed or the default key character map&#xA; is missing from the system." />
      </Docs>
    </Member>
    <Member MemberName="ModifierBehavior">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyModifierBehavior ModifierBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyModifierBehavior ModifierBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getModifierBehavior", "()I", "GetGetModifierBehaviorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyModifierBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a constant that describes the behavior of this keyboard's modifier keys
 such as <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SHIFT_LEFT" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a constant that describes the behavior of this keyboard's modifier keys
 such as <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SHIFT_LEFT" /></c>.
 <list type="bullet"><item><term>Chorded behavior: When the modifier key is pressed together with one or more
 character keys, the keyboard inserts the modified keys and
 then resets the modifier state when the modifier key is released.</term></item><item><term>Toggled behavior: When the modifier key is pressed and released on its own
 it first toggles into a latched state.  When latched, the modifier will apply
 to next character key that is pressed and will then reset itself to the initial state.
 If the modifier is already latched and the modifier key is pressed and release on
 its own again, then it toggles into a locked state.  When locked, the modifier will
 apply to all subsequent character keys that are pressed until unlocked by pressing
 the modifier key on its own one more time to reset it to the initial state.
 Toggled behavior is useful for small profile keyboards designed for thumb typing.
 </term></item></list></para>
          <para tool="javadoc-to-mdoc">
 Currently there are two behaviors that may be combined:
 </para>
          <para tool="javadoc-to-mdoc">
 This function currently returns <c><see cref="!:Android.Views.KeyCharacterMap.MODIFIER_BEHAVIOR_CHORDED" /></c> when the
 <c><see cref="P:Android.Views.KeyCharacterMap.KeyboardType" /></c> is <c><see cref="!:Android.Views.KeyCharacterMap.FULL" /></c> or <c><see cref="!:Android.Views.KeyCharacterMap.SPECIAL_FUNCTION" /></c> and
 <c><see cref="!:Android.Views.KeyCharacterMap.MODIFIER_BEHAVIOR_CHORDED_OR_TOGGLED" /></c> otherwise.
 In the future, the function may also take into account global keyboard
 accessibility settings, other user preferences, or new device capabilities.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#getModifierBehavior()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PickerDialogInput">
      <MemberSignature Language="C#" Value="public const char PickerDialogInput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char PickerDialogInput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PICKER_DIALOG_INPUT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This private-use character is used to bring up a character picker for
 miscellaneous symbols.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This private-use character is used to bring up a character picker for
 miscellaneous symbols.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#PICKER_DIALOG_INPUT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flatten this object in to a Parcel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyCharacterMap.html#writeToParcel(android.os.Parcel, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
