<Type Name="KeyCharacterMap" FullName="Android.Views.KeyCharacterMap">
  <TypeSignature Language="C#" Value="public class KeyCharacterMap : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyCharacterMap extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.KeyCharacterMap" />
  <TypeSignature Language="F#" Value="type KeyCharacterMap = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/KeyCharacterMap", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/KeyCharacterMap", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Describes the keys provided by a keyboard device and their associated labels.</summary>
    <remarks>
      <para>Describes the keys provided by a keyboard device and their associated labels.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/KeyCharacterMap" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyCharacterMap (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.KeyCharacterMap : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.KeyCharacterMap" Usage="new Android.Views.KeyCharacterMap (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CombiningAccent">
      <MemberSignature Language="C#" Value="public const int CombiningAccent = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CombiningAccent = (-2147483648)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.KeyCharacterMap.CombiningAccent" />
      <MemberSignature Language="F#" Value="val mutable CombiningAccent : int" Usage="Android.Views.KeyCharacterMap.CombiningAccent" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("COMBINING_ACCENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("COMBINING_ACCENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CombiningAccentMask">
      <MemberSignature Language="C#" Value="public const int CombiningAccentMask = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 CombiningAccentMask = (2147483647)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.KeyCharacterMap.CombiningAccentMask" />
      <MemberSignature Language="F#" Value="val mutable CombiningAccentMask : int" Usage="Android.Views.KeyCharacterMap.CombiningAccentMask" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("COMBINING_ACCENT_MASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("COMBINING_ACCENT_MASK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary>Mask the return value from <c>#get(int, int)</c> with this value to get
            a printable representation of the accent character of a "dead key.</summary>
        <remarks>
          <para>Mask the return value from <c>#get(int, int)</c> with this value to get
            a printable representation of the accent character of a "dead key."</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#COMBINING_ACCENT_MASK" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.COMBINING_ACCENT_MASK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator? Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.Creator" />
      <MemberSignature Language="F#" Value="static member Creator : Android.OS.IParcelableCreator" Usage="Android.Views.KeyCharacterMap.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="keyCharacterMap.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DeviceHasKey">
      <MemberSignature Language="C#" Value="public static bool DeviceHasKey (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DeviceHasKey(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.DeviceHasKey(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="static member DeviceHasKey : Android.Views.Keycode -&gt; bool" Usage="Android.Views.KeyCharacterMap.DeviceHasKey keyCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deviceHasKey", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deviceHasKey", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code to query.</param>
        <summary>Queries the framework about whether any physical keys exist on any currently attached input
            devices that are capable of producing the given key code.</summary>
        <returns>True if at least one attached keyboard supports the specified key code.</returns>
        <remarks>
          <para>Queries the framework about whether any physical keys exist on any currently attached input
            devices that are capable of producing the given key code.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#deviceHasKey(int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.deviceHasKey(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DeviceHasKeys">
      <MemberSignature Language="C#" Value="public static bool[]? DeviceHasKeys (Android.Views.Keycode[]? keyCodes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool[] DeviceHasKeys(valuetype Android.Views.Keycode[] keyCodes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.DeviceHasKeys(Android.Views.Keycode[])" />
      <MemberSignature Language="F#" Value="static member DeviceHasKeys : Android.Views.Keycode[] -&gt; bool[]" Usage="Android.Views.KeyCharacterMap.DeviceHasKeys keyCodes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deviceHasKeys", "([I)[Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deviceHasKeys", "([I)[Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCodes" Type="Android.Views.Keycode[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCodes">The array of key codes to query.</param>
        <summary>Queries the framework about whether any physical keys exist on any currently attached input
            devices that are capable of producing the given array of key codes.</summary>
        <returns>A new array of the same size as the key codes array whose elements
            are set to true if at least one attached keyboard supports the corresponding key code
            at the same index in the key codes array.</returns>
        <remarks>
          <para>Queries the framework about whether any physical keys exist on any currently attached input
            devices that are capable of producing the given array of key codes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#deviceHasKeys(int[])" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.deviceHasKeys(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual int Get (Android.Views.Keycode keyCode, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Get(valuetype Android.Views.Keycode keyCode, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.Get(Android.Views.Keycode,Android.Views.MetaKeyStates)" />
      <MemberSignature Language="F#" Value="abstract member Get : Android.Views.Keycode * Android.Views.MetaKeyStates -&gt; int&#xA;override this.Get : Android.Views.Keycode * Android.Views.MetaKeyStates -&gt; int" Usage="keyCharacterMap.Get (keyCode, metaState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(II)I", "GetGet_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(II)I", "GetGet_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <param name="metaState">The meta key modifier state.</param>
        <summary>Gets the Unicode character generated by the specified key and meta
            key state combination.</summary>
        <returns>The associated character or combining accent, or 0 if none.</returns>
        <remarks>
          <para>Gets the Unicode character generated by the specified key and meta
            key state combination.</para>
          <para>Returns the Unicode character that the specified key would produce
            when the specified meta bits (see <c>MetaKeyKeyListener</c>)
            were active.</para>
          <para>Returns 0 if the key is not one that is used to type Unicode
            characters.</para>
          <para>If the return value has bit <c>#COMBINING_ACCENT</c> set, the
            key is a "dead key" that should be combined with another to
            actually produce a character -- see <c>#getDeadChar</c> --
            after masking with <c>#COMBINING_ACCENT_MASK</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#get(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.get(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public int Get (Android.Views.Keycode keyCode, int metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Get(valuetype Android.Views.Keycode keyCode, int32 metaState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.Get(Android.Views.Keycode,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Get : Android.Views.Keycode * int -&gt; int" Usage="keyCharacterMap.Get (keyCode, metaState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="metaState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeadChar">
      <MemberSignature Language="C#" Value="public static int GetDeadChar (int accent, int c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDeadChar(int32 accent, int32 c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetDeadChar(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDeadChar : int * int -&gt; int" Usage="Android.Views.KeyCharacterMap.GetDeadChar (accent, c)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDeadChar", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDeadChar", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accent" Type="System.Int32" />
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accent">The accent character.  eg. '`'</param>
        <param name="c">The basic character.</param>
        <summary>Get the character that is produced by combining the dead key producing accent
            with the key producing character c.</summary>
        <returns>The combined character, or 0 if the characters cannot be combined.</returns>
        <remarks>
          <para>Get the character that is produced by combining the dead key producing accent
            with the key producing character c.
            For example, getDeadChar('`', 'e') returns &amp;egrave;.
            getDeadChar('^', ' ') returns '^' and getDeadChar('^', '^') returns '^'.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getDeadChar(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getDeadChar(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayLabel">
      <MemberSignature Language="C#" Value="public virtual char GetDisplayLabel (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetDisplayLabel(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetDisplayLabel(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayLabel : Android.Views.Keycode -&gt; char&#xA;override this.GetDisplayLabel : Android.Views.Keycode -&gt; char" Usage="keyCharacterMap.GetDisplayLabel keyCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDisplayLabel", "(I)C", "GetGetDisplayLabel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDisplayLabel", "(I)C", "GetGetDisplayLabel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Gets the primary character for this key.</summary>
        <returns>The display label character, or 0 if none (eg. for non-printing keys).</returns>
        <remarks>
          <para>Gets the primary character for this key.
            In other words, the label that is physically printed on it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getDisplayLabel(int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getDisplayLabel(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEvents">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyEvent[]? GetEvents (char[]? chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.KeyEvent[] GetEvents(char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetEvents(System.Char[])" />
      <MemberSignature Language="F#" Value="abstract member GetEvents : char[] -&gt; Android.Views.KeyEvent[]&#xA;override this.GetEvents : char[] -&gt; Android.Views.KeyEvent[]" Usage="keyCharacterMap.GetEvents chars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEvents", "([C)[Landroid/view/KeyEvent;", "GetGetEvents_arrayCHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEvents", "([C)[Landroid/view/KeyEvent;", "GetGetEvents_arrayCHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">The sequence of characters to generate.</param>
        <summary>Get an array of KeyEvent objects that if put into the input stream
            could plausibly generate the provided sequence of characters.</summary>
        <returns>An array of <c>KeyEvent</c> objects, or null if the given char array
                    can not be generated using the current key character map.</returns>
        <remarks>
          <para>Get an array of KeyEvent objects that if put into the input stream
            could plausibly generate the provided sequence of characters.  It is
            not guaranteed that the sequence is the only way to generate these
            events or that it is optimal.</para>
          <para>This function is primarily offered for instrumentation and testing purposes.
            It may fail to map characters to key codes.  In particular, the key character
            map for the <c>#BUILT_IN_KEYBOARD built-in keyboard</c> device id may be empty.
            Consider using the key character map associated with the
            <c>#VIRTUAL_KEYBOARD virtual keyboard</c> device id instead.</para>
          <para>For robust text entry, do not use this function.  Instead construct a
            <c>KeyEvent</c> with action code <c>KeyEvent#ACTION_MULTIPLE</c> that contains
            the desired string using <c>KeyEvent#KeyEvent(long, String, int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getEvents(char[])" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getEvents(char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyData">
      <MemberSignature Language="C#" Value="public virtual bool GetKeyData (Android.Views.Keycode keyCode, Android.Views.KeyCharacterMap.KeyData? results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetKeyData(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyCharacterMap/KeyData results) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetKeyData(Android.Views.Keycode,Android.Views.KeyCharacterMap.KeyData)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyData : Android.Views.Keycode * Android.Views.KeyCharacterMap.KeyData -&gt; bool&#xA;override this.GetKeyData : Android.Views.Keycode * Android.Views.KeyCharacterMap.KeyData -&gt; bool" Usage="keyCharacterMap.GetKeyData (keyCode, results)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getKeyData", "(ILandroid/view/KeyCharacterMap$KeyData;)Z", "GetGetKeyData_ILandroid_view_KeyCharacterMap_KeyData_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getKeyData", "(ILandroid/view/KeyCharacterMap$KeyData;)Z", "GetGetKeyData_ILandroid_view_KeyCharacterMap_KeyData_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="results" Type="Android.Views.KeyCharacterMap+KeyData" />
      </Parameters>
      <Docs>
        <param name="keyCode">The keyCode to query.</param>
        <param name="results">A <c>KeyData</c> instance that will be filled with the results.</param>
        <summary>Get the character conversion data for a given key code.</summary>
        <returns>True if the key was mapped.  If the key was not mapped, results is not modified.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getKeyData(int,%20android.view.KeyData)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getKeyData(int, android.view.KeyData)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (Android.Views.Keycode keyCode, char[]? chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetMatch(Android.Views.Keycode,System.Char[])" />
      <MemberSignature Language="F#" Value="abstract member GetMatch : Android.Views.Keycode * char[] -&gt; char&#xA;override this.GetMatch : Android.Views.Keycode * char[] -&gt; char" Usage="keyCharacterMap.GetMatch (keyCode, chars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMatch", "(I[C)C", "GetGetMatch_IarrayCHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMatch", "(I[C)C", "GetGetMatch_IarrayCHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="keyCode">The keycode.</param>
        <param name="chars">The array of matching characters to consider.</param>
        <summary>Gets the first character in the character array that can be generated
            by the specified key code.</summary>
        <returns>The matching associated character, or 0 if none.</returns>
        <remarks>
          <para>Gets the first character in the character array that can be generated
            by the specified key code.</para>
          <para>This is a convenience function that returns the same value as
            <c>#getMatch(int,char[],int) getMatch(keyCode, chars, 0)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getMatch(int,%20char[])" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getMatch(int, char[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (Android.Views.Keycode keyCode, char[]? chars, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetMatch(Android.Views.Keycode,System.Char[],Android.Views.MetaKeyStates)" />
      <MemberSignature Language="F#" Value="abstract member GetMatch : Android.Views.Keycode * char[] * Android.Views.MetaKeyStates -&gt; char&#xA;override this.GetMatch : Android.Views.Keycode * char[] * Android.Views.MetaKeyStates -&gt; char" Usage="keyCharacterMap.GetMatch (keyCode, chars, metaState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMatch", "(I[CI)C", "GetGetMatch_IarrayCIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMatch", "(I[CI)C", "GetGetMatch_IarrayCIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <param name="chars">The array of matching characters to consider.</param>
        <param name="metaState">The preferred meta key modifier state.</param>
        <summary>Gets the first character in the character array that can be generated
            by the specified key code.</summary>
        <returns>The matching associated character, or 0 if none.</returns>
        <remarks>
          <para>Gets the first character in the character array that can be generated
            by the specified key code.  If there are multiple choices, prefers
            the one that would be generated with the specified meta key modifier state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getMatch(int,%20char[],%20int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getMatch(int, char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public char GetMatch (Android.Views.Keycode keyCode, char[] chars, int metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetMatch(valuetype Android.Views.Keycode keyCode, char[] chars, int32 metaState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetMatch(Android.Views.Keycode,System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetMatch : Android.Views.Keycode * char[] * int -&gt; char" Usage="keyCharacterMap.GetMatch (keyCode, chars, metaState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode" />
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="metaState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <param name="chars">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNumber">
      <MemberSignature Language="C#" Value="public virtual char GetNumber (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetNumber(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.GetNumber(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member GetNumber : Android.Views.Keycode -&gt; char&#xA;override this.GetNumber : Android.Views.Keycode -&gt; char" Usage="keyCharacterMap.GetNumber keyCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNumber", "(I)C", "GetGetNumber_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNumber", "(I)C", "GetGetNumber_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Gets the number or symbol associated with the key.</summary>
        <returns>The associated numeric or symbolic character, or 0 if none.</returns>
        <remarks>
          <para>Gets the number or symbol associated with the key.</para>
          <para>The character value is returned, not the numeric value.
            If the key is not a number, but is a symbol, the symbol is retuned.</para>
          <para>This method is intended to to support dial pads and other numeric or
            symbolic entry on keyboards where certain keys serve dual function
            as alphabetic and symbolic keys.  This method returns the number
            or symbol associated with the key independent of whether the user
            has pressed the required modifier.</para>
          <para>For example, on one particular keyboard the keys on the top QWERTY row generate
            numbers when ALT is pressed such that ALT-Q maps to '1'.  So for that keyboard
            when <c>#getNumber</c> is called with <c>KeyEvent#KEYCODE_Q</c> it returns '1'
            so that the user can type numbers without pressing ALT when it makes sense.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getNumber(int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getNumber(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HexInput">
      <MemberSignature Language="C#" Value="public const char HexInput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char HexInput" />
      <MemberSignature Language="DocId" Value="F:Android.Views.KeyCharacterMap.HexInput" />
      <MemberSignature Language="F#" Value="val mutable HexInput : char" Usage="Android.Views.KeyCharacterMap.HexInput" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HEX_INPUT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HEX_INPUT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This private-use character is used to trigger Unicode character
            input by hex digits.</summary>
        <remarks>
          <para>This private-use character is used to trigger Unicode character
            input by hex digits.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#HEX_INPUT" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.HEX_INPUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsPrintingKey">
      <MemberSignature Language="C#" Value="public virtual bool IsPrintingKey (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPrintingKey(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.IsPrintingKey(Android.Views.Keycode)" />
      <MemberSignature Language="F#" Value="abstract member IsPrintingKey : Android.Views.Keycode -&gt; bool&#xA;override this.IsPrintingKey : Android.Views.Keycode -&gt; bool" Usage="keyCharacterMap.IsPrintingKey keyCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPrintingKey", "(I)Z", "GetIsPrintingKey_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPrintingKey", "(I)Z", "GetIsPrintingKey_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Returns true if the specified key produces a glyph.</summary>
        <returns>True if the key is a printing key.</returns>
        <remarks>
          <para>Returns true if the specified key produces a glyph.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#isPrintingKey(int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.isPrintingKey(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.KeyCharacterMap.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardType">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyboardType KeyboardType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyboardType KeyboardType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.KeyboardType" />
      <MemberSignature Language="F#" Value="member this.KeyboardType : Android.Views.KeyboardType" Usage="Android.Views.KeyCharacterMap.KeyboardType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyboardType", "()I", "GetGetKeyboardTypeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyboardType", "()I", "GetGetKeyboardTypeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyboardType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the keyboard type.</summary>
        <value>The keyboard type.</value>
        <remarks>
          <para>Gets the keyboard type.
            Returns <c>#NUMERIC</c>, <c>#PREDICTIVE</c>, <c>#ALPHA</c>, <c>#FULL</c>
            or <c>#SPECIAL_FUNCTION</c>.</para>
          <para>Different keyboard types have different semantics.  Refer to the documentation
            associated with the keyboard type constants for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getKeyboardType()" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getKeyboardType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyCharacterMap? Load (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyCharacterMap Load(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.Load(System.Int32)" />
      <MemberSignature Language="F#" Value="static member Load : int -&gt; Android.Views.KeyCharacterMap" Usage="Android.Views.KeyCharacterMap.Load deviceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("load", "(I)Landroid/view/KeyCharacterMap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("load", "(I)Landroid/view/KeyCharacterMap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyCharacterMap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId">The device id of the keyboard.</param>
        <summary>Loads the key character maps for the keyboard with the specified device id.</summary>
        <returns>The associated key character map.</returns>
        <remarks>
          <para>Loads the key character maps for the keyboard with the specified device id.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#load(int)" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.load(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModifierBehavior">
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyModifierBehavior ModifierBehavior { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyModifierBehavior ModifierBehavior" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.ModifierBehavior" />
      <MemberSignature Language="F#" Value="member this.ModifierBehavior : Android.Views.KeyModifierBehavior" Usage="Android.Views.KeyCharacterMap.ModifierBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getModifierBehavior", "()I", "GetGetModifierBehaviorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getModifierBehavior", "()I", "GetGetModifierBehaviorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyModifierBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a constant that describes the behavior of this keyboard's modifier keys
            such as <c>KeyEvent#KEYCODE_SHIFT_LEFT</c>.</summary>
        <value>The modifier behavior for this keyboard.</value>
        <remarks>
          <para>Gets a constant that describes the behavior of this keyboard's modifier keys
            such as <c>KeyEvent#KEYCODE_SHIFT_LEFT</c>.</para>
          <para>Currently there are two behaviors that may be combined:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;Chorded behavior: When the modifier key is pressed together with one or more
            character keys, the keyboard inserts the modified keys and
            then resets the modifier state when the modifier key is released.&lt;/li&gt;
            &lt;li&gt;Toggled behavior: When the modifier key is pressed and released on its own
            it first toggles into a latched state.  When latched, the modifier will apply
            to next character key that is pressed and will then reset itself to the initial state.
            If the modifier is already latched and the modifier key is pressed and release on
            its own again, then it toggles into a locked state.  When locked, the modifier will
            apply to all subsequent character keys that are pressed until unlocked by pressing
            the modifier key on its own one more time to reset it to the initial state.
            Toggled behavior is useful for small profile keyboards designed for thumb typing.
            &lt;/ul&gt;</para>
          <para>This function currently returns <c>#MODIFIER_BEHAVIOR_CHORDED</c> when the
            <c>#getKeyboardType() keyboard type</c> is <c>#FULL</c> or <c>#SPECIAL_FUNCTION</c> and
            <c>#MODIFIER_BEHAVIOR_CHORDED_OR_TOGGLED</c> otherwise.
            In the future, the function may also take into account global keyboard
            accessibility settings, other user preferences, or new device capabilities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#getModifierBehavior()" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.getModifierBehavior()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="PickerDialogInput">
      <MemberSignature Language="C#" Value="public const char PickerDialogInput;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char PickerDialogInput" />
      <MemberSignature Language="DocId" Value="F:Android.Views.KeyCharacterMap.PickerDialogInput" />
      <MemberSignature Language="F#" Value="val mutable PickerDialogInput : char" Usage="Android.Views.KeyCharacterMap.PickerDialogInput" />
      <MemberType>Field</MemberType>
      <Implements>
        <InterfaceMember>F:Android.OS.IParcelable.ContentsFileDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PICKER_DIALOG_INPUT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PICKER_DIALOG_INPUT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This private-use character is used to bring up a character picker for
            miscellaneous symbols.</summary>
        <remarks>
          <para>This private-use character is used to bring up a character picker for
            miscellaneous symbols.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyCharacterMap#PICKER_DIALOG_INPUT" title="Reference documentation">Java documentation for <code>android.view.KeyCharacterMap.PICKER_DIALOG_INPUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.KeyCharacterMap.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyCharacterMap.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.KeyCharacterMap.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel? out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyCharacterMap.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="keyCharacterMap.WriteToParcel (out, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" />.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
