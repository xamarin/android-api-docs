<Type Name="SurfaceControlViewHost+SurfacePackage" FullName="Android.Views.SurfaceControlViewHost+SurfacePackage">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SurfaceControlViewHost.SurfacePackage&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, IParcelable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class SurfaceControlViewHost::SurfacePackage sealed : Java::Lang::Object, Android::OS::IParcelable, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public sealed class SurfaceControlViewHost.SurfacePackage : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit SurfaceControlViewHost/SurfacePackage extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.SurfaceControlViewHost.SurfacePackage" />
  <TypeSignature Language="F#" Value="type SurfaceControlViewHost.SurfacePackage = class&#xA;    inherit Object&#xA;    interface IParcelable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/SurfaceControlViewHost$SurfacePackage", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/SurfaceControlViewHost$SurfacePackage", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Package encapsulating a Surface hierarchy which contains interactive view
            elements.</summary>
    <remarks>
      <para>Package encapsulating a Surface hierarchy which contains interactive view
            elements. It's expected to get this object from
            <c>SurfaceControlViewHost#getSurfacePackage</c> afterwards it can be embedded within
            a SurfaceView by calling <c>SurfaceView#setChildSurfacePackage</c>.
            
            Note that each <c>SurfacePackage</c> must be released by calling
            <c>SurfacePackage#release</c>. However, if you use the recommended flow,
             the framework will automatically handle the lifetime for you.
            
            1. When sending the package to the remote process, return it from an AIDL method
            or manually use FLAG_WRITE_RETURN_VALUE in writeToParcel. This will automatically
            release the package in the local process.
            2. In the remote process, consume the package using SurfaceView. This way the
            SurfaceView will take over the lifetime and call <c>SurfacePackage#release</c>
            for the user.
            
            One final note: The <c>SurfacePackage</c> lifetime is totally de-coupled
            from the lifetime of the underlying <c>SurfaceControlViewHost</c>. Regardless
            of the lifetime of the package the user should still call
            <c>SurfaceControlViewHost#release</c> when finished.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/SurfaceControlViewHost.SurfacePackage" title="Reference documentation">Java documentation for <code>android.view.SurfaceControlViewHost.SurfacePackage</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (other As SurfaceControlViewHost.SurfacePackage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SurfacePackage(Android::Views::SurfaceControlViewHost::SurfacePackage ^ other);" />
      <MemberSignature Language="C#" Value="public SurfacePackage (Android.Views.SurfaceControlViewHost.SurfacePackage other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.SurfaceControlViewHost/SurfacePackage other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.#ctor(Android.Views.SurfaceControlViewHost.SurfacePackage)" />
      <MemberSignature Language="F#" Value="new Android.Views.SurfaceControlViewHost.SurfacePackage : Android.Views.SurfaceControlViewHost.SurfacePackage -&gt; Android.Views.SurfaceControlViewHost.SurfacePackage" Usage="new Android.Views.SurfaceControlViewHost.SurfacePackage other" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/SurfaceControlViewHost$SurfacePackage;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/SurfaceControlViewHost$SurfacePackage;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="other" Type="Android.Views.SurfaceControlViewHost+SurfacePackage" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Creator As IParcelableCreator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::OS::IParcelableCreator ^ Creator { Android::OS::IParcelableCreator ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.SurfaceControlViewHost.SurfacePackage.Creator" />
      <MemberSignature Language="F#" Value="member this.Creator : Android.OS.IParcelableCreator" Usage="Android.Views.SurfaceControlViewHost.SurfacePackage.Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CREATOR", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CREATOR", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="VB.NET" Value="Public Function DescribeContents () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int DescribeContents();" />
      <MemberSignature Language="C#" Value="public int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.DescribeContents" />
      <MemberSignature Language="F#" Value="abstract member DescribeContents : unit -&gt; int&#xA;override this.DescribeContents : unit -&gt; int" Usage="surfacePackage.DescribeContents " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.DescribeContents</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("describeContents", "()I", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("describeContents", "()I", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.SurfaceControlViewHost.SurfacePackage.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.SurfaceControlViewHost.SurfacePackage.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyConfigurationChanged">
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyConfigurationChanged (c As Configuration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyConfigurationChanged(Android::Content::Res::Configuration ^ c);" />
      <MemberSignature Language="C#" Value="public void NotifyConfigurationChanged (Android.Content.Res.Configuration c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyConfigurationChanged(class Android.Content.Res.Configuration c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.NotifyConfigurationChanged(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="member this.NotifyConfigurationChanged : Android.Content.Res.Configuration -&gt; unit" Usage="surfacePackage.NotifyConfigurationChanged c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyConfigurationChanged", "(Landroid/content/res/Configuration;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyConfigurationChanged", "(Landroid/content/res/Configuration;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="c">The configuration to forward</param>
        <summary>Forward a configuration to the remote SurfaceControlViewHost.</summary>
        <remarks>
          <para>Forward a configuration to the remote SurfaceControlViewHost.
            This will cause View#onConfigurationChanged to be invoked on the remote
            end. This does not automatically cause the SurfaceControlViewHost
            to be resized. The root View of a SurfaceControlViewHost
            is more akin to a PopupWindow in that the size is user specified
            independent of configuration width and height.
            
            In order to receive the configuration change via
            <c>View#onConfigurationChanged</c>, the context used with the
            SurfaceControlViewHost and it's embedded view hierarchy must
            be a WindowContext obtained from <c>Context#createWindowContext</c>.
            
            If a regular service context is used, then your embedded view hierarchy
            will always perceive the global configuration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/SurfaceControlViewHost.SurfacePackage#notifyConfigurationChanged(android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.view.SurfaceControlViewHost.SurfacePackage.notifyConfigurationChanged(android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyDetachedFromWindow">
      <MemberSignature Language="VB.NET" Value="Public Sub NotifyDetachedFromWindow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NotifyDetachedFromWindow();" />
      <MemberSignature Language="C#" Value="public void NotifyDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void NotifyDetachedFromWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.NotifyDetachedFromWindow" />
      <MemberSignature Language="F#" Value="member this.NotifyDetachedFromWindow : unit -&gt; unit" Usage="surfacePackage.NotifyDetachedFromWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyDetachedFromWindow", "()V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyDetachedFromWindow", "()V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tear down the remote SurfaceControlViewHost and cause
            View#onDetachedFromWindow to be invoked on the other side.</summary>
        <remarks>
          <para>Tear down the remote SurfaceControlViewHost and cause
            View#onDetachedFromWindow to be invoked on the other side.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/SurfaceControlViewHost.SurfacePackage#notifyDetachedFromWindow()" title="Reference documentation">Java documentation for <code>android.view.SurfaceControlViewHost.SurfacePackage.notifyDetachedFromWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Release();" />
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.Release" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; unit" Usage="surfacePackage.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Release the <c>SurfaceControl</c> associated with this package.</summary>
        <remarks>
          <para>Release the <c>SurfaceControl</c> associated with this package.
            It's not necessary to call this if you pass the package to
            <c>SurfaceView#setChildSurfacePackage</c> as <c>SurfaceView</c> will
            take ownership in that case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/SurfaceControlViewHost.SurfacePackage#release()" title="Reference documentation">Java documentation for <code>android.view.SurfaceControlViewHost.SurfacePackage.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceControl">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SurfaceControl As SurfaceControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::SurfaceControl ^ SurfaceControl { Android::Views::SurfaceControl ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Views.SurfaceControl SurfaceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.SurfaceControl SurfaceControl" />
      <MemberSignature Language="DocId" Value="P:Android.Views.SurfaceControlViewHost.SurfacePackage.SurfaceControl" />
      <MemberSignature Language="F#" Value="member this.SurfaceControl : Android.Views.SurfaceControl" Usage="Android.Views.SurfaceControlViewHost.SurfacePackage.SurfaceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSurfaceControl", "()Landroid/view/SurfaceControl;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSurfaceControl", "()Landroid/view/SurfaceControl;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SurfaceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>android.view.SurfaceControl</c> associated with this SurfacePackage for
            cases where more control is required.</summary>
        <value>the SurfaceControl associated with this SurfacePackage and its containing
                SurfaceControlViewHost</value>
        <remarks>
          <para>Returns the <c>android.view.SurfaceControl</c> associated with this SurfacePackage for
            cases where more control is required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/SurfaceControlViewHost.SurfacePackage#getSurfaceControl()" title="Reference documentation">Java documentation for <code>android.view.SurfaceControlViewHost.SurfacePackage.getSurfaceControl()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.SurfaceControlViewHost.SurfacePackage.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.SurfaceControlViewHost.SurfacePackage.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.SurfaceControlViewHost.SurfacePackage.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.SurfaceControlViewHost.SurfacePackage.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="VB.NET" Value="Public Sub WriteToParcel (out As Parcel, flags As ParcelableWriteFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteToParcel(Android::OS::Parcel ^ out, Android::OS::ParcelableWriteFlags flags);" />
      <MemberSignature Language="C#" Value="public void WriteToParcel (Android.OS.Parcel out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.SurfaceControlViewHost.SurfacePackage.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)" />
      <MemberSignature Language="F#" Value="abstract member WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit&#xA;override this.WriteToParcel : Android.OS.Parcel * Android.OS.ParcelableWriteFlags -&gt; unit" Usage="surfacePackage.WriteToParcel (out, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IParcelable.WriteToParcel(Android.OS.Parcel,Android.OS.ParcelableWriteFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="out">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
