<Type Name="WindowManagerFlags" FullName="Android.Views.WindowManagerFlags">
  <TypeSignature Language="C#" Value="public enum WindowManagerFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed WindowManagerFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Android.Views.WindowManagerFlags" />
  <TypeSignature Language="F#" Value="type WindowManagerFlags = " />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Flags]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Flags&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of  several types.</summary>
    <remarks>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowLockWhileScreenOn">
      <MemberSignature Language="C#" Value="AllowLockWhileScreenOn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags AllowLockWhileScreenOn = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.AllowLockWhileScreenOn" />
      <MemberSignature Language="F#" Value="AllowLockWhileScreenOn = 1" Usage="Android.Views.WindowManagerFlags.AllowLockWhileScreenOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_ALLOW_LOCK_WHILE_SCREEN_ON")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: as long as this window is visible to the user, allow
  the lock screen to activate while the screen is on. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AltFocusableIm">
      <MemberSignature Language="C#" Value="AltFocusableIm" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags AltFocusableIm = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.AltFocusableIm" />
      <MemberSignature Language="F#" Value="AltFocusableIm = 131072" Usage="Android.Views.WindowManagerFlags.AltFocusableIm" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_ALT_FOCUSABLE_IM")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_ALT_FOCUSABLE_IM")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: invert the state of <see cref="F:Android.Views.WindowManagerFlags.NotFocusable" />with
 respect to how this window interacts with the current method. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BlurBehind">
      <MemberSignature Language="C#" Value="BlurBehind" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags BlurBehind = int32(4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.BlurBehind" />
      <MemberSignature Language="F#" Value="BlurBehind = 4" Usage="Android.Views.WindowManagerFlags.BlurBehind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_BLUR_BEHIND")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_BLUR_BEHIND")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: blur everything behind this window.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DimBehind">
      <MemberSignature Language="C#" Value="DimBehind" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags DimBehind = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.DimBehind" />
      <MemberSignature Language="F#" Value="DimBehind = 2" Usage="Android.Views.WindowManagerFlags.DimBehind" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DIM_BEHIND")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DIM_BEHIND")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: everything behind this window will be dimmed.
  Use <see cref="P:Android.Views.WindowManagerLayoutParams.DimAmount" />to control the amount of dim.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DismissKeyguard">
      <MemberSignature Language="C#" Value="DismissKeyguard" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags DismissKeyguard = int32(4194304)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.DismissKeyguard" />
      <MemberSignature Language="F#" Value="DismissKeyguard = 4194304" Usage="Android.Views.WindowManagerFlags.DismissKeyguard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DISMISS_KEYGUARD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DISMISS_KEYGUARD")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4194304</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: when set the window will cause the keyguard to
 be dismissed, only if it is not a secure lock keyguard. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dither">
      <MemberSignature Language="C#" Value="Dither" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags Dither = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.Dither" />
      <MemberSignature Language="F#" Value="Dither = 4096" Usage="Android.Views.WindowManagerFlags.Dither" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DITHER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DITHER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: turn on dithering when compositing this window to
  the screen.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawsSystemBarBackgrounds">
      <MemberSignature Language="C#" Value="DrawsSystemBarBackgrounds" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags DrawsSystemBarBackgrounds = int32(-2147483648)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.DrawsSystemBarBackgrounds" />
      <MemberSignature Language="F#" Value="DrawsSystemBarBackgrounds = -2147483648" Usage="Android.Views.WindowManagerFlags.DrawsSystemBarBackgrounds" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceNotFullscreen">
      <MemberSignature Language="C#" Value="ForceNotFullscreen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags ForceNotFullscreen = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.ForceNotFullscreen" />
      <MemberSignature Language="F#" Value="ForceNotFullscreen = 2048" Usage="Android.Views.WindowManagerFlags.ForceNotFullscreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_FORCE_NOT_FULLSCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_FORCE_NOT_FULLSCREEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: override <see cref="F:Android.Views.WindowManagerFlags.Fullscreen" />and force the
  screen decorations (such as the status bar) to be shown.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fullscreen">
      <MemberSignature Language="C#" Value="Fullscreen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags Fullscreen = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.Fullscreen" />
      <MemberSignature Language="F#" Value="Fullscreen = 1024" Usage="Android.Views.WindowManagerFlags.Fullscreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_FULLSCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_FULLSCREEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: hide all screen decorations (such as the status bar) while
 this window is displayed. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HardwareAccelerated">
      <MemberSignature Language="C#" Value="HardwareAccelerated" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags HardwareAccelerated = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.HardwareAccelerated" />
      <MemberSignature Language="F#" Value="HardwareAccelerated = 16777216" Usage="Android.Views.WindowManagerFlags.HardwareAccelerated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_HARDWARE_ACCELERATED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_HARDWARE_ACCELERATED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary ToolPath="Untrimmed" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCheekPresses">
      <MemberSignature Language="C#" Value="IgnoreCheekPresses" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags IgnoreCheekPresses = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.IgnoreCheekPresses" />
      <MemberSignature Language="F#" Value="IgnoreCheekPresses = 32768" Usage="Android.Views.WindowManagerFlags.IgnoreCheekPresses" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_IGNORE_CHEEK_PRESSES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_IGNORE_CHEEK_PRESSES")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepScreenOn">
      <MemberSignature Language="C#" Value="KeepScreenOn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags KeepScreenOn = int32(128)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.KeepScreenOn" />
      <MemberSignature Language="F#" Value="KeepScreenOn = 128" Usage="Android.Views.WindowManagerFlags.KeepScreenOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_KEEP_SCREEN_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_KEEP_SCREEN_ON")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: as long as this window is visible to the user, keep
  the device's screen turned on and bright.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutAttachedInDecor">
      <MemberSignature Language="C#" Value="LayoutAttachedInDecor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LayoutAttachedInDecor = int32(1073741824)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LayoutAttachedInDecor" />
      <MemberSignature Language="F#" Value="LayoutAttachedInDecor = 1073741824" Usage="Android.Views.WindowManagerFlags.LayoutAttachedInDecor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_ATTACHED_IN_DECOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_ATTACHED_IN_DECOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1073741824</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInOverscan">
      <MemberSignature Language="C#" Value="LayoutInOverscan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LayoutInOverscan = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LayoutInOverscan" />
      <MemberSignature Language="F#" Value="LayoutInOverscan = 33554432" Usage="Android.Views.WindowManagerFlags.LayoutInOverscan" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_IN_OVERSCAN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_IN_OVERSCAN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: allow window contents to extend in to the screen's
 overscan area, if there is one. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInScreen">
      <MemberSignature Language="C#" Value="LayoutInScreen" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LayoutInScreen = int32(256)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LayoutInScreen" />
      <MemberSignature Language="F#" Value="LayoutInScreen = 256" Usage="Android.Views.WindowManagerFlags.LayoutInScreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_IN_SCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_IN_SCREEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: place the window within the entire screen, ignoring
  decorations around the border (such as the status bar). </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInsetDecor">
      <MemberSignature Language="C#" Value="LayoutInsetDecor" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LayoutInsetDecor = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LayoutInsetDecor" />
      <MemberSignature Language="F#" Value="LayoutInsetDecor = 65536" Usage="Android.Views.WindowManagerFlags.LayoutInsetDecor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_INSET_DECOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_INSET_DECOR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: a special option only for use in combination with
 <see cref="F:Android.Views.WindowManagerFlags.LayoutInScreen" />. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutNoLimits">
      <MemberSignature Language="C#" Value="LayoutNoLimits" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LayoutNoLimits = int32(512)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LayoutNoLimits" />
      <MemberSignature Language="F#" Value="LayoutNoLimits = 512" Usage="Android.Views.WindowManagerFlags.LayoutNoLimits" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_NO_LIMITS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LAYOUT_NO_LIMITS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: allow window to extend outside of the screen.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalFocusMode">
      <MemberSignature Language="C#" Value="LocalFocusMode" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags LocalFocusMode = int32(268435456)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.LocalFocusMode" />
      <MemberSignature Language="F#" Value="LocalFocusMode = 268435456" Usage="Android.Views.WindowManagerFlags.LocalFocusMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LOCAL_FOCUS_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_LOCAL_FOCUS_MODE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>268435456</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotFocusable">
      <MemberSignature Language="C#" Value="NotFocusable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags NotFocusable = int32(8)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.NotFocusable" />
      <MemberSignature Language="F#" Value="NotFocusable = 8" Usage="Android.Views.WindowManagerFlags.NotFocusable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_FOCUSABLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_FOCUSABLE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary ToolPath="Untrimmed" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotTouchable">
      <MemberSignature Language="C#" Value="NotTouchable" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags NotTouchable = int32(16)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.NotTouchable" />
      <MemberSignature Language="F#" Value="NotTouchable = 16" Usage="Android.Views.WindowManagerFlags.NotTouchable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_TOUCHABLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_TOUCHABLE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: this window can never receive touch events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotTouchModal">
      <MemberSignature Language="C#" Value="NotTouchModal" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags NotTouchModal = int32(32)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.NotTouchModal" />
      <MemberSignature Language="F#" Value="NotTouchModal = 32" Usage="Android.Views.WindowManagerFlags.NotTouchModal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_TOUCH_MODAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_NOT_TOUCH_MODAL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scaled">
      <MemberSignature Language="C#" Value="Scaled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags Scaled = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.Scaled" />
      <MemberSignature Language="F#" Value="Scaled = 16384" Usage="Android.Views.WindowManagerFlags.Scaled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SCALED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SCALED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: a special mode where the layout parameters are used
 to perform scaling of the surface when it is composited to the
 screen.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Secure">
      <MemberSignature Language="C#" Value="Secure" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags Secure = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.Secure" />
      <MemberSignature Language="F#" Value="Secure = 8192" Usage="Android.Views.WindowManagerFlags.Secure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SECURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SECURE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary ToolPath="Untrimmed" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWallpaper">
      <MemberSignature Language="C#" Value="ShowWallpaper" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags ShowWallpaper = int32(1048576)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.ShowWallpaper" />
      <MemberSignature Language="F#" Value="ShowWallpaper = 1048576" Usage="Android.Views.WindowManagerFlags.ShowWallpaper" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SHOW_WALLPAPER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SHOW_WALLPAPER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1048576</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: ask that the system wallpaper be shown behind
 your window. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowWhenLocked">
      <MemberSignature Language="C#" Value="ShowWhenLocked" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags ShowWhenLocked = int32(524288)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.ShowWhenLocked" />
      <MemberSignature Language="F#" Value="ShowWhenLocked = 524288" Usage="Android.Views.WindowManagerFlags.ShowWhenLocked" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SHOW_WHEN_LOCKED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SHOW_WHEN_LOCKED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>524288</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: special flag to let windows be shown when the screen
 is locked. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitTouch">
      <MemberSignature Language="C#" Value="SplitTouch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags SplitTouch = int32(8388608)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.SplitTouch" />
      <MemberSignature Language="F#" Value="SplitTouch = 8388608" Usage="Android.Views.WindowManagerFlags.SplitTouch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SPLIT_TOUCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_SPLIT_TOUCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8388608</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: when set the window will accept for touch events
 outside of its bounds to be sent to other windows that also
 support split touch. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchableWhenWaking">
      <MemberSignature Language="C#" Value="TouchableWhenWaking" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags TouchableWhenWaking = int32(64)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.TouchableWhenWaking" />
      <MemberSignature Language="F#" Value="TouchableWhenWaking = 64" Usage="Android.Views.WindowManagerFlags.TouchableWhenWaking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TOUCHABLE_WHEN_WAKING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary ToolPath="Trimmed" tool="FirstSentenceInJavadocToMdoc">Window flag: when set, if the device is asleep when the touch
 screen is pressed, you will receive this first touch event. </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslucentNavigation">
      <MemberSignature Language="C#" Value="TranslucentNavigation" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags TranslucentNavigation = int32(134217728)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.TranslucentNavigation" />
      <MemberSignature Language="F#" Value="TranslucentNavigation = 134217728" Usage="Android.Views.WindowManagerFlags.TranslucentNavigation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TRANSLUCENT_NAVIGATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TRANSLUCENT_NAVIGATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>134217728</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslucentStatus">
      <MemberSignature Language="C#" Value="TranslucentStatus" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags TranslucentStatus = int32(67108864)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.TranslucentStatus" />
      <MemberSignature Language="F#" Value="TranslucentStatus = 67108864" Usage="Android.Views.WindowManagerFlags.TranslucentStatus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TRANSLUCENT_STATUS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TRANSLUCENT_STATUS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>67108864</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TurnScreenOn">
      <MemberSignature Language="C#" Value="TurnScreenOn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags TurnScreenOn = int32(2097152)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.TurnScreenOn" />
      <MemberSignature Language="F#" Value="TurnScreenOn = 2097152" Usage="Android.Views.WindowManagerFlags.TurnScreenOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TURN_SCREEN_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_TURN_SCREEN_ON")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2097152</MemberValue>
      <Docs>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WatchOutsideTouch">
      <MemberSignature Language="C#" Value="WatchOutsideTouch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowManagerFlags WatchOutsideTouch = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManagerFlags.WatchOutsideTouch" />
      <MemberSignature Language="F#" Value="WatchOutsideTouch = 262144" Usage="Android.Views.WindowManagerFlags.WatchOutsideTouch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.IntDefinition(null, JniField="android/view/WindowManager$LayoutParams.FLAG_WATCH_OUTSIDE_TOUCH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInJavadocToMdoc">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
