<Type Name="View" FullName="Android.Views.View">
  <TypeSignature Language="VB.NET" Value="Public Class View&#xA;Inherits Object&#xA;Implements Drawable.ICallback, IAccessibilityEventSource, IDisposable, IJavaPeerable, KeyEvent.ICallback" />
  <TypeSignature Language="C++ CLI" Value="public ref class View : Java::Lang::Object, Android::Graphics::Drawables::Drawable::ICallback, Android::Views::Accessibility::IAccessibilityEventSource, Android::Views::KeyEvent::ICallback, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class View : Java.Lang.Object, Android.Graphics.Drawables.Drawable.ICallback, Android.Views.Accessibility.IAccessibilityEventSource, Android.Views.KeyEvent.ICallback, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit View extends Java.Lang.Object implements class Android.Graphics.Drawables.Drawable/ICallback, class Android.Runtime.IJavaObject, class Android.Views.Accessibility.IAccessibilityEventSource, class Android.Views.KeyEvent/ICallback, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.View" />
  <TypeSignature Language="F#" Value="type View = class&#xA;    inherit Object&#xA;    interface Drawable.ICallback&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IAccessibilityEventSource&#xA;    interface KeyEvent.ICallback" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Graphics.Drawables.Drawable+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.Accessibility.IAccessibilityEventSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Views.KeyEvent+ICallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/View", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/View", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class represents the basic building block for user interface components.</summary>
    <remarks>
      <para>This class represents the basic building block for user interface components. A View
            occupies a rectangular area on the screen and is responsible for drawing and
            event handling. View is the base class for &lt;em&gt;widgets&lt;/em&gt;, which are
            used to create interactive UI components (buttons, text fields, etc.). The
            <c>android.view.ViewGroup</c> subclass is the base class for &lt;em&gt;layouts&lt;/em&gt;, which
            are invisible containers that hold other Views (or other ViewGroups) and define
            their layout properties.</para>
      <para>&lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For information about using this class to develop your application's user interface,
            read the <see href="https://developer.android.com/guide/topics/ui/index.html">User Interface</see> developer guide.
            &lt;/div&gt;
            
            "Using"&gt;&lt;h3&gt;Using Views&lt;/h3&gt;</para>
      <para>All of the views in a window are arranged in a single tree. You can add views
            either from code or by specifying a tree of views in one or more XML layout
            files. There are many specialized subclasses of views that act as controls or
            are capable of displaying text, images, or other content.</para>
      <para>Once you have created a tree of views, there are typically a few types of
            common operations you may wish to perform:
            &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;Set properties:&lt;/strong&gt; for example setting the text of a
            <c>android.widget.TextView</c>. The available properties and the methods
            that set them will vary among the different subclasses of views. Note that
            properties that are known at build time can be set in the XML layout
            files.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Set focus:&lt;/strong&gt; The framework will handle moving focus in
            response to user input. To force focus to a specific view, call
            <c>#requestFocus</c>.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Set up listeners:&lt;/strong&gt; Views allow clients to set listeners
            that will be notified when something interesting happens to the view. For
            example, all views will let you set a listener to be notified when the view
            gains or loses focus. You can register such a listener using
            <c>#setOnFocusChangeListener(android.view.View.OnFocusChangeListener)</c>.
            Other view subclasses offer more specialized listeners. For example, a Button
            exposes a listener to notify clients when the button is clicked.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;Set visibility:&lt;/strong&gt; You can hide or show views using
            <c>#setVisibility(int)</c>.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>&lt;em&gt;
            Note: The Android framework is responsible for measuring, laying out and
            drawing views. You should not call methods that perform these actions on
            views yourself unless you are actually implementing a
            <c>android.view.ViewGroup</c>.
            &lt;/em&gt;</para>
      <para>"Lifecycle"&gt;&lt;h3&gt;Implementing a Custom View&lt;/h3&gt;</para>
      <para>To implement a custom view, you will usually begin by providing overrides for
            some of the standard methods that the framework calls on all views. You do
            not need to override all of these methods. In fact, you can start by just
            overriding <c>#onDraw(android.graphics.Canvas)</c>.
            &lt;table border="2" width="85%" align="center" cellpadding="5"&gt;
                &lt;thead&gt;
                    &lt;tr&gt;&lt;th&gt;Category&lt;/th&gt; &lt;th&gt;Methods&lt;/th&gt; &lt;th&gt;Description&lt;/th&gt;&lt;/tr&gt;
                &lt;/thead&gt;
            
                &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;td rowspan="2"&gt;Creation&lt;/td&gt;
                    &lt;td&gt;Constructors&lt;/td&gt;
                    &lt;td&gt;There is a form of the constructor that are called when the view
                    is created from code and a form that is called when the view is
                    inflated from a layout file. The second form should parse and apply
                    any attributes defined in the layout file.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onFinishInflate()}</c>&lt;/td&gt;
                    &lt;td&gt;Called after a view and all of its children has been inflated
                    from XML.&lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td rowspan="3"&gt;Layout&lt;/td&gt;
                    &lt;td&gt;<c>{@link #onMeasure(int, int)}</c>&lt;/td&gt;
                    &lt;td&gt;Called to determine the size requirements for this view and all
                    of its children.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onLayout(boolean, int, int, int, int)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when this view should assign a size and position to all
                    of its children.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onSizeChanged(int, int, int, int)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the size of this view has changed.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td&gt;Drawing&lt;/td&gt;
                    &lt;td&gt;<c>{@link #onDraw(android.graphics.Canvas)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the view should render its content.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td rowspan="6"&gt;Event processing&lt;/td&gt;
                    &lt;td&gt;<c>{@link #onKeyDown(int, KeyEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a new hardware key event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onKeyUp(int, KeyEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a hardware key up event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onTrackballEvent(MotionEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a trackball motion event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onTouchEvent(MotionEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a touch screen motion event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onGenericMotionEvent(MotionEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a generic motion event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onHoverEvent(MotionEvent)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when a hover motion event occurs.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td rowspan="2"&gt;Focus&lt;/td&gt;
                    &lt;td&gt;<c>{@link #onFocusChanged(boolean, int, android.graphics.Rect)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the view gains or loses focus.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onWindowFocusChanged(boolean)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the window containing the view gains or loses focus.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td rowspan="3"&gt;Attaching&lt;/td&gt;
                    &lt;td&gt;<c>{@link #onAttachedToWindow()}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the view is attached to a window.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onDetachedFromWindow}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the view is detached from its window.
                    &lt;/td&gt;
                &lt;/tr&gt;
            
                &lt;tr&gt;
                    &lt;td&gt;<c>{@link #onWindowVisibilityChanged(int)}</c>&lt;/td&gt;
                    &lt;td&gt;Called when the visibility of the window containing the view
                    has changed.
                    &lt;/td&gt;
                &lt;/tr&gt;
                &lt;/tbody&gt;
            
            &lt;/table&gt;</para>
      <para>"IDs"&gt;&lt;h3&gt;IDs&lt;/h3&gt;
            Views may have an integer id associated with them. These ids are typically
            assigned in the layout XML files, and are used to find specific views within
            the view tree. A common pattern is to:
            &lt;ul&gt;
            &lt;li&gt;Define a Button in the layout file and assign it a unique ID.</para>
      <code lang="text/java">&amp;lt;Button
                android:id="@+id/my_button"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="@string/my_button_text"/&amp;gt;
            </code>
      <para>&lt;/li&gt;
            &lt;li&gt;From the onCreate method of an Activity, find the Button</para>
      <code lang="text/java">Button myButton = findViewById(R.id.my_button);
            </code>
      <para>&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>View IDs need not be unique throughout the tree, but it is good practice to
            ensure that they are at least unique within the part of the tree you are
            searching.</para>
      <para>"Position"&gt;&lt;h3&gt;Position&lt;/h3&gt;</para>
      <para>The geometry of a view is that of a rectangle. A view has a location,
            expressed as a pair of &lt;em&gt;left&lt;/em&gt; and &lt;em&gt;top&lt;/em&gt; coordinates, and
            two dimensions, expressed as a width and a height. The unit for location
            and dimensions is the pixel.</para>
      <para>It is possible to retrieve the location of a view by invoking the methods
            <c>#getLeft()</c> and <c>#getTop()</c>. The former returns the left, or X,
            coordinate of the rectangle representing the view. The latter returns the
            top, or Y, coordinate of the rectangle representing the view. These methods
            both return the location of the view relative to its parent. For instance,
            when getLeft() returns 20, that means the view is located 20 pixels to the
            right of the left edge of its direct parent.</para>
      <para>In addition, several convenience methods are offered to avoid unnecessary
            computations, namely <c>#getRight()</c> and <c>#getBottom()</c>.
            These methods return the coordinates of the right and bottom edges of the
            rectangle representing the view. For instance, calling <c>#getRight()</c>
            is similar to the following computation: <c>getLeft() + getWidth()</c>
            (see Size for more information about the width.)</para>
      <para>"SizePaddingMargins"&gt;&lt;h3&gt;Size, padding and margins&lt;/h3&gt;</para>
      <para>The size of a view is expressed with a width and a height. A view actually
            possess two pairs of width and height values.</para>
      <para>The first pair is known as &lt;em&gt;measured width&lt;/em&gt; and
            &lt;em&gt;measured height&lt;/em&gt;. These dimensions define how big a view wants to be
            within its parent (see Layout for more details.) The
            measured dimensions can be obtained by calling <c>#getMeasuredWidth()</c>
            and <c>#getMeasuredHeight()</c>.</para>
      <para>The second pair is simply known as &lt;em&gt;width&lt;/em&gt; and &lt;em&gt;height&lt;/em&gt;, or
            sometimes &lt;em&gt;drawing width&lt;/em&gt; and &lt;em&gt;drawing height&lt;/em&gt;. These
            dimensions define the actual size of the view on screen, at drawing time and
            after layout. These values may, but do not have to, be different from the
            measured width and height. The width and height can be obtained by calling
            <c>#getWidth()</c> and <c>#getHeight()</c>.</para>
      <para>To measure its dimensions, a view takes into account its padding. The padding
            is expressed in pixels for the left, top, right and bottom parts of the view.
            Padding can be used to offset the content of the view by a specific amount of
            pixels. For instance, a left padding of 2 will push the view's content by
            2 pixels to the right of the left edge. Padding can be set using the
            <c>#setPadding(int, int, int, int)</c> or <c>#setPaddingRelative(int, int, int, int)</c>
            method and queried by calling <c>#getPaddingLeft()</c>, <c>#getPaddingTop()</c>,
            <c>#getPaddingRight()</c>, <c>#getPaddingBottom()</c>, <c>#getPaddingStart()</c>,
            <c>#getPaddingEnd()</c>.</para>
      <para>Even though a view can define a padding, it does not provide any support for
            margins. However, view groups provide such a support. Refer to
            <c>android.view.ViewGroup</c> and
            <c>android.view.ViewGroup.MarginLayoutParams</c> for further information.</para>
      <para>"Layout"&gt;&lt;h3&gt;Layout&lt;/h3&gt;</para>
      <para>Layout is a two pass process: a measure pass and a layout pass. The measuring
            pass is implemented in <c>#measure(int, int)</c> and is a top-down traversal
            of the view tree. Each view pushes dimension specifications down the tree
            during the recursion. At the end of the measure pass, every view has stored
            its measurements. The second pass happens in
            <c>#layout(int,int,int,int)</c> and is also top-down. During
            this pass each parent is responsible for positioning all of its children
            using the sizes computed in the measure pass.</para>
      <para>When a view's measure() method returns, its <c>#getMeasuredWidth()</c> and
            <c>#getMeasuredHeight()</c> values must be set, along with those for all of
            that view's descendants. A view's measured width and measured height values
            must respect the constraints imposed by the view's parents. This guarantees
            that at the end of the measure pass, all parents accept all of their
            children's measurements. A parent view may call measure() more than once on
            its children. For example, the parent may measure each child once with
            unspecified dimensions to find out how big they want to be, then call
            measure() on them again with actual numbers if the sum of all the children's
            unconstrained sizes is too big or too small.</para>
      <para>The measure pass uses two classes to communicate dimensions. The
            <c>MeasureSpec</c> class is used by views to tell their parents how they
            want to be measured and positioned. The base LayoutParams class just
            describes how big the view wants to be for both width and height. For each
            dimension, it can specify one of:
            &lt;ul&gt;
            &lt;li&gt; an exact number
            &lt;li&gt;MATCH_PARENT, which means the view wants to be as big as its parent
            (minus padding)
            &lt;li&gt; WRAP_CONTENT, which means that the view wants to be just big enough to
            enclose its content (plus padding).
            &lt;/ul&gt;
            There are subclasses of LayoutParams for different subclasses of ViewGroup.
            For example, AbsoluteLayout has its own subclass of LayoutParams which adds
            an X and Y value.</para>
      <para>MeasureSpecs are used to push requirements down the tree from parent to
            child. A MeasureSpec can be in one of three modes:
            &lt;ul&gt;
            &lt;li&gt;UNSPECIFIED: This is used by a parent to determine the desired dimension
            of a child view. For example, a LinearLayout may call measure() on its child
            with the height set to UNSPECIFIED and a width of EXACTLY 240 to find out how
            tall the child view wants to be given a width of 240 pixels.
            &lt;li&gt;EXACTLY: This is used by the parent to impose an exact size on the
            child. The child must use this size, and guarantee that all of its
            descendants will fit within this size.
            &lt;li&gt;AT_MOST: This is used by the parent to impose a maximum size on the
            child. The child must guarantee that it and all of its descendants will fit
            within this size.
            &lt;/ul&gt;</para>
      <para>To initiate a layout, call <c>#requestLayout</c>. This method is typically
            called by a view on itself when it believes that it can no longer fit within
            its current bounds.</para>
      <para>"Drawing"&gt;&lt;h3&gt;Drawing&lt;/h3&gt;</para>
      <para>Drawing is handled by walking the tree and recording the drawing commands of
            any View that needs to update. After this, the drawing commands of the
            entire tree are issued to screen, clipped to the newly damaged area.</para>
      <para>The tree is largely recorded and drawn in order, with parents drawn before
            (i.e., behind) their children, with siblings drawn in the order they appear
            in the tree. If you set a background drawable for a View, then the View will
            draw it before calling back to its <c>onDraw()</c> method. The child
            drawing order can be overridden with
            <c>ViewGroup#setChildrenDrawingOrderEnabled(boolean) custom child drawing order</c>
            in a ViewGroup, and with <c>#setZ(float)</c> custom Z values} set on Views.</para>
      <para>To force a view to draw, call <c>#invalidate()</c>.</para>
      <para>"EventHandlingThreading"&gt;&lt;h3&gt;Event Handling and Threading&lt;/h3&gt;</para>
      <para>The basic cycle of a view is as follows:
            &lt;ol&gt;
            &lt;li&gt;An event comes in and is dispatched to the appropriate view. The view
            handles the event and notifies any listeners.&lt;/li&gt;
            &lt;li&gt;If in the course of processing the event, the view's bounds may need
            to be changed, the view will call <c>#requestLayout()</c>.&lt;/li&gt;
            &lt;li&gt;Similarly, if in the course of processing the event the view's appearance
            may need to be changed, the view will call <c>#invalidate()</c>.&lt;/li&gt;
            &lt;li&gt;If either <c>#requestLayout()</c> or <c>#invalidate()</c> were called,
            the framework will take care of measuring, laying out, and drawing the tree
            as appropriate.&lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>&lt;em&gt;Note: The entire view tree is single threaded. You must always be on
            the UI thread when calling any method on any view.&lt;/em&gt;
            If you are doing work on other threads and want to update the state of a view
            from that thread, you should use a <c>Handler</c>.</para>
      <para>"FocusHandling"&gt;&lt;h3&gt;Focus Handling&lt;/h3&gt;</para>
      <para>The framework will handle routine focus movement in response to user input.
            This includes changing the focus as views are removed or hidden, or as new
            views become available. Views indicate their willingness to take focus
            through the <c>#isFocusable</c> method. To change whether a view can take
            focus, call <c>#setFocusable(boolean)</c>.  When in touch mode (see notes below)
            views indicate whether they still would like focus via <c>#isFocusableInTouchMode</c>
            and can change this via <c>#setFocusableInTouchMode(boolean)</c>.</para>
      <para>Focus movement is based on an algorithm which finds the nearest neighbor in a
            given direction. In rare cases, the default algorithm may not match the
            intended behavior of the developer. In these situations, you can provide
            explicit overrides by using these XML attributes in the layout file:</para>
      <code lang="text/java">nextFocusDown
            nextFocusLeft
            nextFocusRight
            nextFocusUp
            </code>
      <para>&lt;/p&gt;</para>
      <para>To get a particular view to take focus, call <c>#requestFocus()</c>.</para>
      <para>"TouchMode"&gt;&lt;h3&gt;Touch Mode&lt;/h3&gt;</para>
      <para>When a user is navigating a user interface via directional keys such as a D-pad, it is
            necessary to give focus to actionable items such as buttons so the user can see
            what will take input.  If the device has touch capabilities, however, and the user
            begins interacting with the interface by touching it, it is no longer necessary to
            always highlight, or give focus to, a particular view.  This motivates a mode
            for interaction named 'touch mode'.</para>
      <para>For a touch capable device, once the user touches the screen, the device
            will enter touch mode.  From this point onward, only views for which
            <c>#isFocusableInTouchMode</c> is true will be focusable, such as text editing widgets.
            Other views that are touchable, like buttons, will not take focus when touched; they will
            only fire the on click listeners.</para>
      <para>Any time a user hits a directional key, such as a D-pad direction, the view device will
            exit touch mode, and find a view to take focus, so that the user may resume interacting
            with the user interface without touching the screen again.</para>
      <para>The touch mode state is maintained across <c>android.app.Activity</c>s.  Call
            <c>#isInTouchMode</c> to see whether the device is currently in touch mode.</para>
      <para>"Scrolling"&gt;&lt;h3&gt;Scrolling&lt;/h3&gt;</para>
      <para>The framework provides basic support for views that wish to internally
            scroll their content. This includes keeping track of the X and Y scroll
            offset as well as mechanisms for drawing scrollbars. See
            <c>#scrollBy(int, int)</c>, <c>#scrollTo(int, int)</c>, and
            <c>#awakenScrollBars()</c> for more details.</para>
      <para>"Tags"&gt;&lt;h3&gt;Tags&lt;/h3&gt;</para>
      <para>Unlike IDs, tags are not used to identify views. Tags are essentially an
            extra piece of information that can be associated with a view. They are most
            often used as a convenience to store data related to views in the views
            themselves rather than by putting them in a separate structure.</para>
      <para>Tags may be specified with character sequence values in layout XML as either
            a single tag using the <c>android.R.styleable#View_tag android:tag</c>
            attribute or multiple tags using the <c>&lt;tag&gt;</c> child element:</para>
      <code lang="text/java">&amp;lt;View ...
                      android:tag="@string/mytag_value" /&amp;gt;
                &amp;lt;View ...&amp;gt;
                    &amp;lt;tag android:id="@+id/mytag"
                         android:value="@string/mytag_value" /&amp;gt;
                &amp;lt;/View&gt;
            </code>
      <para>&lt;/p&gt;</para>
      <para>Tags may also be specified with arbitrary objects from code using
            <c>#setTag(Object)</c> or <c>#setTag(int, Object)</c>.</para>
      <para>"Themes"&gt;&lt;h3&gt;Themes&lt;/h3&gt;</para>
      <para>By default, Views are created using the theme of the Context object supplied
            to their constructor; however, a different theme may be specified by using
            the <c>android.R.styleable#View_theme android:theme</c> attribute in layout
            XML or by passing a <c>ContextThemeWrapper</c> to the constructor from
            code.</para>
      <para>When the <c>android.R.styleable#View_theme android:theme</c> attribute is
            used in XML, the specified theme is applied on top of the inflation
            context's theme (see <c>LayoutInflater</c>) and used for the view itself as
            well as any child elements.</para>
      <para>In the following example, both views will be created using the Material dark
            color scheme; however, because an overlay theme is used which only defines a
            subset of attributes, the value of
            <c>android.R.styleable#Theme_colorAccent android:colorAccent</c> defined on
            the inflation context's theme (e.g. the Activity theme) will be preserved.</para>
      <code lang="text/java">&amp;lt;LinearLayout
                        ...
                        android:theme="@android:theme/ThemeOverlay.Material.Dark"&amp;gt;
                    &amp;lt;View ...&amp;gt;
                &amp;lt;/LinearLayout&amp;gt;
            </code>
      <para>&lt;/p&gt;
            
            "Properties"&gt;&lt;h3&gt;Properties&lt;/h3&gt;</para>
      <para>The View class exposes an <c>#ALPHA</c> property, as well as several transform-related
            properties, such as <c>#TRANSLATION_X</c> and <c>#TRANSLATION_Y</c>. These properties are
            available both in the <c>Property</c> form as well as in similarly-named setter/getter
            methods (such as <c>#setAlpha(float)</c> for <c>#ALPHA</c>). These properties can
            be used to set persistent state associated with these rendering-related properties on the view.
            The properties and methods can also be used in conjunction with
            <c>android.animation.Animator Animator</c>-based animations, described more in the
            Animation section.</para>
      <para>"Animation"&gt;&lt;h3&gt;Animation&lt;/h3&gt;</para>
      <para>Starting with Android 3.0, the preferred way of animating views is to use the
            <c>android.animation</c> package APIs. These <c>android.animation.Animator Animator</c>-based
            classes change actual properties of the View object, such as <c>#setAlpha(float) alpha</c> and
            <c>#setTranslationX(float) translationX</c>. This behavior is contrasted to that of the pre-3.0
            <c>android.view.animation.Animation Animation</c>-based classes, which instead animate only
            how the view is drawn on the display. In particular, the <c>ViewPropertyAnimator</c> class
            makes animating these View properties particularly easy and efficient.</para>
      <para>Alternatively, you can use the pre-3.0 animation classes to animate how Views are rendered.
            You can attach an <c>Animation</c> object to a view using
            <c>#setAnimation(Animation)</c> or
            <c>#startAnimation(Animation)</c>. The animation can alter the scale,
            rotation, translation and alpha of a view over time. If the animation is
            attached to a view that has children, the animation will affect the entire
            subtree rooted by that node. When an animation is started, the framework will
            take care of redrawing the appropriate views until the animation completes.</para>
      <para>"Security"&gt;&lt;h3&gt;Security&lt;/h3&gt;</para>
      <para>Sometimes it is essential that an application be able to verify that an action
            is being performed with the full knowledge and consent of the user, such as
            granting a permission request, making a purchase or clicking on an advertisement.
            Unfortunately, a malicious application could try to spoof the user into
            performing these actions, unaware, by concealing the intended purpose of the view.
            As a remedy, the framework offers a touch filtering mechanism that can be used to
            improve the security of views that provide access to sensitive functionality.</para>
      <para>To enable touch filtering, call <c>#setFilterTouchesWhenObscured(boolean)</c> or set the
            android:filterTouchesWhenObscured layout attribute to true.  When enabled, the framework
            will discard touches that are received whenever the view's window is obscured by
            another visible window at the touched location.  As a result, the view will not receive touches
            whenever the touch passed through a toast, dialog or other window that appears above the view's
            window.</para>
      <para>For more fine-grained control over security, consider overriding the
            <c>#onFilterTouchEventForSecurity(MotionEvent)</c> method to implement your own
            security policy. See also <c>MotionEvent#FLAG_WINDOW_IS_OBSCURED</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/View" title="Reference documentation">Java documentation for <code>android.view.View</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; View(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public View (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.View : Android.Content.Context -&gt; Android.Views.View" Usage="new Android.Views.View context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The Context the view is running in, through which it can
                   access the current theme, resources, etc.</param>
        <summary>Simple constructor to use when creating a view from code.</summary>
        <remarks>
          <para>Simple constructor to use when creating a view from code.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#View(android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.View.View(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; View(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public View (Android.Content.Context? context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Views.View : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="new Android.Views.View (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">The Context the view is running in, through which it can
                   access the current theme, resources, etc.</param>
        <param name="attrs">The attributes of the XML tag that is inflating the view.</param>
        <summary>Constructor that is called when inflating a view from XML.</summary>
        <remarks>
          <para>Constructor that is called when inflating a view from XML. This is called
            when a view is being constructed from an XML file, supplying attributes
            that were specified in the XML file. This version uses a default style of
            0, so the only attribute values applied are those in the Context's Theme
            and the given AttributeSet.</para>
          <para>The method onFinishInflate() will be called after all children have been
            added.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#View(android.content.Context,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.View.View(android.content.Context, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; View(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected View (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.View : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.View" Usage="new Android.Views.View (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet, defStyleAttr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; View(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs, int defStyleAttr);" />
      <MemberSignature Language="C#" Value="public View (Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Views.View : Android.Content.Context * Android.Util.IAttributeSet * int -&gt; Android.Views.View" Usage="new Android.Views.View (context, attrs, defStyleAttr)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The Context the view is running in, through which it can
                   access the current theme, resources, etc.</param>
        <param name="attrs">The attributes of the XML tag that is inflating the view.</param>
        <param name="defStyleAttr">An attribute in the current theme that contains a
                   reference to a style resource that supplies default values for
                   the view. Can be 0 to not look for defaults.</param>
        <summary>Perform inflation from XML and apply a class-specific base style from a
            theme attribute.</summary>
        <remarks>
          <para>Perform inflation from XML and apply a class-specific base style from a
            theme attribute. This constructor of View allows subclasses to use their
            own base style when they are inflating. For example, a Button class's
            constructor would call this version of the super class constructor and
            supply <c>R.attr.buttonStyle</c> for &lt;var&gt;defStyleAttr&lt;/var&gt;; this
            allows the theme's button style to modify all of the base view attributes
            (in particular its background) as well as the Button class's attributes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#View(android.content.Context,%20android.util.AttributeSet,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.View(android.content.Context, android.util.AttributeSet, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet, defStyleAttr As Integer, defStyleRes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; View(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="C#" Value="public View (Android.Content.Context? context, Android.Util.IAttributeSet? attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.#ctor(Android.Content.Context,Android.Util.IAttributeSet,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Views.View : Android.Content.Context * Android.Util.IAttributeSet * int * int -&gt; Android.Views.View" Usage="new Android.Views.View (context, attrs, defStyleAttr, defStyleRes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The Context the view is running in, through which it can
                   access the current theme, resources, etc.</param>
        <param name="attrs">The attributes of the XML tag that is inflating the view.</param>
        <param name="defStyleAttr">An attribute in the current theme that contains a
                   reference to a style resource that supplies default values for
                   the view. Can be 0 to not look for defaults.</param>
        <param name="defStyleRes">A resource identifier of a style resource that
                   supplies default values for the view, used only if
                   defStyleAttr is 0 or can not be found in the theme. Can be 0
                   to not look for defaults.</param>
        <summary>Perform inflation from XML and apply a class-specific base style from a
            theme attribute or style resource.</summary>
        <remarks>
          <para>Perform inflation from XML and apply a class-specific base style from a
            theme attribute or style resource. This constructor of View allows
            subclasses to use their own base style when they are inflating.</para>
          <para>When determining the final value of a particular attribute, there are
            four inputs that come into play:
            &lt;ol&gt;
            &lt;li&gt;Any attribute values in the given AttributeSet.
            &lt;li&gt;The style resource specified in the AttributeSet (named "style").
            &lt;li&gt;The default style specified by &lt;var&gt;defStyleAttr&lt;/var&gt;.
            &lt;li&gt;The default style specified by &lt;var&gt;defStyleRes&lt;/var&gt;.
            &lt;li&gt;The base values in this theme.
            &lt;/ol&gt;</para>
          <para>Each of these inputs is considered in-order, with the first listed taking
            precedence over the following ones. In other words, if in the
            AttributeSet you have supplied <c>&amp;lt;Button * textColor="#ff000000"&amp;gt;</c>
            , then the button's text will &lt;em&gt;always&lt;/em&gt; be black, regardless of
            what is specified in any of the styles.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#View(android.content.Context,%20android.util.AttributeSet,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.View(android.content.Context, android.util.AttributeSet, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="C:Android.Views.View(Android.Content.Context, Android.Util.IAttributeSet, Android.Util.IAttributeSet)" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityClassName">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AccessibilityClassName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibilityClassName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? AccessibilityClassName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibilityClassName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityClassName" />
      <MemberSignature Language="F#" Value="member this.AccessibilityClassName : string" Usage="Android.Views.View.AccessibilityClassName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityClassNameFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityClassNameFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ AccessibilityClassNameFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? AccessibilityClassNameFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence AccessibilityClassNameFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityClassNameFormatted" />
      <MemberSignature Language="F#" Value="member this.AccessibilityClassNameFormatted : Java.Lang.ICharSequence" Usage="Android.Views.View.AccessibilityClassNameFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityClassName", "()Ljava/lang/CharSequence;", "GetGetAccessibilityClassNameHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityClassName", "()Ljava/lang/CharSequence;", "GetGetAccessibilityClassNameHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the class name of this object to be used for accessibility purposes.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the class name of this object to be used for accessibility purposes.
            Subclasses should only override this if they are implementing something that
            should be seen as a completely new class of view when used by accessibility,
            unrelated to the class it is deriving from.  This is used to fill in
            <c>AccessibilityNodeInfo#setClassName AccessibilityNodeInfo.setClassName</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityClassName()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityClassName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityDataSensitiveAuto">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityDataSensitiveAuto As AccessibilityDataSensitive  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityDataSensitive AccessibilityDataSensitiveAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityDataSensitiveAuto" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityDataSensitiveAuto : Android.Views.AccessibilityDataSensitive" Usage="Android.Views.View.AccessibilityDataSensitiveAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_AUTO", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_AUTO", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityDataSensitive</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether the view should only allow interactions from
            <c>android.accessibilityservice.AccessibilityService</c>s with the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</summary>
        <remarks>
          <para>Automatically determine whether the view should only allow interactions from
            <c>android.accessibilityservice.AccessibilityService</c>s with the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</para>
          <para>Accessibility interactions from services without <c>isAccessibilityTool</c> set to true are
            disallowed for any of the following conditions:
            &lt;li&gt;this view sets <c>#getFilterTouchesWhenObscured()</c>.&lt;/li&gt;
            &lt;li&gt;any parent of this view returns true from <c>#isAccessibilityDataSensitive()</c>.&lt;/li&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_DATA_SENSITIVE_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_DATA_SENSITIVE_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityDataSensitiveNo">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityDataSensitiveNo As AccessibilityDataSensitive  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityDataSensitive AccessibilityDataSensitiveNo = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveNo = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityDataSensitiveNo" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityDataSensitiveNo : Android.Views.AccessibilityDataSensitive" Usage="Android.Views.View.AccessibilityDataSensitiveNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_NO", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_NO", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityDataSensitive</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Allow interactions from all <c>android.accessibilityservice.AccessibilityService</c>s,
            regardless of their
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property.</summary>
        <remarks>
          <para>Allow interactions from all <c>android.accessibilityservice.AccessibilityService</c>s,
            regardless of their
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_DATA_SENSITIVE_NO" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_DATA_SENSITIVE_NO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityDataSensitiveYes">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityDataSensitiveYes As AccessibilityDataSensitive  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityDataSensitive AccessibilityDataSensitiveYes = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityDataSensitive AccessibilityDataSensitiveYes = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityDataSensitiveYes" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityDataSensitiveYes : Android.Views.AccessibilityDataSensitive" Usage="Android.Views.View.AccessibilityDataSensitiveYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_YES", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_DATA_SENSITIVE_YES", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityDataSensitive enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityDataSensitive</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Only allow interactions from <c>android.accessibilityservice.AccessibilityService</c>s
            with the <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c>
            property set to true.</summary>
        <remarks>
          <para>Only allow interactions from <c>android.accessibilityservice.AccessibilityService</c>s
            with the <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c>
            property set to true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_DATA_SENSITIVE_YES" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_DATA_SENSITIVE_YES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityHeading">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessibilityHeading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AccessibilityHeading { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool AccessibilityHeading { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AccessibilityHeading" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityHeading" />
      <MemberSignature Language="F#" Value="member this.AccessibilityHeading : bool with get, set" Usage="Android.Views.View.AccessibilityHeading" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAccessibilityHeading", "()Z", "GetIsAccessibilityHeadingHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAccessibilityHeading", "()Z", "GetIsAccessibilityHeadingHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAccessibilityHeading", "(Z)V", "GetSetAccessibilityHeading_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAccessibilityHeading", "(Z)V", "GetSetAccessibilityHeading_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="isHeading">
          <c>true</c> if the view is a heading, <c>false</c> otherwise.</param>
        <summary>Gets whether this view is a heading for accessibility purposes. -or- Set if view is a heading for a section of content for accessibility purposes.</summary>
        <value>
          <c>true</c> if the view is a heading, <c>false</c> otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets whether this view is a heading for accessibility purposes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isAccessibilityHeading()" title="Reference documentation">Java documentation for <code>android.view.View.isAccessibilityHeading()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set if view is a heading for a section of content for accessibility purposes.</para>
          <para>Users of some accessibility services can choose to navigate between headings
            instead of between paragraphs, words, etc. Apps that provide headings on
            sections of text can help the text navigation experience.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityHeading(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityHeading(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegion">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessibilityLiveRegion As AccessibilityLiveRegion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::AccessibilityLiveRegion AccessibilityLiveRegion { Android::Views::AccessibilityLiveRegion get(); void set(Android::Views::AccessibilityLiveRegion value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.AccessibilityLiveRegion AccessibilityLiveRegion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegion" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityLiveRegion" />
      <MemberSignature Language="F#" Value="member this.AccessibilityLiveRegion : Android.Views.AccessibilityLiveRegion with get, set" Usage="Android.Views.View.AccessibilityLiveRegion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityLiveRegion", "()I", "GetGetAccessibilityLiveRegionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityLiveRegion", "()I", "GetGetAccessibilityLiveRegionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAccessibilityLiveRegion", "(I)V", "GetSetAccessibilityLiveRegion_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAccessibilityLiveRegion", "(I)V", "GetSetAccessibilityLiveRegion_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">The live region mode for this view, one of:
                   &lt;ul&gt;
                   &lt;li&gt;<c>#ACCESSIBILITY_LIVE_REGION_NONE</c>&lt;li&gt;<c>#ACCESSIBILITY_LIVE_REGION_POLITE</c>&lt;li&gt;<c>#ACCESSIBILITY_LIVE_REGION_ASSERTIVE</c>&lt;/ul&gt;</param>
        <summary>Gets the live region mode for this View. -or- Sets the live region mode for this view.</summary>
        <value>The live region mode for the view.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the live region mode for this View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityLiveRegion()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityLiveRegion()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the live region mode for this view. This indicates to accessibility
            services whether they should automatically notify the user about changes
            to the view's content description or text, or to the content descriptions
            or text of the view's children (where applicable).</para>
          <para>For example, in a login screen with a TextView that displays an "incorrect
            password" notification, that view should be marked as a live region with
            mode <c>#ACCESSIBILITY_LIVE_REGION_POLITE</c>.</para>
          <para>To disable change notifications for this view, use
            <c>#ACCESSIBILITY_LIVE_REGION_NONE</c>. This is the default live region
            mode for most views.</para>
          <para>To indicate that the user should be notified of changes, use
            <c>#ACCESSIBILITY_LIVE_REGION_POLITE</c>.</para>
          <para>If the view's changes should interrupt ongoing speech and notify the user
            immediately, use <c>#ACCESSIBILITY_LIVE_REGION_ASSERTIVE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityLiveRegion(int)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityLiveRegion(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.AccessibilityLiveRegion" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="AccessibilityLiveRegionAssertive">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityLiveRegionAssertive As AccessibilityLiveRegion  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityLiveRegion AccessibilityLiveRegionAssertive = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionAssertive = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionAssertive = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityLiveRegionAssertive" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityLiveRegionAssertive : Android.Views.AccessibilityLiveRegion" Usage="Android.Views.View.AccessibilityLiveRegionAssertive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_ASSERTIVE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_ASSERTIVE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should interrupt
            ongoing speech to immediately announce changes to this view.</summary>
        <remarks>
          <para>Live region mode specifying that accessibility services should interrupt
            ongoing speech to immediately announce changes to this view.</para>
          <para>Use with <c>#setAccessibilityLiveRegion(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_LIVE_REGION_ASSERTIVE" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_LIVE_REGION_ASSERTIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegionNone">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityLiveRegionNone As AccessibilityLiveRegion  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityLiveRegion AccessibilityLiveRegionNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityLiveRegionNone" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityLiveRegionNone : Android.Views.AccessibilityLiveRegion" Usage="Android.Views.View.AccessibilityLiveRegionNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_NONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_NONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should not
            automatically announce changes to this view.</summary>
        <remarks>
          <para>Live region mode specifying that accessibility services should not
            automatically announce changes to this view. This is the default live
            region mode for most views.</para>
          <para>Use with <c>#setAccessibilityLiveRegion(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_LIVE_REGION_NONE" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_LIVE_REGION_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityLiveRegionPolite">
      <MemberSignature Language="VB.NET" Value="Public Const AccessibilityLiveRegionPolite As AccessibilityLiveRegion  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AccessibilityLiveRegion AccessibilityLiveRegionPolite = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionPolite = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AccessibilityLiveRegion AccessibilityLiveRegionPolite = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AccessibilityLiveRegionPolite" />
      <MemberSignature Language="F#" Value="val mutable AccessibilityLiveRegionPolite : Android.Views.AccessibilityLiveRegion" Usage="Android.Views.View.AccessibilityLiveRegionPolite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_POLITE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACCESSIBILITY_LIVE_REGION_POLITE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AccessibilityLiveRegion enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AccessibilityLiveRegion</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Live region mode specifying that accessibility services should announce
            changes to this view.</summary>
        <remarks>
          <para>Live region mode specifying that accessibility services should announce
            changes to this view.</para>
          <para>Use with <c>#setAccessibilityLiveRegion(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ACCESSIBILITY_LIVE_REGION_POLITE" title="Reference documentation">Java documentation for <code>android.view.View.ACCESSIBILITY_LIVE_REGION_POLITE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityNodeProvider">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityNodeProvider As AccessibilityNodeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Accessibility::AccessibilityNodeProvider ^ AccessibilityNodeProvider { Android::Views::Accessibility::AccessibilityNodeProvider ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeProvider? AccessibilityNodeProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Accessibility.AccessibilityNodeProvider AccessibilityNodeProvider" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityNodeProvider" />
      <MemberSignature Language="F#" Value="member this.AccessibilityNodeProvider : Android.Views.Accessibility.AccessibilityNodeProvider" Usage="Android.Views.View.AccessibilityNodeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityNodeProvider", "()Landroid/view/accessibility/AccessibilityNodeProvider;", "GetGetAccessibilityNodeProviderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityNodeProvider", "()Landroid/view/accessibility/AccessibilityNodeProvider;", "GetGetAccessibilityNodeProviderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the provider for managing a virtual view hierarchy rooted at this View
            and reported to <c>android.accessibilityservice.AccessibilityService</c>s
            that explore the window content.</summary>
        <value>The provider.</value>
        <remarks>
          <para>Gets the provider for managing a virtual view hierarchy rooted at this View
            and reported to <c>android.accessibilityservice.AccessibilityService</c>s
            that explore the window content.</para>
          <para>If this method returns an instance, this instance is responsible for managing
            <c>AccessibilityNodeInfo</c>s describing the virtual sub-tree rooted at this
            View including the one representing the View itself. Similarly the returned
            instance is responsible for performing accessibility actions on any virtual
            view or the root view itself.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#getAccessibilityNodeProvider(View)</c>
            is responsible for handling this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityNodeProvider()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityNodeProvider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeProvider" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityPaneTitle">
      <MemberSignature Language="VB.NET" Value="Public Property AccessibilityPaneTitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AccessibilityPaneTitle { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? AccessibilityPaneTitle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessibilityPaneTitle" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityPaneTitle" />
      <MemberSignature Language="F#" Value="member this.AccessibilityPaneTitle : string with get, set" Usage="Android.Views.View.AccessibilityPaneTitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityPaneTitleFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessibilityPaneTitleFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ AccessibilityPaneTitleFormatted { Java::Lang::ICharSequence ^ get(); void set(Java::Lang::ICharSequence ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? AccessibilityPaneTitleFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence AccessibilityPaneTitleFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityPaneTitleFormatted" />
      <MemberSignature Language="F#" Value="member this.AccessibilityPaneTitleFormatted : Java.Lang.ICharSequence with get, set" Usage="Android.Views.View.AccessibilityPaneTitleFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityPaneTitle", "()Ljava/lang/CharSequence;", "GetGetAccessibilityPaneTitleHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityPaneTitle", "()Ljava/lang/CharSequence;", "GetGetAccessibilityPaneTitleHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAccessibilityPaneTitle", "(Ljava/lang/CharSequence;)V", "GetSetAccessibilityPaneTitle_Ljava_lang_CharSequence_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAccessibilityPaneTitle", "(Ljava/lang/CharSequence;)V", "GetSetAccessibilityPaneTitle_Ljava_lang_CharSequence_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="accessibilityPaneTitle">The pane's title. Setting to <c>null</c> indicates that this
                                          View is not a pane.
            
            <c>AccessibilityNodeInfo#setPaneTitle(CharSequence)</c></param>
        <summary>Get the title of the pane for purposes of accessibility. -or- Visually distinct portion of a window with window-like semantics are considered panes for
            accessibility purposes.</summary>
        <value>The current pane title.
            
            <c>#setAccessibilityPaneTitle</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the title of the pane for purposes of accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityPaneTitle()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityPaneTitle()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Visually distinct portion of a window with window-like semantics are considered panes for
            accessibility purposes. One example is the content view of a large fragment that is replaced.
            In order for accessibility services to understand a pane's window-like behavior, panes
            should have descriptive titles. Views with pane titles produce
            <c>AccessibilityEvent#TYPE_WINDOW_STATE_CHANGED</c>s when they appear, disappear, or change
            title.</para>
          <para>When transitioning from one Activity to another, instead of using
            setAccessibilityPaneTitle(), set a descriptive title for its window by using android:label
            for the matching &lt;activity&gt; entry in your application’s manifest or updating the title at
            runtime with<c>android.app.Activity#setTitle(CharSequence)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityPaneTitle(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityPaneTitle(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityTraversalAfter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessibilityTraversalAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AccessibilityTraversalAfter { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int AccessibilityTraversalAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccessibilityTraversalAfter" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityTraversalAfter" />
      <MemberSignature Language="F#" Value="member this.AccessibilityTraversalAfter : int with get, set" Usage="Android.Views.View.AccessibilityTraversalAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityTraversalAfter", "()I", "GetGetAccessibilityTraversalAfterHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityTraversalAfter", "()I", "GetGetAccessibilityTraversalAfterHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAccessibilityTraversalAfter", "(I)V", "GetSetAccessibilityTraversalAfter_IHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAccessibilityTraversalAfter", "(I)V", "GetSetAccessibilityTraversalAfter_IHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="afterId">The id of a view this one succedees in accessibility traversal.</param>
        <summary>Gets the id of a view after which this one is visited in accessibility traversal. -or- Sets the id of a view after which this one is visited in accessibility traversal.</summary>
        <value>The id of a view this one succeedes in accessibility traversal if
                    specified, otherwise <c>#NO_ID</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of a view after which this one is visited in accessibility traversal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityTraversalAfter()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityTraversalAfter()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of a view after which this one is visited in accessibility traversal.
            A screen-reader must visit the content of the other view before the content of this
            one. For example, if view B is set to be after view A, then a screen-reader
            will traverse the entire content of A before traversing the entire content of B,
            regardles of what traversal strategy it is using.</para>
          <para>Views that do not have specified before/after relationships are traversed in order
            determined by the screen-reader.</para>
          <para>Setting that this view is after a view that is not important for accessibility
            or if this view is not important for accessibility will have no effect as the
            screen-reader is not aware of unimportant views.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityTraversalAfter(int)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityTraversalAfter(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityTraversalBefore">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessibilityTraversalBefore As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AccessibilityTraversalBefore { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int AccessibilityTraversalBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AccessibilityTraversalBefore" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AccessibilityTraversalBefore" />
      <MemberSignature Language="F#" Value="member this.AccessibilityTraversalBefore : int with get, set" Usage="Android.Views.View.AccessibilityTraversalBefore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAccessibilityTraversalBefore", "()I", "GetGetAccessibilityTraversalBeforeHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAccessibilityTraversalBefore", "()I", "GetGetAccessibilityTraversalBeforeHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAccessibilityTraversalBefore", "(I)V", "GetSetAccessibilityTraversalBefore_IHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAccessibilityTraversalBefore", "(I)V", "GetSetAccessibilityTraversalBefore_IHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="beforeId">The id of a view this one precedes in accessibility traversal.</param>
        <summary>Gets the id of a view before which this one is visited in accessibility traversal. -or- Sets the id of a view before which this one is visited in accessibility traversal.</summary>
        <value>The id of a view this one precedes in accessibility traversal if
                    specified, otherwise <c>#NO_ID</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of a view before which this one is visited in accessibility traversal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityTraversalBefore()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityTraversalBefore()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of a view before which this one is visited in accessibility traversal.
            A screen-reader must visit the content of this view before the content of the one
            it precedes. For example, if view B is set to be before view A, then a screen-reader
            will traverse the entire content of B before traversing the entire content of A,
            regardles of what traversal strategy it is using.</para>
          <para>Views that do not have specified before/after relationships are traversed in order
            determined by the screen-reader.</para>
          <para>Setting that this view is before a view that is not important for accessibility
            or if this view is not important for accessibility will have no effect as the
            screen-reader is not aware of unimportant views.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityTraversalBefore(int)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityTraversalBefore(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Activated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Activated { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Activated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Activated" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Activated" />
      <MemberSignature Language="F#" Value="member this.Activated : bool with get, set" Usage="Android.Views.View.Activated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActivated", "()Z", "GetIsActivatedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActivated", "()Z", "GetIsActivatedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setActivated", "(Z)V", "GetSetActivated_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setActivated", "(Z)V", "GetSetActivated_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="activated">true if the view must be activated, false otherwise</param>
        <summary>Indicates the activation state of this view. -or- Changes the activated state of this view.</summary>
        <value>true if the view is activated, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates the activation state of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isActivated()" title="Reference documentation">Java documentation for <code>android.view.View.isActivated()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Changes the activated state of this view. A view can be activated or not.
            Note that activation is not the same as selection.  Selection is
            a transient property, representing the view (hierarchy) the user is
            currently interacting with.  Activation is a longer-term state that the
            user can move views in and out of.  For example, in a list view with
            single or multiple selection enabled, the views in the current selection
            set are activated.  (Um, yeah, we are deeply sorry about the terminology
            here.)  The activated state is propagated down to children of the view it
            is set on.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setActivated(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setActivated(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddChildrenForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddChildrenForAccessibility (outChildren As IList(Of View))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddChildrenForAccessibility(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ outChildren);" />
      <MemberSignature Language="C#" Value="public virtual void AddChildrenForAccessibility (System.Collections.Generic.IList&lt;Android.Views.View&gt;? outChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddChildrenForAccessibility(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; outChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddChildrenForAccessibility(System.Collections.Generic.IList{Android.Views.View})" />
      <MemberSignature Language="F#" Value="abstract member AddChildrenForAccessibility : System.Collections.Generic.IList&lt;Android.Views.View&gt; -&gt; unit&#xA;override this.AddChildrenForAccessibility : System.Collections.Generic.IList&lt;Android.Views.View&gt; -&gt; unit" Usage="view.AddChildrenForAccessibility outChildren" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addChildrenForAccessibility", "(Ljava/util/ArrayList;)V", "GetAddChildrenForAccessibility_Ljava_util_ArrayList_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addChildrenForAccessibility", "(Ljava/util/ArrayList;)V", "GetAddChildrenForAccessibility_Ljava_util_ArrayList_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outChildren" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outChildren">The output list that will receive children for accessibility.</param>
        <summary>Adds the children of this View relevant for accessibility to the given list
            as output.</summary>
        <remarks>
          <para>Adds the children of this View relevant for accessibility to the given list
            as output. Since some Views are not important for accessibility the added
            child views are not necessarily direct children of this view, rather they are
            the first level of descendants important for accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addChildrenForAccessibility(java.util.ArrayList%3Candroid.view.View%3E)" title="Reference documentation">Java documentation for <code>android.view.View.addChildrenForAccessibility(java.util.ArrayList&lt;android.view.View&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExtraDataToAccessibilityNodeInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddExtraDataToAccessibilityNodeInfo (info As AccessibilityNodeInfo, extraDataKey As String, arguments As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddExtraDataToAccessibilityNodeInfo(Android::Views::Accessibility::AccessibilityNodeInfo ^ info, System::String ^ extraDataKey, Android::OS::Bundle ^ arguments);" />
      <MemberSignature Language="C#" Value="public virtual void AddExtraDataToAccessibilityNodeInfo (Android.Views.Accessibility.AccessibilityNodeInfo info, string extraDataKey, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddExtraDataToAccessibilityNodeInfo(class Android.Views.Accessibility.AccessibilityNodeInfo info, string extraDataKey, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddExtraDataToAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member AddExtraDataToAccessibilityNodeInfo : Android.Views.Accessibility.AccessibilityNodeInfo * string * Android.OS.Bundle -&gt; unit&#xA;override this.AddExtraDataToAccessibilityNodeInfo : Android.Views.Accessibility.AccessibilityNodeInfo * string * Android.OS.Bundle -&gt; unit" Usage="view.AddExtraDataToAccessibilityNodeInfo (info, extraDataKey, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addExtraDataToAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "GetAddExtraDataToAccessibilityNodeInfo_Landroid_view_accessibility_AccessibilityNodeInfo_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addExtraDataToAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "GetAddExtraDataToAccessibilityNodeInfo_Landroid_view_accessibility_AccessibilityNodeInfo_Ljava_lang_String_Landroid_os_Bundle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Views.Accessibility.AccessibilityNodeInfo" />
        <Parameter Name="extraDataKey" Type="System.String" />
        <Parameter Name="arguments" Type="Android.OS.Bundle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="info">The info to which to add the extra data. Never <c>null</c>.</param>
        <param name="extraDataKey">A key specifying the type of extra data to add to the info. The
                                extra data should be added to the <c>Bundle</c> returned by
                                the info's <c>AccessibilityNodeInfo#getExtras</c> method. Never
                                <c>null</c>.</param>
        <param name="arguments">A <c>Bundle</c> holding any arguments relevant for this request. May be
                             <c>null</c> if the service provided no arguments.</param>
        <summary>Adds extra data to an <c>AccessibilityNodeInfo</c> based on an explicit request for the
            additional data.</summary>
        <remarks>
          <para>Adds extra data to an <c>AccessibilityNodeInfo</c> based on an explicit request for the
            additional data.</para>
          <para>This method only needs overloading if the node is marked as having extra data available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo,%20java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.View.addExtraDataToAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo, java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFocusables">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFocusables (views As IList(Of View), direction As FocusSearchDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFocusables(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ views, Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual void AddFocusables (System.Collections.Generic.IList&lt;Android.Views.View&gt;? views, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFocusables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddFocusables(System.Collections.Generic.IList{Android.Views.View},Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member AddFocusables : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection -&gt; unit&#xA;override this.AddFocusables : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection -&gt; unit" Usage="view.AddFocusables (views, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;I)V", "GetAddFocusables_Ljava_util_ArrayList_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;I)V", "GetAddFocusables_Ljava_util_ArrayList_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">Focusable views found so far</param>
        <param name="direction">The direction of the focus</param>
        <summary>Add any focusable views that are descendants of this view (possibly
            including this view if it is focusable itself) to views.</summary>
        <remarks>
          <para>Add any focusable views that are descendants of this view (possibly
            including this view if it is focusable itself) to views.  If we are in touch mode,
            only add views that are also focusable in touch mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addFocusables(java.util.ArrayList%3Candroid.view.View%3E,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.addFocusables(java.util.ArrayList&lt;android.view.View&gt;, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddFocusables">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddFocusables (views As IList(Of View), direction As FocusSearchDirection, focusableMode As FocusablesFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddFocusables(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ views, Android::Views::FocusSearchDirection direction, Android::Views::FocusablesFlags focusableMode);" />
      <MemberSignature Language="C#" Value="public virtual void AddFocusables (System.Collections.Generic.IList&lt;Android.Views.View&gt;? views, Android.Views.FocusSearchDirection direction, Android.Views.FocusablesFlags focusableMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFocusables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views, valuetype Android.Views.FocusSearchDirection direction, valuetype Android.Views.FocusablesFlags focusableMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddFocusables(System.Collections.Generic.IList{Android.Views.View},Android.Views.FocusSearchDirection,Android.Views.FocusablesFlags)" />
      <MemberSignature Language="F#" Value="abstract member AddFocusables : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection * Android.Views.FocusablesFlags -&gt; unit&#xA;override this.AddFocusables : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection * Android.Views.FocusablesFlags -&gt; unit" Usage="view.AddFocusables (views, direction, focusableMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="focusableMode" Type="Android.Views.FocusablesFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">Focusable views found so far or null if all we are interested is
                   the number of focusables.</param>
        <param name="direction">The direction of the focus.</param>
        <param name="focusableMode">The type of focusables to be added.</param>
        <summary>Adds any focusable views that are descendants of this view (possibly
            including this view if it is focusable itself) to views.</summary>
        <remarks>
          <para>Adds any focusable views that are descendants of this view (possibly
            including this view if it is focusable itself) to views. This method
            adds all focusable views regardless if we are in touch mode or
            only views focusable in touch mode if we are in touch mode or
            only views that can take accessibility focus if accessibility is enabled
            depending on the focusable mode parameter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addFocusables(java.util.ArrayList%3Candroid.view.View%3E,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.addFocusables(java.util.ArrayList&lt;android.view.View&gt;, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardNavigationClusters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddKeyboardNavigationClusters (views As ICollection(Of View), direction As FocusSearchDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddKeyboardNavigationClusters(System::Collections::Generic::ICollection&lt;Android::Views::View ^&gt; ^ views, Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual void AddKeyboardNavigationClusters (System.Collections.Generic.ICollection&lt;Android.Views.View&gt; views, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddKeyboardNavigationClusters(class System.Collections.Generic.ICollection`1&lt;class Android.Views.View&gt; views, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddKeyboardNavigationClusters(System.Collections.Generic.ICollection{Android.Views.View},Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member AddKeyboardNavigationClusters : System.Collections.Generic.ICollection&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection -&gt; unit&#xA;override this.AddKeyboardNavigationClusters : System.Collections.Generic.ICollection&lt;Android.Views.View&gt; * Android.Views.FocusSearchDirection -&gt; unit" Usage="view.AddKeyboardNavigationClusters (views, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addKeyboardNavigationClusters", "(Ljava/util/Collection;I)V", "GetAddKeyboardNavigationClusters_Ljava_util_Collection_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addKeyboardNavigationClusters", "(Ljava/util/Collection;I)V", "GetAddKeyboardNavigationClusters_Ljava_util_Collection_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.ICollection&lt;Android.Views.View&gt;" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">Keyboard navigation cluster roots found so far</param>
        <param name="direction">Direction to look</param>
        <summary>Adds any keyboard navigation cluster roots that are descendants of this view (possibly
            including this view if it is a cluster root itself) to views.</summary>
        <remarks>
          <para>Adds any keyboard navigation cluster roots that are descendants of this view (possibly
            including this view if it is a cluster root itself) to views.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addKeyboardNavigationClusters(java.util.Collection%3Candroid.view.View%3E,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.addKeyboardNavigationClusters(java.util.Collection&lt;android.view.View&gt;, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnAttachStateChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnAttachStateChangeListener (listener As View.IOnAttachStateChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnAttachStateChangeListener(Android::Views::View::IOnAttachStateChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnAttachStateChangeListener (Android.Views.View.IOnAttachStateChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnAttachStateChangeListener(class Android.Views.View/IOnAttachStateChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnAttachStateChangeListener : Android.Views.View.IOnAttachStateChangeListener -&gt; unit&#xA;override this.AddOnAttachStateChangeListener : Android.Views.View.IOnAttachStateChangeListener -&gt; unit" Usage="view.AddOnAttachStateChangeListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetAddOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetAddOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnAttachStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to attach</param>
        <summary>Add a listener for attach state changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addOnAttachStateChangeListener(android.view.OnAttachStateChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.addOnAttachStateChangeListener(android.view.OnAttachStateChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.RemoveOnAttachStateChangeListener(.IOnAttachStateChangeListener)" />
      </Docs>
    </Member>
    <Member MemberName="AddOnLayoutChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnLayoutChangeListener (listener As View.IOnLayoutChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnLayoutChangeListener(Android::Views::View::IOnLayoutChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnLayoutChangeListener (Android.Views.View.IOnLayoutChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnLayoutChangeListener(class Android.Views.View/IOnLayoutChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnLayoutChangeListener : Android.Views.View.IOnLayoutChangeListener -&gt; unit&#xA;override this.AddOnLayoutChangeListener : Android.Views.View.IOnLayoutChangeListener -&gt; unit" Usage="view.AddOnLayoutChangeListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetAddOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetAddOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnLayoutChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener that will be called when layout bounds change.</param>
        <summary>Add a listener that will be called when the bounds of the view change due to
            layout processing.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addOnLayoutChangeListener(android.view.OnLayoutChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.addOnLayoutChangeListener(android.view.OnLayoutChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="AddOnUnhandledKeyEventListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnUnhandledKeyEventListener (listener As View.IOnUnhandledKeyEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnUnhandledKeyEventListener(Android::Views::View::IOnUnhandledKeyEventListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnUnhandledKeyEventListener (Android.Views.View.IOnUnhandledKeyEventListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnUnhandledKeyEventListener(class Android.Views.View/IOnUnhandledKeyEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddOnUnhandledKeyEventListener(Android.Views.View.IOnUnhandledKeyEventListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnUnhandledKeyEventListener : Android.Views.View.IOnUnhandledKeyEventListener -&gt; unit&#xA;override this.AddOnUnhandledKeyEventListener : Android.Views.View.IOnUnhandledKeyEventListener -&gt; unit" Usage="view.AddOnUnhandledKeyEventListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnUnhandledKeyEventListener", "(Landroid/view/View$OnUnhandledKeyEventListener;)V", "GetAddOnUnhandledKeyEventListener_Landroid_view_View_OnUnhandledKeyEventListener_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnUnhandledKeyEventListener", "(Landroid/view/View$OnUnhandledKeyEventListener;)V", "GetAddOnUnhandledKeyEventListener_Landroid_view_View_OnUnhandledKeyEventListener_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnUnhandledKeyEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">a receiver of unhandled <c>KeyEvent</c>s.</param>
        <summary>Adds a listener which will receive unhandled <c>KeyEvent</c>s.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addOnUnhandledKeyEventListener(android.view.OnUnhandledKeyEventListener)" title="Reference documentation">Java documentation for <code>android.view.View.addOnUnhandledKeyEventListener(android.view.OnUnhandledKeyEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTouchables">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddTouchables (views As IList(Of View))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddTouchables(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ views);" />
      <MemberSignature Language="C#" Value="public virtual void AddTouchables (System.Collections.Generic.IList&lt;Android.Views.View&gt;? views);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTouchables(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; views) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AddTouchables(System.Collections.Generic.IList{Android.Views.View})" />
      <MemberSignature Language="F#" Value="abstract member AddTouchables : System.Collections.Generic.IList&lt;Android.Views.View&gt; -&gt; unit&#xA;override this.AddTouchables : System.Collections.Generic.IList&lt;Android.Views.View&gt; -&gt; unit" Usage="view.AddTouchables views" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addTouchables", "(Ljava/util/ArrayList;)V", "GetAddTouchables_Ljava_util_ArrayList_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addTouchables", "(Ljava/util/ArrayList;)V", "GetAddTouchables_Ljava_util_ArrayList_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="views" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="views">Touchable views found so far</param>
        <summary>Add any touchable views that are descendants of this view (possibly
            including this view if it is touchable itself) to views.</summary>
        <remarks>
          <para>Add any touchable views that are descendants of this view (possibly
            including this view if it is touchable itself) to views.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#addTouchables(java.util.ArrayList%3Candroid.view.View%3E)" title="Reference documentation">Java documentation for <code>android.view.View.addTouchables(java.util.ArrayList&lt;android.view.View&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedHandwritingDelegatePackageName">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowedHandwritingDelegatePackageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AllowedHandwritingDelegatePackageName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string? AllowedHandwritingDelegatePackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllowedHandwritingDelegatePackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AllowedHandwritingDelegatePackageName" />
      <MemberSignature Language="F#" Value="member this.AllowedHandwritingDelegatePackageName : string" Usage="Android.Views.View.AllowedHandwritingDelegatePackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowedHandwritingDelegatePackageName", "()Ljava/lang/String;", "GetGetAllowedHandwritingDelegatePackageNameHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllowedHandwritingDelegatePackageName", "()Ljava/lang/String;", "GetGetAllowedHandwritingDelegatePackageNameHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the allowed package for delegate editor views for which this view may act as a
            handwriting delegator, as set by <c>#setAllowedHandwritingDelegatePackage</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the allowed package for delegate editor views for which this view may act as a
            handwriting delegator, as set by <c>#setAllowedHandwritingDelegatePackage</c>. If <c>#setAllowedHandwritingDelegatePackage</c> has not been called, or called with <c>null</c>
            argument, this will return <c>null</c>, meaning that this delegator view may only be used to
            initiate handwriting mode for a delegate editor view from the same package as this delegator
            view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAllowedHandwritingDelegatePackageName()" title="Reference documentation">Java documentation for <code>android.view.View.getAllowedHandwritingDelegatePackageName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedHandwritingDelegatorPackageName">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowedHandwritingDelegatorPackageName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AllowedHandwritingDelegatorPackageName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string? AllowedHandwritingDelegatorPackageName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllowedHandwritingDelegatorPackageName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AllowedHandwritingDelegatorPackageName" />
      <MemberSignature Language="F#" Value="member this.AllowedHandwritingDelegatorPackageName : string" Usage="Android.Views.View.AllowedHandwritingDelegatorPackageName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowedHandwritingDelegatorPackageName", "()Ljava/lang/String;", "GetGetAllowedHandwritingDelegatorPackageNameHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllowedHandwritingDelegatorPackageName", "()Ljava/lang/String;", "GetGetAllowedHandwritingDelegatorPackageNameHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the allowed package for views which may act as a handwriting delegator for this
            delegate editor view, as set by <c>#setAllowedHandwritingDelegatorPackage</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the allowed package for views which may act as a handwriting delegator for this
            delegate editor view, as set by <c>#setAllowedHandwritingDelegatorPackage</c>. If <c>#setAllowedHandwritingDelegatorPackage</c> has not been called, or called with <c>null</c>
            argument, this will return <c>null</c>, meaning that only views from the same package as
            this delegator editor view may act as a handwriting delegator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAllowedHandwritingDelegatorPackageName()" title="Reference documentation">Java documentation for <code>android.view.View.getAllowedHandwritingDelegatorPackageName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Alpha As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float Alpha { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float Alpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Alpha" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Alpha" />
      <MemberSignature Language="F#" Value="member this.Alpha : single with get, set" Usage="Android.Views.View.Alpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAlpha", "()F", "GetGetAlphaHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAlpha", "()F", "GetGetAlphaHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAlpha", "(F)V", "GetSetAlpha_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAlpha", "(F)V", "GetSetAlpha_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="alpha">The opacity of the view.</param>
        <summary>The opacity of the view. -or- Sets the opacity of the view to a value from 0 to 1, where 0 means the view is
            completely transparent and 1 means the view is completely opaque.</summary>
        <value>The opacity of the view.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The opacity of the view. This is a value from 0 to 1, where 0 means the view is
            completely transparent and 1 means the view is completely opaque.</para>
          <para>By default this is 1.0f.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAlpha()" title="Reference documentation">Java documentation for <code>android.view.View.getAlpha()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the opacity of the view to a value from 0 to 1, where 0 means the view is
            completely transparent and 1 means the view is completely opaque.
            
            &lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; setting alpha to a translucent value (0 &lt; alpha &lt; 1)
            can have significant performance implications, especially for large views. It is best to use
            the alpha property sparingly and transiently, as in the case of fading animations.&lt;/p&gt;</para>
          <para>For a view with a frequently changing alpha, such as during a fading animation, it is
            strongly recommended for performance reasons to either override
            <c>#hasOverlappingRendering()</c> to return <c>false</c> if appropriate, or setting a
            <c>#setLayerType(int, android.graphics.Paint) layer type</c> on the view for the duration
            of the animation. On versions <c>android.os.Build.VERSION_CODES#M</c> and below,
            the default path for rendering an unlayered View with alpha could add multiple milliseconds
            of rendering cost, even for simple or small views. Starting with
            <c>android.os.Build.VERSION_CODES#M</c>, <c>#LAYER_TYPE_HARDWARE</c> is automatically
            applied to the view at the rendering level.</para>
          <para>If this view overrides <c>#onSetAlpha(int)</c> to return true, then this view is
            responsible for applying the opacity itself.</para>
          <para>On versions <c>android.os.Build.VERSION_CODES#LOLLIPOP_MR1</c> and below, note that if
            the view is backed by a <c>#setLayerType(int, android.graphics.Paint) layer</c> and is
            associated with a <c>#setLayerPaint(android.graphics.Paint) layer paint</c>, setting an
            alpha value less than 1.0 will supersede the alpha of the layer paint.</para>
          <para>Starting with <c>android.os.Build.VERSION_CODES#M</c>, setting a translucent alpha
            value will clip a View to its bounds, unless the View returns <c>false</c> from
            <c>#hasOverlappingRendering</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAlpha(float)" title="Reference documentation">Java documentation for <code>android.view.View.setAlpha(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.HasOverlappingRendering" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="Animate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Animate () As ViewPropertyAnimator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ViewPropertyAnimator ^ Animate();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? Animate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Animate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Animate" />
      <MemberSignature Language="F#" Value="abstract member Animate : unit -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.Animate : unit -&gt; Android.Views.ViewPropertyAnimator" Usage="view.Animate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("animate", "()Landroid/view/ViewPropertyAnimator;", "GetAnimateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("animate", "()Landroid/view/ViewPropertyAnimator;", "GetAnimateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method returns a ViewPropertyAnimator object, which can be used to animate
            specific properties on this View.</summary>
        <returns>ViewPropertyAnimator The ViewPropertyAnimator associated with this View.</returns>
        <remarks>
          <para>This method returns a ViewPropertyAnimator object, which can be used to animate
            specific properties on this View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#animate()" title="Reference documentation">Java documentation for <code>android.view.View.animate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Animation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Animation As Animation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Animations::Animation ^ Animation { Android::Views::Animations::Animation ^ get(); void set(Android::Views::Animations::Animation ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Animations.Animation? Animation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Animations.Animation Animation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Animation" />
      <MemberSignature Language="F#" Value="member this.Animation : Android.Views.Animations.Animation with get, set" Usage="Android.Views.View.Animation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAnimation", "()Landroid/view/animation/Animation;", "GetGetAnimationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAnimation", "(Landroid/view/animation/Animation;)V", "GetSetAnimation_Landroid_view_animation_Animation_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Animations.Animation</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="animation">The next animation, or null.</param>
        <summary>Get the animation currently associated with this view. -or- Sets the next animation to play for this view.</summary>
        <value>The animation that is currently playing or
                    scheduled to play for this view.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get the animation currently associated with this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAnimation()" title="Reference documentation">Java documentation for <code>android.view.View.getAnimation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the next animation to play for this view.
            If you want the animation to play immediately, use
            <c>#startAnimation(android.view.animation.Animation)</c> instead.
            This method provides allows fine-grained
            control over the start time and invalidation, but you
            must make sure that 1) the animation has a start time set, and
            2) the view's parent (which controls animations on its children)
            will be invalidated when the animation is supposed to
            start.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAnimation(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.view.View.setAnimation(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AnimationMatrix">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AnimationMatrix As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Matrix ^ AnimationMatrix { Android::Graphics::Matrix ^ get(); void set(Android::Graphics::Matrix ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Matrix? AnimationMatrix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Matrix AnimationMatrix" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AnimationMatrix" />
      <MemberSignature Language="F#" Value="member this.AnimationMatrix : Android.Graphics.Matrix with get, set" Usage="Android.Views.View.AnimationMatrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAnimationMatrix", "()Landroid/graphics/Matrix;", "GetGetAnimationMatrixHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAnimationMatrix", "()Landroid/graphics/Matrix;", "GetGetAnimationMatrixHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAnimationMatrix", "(Landroid/graphics/Matrix;)V", "GetSetAnimationMatrix_Landroid_graphics_Matrix_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAnimationMatrix", "(Landroid/graphics/Matrix;)V", "GetSetAnimationMatrix_Landroid_graphics_Matrix_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="matrix">The matrix, null indicates that the matrix should be cleared.</param>
        <summary>Return the current transformation matrix of the view. -or- Changes the transformation matrix on the view.</summary>
        <value>the Matrix, null indicates there is no transformation</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the current transformation matrix of the view. This is used in animation frameworks,
            such as <c>android.transition.Transition</c>. Returns <c>null</c> when there is no
            transformation provided by <c>#setAnimationMatrix(Matrix)</c>.
            Application developers should use transformation methods like <c>#setRotation(float)</c>,
            <c>#setScaleX(float)</c>, <c>#setScaleX(float)</c>, <c>#setTranslationX(float)</c>}
            and <c>#setTranslationY(float)</c> (float)}} instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAnimationMatrix()" title="Reference documentation">Java documentation for <code>android.view.View.getAnimationMatrix()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Changes the transformation matrix on the view. This is used in animation frameworks,
            such as <c>android.transition.Transition</c>. When the animation finishes, the matrix
            should be cleared by calling this method with <c>null</c> as the matrix parameter.
            Application developers should use transformation methods like <c>#setRotation(float)</c>,
            <c>#setScaleX(float)</c>, <c>#setScaleX(float)</c>, <c>#setTranslationX(float)</c>}
            and <c>#setTranslationY(float)</c> (float)}} instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAnimationMatrix(android.graphics.Matrix)" title="Reference documentation">Java documentation for <code>android.view.View.setAnimationMatrix(android.graphics.Matrix)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnounceForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AnnounceForAccessibility (text As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AnnounceForAccessibility(Java::Lang::ICharSequence ^ text);" />
      <MemberSignature Language="C#" Value="public virtual void AnnounceForAccessibility (Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AnnounceForAccessibility(class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AnnounceForAccessibility(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member AnnounceForAccessibility : Java.Lang.ICharSequence -&gt; unit&#xA;override this.AnnounceForAccessibility : Java.Lang.ICharSequence -&gt; unit" Usage="view.AnnounceForAccessibility text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("announceForAccessibility", "(Ljava/lang/CharSequence;)V", "GetAnnounceForAccessibility_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("announceForAccessibility", "(Ljava/lang/CharSequence;)V", "GetAnnounceForAccessibility_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">The announcement text.</param>
        <summary>Convenience method for sending a <c>AccessibilityEvent#TYPE_ANNOUNCEMENT</c><c>AccessibilityEvent</c> to suggest that an accessibility service announce the
            specified text to its users.</summary>
        <remarks>
          <para>Convenience method for sending a <c>AccessibilityEvent#TYPE_ANNOUNCEMENT</c><c>AccessibilityEvent</c> to suggest that an accessibility service announce the
            specified text to its users.</para>
          <para>Note: The event generated with this API carries no semantic meaning, and is appropriate only
            in exceptional situations. Apps can generally achieve correct behavior for accessibility by
            accurately supplying the semantics of their UI.
            They should not need to specify what exactly is announced to users.</para>
          <para>In general, only announce transitions and don’t generate a confirmation message for simple
            actions like a button press. Label your controls concisely and precisely instead, and for
            significant UI changes like window changes, use
            <c>android.app.Activity#setTitle(CharSequence)</c> and
            <c>View#setAccessibilityPaneTitle(CharSequence)</c>.</para>
          <para>Use <c>View#setAccessibilityLiveRegion(int)</c> to inform the user of changes to critical
            views within the user interface. These should still be used sparingly as they may generate
            announcements every time a View is updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#announceForAccessibility(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.announceForAccessibility(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AnnounceForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Sub AnnounceForAccessibility (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AnnounceForAccessibility(System::String ^ text);" />
      <MemberSignature Language="C#" Value="public void AnnounceForAccessibility (string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AnnounceForAccessibility(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AnnounceForAccessibility(System.String)" />
      <MemberSignature Language="F#" Value="member this.AnnounceForAccessibility : string -&gt; unit" Usage="view.AnnounceForAccessibility text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The announcement text.</param>
        <summary>Convenience method for sending a <c>AccessibilityEvent#TYPE_ANNOUNCEMENT</c><c>AccessibilityEvent</c> to suggest that an accessibility service announce the
            specified text to its users.</summary>
        <remarks>
          <para>Convenience method for sending a <c>AccessibilityEvent#TYPE_ANNOUNCEMENT</c><c>AccessibilityEvent</c> to suggest that an accessibility service announce the
            specified text to its users.</para>
          <para>Note: The event generated with this API carries no semantic meaning, and is appropriate only
            in exceptional situations. Apps can generally achieve correct behavior for accessibility by
            accurately supplying the semantics of their UI.
            They should not need to specify what exactly is announced to users.</para>
          <para>In general, only announce transitions and don’t generate a confirmation message for simple
            actions like a button press. Label your controls concisely and precisely instead, and for
            significant UI changes like window changes, use
            <c>android.app.Activity#setTitle(CharSequence)</c> and
            <c>View#setAccessibilityPaneTitle(CharSequence)</c>.</para>
          <para>Use <c>View#setAccessibilityLiveRegion(int)</c> to inform the user of changes to critical
            views within the user interface. These should still be used sparingly as they may generate
            announcements every time a View is updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#announceForAccessibility(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.announceForAccessibility(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationWindowToken">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationWindowToken As IBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::IBinder ^ ApplicationWindowToken { Android::OS::IBinder ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.IBinder? ApplicationWindowToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder ApplicationWindowToken" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ApplicationWindowToken" />
      <MemberSignature Language="F#" Value="member this.ApplicationWindowToken : Android.OS.IBinder" Usage="Android.Views.View.ApplicationWindowToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getApplicationWindowToken", "()Landroid/os/IBinder;", "GetGetApplicationWindowTokenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getApplicationWindowToken", "()Landroid/os/IBinder;", "GetGetApplicationWindowTokenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a unique token identifying the top-level "real" window of
            the window that this view is attached to.</summary>
        <value>Returns the associated window token, either
            <c>#getWindowToken()</c> or the containing window's token.</value>
        <remarks>
          <para>Retrieve a unique token identifying the top-level "real" window of
            the window that this view is attached to.  That is, this is like
            <c>#getWindowToken</c>, except if the window this view in is a panel
            window (attached to another containing window), then the token of
            the containing window is returned instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getApplicationWindowToken()" title="Reference documentation">Java documentation for <code>android.view.View.getApplicationWindowToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplyWindowInsets">
      <MemberSignature Language="VB.NET" Value="Public Property ApplyWindowInsets As View.ApplyWindowInsetsHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::View::ApplyWindowInsetsHandler ^ ApplyWindowInsets { Android::Views::View::ApplyWindowInsetsHandler ^ get(); void set(Android::Views::View::ApplyWindowInsetsHandler ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.View.ApplyWindowInsetsHandler? ApplyWindowInsets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View/ApplyWindowInsetsHandler ApplyWindowInsets" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ApplyWindowInsets" />
      <MemberSignature Language="F#" Value="member this.ApplyWindowInsets : Android.Views.View.ApplyWindowInsetsHandler with get, set" Usage="Android.Views.View.ApplyWindowInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.View+ApplyWindowInsetsHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeSourceResourceMap">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AttributeSourceResourceMap As IDictionary(Of Integer, Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IDictionary&lt;Java::Lang::Integer ^, Java::Lang::Integer ^&gt; ^ AttributeSourceResourceMap { System::Collections::Generic::IDictionary&lt;Java::Lang::Integer ^, Java::Lang::Integer ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;Java.Lang.Integer,Java.Lang.Integer&gt; AttributeSourceResourceMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class Java.Lang.Integer, class Java.Lang.Integer&gt; AttributeSourceResourceMap" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AttributeSourceResourceMap" />
      <MemberSignature Language="F#" Value="member this.AttributeSourceResourceMap : System.Collections.Generic.IDictionary&lt;Java.Lang.Integer, Java.Lang.Integer&gt;" Usage="Android.Views.View.AttributeSourceResourceMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAttributeSourceResourceMap", "()Ljava/util/Map;", "GetGetAttributeSourceResourceMapHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAttributeSourceResourceMap", "()Ljava/util/Map;", "GetGetAttributeSourceResourceMapHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Java.Lang.Integer,Java.Lang.Integer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the mapping of attribute resource ID to source resource ID where the attribute value
            was set.</summary>
        <value>mapping of attribute resource ID to source resource ID where the attribute value
            was set.</value>
        <remarks>
          <para>Returns the mapping of attribute resource ID to source resource ID where the attribute value
            was set. Source resource ID can either be a layout resource ID, if the value was set in XML
            within the View tag, or a style resource ID, if the attribute was set in a style. The source
            resource value will be one of the resource IDs from <c>#getAttributeSourceResourceMap()</c>.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; this method will only return actual values if the view attribute debugging
            is enabled in Android developer options.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAttributeSourceResourceMap()" title="Reference documentation">Java documentation for <code>android.view.View.getAttributeSourceResourceMap()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Autofill">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Autofill (values As SparseArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Autofill(Android::Util::SparseArray ^ values);" />
      <MemberSignature Language="C#" Value="public virtual void Autofill (Android.Util.SparseArray values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Autofill(class Android.Util.SparseArray values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Autofill(Android.Util.SparseArray)" />
      <MemberSignature Language="F#" Value="abstract member Autofill : Android.Util.SparseArray -&gt; unit&#xA;override this.Autofill : Android.Util.SparseArray -&gt; unit" Usage="view.Autofill values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("autofill", "(Landroid/util/SparseArray;)V", "GetAutofill_Landroid_util_SparseArray_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("autofill", "(Landroid/util/SparseArray;)V", "GetAutofill_Landroid_util_SparseArray_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="values">map of values to be autofilled, keyed by virtual child id.</param>
        <summary>Automatically fills the content of the virtual children within this view.</summary>
        <remarks>
          <para>Automatically fills the content of the virtual children within this view.</para>
          <para>Views with virtual children support the Autofill Framework mainly by:
            &lt;ul&gt;
              &lt;li&gt;Providing the metadata defining what the virtual children mean and how they can be
                  autofilled.
              &lt;li&gt;Implementing the methods that autofill the virtual children.
            &lt;/ul&gt;</para>
          <para>
            <c>#onProvideAutofillVirtualStructure(ViewStructure, int)</c> is responsible for the
            former, this method is responsible for the latter - see <c>#autofill(AutofillValue)</c> and
            <c>#onProvideAutofillVirtualStructure(ViewStructure, int)</c> for more info about autofill.</para>
          <para>If a child value is updated asynchronously, the next call to
            <c>AutofillManager#notifyValueChanged(View, int, AutofillValue)</c> must happen
            &lt;b&gt;after&lt;/b&gt; the value was changed to the autofilled value. If not, the child will not be
            considered autofilled.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; To indicate that a virtual view was autofilled,
            <c>?android:attr/autofilledHighlight</c> should be drawn over it until the data
            changes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#autofill(android.util.SparseArray%3Candroid.view.autofill.AutofillValue%3E)" title="Reference documentation">Java documentation for <code>android.view.View.autofill(android.util.SparseArray&lt;android.view.autofill.AutofillValue&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Autofill">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Autofill (value As AutofillValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Autofill(Android::Views::Autofill::AutofillValue ^ value);" />
      <MemberSignature Language="C#" Value="public virtual void Autofill (Android.Views.Autofill.AutofillValue? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Autofill(class Android.Views.Autofill.AutofillValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Autofill(Android.Views.Autofill.AutofillValue)" />
      <MemberSignature Language="F#" Value="abstract member Autofill : Android.Views.Autofill.AutofillValue -&gt; unit&#xA;override this.Autofill : Android.Views.Autofill.AutofillValue -&gt; unit" Usage="view.Autofill value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("autofill", "(Landroid/view/autofill/AutofillValue;)V", "GetAutofill_Landroid_view_autofill_AutofillValue_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("autofill", "(Landroid/view/autofill/AutofillValue;)V", "GetAutofill_Landroid_view_autofill_AutofillValue_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Android.Views.Autofill.AutofillValue" />
      </Parameters>
      <Docs>
        <param name="value">value to be autofilled.</param>
        <summary>Automatically fills the content of this view with the <c>value</c>.</summary>
        <remarks>
          <para>Automatically fills the content of this view with the <c>value</c>.</para>
          <para>Views support the Autofill Framework mainly by:
            &lt;ul&gt;
              &lt;li&gt;Providing the metadata defining what the view means and how it can be autofilled.
              &lt;li&gt;Implementing the methods that autofill the view.
            &lt;/ul&gt;</para>
          <para>
            <c>#onProvideAutofillStructure(ViewStructure, int)</c> is responsible for the former,
            this method is responsible for latter.</para>
          <para>This method does nothing by default, but when overridden it typically:
            &lt;ol&gt;
              &lt;li&gt;Checks if the provided value matches the expected type (which is defined by
                  <c>#getAutofillType()</c>).
              &lt;li&gt;Checks if the view is editable - if it isn't, it should return right away.
              &lt;li&gt;Call the proper getter method on <c>AutofillValue</c> to fetch the actual value.
              &lt;li&gt;Pass the actual value to the equivalent setter in the view.
            &lt;/ol&gt;</para>
          <para>For example, a text-field view could implement the method this way:</para>
          <code lang="text/java">&amp;#64;Override
            public void autofill(AutofillValue value) {
              if (!value.isText() || !this.isEditable()) {
                 return;
              }
              CharSequence text = value.getTextValue();
              if (text != null) {
                this.setText(text);
              }
            }
            </code>
          <para>If the value is updated asynchronously, the next call to
            <c>AutofillManager#notifyValueChanged(View)</c> must happen &lt;b&gt;after&lt;/b&gt; the value was
            changed to the autofilled value. If not, the view will not be considered autofilled.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; After this method is called, the value returned by
            <c>#getAutofillValue()</c> must be equal to the <c>value</c> passed to it, otherwise the
            view will not be highlighted as autofilled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#autofill(android.view.autofill.AutofillValue)" title="Reference documentation">Java documentation for <code>android.view.View.autofill(android.view.autofill.AutofillValue)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillFlagIncludeNotImportantViews">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillFlagIncludeNotImportantViews As AutofillFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillFlags AutofillFlagIncludeNotImportantViews = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillFlags AutofillFlagIncludeNotImportantViews = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillFlags AutofillFlagIncludeNotImportantViews = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillFlagIncludeNotImportantViews" />
      <MemberSignature Language="F#" Value="val mutable AutofillFlagIncludeNotImportantViews : Android.Views.AutofillFlags" Usage="Android.Views.View.AutofillFlagIncludeNotImportantViews" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag requesting you to add views that are marked as not important for autofill
            (see <c>#setImportantForAutofill(int)</c>) to a <c>ViewStructure</c>.</summary>
        <remarks>
          <para>Flag requesting you to add views that are marked as not important for autofill
            (see <c>#setImportantForAutofill(int)</c>) to a <c>ViewStructure</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardExpirationDate">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardExpirationDate As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardExpirationDate;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardExpirationDate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardExpirationDate" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardExpirationDate" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardExpirationDate : string" Usage="Android.Views.View.AutofillHintCreditCardExpirationDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card expiration date.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card expiration date.</para>
          <para>It should be used when the credit card expiration date is represented by just one view;
            if it is represented by more than one (for example, one view for the month and another view
            for the year), then each of these views should use the hint specific for the unit
            (<c>#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY</c>,
            <c>#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH</c>,
            or <c>#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR</c>).</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE}</c>).</para>
          <para>When annotating a view with this hint, it's recommended to use a date autofill value to
            avoid ambiguity when the autofill service provides a value for it. To understand why a
            value can be ambiguous, consider "April of 2020", which could be represented as either of
            the following options:
            
            &lt;ul&gt;
              &lt;li&gt;<c>"04/2020"</c>&lt;li&gt;<c>"4/2020"</c>&lt;li&gt;<c>"2020/04"</c>&lt;li&gt;<c>"2020/4"</c>&lt;li&gt;<c>"April/2020"</c>&lt;li&gt;<c>"Apr/2020"</c>&lt;/ul&gt;</para>
          <para>You define a date autofill value for the view by overriding the following methods:
            
            &lt;ol&gt;
              &lt;li&gt;<c>#getAutofillType()</c> to return <c>#AUTOFILL_TYPE_DATE</c>.
              &lt;li&gt;<c>#getAutofillValue()</c> to return a
                  <c>AutofillValue#forDate(long) date autofillvalue</c>.
              &lt;li&gt;<c>#autofill(AutofillValue)</c> to expect a data autofillvalue.
            &lt;/ol&gt;</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardExpirationDay">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardExpirationDay As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardExpirationDay;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardExpirationDay;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardExpirationDay" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardExpirationDay" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardExpirationDay : string" Usage="Android.Views.View.AutofillHintCreditCardExpirationDay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card expiration day.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card expiration day.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DAY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardExpirationMonth">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardExpirationMonth As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardExpirationMonth;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardExpirationMonth;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardExpirationMonth" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardExpirationMonth" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardExpirationMonth : string" Usage="Android.Views.View.AutofillHintCreditCardExpirationMonth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card expiration month.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card expiration month.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH}</c>).</para>
          <para>When annotating a view with this hint, it's recommended to use a text autofill value
            whose value is the numerical representation of the month, starting on <c>1</c> to avoid
            ambiguity when the autofill service provides a value for it. To understand why a
            value can be ambiguous, consider "January", which could be represented as either of
            
            &lt;ul&gt;
              &lt;li&gt;<c>"1"</c>: recommended way.
              &lt;li&gt;<c>"0"</c>: if following the <c>Calendar#MONTH</c> convention.
              &lt;li&gt;<c>"January"</c>: full name, in English.
              &lt;li&gt;<c>"jan"</c>: abbreviated name, in English.
              &lt;li&gt;<c>"Janeiro"</c>: full name, in another language.
            &lt;/ul&gt;</para>
          <para>Another recommended approach is to use a date autofill value - see
            <c>#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_DATE</c> for more details.</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_MONTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardExpirationYear">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardExpirationYear As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardExpirationYear;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardExpirationYear;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardExpirationYear" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardExpirationYear" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardExpirationYear : string" Usage="Android.Views.View.AutofillHintCreditCardExpirationYear" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card expiration year.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card expiration year.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_EXPIRATION_YEAR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardNumber">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardNumber As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardNumber;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardNumber" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardNumber" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardNumber : string" Usage="Android.Views.View.AutofillHintCreditCardNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_NUMBER", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_NUMBER", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card number.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card number.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_NUMBER}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_NUMBER" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintCreditCardSecurityCode">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintCreditCardSecurityCode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintCreditCardSecurityCode;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintCreditCardSecurityCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintCreditCardSecurityCode" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintCreditCardSecurityCode" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintCreditCardSecurityCode : string" Usage="Android.Views.View.AutofillHintCreditCardSecurityCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a credit card security code.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a credit card security code.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_CREDIT_CARD_SECURITY_CODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintEmailAddress">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintEmailAddress As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintEmailAddress;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintEmailAddress;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintEmailAddress" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintEmailAddress" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintEmailAddress : string" Usage="Android.Views.View.AutofillHintEmailAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_EMAIL_ADDRESS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_EMAIL_ADDRESS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with an email address.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with an email address.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_EMAIL_ADDRESS}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_EMAIL_ADDRESS" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_EMAIL_ADDRESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintName">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintName;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintName" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintName" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintName : string" Usage="Android.Views.View.AutofillHintName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_NAME", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_NAME", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a user's real name.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a user's real name.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_NAME}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_NAME" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintPassword">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintPassword As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintPassword;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintPassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintPassword" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintPassword" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintPassword : string" Usage="Android.Views.View.AutofillHintPassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_PASSWORD", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_PASSWORD", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a password.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a password.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_PASSWORD}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_PASSWORD" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_PASSWORD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintPhone">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintPhone As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintPhone;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintPhone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintPhone" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintPhone" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintPhone : string" Usage="Android.Views.View.AutofillHintPhone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_PHONE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_PHONE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a phone number.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a phone number.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_PHONE}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_PHONE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_PHONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintPostalAddress">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintPostalAddress As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintPostalAddress;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintPostalAddress;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintPostalAddress" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintPostalAddress" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintPostalAddress : string" Usage="Android.Views.View.AutofillHintPostalAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_POSTAL_ADDRESS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_POSTAL_ADDRESS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a postal address.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a postal address.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_POSTAL_ADDRESS}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_POSTAL_ADDRESS" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_POSTAL_ADDRESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintPostalCode">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintPostalCode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintPostalCode;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintPostalCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintPostalCode" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintPostalCode" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintPostalCode : string" Usage="Android.Views.View.AutofillHintPostalCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_POSTAL_CODE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_POSTAL_CODE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a postal code.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a postal code.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_POSTAL_CODE}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_POSTAL_CODE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_POSTAL_CODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillHintUsername">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillHintUsername As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ AutofillHintUsername;" />
      <MemberSignature Language="C#" Value="public const string AutofillHintUsername;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string AutofillHintUsername" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillHintUsername" />
      <MemberSignature Language="F#" Value="val mutable AutofillHintUsername : string" Usage="Android.Views.View.AutofillHintUsername" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_HINT_USERNAME", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_HINT_USERNAME", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hint indicating that this view can be autofilled with a username.</summary>
        <remarks>
          <para>Hint indicating that this view can be autofilled with a username.</para>
          <para>Can be used with either <c>#setAutofillHints(String[])</c> or
             &lt;c&gt;android:autofillHint&lt;/c&gt; (in which case the
            value should be <c>{@value #AUTOFILL_HINT_USERNAME}</c>).</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about autofill hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_HINT_USERNAME" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_HINT_USERNAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillId">
      <MemberSignature Language="VB.NET" Value="Public Property AutofillId As AutofillId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::Autofill::AutofillId ^ AutofillId { Android::Views::Autofill::AutofillId ^ get(); void set(Android::Views::Autofill::AutofillId ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.Autofill.AutofillId? AutofillId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Autofill.AutofillId AutofillId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AutofillId" />
      <MemberSignature Language="F#" Value="member this.AutofillId : Android.Views.Autofill.AutofillId with get, set" Usage="Android.Views.View.AutofillId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAutofillId", "()Landroid/view/autofill/AutofillId;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAutofillId", "()Landroid/view/autofill/AutofillId;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAutofillId", "(Landroid/view/autofill/AutofillId;)V", "GetSetAutofillId_Landroid_view_autofill_AutofillId_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAutofillId", "(Landroid/view/autofill/AutofillId;)V", "GetSetAutofillId_Landroid_view_autofill_AutofillId_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Autofill.AutofillId</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="id">an autofill ID that is unique in the <c>android.app.Activity</c> hosting the view,
            or <c>null</c> to reset it. Usually it's an id previously allocated to another view (and
            obtained through <c>#getAutofillId()</c>), or a new value obtained through
            <c>AutofillManager#getNextAutofillId()</c>.</param>
        <summary>Gets the unique, logical identifier of this view in the activity, for autofill purposes. -or- Sets the unique, logical identifier of this view in the activity, for autofill purposes.</summary>
        <value>The View's autofill id.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the unique, logical identifier of this view in the activity, for autofill purposes.</para>
          <para>The autofill id is created on demand, unless it is explicitly set by
            <c>#setAutofillId(AutofillId)</c>.</para>
          <para>See <c>#setAutofillId(AutofillId)</c> for more info.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAutofillId()" title="Reference documentation">Java documentation for <code>android.view.View.getAutofillId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the unique, logical identifier of this view in the activity, for autofill purposes.</para>
          <para>The autofill id is created on demand, and this method should only be called when a view is
            reused after <c>#dispatchProvideAutofillStructure(ViewStructure, int)</c> is called, as
            that method creates a snapshot of the view that is passed along to the autofill service.</para>
          <para>This method is typically used when view subtrees are recycled to represent different
            content* &amp;mdash;in this case, the autofill id can be saved before the view content is swapped
            out, and restored later when it's swapped back in. For example:</para>
          <code lang="text/java">EditText reusableView = ...;
            ViewGroup parentView = ...;
            AutofillManager afm = ...;
            
            // Swap out the view and change its contents
            AutofillId oldId = reusableView.getAutofillId();
            CharSequence oldText = reusableView.getText();
            parentView.removeView(reusableView);
            AutofillId newId = afm.getNextAutofillId();
            reusableView.setText("New I am");
            reusableView.setAutofillId(newId);
            parentView.addView(reusableView);
            
            // Later, swap the old content back in
            parentView.removeView(reusableView);
            reusableView.setAutofillId(oldId);
            reusableView.setText(oldText);
            parentView.addView(reusableView);
            </code>
          <para>NOTE: If this view is a descendant of an <c>android.widget.AdapterView</c>, the system
            may reset its autofill id when this view is recycled. If the autofill ids need to be stable,
            they should be set again in
            <c>android.widget.Adapter#getView(int, android.view.View, android.view.ViewGroup)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAutofillId(android.view.autofill.AutofillId)" title="Reference documentation">Java documentation for <code>android.view.View.setAutofillId(android.view.autofill.AutofillId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillType">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutofillType As AutofillType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::AutofillType AutofillType { Android::Views::AutofillType get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.AutofillType AutofillType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.AutofillType AutofillType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AutofillType" />
      <MemberSignature Language="F#" Value="member this.AutofillType : Android.Views.AutofillType" Usage="Android.Views.View.AutofillType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAutofillType", "()I", "GetGetAutofillTypeHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAutofillType", "()I", "GetGetAutofillTypeHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes the autofill type of this view, so an
            <c>android.service.autofill.AutofillService</c> can create the proper <c>AutofillValue</c>
            when autofilling the view.</summary>
        <value>either <c>#AUTOFILL_TYPE_NONE</c>, <c>#AUTOFILL_TYPE_TEXT</c>,
            <c>#AUTOFILL_TYPE_LIST</c>, <c>#AUTOFILL_TYPE_DATE</c>, or <c>#AUTOFILL_TYPE_TOGGLE</c>.</value>
        <remarks>
          <para>Describes the autofill type of this view, so an
            <c>android.service.autofill.AutofillService</c> can create the proper <c>AutofillValue</c>
            when autofilling the view.</para>
          <para>By default returns <c>#AUTOFILL_TYPE_NONE</c>, but views should override it to properly
            support the Autofill Framework.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAutofillType()" title="Reference documentation">Java documentation for <code>android.view.View.getAutofillType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillTypeDate">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillTypeDate As AutofillType  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillType AutofillTypeDate = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillType AutofillTypeDate = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillType AutofillTypeDate = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillTypeDate" />
      <MemberSignature Language="F#" Value="val mutable AutofillTypeDate : Android.Views.AutofillType" Usage="Android.Views.View.AutofillTypeDate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_TYPE_DATE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_TYPE_DATE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Autofill type for a field that contains a date, which is represented by a long representing
            the number of milliseconds since the standard base time known as "the epoch", namely
            January 1, 1970, 00:00:00 GMT (see <c>java.util.Date#getTime()</c>.</summary>
        <remarks>
          <para>Autofill type for a field that contains a date, which is represented by a long representing
            the number of milliseconds since the standard base time known as "the epoch", namely
            January 1, 1970, 00:00:00 GMT (see <c>java.util.Date#getTime()</c>.</para>
          <para>
            <c>AutofillValue</c> instances for autofilling a <c>View</c> can be obtained through
            <c>AutofillValue#forDate(long)</c>, and the values passed to
            autofill a <c>View</c> can be fetched through <c>AutofillValue#getDateValue()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_TYPE_DATE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_TYPE_DATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillTypeList">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillTypeList As AutofillType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillType AutofillTypeList = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillType AutofillTypeList = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillType AutofillTypeList = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillTypeList" />
      <MemberSignature Language="F#" Value="val mutable AutofillTypeList : Android.Views.AutofillType" Usage="Android.Views.View.AutofillTypeList" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_TYPE_LIST", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_TYPE_LIST", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Autofill type for a selection list field, which is filled by an <c>int</c>
            representing the element index inside the list (starting at <c>0</c>).</summary>
        <remarks>
          <para>Autofill type for a selection list field, which is filled by an <c>int</c>
            representing the element index inside the list (starting at <c>0</c>).</para>
          <para>
            <c>AutofillValue</c> instances for autofilling a <c>View</c> can be obtained through
            <c>AutofillValue#forList(int)</c>, and the value passed to autofill a
            <c>View</c> can be fetched through <c>AutofillValue#getListValue()</c>.</para>
          <para>The available options in the selection list are typically provided by
            <c>android.app.assist.AssistStructure.ViewNode#getAutofillOptions()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_TYPE_LIST" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_TYPE_LIST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillTypeNone">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillTypeNone As AutofillType  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillType AutofillTypeNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillType AutofillTypeNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillType AutofillTypeNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillTypeNone" />
      <MemberSignature Language="F#" Value="val mutable AutofillTypeNone : Android.Views.AutofillType" Usage="Android.Views.View.AutofillTypeNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_TYPE_NONE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_TYPE_NONE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Autofill type for views that cannot be autofilled.</summary>
        <remarks>
          <para>Autofill type for views that cannot be autofilled.</para>
          <para>Typically used when the view is read-only; for example, a text label.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_TYPE_NONE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_TYPE_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillTypeText">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillTypeText As AutofillType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillType AutofillTypeText = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillType AutofillTypeText = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillType AutofillTypeText = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillTypeText" />
      <MemberSignature Language="F#" Value="val mutable AutofillTypeText : Android.Views.AutofillType" Usage="Android.Views.View.AutofillTypeText" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_TYPE_TEXT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_TYPE_TEXT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Autofill type for a text field, which is filled by a <c>CharSequence</c>.</summary>
        <remarks>
          <para>Autofill type for a text field, which is filled by a <c>CharSequence</c>.</para>
          <para>
            <c>AutofillValue</c> instances for autofilling a <c>View</c> can be obtained through
            <c>AutofillValue#forText(CharSequence)</c>, and the value passed to autofill a
            <c>View</c> can be fetched through <c>AutofillValue#getTextValue()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_TYPE_TEXT" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_TYPE_TEXT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillTypeToggle">
      <MemberSignature Language="VB.NET" Value="Public Const AutofillTypeToggle As AutofillType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::AutofillType AutofillTypeToggle = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.AutofillType AutofillTypeToggle = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.AutofillType AutofillTypeToggle = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.AutofillTypeToggle" />
      <MemberSignature Language="F#" Value="val mutable AutofillTypeToggle : Android.Views.AutofillType" Usage="Android.Views.View.AutofillTypeToggle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUTOFILL_TYPE_TOGGLE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUTOFILL_TYPE_TOGGLE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.AutofillType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.AutofillType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Autofill type for a togglable field, which is filled by a <c>boolean</c>.</summary>
        <remarks>
          <para>Autofill type for a togglable field, which is filled by a <c>boolean</c>.</para>
          <para>
            <c>AutofillValue</c> instances for autofilling a <c>View</c> can be obtained through
            <c>AutofillValue#forToggle(boolean)</c>, and the value passed to autofill a
            <c>View</c> can be fetched through <c>AutofillValue#getToggleValue()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#AUTOFILL_TYPE_TOGGLE" title="Reference documentation">Java documentation for <code>android.view.View.AUTOFILL_TYPE_TOGGLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutofillValue">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutofillValue As AutofillValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Autofill::AutofillValue ^ AutofillValue { Android::Views::Autofill::AutofillValue ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Autofill.AutofillValue? AutofillValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Autofill.AutofillValue AutofillValue" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AutofillValue" />
      <MemberSignature Language="F#" Value="member this.AutofillValue : Android.Views.Autofill.AutofillValue" Usage="Android.Views.View.AutofillValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAutofillValue", "()Landroid/view/autofill/AutofillValue;", "GetGetAutofillValueHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAutofillValue", "()Landroid/view/autofill/AutofillValue;", "GetGetAutofillValueHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Autofill.AutofillValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c>View</c>'s current autofill value.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the <c>View</c>'s current autofill value.</para>
          <para>By default returns <c>null</c>, but subclasses should override it and return an
            appropriate value to properly support the Autofill Framework.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAutofillValue()" title="Reference documentation">Java documentation for <code>android.view.View.getAutofillValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoHandwritingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AutoHandwritingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoHandwritingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool AutoHandwritingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoHandwritingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.AutoHandwritingEnabled" />
      <MemberSignature Language="F#" Value="member this.AutoHandwritingEnabled : bool with get, set" Usage="Android.Views.View.AutoHandwritingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAutoHandwritingEnabled", "()Z", "GetIsAutoHandwritingEnabledHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAutoHandwritingEnabled", "()Z", "GetIsAutoHandwritingEnabledHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAutoHandwritingEnabled", "(Z)V", "GetSetAutoHandwritingEnabled_ZHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAutoHandwritingEnabled", "(Z)V", "GetSetAutoHandwritingEnabled_ZHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">whether auto handwriting initiation is enabled for this view.</param>
        <summary>Return whether the View allows automatic handwriting initiation. -or- Set whether this view enables automatic handwriting initiation.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return whether the View allows automatic handwriting initiation. Returns true if automatic
            handwriting initiation is enabled, and verse visa.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isAutoHandwritingEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isAutoHandwritingEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view enables automatic handwriting initiation.
            
            For a view with an active <c>InputConnection</c>, if auto handwriting is enabled then
            stylus movement within its view boundary will automatically trigger the handwriting mode.
            Check <c>android.view.inputmethod.InputMethodManager#startStylusHandwriting(View)</c> for
            more details about handwriting mode.
            
            If the View wants to initiate handwriting mode by itself, it can set this field to
            <c>false</c> and call
            <c>android.view.inputmethod.InputMethodManager#startStylusHandwriting(View)</c> when there
            is stylus movement detected.
            
            Note that this attribute has no effect on the View's children. For example, if a
            <c>ViewGroup</c> disables auto handwriting but its children set auto handwriting to true,
            auto handwriting will still work for the children, and vice versa.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAutoHandwritingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setAutoHandwritingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AwakenScrollBars () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AwakenScrollBars();" />
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AwakenScrollBars" />
      <MemberSignature Language="F#" Value="abstract member AwakenScrollBars : unit -&gt; bool&#xA;override this.AwakenScrollBars : unit -&gt; bool" Usage="view.AwakenScrollBars " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("awakenScrollBars", "()Z", "GetAwakenScrollBarsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("awakenScrollBars", "()Z", "GetAwakenScrollBarsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Trigger the scrollbars to draw.</summary>
        <returns>true if the animation is played, false otherwise</returns>
        <remarks>
          <para>Trigger the scrollbars to draw. When invoked this method starts an
            animation to fade the scrollbars out after a default delay. If a subclass
            provides animated scrolling, the start delay should equal the duration
            of the scrolling animation.</para>
          <para>The animation starts only if at least one of the scrollbars is
            enabled, as specified by <c>#isHorizontalScrollBarEnabled()</c> and
            <c>#isVerticalScrollBarEnabled()</c>. When the animation is started,
            this method returns true, and false otherwise. If the animation is
            started, this method calls <c>#invalidate()</c>; in that case the
            caller should not call <c>#invalidate()</c>.</para>
          <para>This method should be invoked every time a subclass directly updates
            the scroll parameters.</para>
          <para>This method is automatically invoked by <c>#scrollBy(int, int)</c>
            and <c>#scrollTo(int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#awakenScrollBars()" title="Reference documentation">Java documentation for <code>android.view.View.awakenScrollBars()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.AwakenScrollBars(System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AwakenScrollBars (startDelay As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AwakenScrollBars(int startDelay);" />
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars (int startDelay);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars(int32 startDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AwakenScrollBars(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AwakenScrollBars : int -&gt; bool&#xA;override this.AwakenScrollBars : int -&gt; bool" Usage="view.AwakenScrollBars startDelay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("awakenScrollBars", "(I)Z", "GetAwakenScrollBars_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("awakenScrollBars", "(I)Z", "GetAwakenScrollBars_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startDelay">the delay, in milliseconds, after which the animation
                   should start; when the delay is 0, the animation starts
                   immediately</param>
        <summary>Trigger the scrollbars to draw.</summary>
        <returns>true if the animation is played, false otherwise</returns>
        <remarks>
          <para>Trigger the scrollbars to draw. When invoked this method starts an
            animation to fade the scrollbars out after a fixed delay. If a subclass
            provides animated scrolling, the start delay should equal the duration of
            the scrolling animation.</para>
          <para>The animation starts only if at least one of the scrollbars is enabled,
            as specified by <c>#isHorizontalScrollBarEnabled()</c> and
            <c>#isVerticalScrollBarEnabled()</c>. When the animation is started,
            this method returns true, and false otherwise. If the animation is
            started, this method calls <c>#invalidate()</c>; in that case the caller
            should not call <c>#invalidate()</c>.</para>
          <para>This method should be invoked every time a subclass directly updates the
            scroll parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#awakenScrollBars(int)" title="Reference documentation">Java documentation for <code>android.view.View.awakenScrollBars(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="AwakenScrollBars">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AwakenScrollBars (startDelay As Integer, invalidate As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AwakenScrollBars(int startDelay, bool invalidate);" />
      <MemberSignature Language="C#" Value="protected virtual bool AwakenScrollBars (int startDelay, bool invalidate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AwakenScrollBars(int32 startDelay, bool invalidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.AwakenScrollBars(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member AwakenScrollBars : int * bool -&gt; bool&#xA;override this.AwakenScrollBars : int * bool -&gt; bool" Usage="view.AwakenScrollBars (startDelay, invalidate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("awakenScrollBars", "(IZ)Z", "GetAwakenScrollBars_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("awakenScrollBars", "(IZ)Z", "GetAwakenScrollBars_IZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int32" />
        <Parameter Name="invalidate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startDelay">the delay, in milliseconds, after which the animation
                   should start; when the delay is 0, the animation starts
                   immediately</param>
        <param name="invalidate">Whether this method should call invalidate</param>
        <summary>Trigger the scrollbars to draw.</summary>
        <returns>true if the animation is played, false otherwise</returns>
        <remarks>
          <para>Trigger the scrollbars to draw. When invoked this method starts an
            animation to fade the scrollbars out after a fixed delay. If a subclass
            provides animated scrolling, the start delay should equal the duration of
            the scrolling animation.</para>
          <para>The animation starts only if at least one of the scrollbars is enabled,
            as specified by <c>#isHorizontalScrollBarEnabled()</c> and
            <c>#isVerticalScrollBarEnabled()</c>. When the animation is started,
            this method returns true, and false otherwise. If the animation is
            started, this method calls <c>#invalidate()</c> if the invalidate parameter
            is set to true; in that case the caller
            should not call <c>#invalidate()</c>.</para>
          <para>This method should be invoked every time a subclass directly updates the
            scroll parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#awakenScrollBars(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.View.awakenScrollBars(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <altmember cref="M:Android.Views.View.ScrollBy(System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.ScrollTo(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Background">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Background As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ Background { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? Background { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Background" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Background" />
      <MemberSignature Language="F#" Value="member this.Background : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.Background" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetBackgroundHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetBackgroundHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackground_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackground_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="background">The Drawable to use as the background, or null to remove the
                   background</param>
        <summary>Gets the background drawable -or- Set the background to a given Drawable, or remove the background.</summary>
        <value>The drawable used as the background for this view, if any.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the background drawable</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBackground()" title="Reference documentation">Java documentation for <code>android.view.View.getBackground()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the background to a given Drawable, or remove the background. If the
            background has padding, this View's padding is set to the background's
            padding. However, when a background is removed, this View's padding isn't
            touched. If setting the padding is desired, please use
            <c>#setPadding(int, int, int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackground(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setBackground(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Background" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundTintBlendMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundTintBlendMode As BlendMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::BlendMode ^ BackgroundTintBlendMode { Android::Graphics::BlendMode ^ get(); void set(Android::Graphics::BlendMode ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.BlendMode? BackgroundTintBlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.BlendMode BackgroundTintBlendMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.BackgroundTintBlendMode" />
      <MemberSignature Language="F#" Value="member this.BackgroundTintBlendMode : Android.Graphics.BlendMode with get, set" Usage="Android.Views.View.BackgroundTintBlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackgroundTintBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBackgroundTintBlendModeHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackgroundTintBlendMode", "()Landroid/graphics/BlendMode;", "GetGetBackgroundTintBlendModeHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBackgroundTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBackgroundTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBackgroundTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetBackgroundTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="blendMode">the blending mode used to apply the tint, may be
                            <c>null</c> to clear tint</param>
        <summary>Return the blending mode used to apply the tint to the background
            drawable, if specified. -or- Specifies the blending mode used to apply the tint specified by
            <c>#setBackgroundTintList(ColorStateList)</c>} to the background
            drawable.</summary>
        <value>the blending mode used to apply the tint to the background
                    drawable, null if no blend has previously been configured</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the blending mode used to apply the tint to the background
            drawable, if specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBackgroundTintBlendMode()" title="Reference documentation">Java documentation for <code>android.view.View.getBackgroundTintBlendMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies the blending mode used to apply the tint specified by
            <c>#setBackgroundTintList(ColorStateList)</c>} to the background
            drawable. The default mode is <c>BlendMode#SRC_IN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackgroundTintBlendMode(android.graphics.BlendMode)" title="Reference documentation">Java documentation for <code>android.view.View.setBackgroundTintBlendMode(android.graphics.BlendMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackgroundTintList">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundTintList As ColorStateList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::Res::ColorStateList ^ BackgroundTintList { Android::Content::Res::ColorStateList ^ get(); void set(Android::Content::Res::ColorStateList ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.ColorStateList? BackgroundTintList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList BackgroundTintList" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.BackgroundTintList" />
      <MemberSignature Language="F#" Value="member this.BackgroundTintList : Android.Content.Res.ColorStateList with get, set" Usage="Android.Views.View.BackgroundTintList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetBackgroundTintListHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetBackgroundTintListHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetBackgroundTintList_Landroid_content_res_ColorStateList_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetBackgroundTintList_Landroid_content_res_ColorStateList_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tint">the tint to apply, may be <c>null</c> to clear tint</param>
        <summary>Return the tint applied to the background drawable, if specified. -or- Applies a tint to the background drawable.</summary>
        <value>the tint applied to the background drawable</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the tint applied to the background drawable, if specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBackgroundTintList()" title="Reference documentation">Java documentation for <code>android.view.View.getBackgroundTintList()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Applies a tint to the background drawable. Does not modify the current tint
            mode, which is <c>BlendMode#SRC_IN</c> by default.</para>
          <para>Subsequent calls to <c>#setBackground(Drawable)</c> will automatically
            mutate the drawable and apply the specified tint and tint mode using
            <c>Drawable#setTintList(ColorStateList)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackgroundTintList(android.content.res.ColorStateList)" title="Reference documentation">Java documentation for <code>android.view.View.setBackgroundTintList(android.content.res.ColorStateList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.BackgroundTintList" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintList(Android.Content.Res.ColorStateList)" />
      </Docs>
    </Member>
    <Member MemberName="BackgroundTintMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackgroundTintMode As PorterDuff.Mode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::PorterDuff::Mode ^ BackgroundTintMode { Android::Graphics::PorterDuff::Mode ^ get(); void set(Android::Graphics::PorterDuff::Mode ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PorterDuff.Mode? BackgroundTintMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.PorterDuff/Mode BackgroundTintMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.BackgroundTintMode" />
      <MemberSignature Language="F#" Value="member this.BackgroundTintMode : Android.Graphics.PorterDuff.Mode with get, set" Usage="Android.Views.View.BackgroundTintMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetBackgroundTintModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetBackgroundTintModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PorterDuff+Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the blending mode used to apply the tint to the background
            drawable, if specified.</summary>
        <value>the blending mode used to apply the tint to the background
                    drawable</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBackgroundTintMode()" title="Reference documentation">Java documentation for <code>android.view.View.getBackgroundTintMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.BackgroundTintMode" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetTintMode(.Mode)" />
      </Docs>
    </Member>
    <Member MemberName="Baseline">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Baseline As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Baseline { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int Baseline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Baseline" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Baseline" />
      <MemberSignature Language="F#" Value="member this.Baseline : int" Usage="Android.Views.View.Baseline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBaseline", "()I", "GetGetBaselineHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBaseline", "()I", "GetGetBaselineHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the offset of the widget's text baseline from the widget's top
            boundary.</summary>
        <value>the offset of the baseline within the widget's bounds or -1
                    if baseline alignment is not supported</value>
        <remarks>
          <para>Return the offset of the widget's text baseline from the widget's top
            boundary. If this widget does not support baseline alignment, this
            method returns -1.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBaseline()" title="Reference documentation">Java documentation for <code>android.view.View.getBaseline()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="VB.NET" Value="Public Property Bottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bottom { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Bottom { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bottom" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Bottom" />
      <MemberSignature Language="F#" Value="member this.Bottom : int with get, set" Usage="Android.Views.View.Bottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottom", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBottom", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBottom", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBottom", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="bottom">The bottom of this view, in pixels.</param>
        <summary>Bottom position of this view relative to its parent. -or- Sets the bottom position of this view relative to its parent.</summary>
        <value>The bottom of this view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Bottom position of this view relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBottom()" title="Reference documentation">Java documentation for <code>android.view.View.getBottom()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the bottom position of this view relative to its parent. This method is meant to be
            called by the layout system and should not generally be called otherwise, because the
            property may be changed at any time by the layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBottom(int)" title="Reference documentation">Java documentation for <code>android.view.View.setBottom(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomFadingEdgeStrength">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property BottomFadingEdgeStrength As Single" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property float BottomFadingEdgeStrength { float get(); };" />
      <MemberSignature Language="C#" Value="protected virtual float BottomFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BottomFadingEdgeStrength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.BottomFadingEdgeStrength" />
      <MemberSignature Language="F#" Value="member this.BottomFadingEdgeStrength : single" Usage="Android.Views.View.BottomFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottomFadingEdgeStrength", "()F", "GetGetBottomFadingEdgeStrengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBottomFadingEdgeStrength", "()F", "GetGetBottomFadingEdgeStrengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the bottom faded edge.</summary>
        <value>the intensity of the bottom fade as a float between 0.0f and 1.0f</value>
        <remarks>
          <para>Returns the strength, or intensity, of the bottom faded edge. The strength is
            a value between 0.0 (no fade) and 1.0 (full fade). The default implementation
            returns 0.0 or 1.0 but no value in between.</para>
          <para>Subclasses should override this method to provide a smoother fade transition
            when scrolling occurs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBottomFadingEdgeStrength()" title="Reference documentation">Java documentation for <code>android.view.View.getBottomFadingEdgeStrength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPaddingOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property BottomPaddingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int BottomPaddingOffset { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int BottomPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPaddingOffset" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.BottomPaddingOffset" />
      <MemberSignature Language="F#" Value="member this.BottomPaddingOffset : int" Usage="Android.Views.View.BottomPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottomPaddingOffset", "()I", "GetGetBottomPaddingOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBottomPaddingOffset", "()I", "GetGetBottomPaddingOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the bottom fading region.</summary>
        <value>The bottom padding offset in pixels.</value>
        <remarks>
          <para>Amount by which to extend the bottom fading region. Called only when
            <c>#isPaddingOffsetRequired()</c> returns true.</para>
          <para>Added in CURRENT.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getBottomPaddingOffset()" title="Reference documentation">Java documentation for <code>android.view.View.getBottomPaddingOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="BringToFront">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BringToFront ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BringToFront();" />
      <MemberSignature Language="C#" Value="public virtual void BringToFront ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BringToFront() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.BringToFront" />
      <MemberSignature Language="F#" Value="abstract member BringToFront : unit -&gt; unit&#xA;override this.BringToFront : unit -&gt; unit" Usage="view.BringToFront " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bringToFront", "()V", "GetBringToFrontHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bringToFront", "()V", "GetBringToFrontHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Change the view's z order in the tree, so it's on top of other sibling
            views.</summary>
        <remarks>
          <para>Change the view's z order in the tree, so it's on top of other sibling
            views. This ordering change may affect layout, if the parent container
            uses an order-dependent layout scheme (e.g., LinearLayout). Prior
            to <c>android.os.Build.VERSION_CODES#KITKAT</c> this
            method should be followed by calls to <c>#requestLayout()</c> and
            <c>View#invalidate()</c> on the view's parent to force the parent to redraw
            with the new child ordering.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#bringToFront()" title="Reference documentation">Java documentation for <code>android.view.View.bringToFront()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.ViewGroup.BringChildToFront(Android.Views.View)" />
      </Docs>
    </Member>
    <Member MemberName="BuildDrawingCache">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BuildDrawingCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BuildDrawingCache();" />
      <MemberSignature Language="C#" Value="public virtual void BuildDrawingCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildDrawingCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.BuildDrawingCache" />
      <MemberSignature Language="F#" Value="abstract member BuildDrawingCache : unit -&gt; unit&#xA;override this.BuildDrawingCache : unit -&gt; unit" Usage="view.BuildDrawingCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("buildDrawingCache", "()V", "GetBuildDrawingCacheHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("buildDrawingCache", "()V", "GetBuildDrawingCacheHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calling this method is equivalent to calling <c>buildDrawingCache(false)</c>.</summary>
        <remarks>
          <para>Calling this method is equivalent to calling <c>buildDrawingCache(false)</c>.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#buildDrawingCache()" title="Reference documentation">Java documentation for <code>android.view.View.buildDrawingCache()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BuildDrawingCache">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BuildDrawingCache (autoScale As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BuildDrawingCache(bool autoScale);" />
      <MemberSignature Language="C#" Value="public virtual void BuildDrawingCache (bool autoScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildDrawingCache(bool autoScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.BuildDrawingCache(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member BuildDrawingCache : bool -&gt; unit&#xA;override this.BuildDrawingCache : bool -&gt; unit" Usage="view.BuildDrawingCache autoScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("buildDrawingCache", "(Z)V", "GetBuildDrawingCache_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("buildDrawingCache", "(Z)V", "GetBuildDrawingCache_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoScale" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoScale">To be added.</param>
        <summary>Forces the drawing cache to be built if the drawing cache is invalid.</summary>
        <remarks>
          <para>Forces the drawing cache to be built if the drawing cache is invalid.</para>
          <para>If you call <c>#buildDrawingCache()</c> manually without calling
            <c>#setDrawingCacheEnabled(boolean) setDrawingCacheEnabled(true)</c>, you
            should cleanup the cache by calling <c>#destroyDrawingCache()</c> afterwards.</para>
          <para>Note about auto scaling in compatibility mode: When auto scaling is not enabled,
            this method will create a bitmap of the same size as this view. Because this bitmap
            will be drawn scaled by the parent ViewGroup, the result on screen might show
            scaling artifacts. To avoid such artifacts, you should call this method by setting
            the auto scaling to true. Doing so, however, will generate a bitmap of a different
            size than the view. This implies that your application must be able to handle this
            size.</para>
          <para>You should avoid calling this method when hardware acceleration is enabled. If
            you do not need the drawing cache bitmap, calling this method will increase memory
            usage and cause the view to be rendered in software once, thus negatively impacting
            performance.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#buildDrawingCache(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.buildDrawingCache(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
        <altmember cref="M:Android.Views.View.DestroyDrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="BuildLayer">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BuildLayer ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BuildLayer();" />
      <MemberSignature Language="C#" Value="public virtual void BuildLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BuildLayer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.BuildLayer" />
      <MemberSignature Language="F#" Value="abstract member BuildLayer : unit -&gt; unit&#xA;override this.BuildLayer : unit -&gt; unit" Usage="view.BuildLayer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("buildLayer", "()V", "GetBuildLayerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("buildLayer", "()V", "GetBuildLayerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces this view's layer to be created and this view to be rendered
            into its layer.</summary>
        <remarks>
          <para>Forces this view's layer to be created and this view to be rendered
            into its layer. If this view's layer type is set to <c>#LAYER_TYPE_NONE</c>,
            invoking this method will have no effect.
            
            This method can for instance be used to render a view into its layer before
            starting an animation. If this view is complex, rendering into the layer
            before starting the animation will avoid skipping frames.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#buildLayer()" title="Reference documentation">Java documentation for <code>android.view.View.buildLayer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <exception cref="T:Java.Lang.IllegalStateException">If this view is not attached to a window</exception>
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="CallOnClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CallOnClick () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CallOnClick();" />
      <MemberSignature Language="C#" Value="public virtual bool CallOnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CallOnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CallOnClick" />
      <MemberSignature Language="F#" Value="abstract member CallOnClick : unit -&gt; bool&#xA;override this.CallOnClick : unit -&gt; bool" Usage="view.CallOnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("callOnClick", "()Z", "GetCallOnClickHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("callOnClick", "()Z", "GetCallOnClickHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Directly call any attached OnClickListener.</summary>
        <returns>True there was an assigned OnClickListener that was called, false
                    otherwise is returned.</returns>
        <remarks>
          <para>Directly call any attached OnClickListener.  Unlike <c>#performClick()</c>,
            this only calls the listener, and does not do any associated clicking
            actions like reporting an accessibility event.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#callOnClick()" title="Reference documentation">Java documentation for <code>android.view.View.callOnClick()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="CameraDistance">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CameraDistance As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float CameraDistance { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float CameraDistance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 CameraDistance" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.CameraDistance" />
      <MemberSignature Language="F#" Value="member this.CameraDistance : single" Usage="Android.Views.View.CameraDistance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCameraDistance", "()F", "GetGetCameraDistanceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCameraDistance", "()F", "GetGetCameraDistanceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the distance along the Z axis from the camera to this view.</summary>
        <value>The distance along the Z axis.</value>
        <remarks>
          <para>Gets the distance along the Z axis from the camera to this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getCameraDistance()" title="Reference documentation">Java documentation for <code>android.view.View.getCameraDistance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="CancelDragAndDrop">
      <MemberSignature Language="VB.NET" Value="Public Sub CancelDragAndDrop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelDragAndDrop();" />
      <MemberSignature Language="C#" Value="public void CancelDragAndDrop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelDragAndDrop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CancelDragAndDrop" />
      <MemberSignature Language="F#" Value="member this.CancelDragAndDrop : unit -&gt; unit" Usage="view.CancelDragAndDrop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelDragAndDrop", "()V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelDragAndDrop", "()V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels an ongoing drag and drop operation.</summary>
        <remarks>
          <para>Cancels an ongoing drag and drop operation.</para>
          <para>A <c>android.view.DragEvent</c> object with
            <c>android.view.DragEvent#getAction()</c> value of
            <c>android.view.DragEvent#ACTION_DRAG_ENDED</c> and
            <c>android.view.DragEvent#getResult()</c> value of <c>false</c>
            will be sent to every
            View that received <c>android.view.DragEvent#ACTION_DRAG_STARTED</c>
            even if they are not currently visible.</para>
          <para>This method can be called on any View in the same window as the View on which
            <c>#startDragAndDrop(ClipData, DragShadowBuilder, Object, int) startDragAndDrop</c>
            was called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#cancelDragAndDrop()" title="Reference documentation">Java documentation for <code>android.view.View.cancelDragAndDrop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelLongPress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CancelLongPress ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CancelLongPress();" />
      <MemberSignature Language="C#" Value="public virtual void CancelLongPress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelLongPress() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CancelLongPress" />
      <MemberSignature Language="F#" Value="abstract member CancelLongPress : unit -&gt; unit&#xA;override this.CancelLongPress : unit -&gt; unit" Usage="view.CancelLongPress " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelLongPress", "()V", "GetCancelLongPressHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelLongPress", "()V", "GetCancelLongPressHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels a pending long press.</summary>
        <remarks>
          <para>Cancels a pending long press.  Your subclass can use this if you
            want the context menu to come up if the user presses and holds
            at the same place, but you don't want it to come up if they press
            and then move around enough to cause scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#cancelLongPress()" title="Reference documentation">Java documentation for <code>android.view.View.cancelLongPress()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CancelPendingInputEvents">
      <MemberSignature Language="VB.NET" Value="Public Sub CancelPendingInputEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelPendingInputEvents();" />
      <MemberSignature Language="C#" Value="public void CancelPendingInputEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelPendingInputEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CancelPendingInputEvents" />
      <MemberSignature Language="F#" Value="member this.CancelPendingInputEvents : unit -&gt; unit" Usage="view.CancelPendingInputEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancelPendingInputEvents", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancelPendingInputEvents", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancel any deferred high-level input events that were previously posted to the event queue.</summary>
        <remarks>
          <para>Cancel any deferred high-level input events that were previously posted to the event queue.</para>
          <para>Many views post high-level events such as click handlers to the event queue
            to run deferred in order to preserve a desired user experience - clearing visible
            pressed states before executing, etc. This method will abort any events of this nature
            that are currently in flight.</para>
          <para>Custom views that generate their own high-level deferred input events should override
            <c>#onCancelPendingInputEvents()</c> and remove those pending events from the queue.</para>
          <para>This will also cancel pending input events for any child views.</para>
          <para>Note that this may not be sufficient as a debouncing strategy for clicks in all cases.
            This will not impact newer events posted after this call that may occur as a result of
            lower-level input events still waiting in the queue. If you are trying to prevent
            double-submitted  events for the duration of some sort of asynchronous transaction
            you should also take other steps to protect against unexpected double inputs e.g. calling
            <c>#setEnabled(boolean) setEnabled(false)</c> and re-enabling the view when
            the transaction completes, tracking already submitted transaction IDs, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#cancelPendingInputEvents()" title="Reference documentation">Java documentation for <code>android.view.View.cancelPendingInputEvents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveLayoutDirection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResolveLayoutDirection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResolveLayoutDirection();" />
      <MemberSignature Language="C#" Value="public virtual bool CanResolveLayoutDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveLayoutDirection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CanResolveLayoutDirection" />
      <MemberSignature Language="F#" Value="abstract member CanResolveLayoutDirection : unit -&gt; bool&#xA;override this.CanResolveLayoutDirection : unit -&gt; bool" Usage="view.CanResolveLayoutDirection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canResolveLayoutDirection", "()Z", "GetCanResolveLayoutDirectionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canResolveLayoutDirection", "()Z", "GetCanResolveLayoutDirectionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if layout direction resolution can be done.</summary>
        <returns>true if layout direction resolution can be done otherwise return false.</returns>
        <remarks>
          <para>Check if layout direction resolution can be done.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#canResolveLayoutDirection()" title="Reference documentation">Java documentation for <code>android.view.View.canResolveLayoutDirection()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveTextAlignment">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResolveTextAlignment () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResolveTextAlignment();" />
      <MemberSignature Language="C#" Value="public virtual bool CanResolveTextAlignment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveTextAlignment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CanResolveTextAlignment" />
      <MemberSignature Language="F#" Value="abstract member CanResolveTextAlignment : unit -&gt; bool&#xA;override this.CanResolveTextAlignment : unit -&gt; bool" Usage="view.CanResolveTextAlignment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canResolveTextAlignment", "()Z", "GetCanResolveTextAlignmentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canResolveTextAlignment", "()Z", "GetCanResolveTextAlignmentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if text alignment resolution can be done.</summary>
        <returns>true if text alignment resolution can be done otherwise return false.</returns>
        <remarks>
          <para>Check if text alignment resolution can be done.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#canResolveTextAlignment()" title="Reference documentation">Java documentation for <code>android.view.View.canResolveTextAlignment()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResolveTextDirection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanResolveTextDirection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanResolveTextDirection();" />
      <MemberSignature Language="C#" Value="public virtual bool CanResolveTextDirection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanResolveTextDirection() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CanResolveTextDirection" />
      <MemberSignature Language="F#" Value="abstract member CanResolveTextDirection : unit -&gt; bool&#xA;override this.CanResolveTextDirection : unit -&gt; bool" Usage="view.CanResolveTextDirection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canResolveTextDirection", "()Z", "GetCanResolveTextDirectionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canResolveTextDirection", "()Z", "GetCanResolveTextDirectionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check if text direction resolution can be done.</summary>
        <returns>true if text direction resolution can be done otherwise return false.</returns>
        <remarks>
          <para>Check if text direction resolution can be done.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#canResolveTextDirection()" title="Reference documentation">Java documentation for <code>android.view.View.canResolveTextDirection()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanScrollHorizontally">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanScrollHorizontally (direction As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanScrollHorizontally(int direction);" />
      <MemberSignature Language="C#" Value="public virtual bool CanScrollHorizontally (int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollHorizontally(int32 direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CanScrollHorizontally(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CanScrollHorizontally : int -&gt; bool&#xA;override this.CanScrollHorizontally : int -&gt; bool" Usage="view.CanScrollHorizontally direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canScrollHorizontally", "(I)Z", "GetCanScrollHorizontally_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canScrollHorizontally", "(I)Z", "GetCanScrollHorizontally_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling left, positive to check scrolling right.</param>
        <summary>Check if this view can be scrolled horizontally in a certain direction.</summary>
        <returns>true if this view can be scrolled in the specified direction, false otherwise.</returns>
        <remarks>
          <para>Check if this view can be scrolled horizontally in a certain direction.</para>
          <para>This is without regard to whether the view is enabled or not, or if it will scroll
            in response to user input or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#canScrollHorizontally(int)" title="Reference documentation">Java documentation for <code>android.view.View.canScrollHorizontally(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanScrollVertically">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanScrollVertically (direction As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanScrollVertically(int direction);" />
      <MemberSignature Language="C#" Value="public virtual bool CanScrollVertically (int direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanScrollVertically(int32 direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CanScrollVertically(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CanScrollVertically : int -&gt; bool&#xA;override this.CanScrollVertically : int -&gt; bool" Usage="view.CanScrollVertically direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canScrollVertically", "(I)Z", "GetCanScrollVertically_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canScrollVertically", "(I)Z", "GetCanScrollVertically_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">Negative to check scrolling up, positive to check scrolling down.</param>
        <summary>Check if this view can be scrolled vertically in a certain direction.</summary>
        <returns>true if this view can be scrolled in the specified direction, false otherwise.</returns>
        <remarks>
          <para>Check if this view can be scrolled vertically in a certain direction.</para>
          <para>This is without regard to whether the view is enabled or not, or if it will scroll
            in response to user input or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#canScrollVertically(int)" title="Reference documentation">Java documentation for <code>android.view.View.canScrollVertically(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CapturedPointer">
      <MemberSignature Language="VB.NET" Value="Public Custom Event CapturedPointer As EventHandler(Of View.CapturedPointerEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::CapturedPointerEventArgs ^&gt; ^ CapturedPointer;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.CapturedPointerEventArgs&gt; CapturedPointer;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/CapturedPointerEventArgs&gt; CapturedPointer" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.CapturedPointer" />
      <MemberSignature Language="F#" Value="member this.CapturedPointer : EventHandler&lt;Android.Views.View.CapturedPointerEventArgs&gt; " Usage="member this.CapturedPointer : System.EventHandler&lt;Android.Views.View.CapturedPointerEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+CapturedPointerEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckInputConnectionProxy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckInputConnectionProxy (view As View) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckInputConnectionProxy(Android::Views::View ^ view);" />
      <MemberSignature Language="C#" Value="public virtual bool CheckInputConnectionProxy (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckInputConnectionProxy(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CheckInputConnectionProxy(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member CheckInputConnectionProxy : Android.Views.View -&gt; bool&#xA;override this.CheckInputConnectionProxy : Android.Views.View -&gt; bool" Usage="view.CheckInputConnectionProxy view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkInputConnectionProxy", "(Landroid/view/View;)Z", "GetCheckInputConnectionProxy_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkInputConnectionProxy", "(Landroid/view/View;)Z", "GetCheckInputConnectionProxy_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The View that is making the InputMethodManager call.</param>
        <summary>Called by the <c>android.view.inputmethod.InputMethodManager</c>
            when a view who is not the current
            input connection target is trying to make a call on the manager.</summary>
        <returns>Return true to allow the call, false to reject.</returns>
        <remarks>
          <para>Called by the <c>android.view.inputmethod.InputMethodManager</c>
            when a view who is not the current
            input connection target is trying to make a call on the manager.  The
            default implementation returns false; you can override this to return
            true for certain views if you are performing InputConnection proxying
            to them.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#checkInputConnectionProxy(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.View.checkInputConnectionProxy(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ClearAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearAnimation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearAnimation();" />
      <MemberSignature Language="C#" Value="public virtual void ClearAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearAnimation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ClearAnimation" />
      <MemberSignature Language="F#" Value="abstract member ClearAnimation : unit -&gt; unit&#xA;override this.ClearAnimation : unit -&gt; unit" Usage="view.ClearAnimation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearAnimation", "()V", "GetClearAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearAnimation", "()V", "GetClearAnimationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels any animations for this view.</summary>
        <remarks>
          <para>Cancels any animations for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#clearAnimation()" title="Reference documentation">Java documentation for <code>android.view.View.clearAnimation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearFocus();" />
      <MemberSignature Language="C#" Value="public virtual void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ClearFocus" />
      <MemberSignature Language="F#" Value="abstract member ClearFocus : unit -&gt; unit&#xA;override this.ClearFocus : unit -&gt; unit" Usage="view.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearFocus", "()V", "GetClearFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearFocus", "()V", "GetClearFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when this view wants to give up focus.</summary>
        <remarks>
          <para>Called when this view wants to give up focus. If focus is cleared
            <c>#onFocusChanged(boolean, int, android.graphics.Rect)</c> is called.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; When not in touch-mode, the framework will try to give focus
            to the first focusable View from the top after focus is cleared. Hence, if this
            View is the first from the top that can take focus, then all callbacks
            related to clearing focus will be invoked after which the framework will
            give focus to this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#clearFocus()" title="Reference documentation">Java documentation for <code>android.view.View.clearFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearViewTranslationCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearViewTranslationCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearViewTranslationCallback();" />
      <MemberSignature Language="C#" Value="public virtual void ClearViewTranslationCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearViewTranslationCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ClearViewTranslationCallback" />
      <MemberSignature Language="F#" Value="abstract member ClearViewTranslationCallback : unit -&gt; unit&#xA;override this.ClearViewTranslationCallback : unit -&gt; unit" Usage="view.ClearViewTranslationCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearViewTranslationCallback", "()V", "GetClearViewTranslationCallbackHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearViewTranslationCallback", "()V", "GetClearViewTranslationCallbackHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clear the <c>ViewTranslationCallback</c> from this view.</summary>
        <remarks>
          <para>Clear the <c>ViewTranslationCallback</c> from this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#clearViewTranslationCallback()" title="Reference documentation">Java documentation for <code>android.view.View.clearViewTranslationCallback()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.Click" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clickable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Clickable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Clickable { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Clickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Clickable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Clickable" />
      <MemberSignature Language="F#" Value="member this.Clickable : bool with get, set" Usage="Android.Views.View.Clickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isClickable", "()Z", "GetIsClickableHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isClickable", "()Z", "GetIsClickableHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setClickable", "(Z)V", "GetSetClickable_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setClickable", "(Z)V", "GetSetClickable_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="clickable">true to make the view clickable, false otherwise</param>
        <summary>Indicates whether this view reacts to click events or not. -or- Enables or disables click events for this view.</summary>
        <value>true if the view is clickable, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether this view reacts to click events or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isClickable()" title="Reference documentation">Java documentation for <code>android.view.View.isClickable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enables or disables click events for this view. When a view
            is clickable it will change its state to "pressed" on every click.
            Subclasses should set the view clickable to visually react to
            user's clicks.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setClickable(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setClickable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="ClipBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ClipBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Rect ^ ClipBounds { Android::Graphics::Rect ^ get(); void set(Android::Graphics::Rect ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Rect? ClipBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Rect ClipBounds" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ClipBounds" />
      <MemberSignature Language="F#" Value="member this.ClipBounds : Android.Graphics.Rect with get, set" Usage="Android.Views.View.ClipBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClipBounds", "()Landroid/graphics/Rect;", "GetGetClipBoundsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getClipBounds", "()Landroid/graphics/Rect;", "GetGetClipBoundsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setClipBounds", "(Landroid/graphics/Rect;)V", "GetSetClipBounds_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setClipBounds", "(Landroid/graphics/Rect;)V", "GetSetClipBounds_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="clipBounds">The rectangular area, in the local coordinates of
            this view, to which future drawing operations will be clipped.</param>
        <summary>Returns a copy of the current <c>#setClipBounds(Rect) clipBounds</c>. -or- Sets a rectangular area on this view to which the view will be clipped
            when it is drawn.</summary>
        <value>A copy of the current clip bounds if clip bounds are set,
            otherwise null.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns a copy of the current <c>#setClipBounds(Rect) clipBounds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getClipBounds()" title="Reference documentation">Java documentation for <code>android.view.View.getClipBounds()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a rectangular area on this view to which the view will be clipped
            when it is drawn. Setting the value to null will remove the clip bounds
            and the view will draw normally, using its full bounds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setClipBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.setClipBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ClipToOutline">
      <MemberSignature Language="VB.NET" Value="Public Property ClipToOutline As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToOutline { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool ClipToOutline { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToOutline" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ClipToOutline" />
      <MemberSignature Language="F#" Value="member this.ClipToOutline : bool with get, set" Usage="Android.Views.View.ClipToOutline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getClipToOutline", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getClipToOutline", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setClipToOutline", "(Z)V", "GetSetClipToOutline_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setClipToOutline", "(Z)V", "GetSetClipToOutline_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the Outline should be used to clip the contents of the View. -or- Sets whether the View's Outline should be used to clip the contents of the View.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether the Outline should be used to clip the contents of the View.</para>
          <para>Note that this flag will only be respected if the View's Outline returns true from
            <c>Outline#canClip()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getClipToOutline()" title="Reference documentation">Java documentation for <code>android.view.View.getClipToOutline()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the View's Outline should be used to clip the contents of the View.</para>
          <para>Only a single non-rectangular clip can be applied on a View at any time.
            Circular clips from a <c>ViewAnimationUtils#createCircularReveal(View, int, int, float, float)
            circular reveal</c> animation take priority over Outline clipping, and
            child Outline clipping takes priority over Outline clipping done by a
            parent.</para>
          <para>Note that this flag will only be respected if the View's Outline returns true from
            <c>Outline#canClip()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setClipToOutline(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setClipToOutline(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.OutlineProvider" />
        <altmember cref="P:Android.Views.View.ClipToOutline" />
      </Docs>
    </Member>
    <Member MemberName="CombineMeasuredStates">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CombineMeasuredStates (curState As Integer, newState As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CombineMeasuredStates(int curState, int newState);" />
      <MemberSignature Language="C#" Value="public static int CombineMeasuredStates (int curState, int newState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CombineMeasuredStates(int32 curState, int32 newState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CombineMeasuredStates(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CombineMeasuredStates : int * int -&gt; int" Usage="Android.Views.View.CombineMeasuredStates (curState, newState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("combineMeasuredStates", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("combineMeasuredStates", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curState" Type="System.Int32" />
        <Parameter Name="newState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="curState">The current state as returned from a view or the result
            of combining multiple views.</param>
        <param name="newState">The new view state to combine.</param>
        <summary>Merge two states as returned by <c>#getMeasuredState()</c>.</summary>
        <returns>Returns a new integer reflecting the combination of the two
            states.</returns>
        <remarks>
          <para>Merge two states as returned by <c>#getMeasuredState()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#combineMeasuredStates(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.combineMeasuredStates(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollExtent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeHorizontalScrollExtent () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeHorizontalScrollExtent();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollExtent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollExtent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeHorizontalScrollExtent" />
      <MemberSignature Language="F#" Value="abstract member ComputeHorizontalScrollExtent : unit -&gt; int&#xA;override this.ComputeHorizontalScrollExtent : unit -&gt; int" Usage="view.ComputeHorizontalScrollExtent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the horizontal extent of the horizontal scrollbar's thumb
            within the horizontal range.</summary>
        <returns>the horizontal extent of the scrollbar's thumb</returns>
        <remarks>
          <para>Compute the horizontal extent of the horizontal scrollbar's thumb
            within the horizontal range. This value is used to compute the length
            of the thumb within the scrollbar's track.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeHorizontalScrollRange()</c> and
            <c>#computeHorizontalScrollOffset()</c>.</para>
          <para>The default extent is the drawing width of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeHorizontalScrollExtent()" title="Reference documentation">Java documentation for <code>android.view.View.computeHorizontalScrollExtent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeHorizontalScrollOffset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeHorizontalScrollOffset();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeHorizontalScrollOffset" />
      <MemberSignature Language="F#" Value="abstract member ComputeHorizontalScrollOffset : unit -&gt; int&#xA;override this.ComputeHorizontalScrollOffset : unit -&gt; int" Usage="view.ComputeHorizontalScrollOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the horizontal offset of the horizontal scrollbar's thumb
            within the horizontal range.</summary>
        <returns>the horizontal offset of the scrollbar's thumb</returns>
        <remarks>
          <para>Compute the horizontal offset of the horizontal scrollbar's thumb
            within the horizontal range. This value is used to compute the position
            of the thumb within the scrollbar's track.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeHorizontalScrollRange()</c> and
            <c>#computeHorizontalScrollExtent()</c>.</para>
          <para>The default offset is the scroll offset of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeHorizontalScrollOffset()" title="Reference documentation">Java documentation for <code>android.view.View.computeHorizontalScrollOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollExtent" />
      </Docs>
    </Member>
    <Member MemberName="ComputeHorizontalScrollRange">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeHorizontalScrollRange () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeHorizontalScrollRange();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeHorizontalScrollRange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeHorizontalScrollRange() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeHorizontalScrollRange" />
      <MemberSignature Language="F#" Value="abstract member ComputeHorizontalScrollRange : unit -&gt; int&#xA;override this.ComputeHorizontalScrollRange : unit -&gt; int" Usage="view.ComputeHorizontalScrollRange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the horizontal range that the horizontal scrollbar
            represents.</summary>
        <returns>the total horizontal range represented by the horizontal
                    scrollbar</returns>
        <remarks>
          <para>Compute the horizontal range that the horizontal scrollbar
            represents.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeHorizontalScrollExtent()</c> and
            <c>#computeHorizontalScrollOffset()</c>.</para>
          <para>The default range is the drawing width of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeHorizontalScrollRange()" title="Reference documentation">Java documentation for <code>android.view.View.computeHorizontalScrollRange()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollExtent" />
        <altmember cref="M:Android.Views.View.ComputeHorizontalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeScroll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ComputeScroll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ComputeScroll();" />
      <MemberSignature Language="C#" Value="public virtual void ComputeScroll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComputeScroll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeScroll" />
      <MemberSignature Language="F#" Value="abstract member ComputeScroll : unit -&gt; unit&#xA;override this.ComputeScroll : unit -&gt; unit" Usage="view.ComputeScroll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeScroll", "()V", "GetComputeScrollHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeScroll", "()V", "GetComputeScrollHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by a parent to request that a child update its values for mScrollX
            and mScrollY if necessary.</summary>
        <remarks>
          <para>Called by a parent to request that a child update its values for mScrollX
            and mScrollY if necessary. This will typically be done if the child is
            animating a scroll using a <c>android.widget.Scroller Scroller</c>
            object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeScroll()" title="Reference documentation">Java documentation for <code>android.view.View.computeScroll()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeSystemWindowInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ComputeSystemWindowInsets (in As WindowInsets, outLocalInsets As Rect) As WindowInsets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::WindowInsets ^ ComputeSystemWindowInsets(Android::Views::WindowInsets ^ in, Android::Graphics::Rect ^ outLocalInsets);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets? ComputeSystemWindowInsets (Android.Views.WindowInsets? in, Android.Graphics.Rect? outLocalInsets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets ComputeSystemWindowInsets(class Android.Views.WindowInsets in, class Android.Graphics.Rect outLocalInsets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeSystemWindowInsets(Android.Views.WindowInsets,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member ComputeSystemWindowInsets : Android.Views.WindowInsets * Android.Graphics.Rect -&gt; Android.Views.WindowInsets&#xA;override this.ComputeSystemWindowInsets : Android.Views.WindowInsets * Android.Graphics.Rect -&gt; Android.Views.WindowInsets" Usage="view.ComputeSystemWindowInsets (in, outLocalInsets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeSystemWindowInsets", "(Landroid/view/WindowInsets;Landroid/graphics/Rect;)Landroid/view/WindowInsets;", "GetComputeSystemWindowInsets_Landroid_view_WindowInsets_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeSystemWindowInsets", "(Landroid/view/WindowInsets;Landroid/graphics/Rect;)Landroid/view/WindowInsets;", "GetComputeSystemWindowInsets_Landroid_view_WindowInsets_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Android.Views.WindowInsets" />
        <Parameter Name="outLocalInsets" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="in">Insets currently being processed by this View, likely received as a parameter
                      to <c>#onApplyWindowInsets(WindowInsets)</c>.</param>
        <param name="outLocalInsets">A Rect that will receive the insets that should be consumed
                                  by this view</param>
        <summary>Compute insets that should be consumed by this view and the ones that should propagate
            to those under it.</summary>
        <returns>Insets that should be passed along to views under this one</returns>
        <remarks>
          <para>Compute insets that should be consumed by this view and the ones that should propagate
            to those under it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeSystemWindowInsets(android.view.WindowInsets,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.computeSystemWindowInsets(android.view.WindowInsets, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollExtent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeVerticalScrollExtent () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeVerticalScrollExtent();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollExtent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollExtent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeVerticalScrollExtent" />
      <MemberSignature Language="F#" Value="abstract member ComputeVerticalScrollExtent : unit -&gt; int&#xA;override this.ComputeVerticalScrollExtent : unit -&gt; int" Usage="view.ComputeVerticalScrollExtent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the vertical extent of the vertical scrollbar's thumb
            within the vertical range.</summary>
        <returns>the vertical extent of the scrollbar's thumb</returns>
        <remarks>
          <para>Compute the vertical extent of the vertical scrollbar's thumb
            within the vertical range. This value is used to compute the length
            of the thumb within the scrollbar's track.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeVerticalScrollRange()</c> and
            <c>#computeVerticalScrollOffset()</c>.</para>
          <para>The default extent is the drawing height of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeVerticalScrollExtent()" title="Reference documentation">Java documentation for <code>android.view.View.computeVerticalScrollExtent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeVerticalScrollOffset () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeVerticalScrollOffset();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollOffset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollOffset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeVerticalScrollOffset" />
      <MemberSignature Language="F#" Value="abstract member ComputeVerticalScrollOffset : unit -&gt; int&#xA;override this.ComputeVerticalScrollOffset : unit -&gt; int" Usage="view.ComputeVerticalScrollOffset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the vertical offset of the vertical scrollbar's thumb
            within the horizontal range.</summary>
        <returns>the vertical offset of the scrollbar's thumb</returns>
        <remarks>
          <para>Compute the vertical offset of the vertical scrollbar's thumb
            within the horizontal range. This value is used to compute the position
            of the thumb within the scrollbar's track.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeVerticalScrollRange()</c> and
            <c>#computeVerticalScrollExtent()</c>.</para>
          <para>The default offset is the scroll offset of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeVerticalScrollOffset()" title="Reference documentation">Java documentation for <code>android.view.View.computeVerticalScrollOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollRange" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollExtent" />
      </Docs>
    </Member>
    <Member MemberName="ComputeVerticalScrollRange">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ComputeVerticalScrollRange () As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ComputeVerticalScrollRange();" />
      <MemberSignature Language="C#" Value="protected virtual int ComputeVerticalScrollRange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ComputeVerticalScrollRange() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ComputeVerticalScrollRange" />
      <MemberSignature Language="F#" Value="abstract member ComputeVerticalScrollRange : unit -&gt; int&#xA;override this.ComputeVerticalScrollRange : unit -&gt; int" Usage="view.ComputeVerticalScrollRange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Compute the vertical range that the vertical scrollbar represents.</summary>
        <returns>the total vertical range represented by the vertical scrollbar
            
            &lt;p&gt;The default range is the drawing height of this view.&lt;/p&gt;</returns>
        <remarks>
          <para>Compute the vertical range that the vertical scrollbar represents.</para>
          <para>The range is expressed in arbitrary units that must be the same as the
            units used by <c>#computeVerticalScrollExtent()</c> and
            <c>#computeVerticalScrollOffset()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#computeVerticalScrollRange()" title="Reference documentation">Java documentation for <code>android.view.View.computeVerticalScrollRange()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollExtent" />
        <altmember cref="M:Android.Views.View.ComputeVerticalScrollOffset" />
      </Docs>
    </Member>
    <Member MemberName="ContentCaptureSession">
      <MemberSignature Language="VB.NET" Value="Public Property ContentCaptureSession As ContentCaptureSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::ContentCaptures::ContentCaptureSession ^ ContentCaptureSession { Android::Views::ContentCaptures::ContentCaptureSession ^ get(); void set(Android::Views::ContentCaptures::ContentCaptureSession ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.ContentCaptures.ContentCaptureSession? ContentCaptureSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ContentCaptures.ContentCaptureSession ContentCaptureSession" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ContentCaptureSession" />
      <MemberSignature Language="F#" Value="member this.ContentCaptureSession : Android.Views.ContentCaptures.ContentCaptureSession with get, set" Usage="Android.Views.View.ContentCaptureSession" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentCaptureSession", "()Landroid/view/contentcapture/ContentCaptureSession;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentCaptureSession", "()Landroid/view/contentcapture/ContentCaptureSession;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContentCaptureSession", "(Landroid/view/contentcapture/ContentCaptureSession;)V", "GetSetContentCaptureSession_Landroid_view_contentcapture_ContentCaptureSession_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContentCaptureSession", "(Landroid/view/contentcapture/ContentCaptureSession;)V", "GetSetContentCaptureSession_Landroid_view_contentcapture_ContentCaptureSession_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ContentCaptures.ContentCaptureSession</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="contentCaptureSession">a session created by
            <c>ContentCaptureSession#createContentCaptureSession(
                   android.view.contentcapture.ContentCaptureContext)</c>.</param>
        <summary>Gets the session used to notify content capture events. -or- Sets the (optional) <c>ContentCaptureSession</c> associated with this view.</summary>
        <value>session explicitly set by <c>#setContentCaptureSession(ContentCaptureSession)</c>,
            inherited by ancestors, default session or <c>null</c> if content capture is disabled for
            this view.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the session used to notify content capture events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getContentCaptureSession()" title="Reference documentation">Java documentation for <code>android.view.View.getContentCaptureSession()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the (optional) <c>ContentCaptureSession</c> associated with this view.</para>
          <para>This method should be called when you need to associate a <c>ContentCaptureContext</c> to
            the content capture events associated with this view or its view hierarchy (if it's a
            <c>ViewGroup</c>).</para>
          <para>For example, if your activity is associated with a web domain, first you would need to
            set the context for the main DOM:</para>
          <code lang="text/java">ContentCaptureSession mainSession = rootView.getContentCaptureSession();
              mainSession.setContentCaptureContext(ContentCaptureContext.forLocusId(Uri.parse(myUrl));
            </code>
          <para>Then if the page had an <c>IFRAME</c>, you would create a new session for it:</para>
          <code lang="text/java">ContentCaptureSession iframeSession = mainSession.createContentCaptureSession(
                  ContentCaptureContext.forLocusId(Uri.parse(iframeUrl)));
              iframeView.setContentCaptureSession(iframeSession);
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setContentCaptureSession(android.view.contentcapture.ContentCaptureSession)" title="Reference documentation">Java documentation for <code>android.view.View.setContentCaptureSession(android.view.contentcapture.ContentCaptureSession)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentDescription">
      <MemberSignature Language="VB.NET" Value="Public Property ContentDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? ContentDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentDescription" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ContentDescription" />
      <MemberSignature Language="F#" Value="member this.ContentDescription : string with get, set" Usage="Android.Views.View.ContentDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentDescriptionFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContentDescriptionFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ ContentDescriptionFormatted { Java::Lang::ICharSequence ^ get(); void set(Java::Lang::ICharSequence ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? ContentDescriptionFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ContentDescriptionFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ContentDescriptionFormatted" />
      <MemberSignature Language="F#" Value="member this.ContentDescriptionFormatted : Java.Lang.ICharSequence with get, set" Usage="Android.Views.View.ContentDescriptionFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="contentDescription">The content description.</param>
        <summary>Returns the <c>View</c>'s content description. -or- Sets the <c>View</c>'s content description.</summary>
        <value>the content description</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the <c>View</c>'s content description.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Do not override this method, as it will have no
            effect on the content description presented to accessibility services.
            You must call <c>#setContentDescription(CharSequence)</c> to modify the
            content description.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getContentDescription()" title="Reference documentation">Java documentation for <code>android.view.View.getContentDescription()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>View</c>'s content description.</para>
          <para>A content description briefly describes the view and is primarily used
            for accessibility support to determine how a view should be presented to
            the user. In the case of a view with no textual representation, such as
            <c>android.widget.ImageButton</c>, a useful content description
            explains what the view does. For example, an image button with a phone
            icon that is used to place a call may use "Call" as its content
            description. An image of a floppy disk that is used to save a file may
            use "Save".</para>
          <para>This should omit role or state. Role refers to the kind of user-interface element the View
            is, such as a Button or Checkbox. State refers to a frequently changing property of the View,
            such as an On/Off state of a button or the audio level of a volume slider.</para>
          <para>Content description updates are not frequent, and are used when the semantic content - not
            the state - of the element changes. For example, a Play button might change to a Pause
            button during music playback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setContentDescription(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.setContentDescription(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Content::Context ^ Context { Android::Content::Context ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Content.Context? Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Context" />
      <MemberSignature Language="F#" Value="member this.Context : Android.Content.Context" Usage="Android.Views.View.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the context the view is running in, through which it can
            access the current theme, resources, etc.</summary>
        <value>The view's Context.</value>
        <remarks>
          <para>Returns the context the view is running in, through which it can
            access the current theme, resources, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getContext()" title="Reference documentation">Java documentation for <code>android.view.View.getContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContextClick">
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextClick As EventHandler(Of View.ContextClickEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::ContextClickEventArgs ^&gt; ^ ContextClick;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ContextClickEventArgs&gt; ContextClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ContextClickEventArgs&gt; ContextClick" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.ContextClick" />
      <MemberSignature Language="F#" Value="member this.ContextClick : EventHandler&lt;Android.Views.View.ContextClickEventArgs&gt; " Usage="member this.ContextClick : System.EventHandler&lt;Android.Views.View.ContextClickEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ContextClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextClickable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ContextClickable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ContextClickable { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ContextClickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ContextClickable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ContextClickable" />
      <MemberSignature Language="F#" Value="member this.ContextClickable : bool with get, set" Usage="Android.Views.View.ContextClickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isContextClickable", "()Z", "GetIsContextClickableHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isContextClickable", "()Z", "GetIsContextClickableHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContextClickable", "(Z)V", "GetSetContextClickable_ZHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContextClickable", "(Z)V", "GetSetContextClickable_ZHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="contextClickable">true to make the view react to a context click, false otherwise</param>
        <summary>Indicates whether this view reacts to context clicks or not. -or- Enables or disables context clicking for this view.</summary>
        <value>true if the view is context clickable, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether this view reacts to context clicks or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isContextClickable()" title="Reference documentation">Java documentation for <code>android.view.View.isContextClickable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enables or disables context clicking for this view. This event can launch the listener.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setContextClickable(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setContextClickable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuCreated">
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuCreated As EventHandler(Of View.CreateContextMenuEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::CreateContextMenuEventArgs ^&gt; ^ ContextMenuCreated;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.CreateContextMenuEventArgs&gt; ContextMenuCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/CreateContextMenuEventArgs&gt; ContextMenuCreated" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.ContextMenuCreated" />
      <MemberSignature Language="F#" Value="member this.ContextMenuCreated : EventHandler&lt;Android.Views.View.CreateContextMenuEventArgs&gt; " Usage="member this.ContextMenuCreated : System.EventHandler&lt;Android.Views.View.CreateContextMenuEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+CreateContextMenuEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuInfo">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ContextMenuInfo As IContextMenuContextMenuInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Android::Views::IContextMenuContextMenuInfo ^ ContextMenuInfo { Android::Views::IContextMenuContextMenuInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="protected virtual Android.Views.IContextMenuContextMenuInfo? ContextMenuInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IContextMenuContextMenuInfo ContextMenuInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ContextMenuInfo" />
      <MemberSignature Language="F#" Value="member this.ContextMenuInfo : Android.Views.IContextMenuContextMenuInfo" Usage="Android.Views.View.ContextMenuInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContextMenuInfo", "()Landroid/view/ContextMenu$ContextMenuInfo;", "GetGetContextMenuInfoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContextMenuInfo", "()Landroid/view/ContextMenu$ContextMenuInfo;", "GetGetContextMenuInfoHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IContextMenuContextMenuInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Views should implement this if they have extra information to associate
            with the context menu.</summary>
        <value>Extra information about the item for which the context menu
                    should be shown. This information will vary across different
                    subclasses of View.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getContextMenuInfo()" title="Reference documentation">Java documentation for <code>android.view.View.getContextMenuInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityNodeInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAccessibilityNodeInfo () As AccessibilityNodeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::Accessibility::AccessibilityNodeInfo ^ CreateAccessibilityNodeInfo();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Accessibility.AccessibilityNodeInfo? CreateAccessibilityNodeInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Accessibility.AccessibilityNodeInfo CreateAccessibilityNodeInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CreateAccessibilityNodeInfo" />
      <MemberSignature Language="F#" Value="abstract member CreateAccessibilityNodeInfo : unit -&gt; Android.Views.Accessibility.AccessibilityNodeInfo&#xA;override this.CreateAccessibilityNodeInfo : unit -&gt; Android.Views.Accessibility.AccessibilityNodeInfo" Usage="view.CreateAccessibilityNodeInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAccessibilityNodeInfo", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "GetCreateAccessibilityNodeInfoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAccessibilityNodeInfo", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "GetCreateAccessibilityNodeInfoHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Accessibility.AccessibilityNodeInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <c>AccessibilityNodeInfo</c> representing this view from the
            point of view of an <c>android.accessibilityservice.AccessibilityService</c>.</summary>
        <returns>A populated <c>AccessibilityNodeInfo</c>.</returns>
        <remarks>
          <para>Returns an <c>AccessibilityNodeInfo</c> representing this view from the
            point of view of an <c>android.accessibilityservice.AccessibilityService</c>.
            This method is responsible for obtaining an accessibility node info from a
            pool of reusable instances and calling
            <c>#onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo)</c> on this view to
            initialize the former.</para>
          <para>Note: The client is responsible for recycling the obtained instance by calling
                  <c>AccessibilityNodeInfo#recycle()</c> to minimize object creation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#createAccessibilityNodeInfo()" title="Reference documentation">Java documentation for <code>android.view.View.createAccessibilityNodeInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateContextMenu">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateContextMenu (menu As IContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateContextMenu(Android::Views::IContextMenu ^ menu);" />
      <MemberSignature Language="C#" Value="public virtual void CreateContextMenu (Android.Views.IContextMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateContextMenu(class Android.Views.IContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.CreateContextMenu(Android.Views.IContextMenu)" />
      <MemberSignature Language="F#" Value="abstract member CreateContextMenu : Android.Views.IContextMenu -&gt; unit&#xA;override this.CreateContextMenu : Android.Views.IContextMenu -&gt; unit" Usage="view.CreateContextMenu menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createContextMenu", "(Landroid/view/ContextMenu;)V", "GetCreateContextMenu_Landroid_view_ContextMenu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createContextMenu", "(Landroid/view/ContextMenu;)V", "GetCreateContextMenu_Landroid_view_ContextMenu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">The context menu to populate</param>
        <summary>Show the context menu for this view.</summary>
        <remarks>
          <para>Show the context menu for this view. It is not safe to hold on to the
            menu after returning from this method.
            
            You should normally not overload this method. Overload
            <c>#onCreateContextMenu(ContextMenu)</c> or define an
            <c>OnCreateContextMenuListener</c> to add items to the context menu.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#createContextMenu(android.view.ContextMenu)" title="Reference documentation">Java documentation for <code>android.view.View.createContextMenu(android.view.ContextMenu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFocusHighlightEnabled">
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocusHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultFocusHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool DefaultFocusHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultFocusHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DefaultFocusHighlightEnabled" />
      <MemberSignature Language="F#" Value="member this.DefaultFocusHighlightEnabled : bool with get, set" Usage="Android.Views.View.DefaultFocusHighlightEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultFocusHighlightEnabled", "()Z", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultFocusHighlightEnabled", "()Z", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDefaultFocusHighlightEnabled", "(Z)V", "GetSetDefaultFocusHighlightEnabled_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDefaultFocusHighlightEnabled", "(Z)V", "GetSetDefaultFocusHighlightEnabled_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="defaultFocusHighlightEnabled">
          <c>true</c> to set this view to use a default focus
                                                 highlight, <c>false</c> otherwise.</param>
        <summary>Returns whether this View should use a default focus highlight when it gets focused but
            doesn't have <c>android.R.attr#state_focused</c> defined in its background. -or- Sets whether this View should use a default focus highlight when it gets focused but doesn't
            have <c>android.R.attr#state_focused</c> defined in its background.</summary>
        <value>True if this View should use a default focus highlight.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this View should use a default focus highlight when it gets focused but
            doesn't have <c>android.R.attr#state_focused</c> defined in its background.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDefaultFocusHighlightEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.getDefaultFocusHighlightEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether this View should use a default focus highlight when it gets focused but doesn't
            have <c>android.R.attr#state_focused</c> defined in its background.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setDefaultFocusHighlightEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setDefaultFocusHighlightEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DestroyDrawingCache">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DestroyDrawingCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DestroyDrawingCache();" />
      <MemberSignature Language="C#" Value="public virtual void DestroyDrawingCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyDrawingCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DestroyDrawingCache" />
      <MemberSignature Language="F#" Value="abstract member DestroyDrawingCache : unit -&gt; unit&#xA;override this.DestroyDrawingCache : unit -&gt; unit" Usage="view.DestroyDrawingCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("destroyDrawingCache", "()V", "GetDestroyDrawingCacheHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("destroyDrawingCache", "()V", "GetDestroyDrawingCacheHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Frees the resources used by the drawing cache.</summary>
        <remarks>
          <para>Frees the resources used by the drawing cache. If you call
            <c>#buildDrawingCache()</c> manually without calling
            <c>#setDrawingCacheEnabled(boolean) setDrawingCacheEnabled(true)</c>, you
            should cleanup the cache with this method afterwards.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#destroyDrawingCache()" title="Reference documentation">Java documentation for <code>android.view.View.destroyDrawingCache()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="DispatchApplyWindowInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchApplyWindowInsets (insets As WindowInsets) As WindowInsets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::WindowInsets ^ DispatchApplyWindowInsets(Android::Views::WindowInsets ^ insets);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets? DispatchApplyWindowInsets (Android.Views.WindowInsets? insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets DispatchApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchApplyWindowInsets(Android.Views.WindowInsets)" />
      <MemberSignature Language="F#" Value="abstract member DispatchApplyWindowInsets : Android.Views.WindowInsets -&gt; Android.Views.WindowInsets&#xA;override this.DispatchApplyWindowInsets : Android.Views.WindowInsets -&gt; Android.Views.WindowInsets" Usage="view.DispatchApplyWindowInsets insets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetDispatchApplyWindowInsets_Landroid_view_WindowInsets_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetDispatchApplyWindowInsets_Landroid_view_WindowInsets_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">Insets to apply</param>
        <summary>Request to apply the given window insets to this view or another view in its subtree.</summary>
        <returns>The provided insets minus the insets that were consumed</returns>
        <remarks>
          <para>Request to apply the given window insets to this view or another view in its subtree.</para>
          <para>This method should be called by clients wishing to apply insets corresponding to areas
            obscured by window decorations or overlays. This can include the status and navigation bars,
            action bars, input methods and more. New inset categories may be added in the future.
            The method returns the insets provided minus any that were applied by this view or its
            children.</para>
          <para>Clients wishing to provide custom behavior should override the
            <c>#onApplyWindowInsets(WindowInsets)</c> method or alternatively provide a
            <c>OnApplyWindowInsetsListener</c> via the
            <c>#setOnApplyWindowInsetsListener(View.OnApplyWindowInsetsListener) setOnApplyWindowInsetsListener</c>
            method.</para>
          <para>This method replaces the older <c>#fitSystemWindows(Rect) fitSystemWindows</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchApplyWindowInsets(android.view.WindowInsets)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchApplyWindowInsets(android.view.WindowInsets)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchCapturedPointerEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchCapturedPointerEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchCapturedPointerEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchCapturedPointerEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchCapturedPointerEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchCapturedPointerEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchCapturedPointerEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchCapturedPointerEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchCapturedPointerEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchCapturedPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchCapturedPointerEvent_Landroid_view_MotionEvent_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchCapturedPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchCapturedPointerEvent_Landroid_view_MotionEvent_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Pass a captured pointer event down to the focused view.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Pass a captured pointer event down to the focused view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchCapturedPointerEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchCapturedPointerEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchConfigurationChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchConfigurationChanged (newConfig As Configuration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchConfigurationChanged(Android::Content::Res::Configuration ^ newConfig);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchConfigurationChanged (Android.Content.Res.Configuration? newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchConfigurationChanged(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member DispatchConfigurationChanged : Android.Content.Res.Configuration -&gt; unit&#xA;override this.DispatchConfigurationChanged : Android.Content.Res.Configuration -&gt; unit" Usage="view.DispatchConfigurationChanged newConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetDispatchConfigurationChanged_Landroid_content_res_Configuration_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetDispatchConfigurationChanged_Landroid_content_res_Configuration_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new resource configuration.</param>
        <summary>Dispatch a notification about a resource configuration change down
            the view hierarchy.</summary>
        <remarks>
          <para>Dispatch a notification about a resource configuration change down
            the view hierarchy.
            ViewGroups should override to route to their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchConfigurationChanged(android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchConfigurationChanged(android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Views.View.OnConfigurationChanged(Android.Content.Res.Configuration)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchCreateViewTranslationRequest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchCreateViewTranslationRequest (viewIds As IDictionary(Of AutofillId, Long()), supportedFormats As Integer(), capability As TranslationCapability, requests As IList(Of ViewTranslationRequest))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchCreateViewTranslationRequest(System::Collections::Generic::IDictionary&lt;Android::Views::Autofill::AutofillId ^, cli::array &lt;long&gt; ^&gt; ^ viewIds, cli::array &lt;int&gt; ^ supportedFormats, Android::Views::Translation::TranslationCapability ^ capability, System::Collections::Generic::IList&lt;Android::Views::Translation::ViewTranslationRequest ^&gt; ^ requests);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchCreateViewTranslationRequest (System.Collections.Generic.IDictionary&lt;Android.Views.Autofill.AutofillId,long[]&gt; viewIds, int[] supportedFormats, Android.Views.Translation.TranslationCapability capability, System.Collections.Generic.IList&lt;Android.Views.Translation.ViewTranslationRequest&gt; requests);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchCreateViewTranslationRequest(class System.Collections.Generic.IDictionary`2&lt;class Android.Views.Autofill.AutofillId, int64[]&gt; viewIds, int32[] supportedFormats, class Android.Views.Translation.TranslationCapability capability, class System.Collections.Generic.IList`1&lt;class Android.Views.Translation.ViewTranslationRequest&gt; requests) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchCreateViewTranslationRequest(System.Collections.Generic.IDictionary{Android.Views.Autofill.AutofillId,System.Int64[]},System.Int32[],Android.Views.Translation.TranslationCapability,System.Collections.Generic.IList{Android.Views.Translation.ViewTranslationRequest})" />
      <MemberSignature Language="F#" Value="abstract member DispatchCreateViewTranslationRequest : System.Collections.Generic.IDictionary&lt;Android.Views.Autofill.AutofillId, int64[]&gt; * int[] * Android.Views.Translation.TranslationCapability * System.Collections.Generic.IList&lt;Android.Views.Translation.ViewTranslationRequest&gt; -&gt; unit&#xA;override this.DispatchCreateViewTranslationRequest : System.Collections.Generic.IDictionary&lt;Android.Views.Autofill.AutofillId, int64[]&gt; * int[] * Android.Views.Translation.TranslationCapability * System.Collections.Generic.IList&lt;Android.Views.Translation.ViewTranslationRequest&gt; -&gt; unit" Usage="view.DispatchCreateViewTranslationRequest (viewIds, supportedFormats, capability, requests)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchCreateViewTranslationRequest", "(Ljava/util/Map;[ILandroid/view/translation/TranslationCapability;Ljava/util/List;)V", "GetDispatchCreateViewTranslationRequest_Ljava_util_Map_arrayILandroid_view_translation_TranslationCapability_Ljava_util_List_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchCreateViewTranslationRequest", "(Ljava/util/Map;[ILandroid/view/translation/TranslationCapability;Ljava/util/List;)V", "GetDispatchCreateViewTranslationRequest_Ljava_util_Map_arrayILandroid_view_translation_TranslationCapability_Ljava_util_List_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewIds" Type="System.Collections.Generic.IDictionary&lt;Android.Views.Autofill.AutofillId,System.Int64[]&gt;" />
        <Parameter Name="supportedFormats" Type="System.Int32[]" />
        <Parameter Name="capability" Type="Android.Views.Translation.TranslationCapability" />
        <Parameter Name="requests" Type="System.Collections.Generic.IList&lt;Android.Views.Translation.ViewTranslationRequest&gt;" />
      </Parameters>
      <Docs>
        <param name="viewIds">a map for the view's <c>AutofillId</c> and its virtual child ids or
            <c>null</c> if the view doesn't have virtual child that should be translated. The virtual
            child ids are the same virtual ids provided by ContentCapture.</param>
        <param name="supportedFormats">the supported translation formats. For now, the only possible value
            is the <c>android.view.translation.TranslationSpec#DATA_FORMAT_TEXT</c>.</param>
        <param name="capability">a <c>TranslationCapability</c> that holds translation capability.
            information, e.g. source spec, target spec.</param>
        <param name="requests">fill in with <c>ViewTranslationRequest</c>s for translation purpose.</param>
        <summary>Dispatch to collect the <c>ViewTranslationRequest</c>s for translation purpose by traversing
            the hierarchy when the app requests ui translation.</summary>
        <remarks>
          <para>Dispatch to collect the <c>ViewTranslationRequest</c>s for translation purpose by traversing
            the hierarchy when the app requests ui translation. Typically, this method should only be
            overridden by subclasses that provide a view hierarchy (such as <c>ViewGroup</c>). Other
            classes should override <c>View#onCreateViewTranslationRequest</c> for normal view or
            override <c>View#onVirtualViewTranslationResponses</c> for view contains virtual children.
            When requested to start the ui translation, the system will call this method to traverse the
            view hierarchy to collect <c>ViewTranslationRequest</c>s and create a
            <c>android.view.translation.Translator</c> to translate the requests. All the
            <c>ViewTranslationRequest</c>s must be added when the traversal is done.</para>
          <para>The default implementation calls <c>View#onCreateViewTranslationRequest</c> for normal
            view or calls <c>View#onVirtualViewTranslationResponses</c> for view contains virtual
            children to build <c>ViewTranslationRequest</c> if the view should be translated.
            The view is marked as having <c>#setHasTransientState(boolean) transient state</c> so that
            recycling of views doesn't prevent the system from attaching the response to it. Therefore,
            if overriding this method, you should set or reset the transient state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchCreateViewTranslationRequest(java.util.Map%3Candroid.view.autofill.AutofillId,%20long[]%3E,%20int[],%20android.view.translation.TranslationCapability,%20java.util.List%3Candroid.view.translation.ViewTranslationRequest%3E)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchCreateViewTranslationRequest(java.util.Map&lt;android.view.autofill.AutofillId, long[]&gt;, int[], android.view.translation.TranslationCapability, java.util.List&lt;android.view.translation.ViewTranslationRequest&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchDisplayHint">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchDisplayHint (hint As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchDisplayHint(Android::Views::ViewStates hint);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchDisplayHint (Android.Views.ViewStates hint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchDisplayHint(valuetype Android.Views.ViewStates hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchDisplayHint(Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member DispatchDisplayHint : Android.Views.ViewStates -&gt; unit&#xA;override this.DispatchDisplayHint : Android.Views.ViewStates -&gt; unit" Usage="view.DispatchDisplayHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchDisplayHint", "(I)V", "GetDispatchDisplayHint_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchDisplayHint", "(I)V", "GetDispatchDisplayHint_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hint">A hint about whether or not this view is displayed:
            <c>#VISIBLE</c> or <c>#INVISIBLE</c>.</param>
        <summary>Dispatch a hint about whether this view is displayed.</summary>
        <remarks>
          <para>Dispatch a hint about whether this view is displayed. For instance, when
            a View moves out of the screen, it might receives a display hint indicating
            the view is not displayed. Applications should not &lt;em&gt;rely&lt;/em&gt; on this hint
            as there is no guarantee that they will receive one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchDisplayHint(int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchDisplayHint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDragEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchDragEvent (e As DragEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchDragEvent(Android::Views::DragEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchDragEvent (Android.Views.DragEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchDragEvent(class Android.Views.DragEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchDragEvent(Android.Views.DragEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchDragEvent : Android.Views.DragEvent -&gt; bool&#xA;override this.DispatchDragEvent : Android.Views.DragEvent -&gt; bool" Usage="view.DispatchDragEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchDragEvent", "(Landroid/view/DragEvent;)Z", "GetDispatchDragEvent_Landroid_view_DragEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchDragEvent", "(Landroid/view/DragEvent;)Z", "GetDispatchDragEvent_Landroid_view_DragEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.DragEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Detects if this View is enabled and has a drag event listener.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Detects if this View is enabled and has a drag event listener.
            If both are true, then it calls the drag event listener with the
            <c>android.view.DragEvent</c> it received. If the drag event listener returns
            <c>true</c>, then dispatchDragEvent() returns <c>true</c>.</para>
          <para>For all other cases, the method calls the
            <c>android.view.View#onDragEvent(DragEvent) onDragEvent()</c> drag event handler
            method and returns its result.</para>
          <para>This ensures that a drag event is always consumed, even if the View does not have a drag
            event listener. However, if the View has a listener and the listener returns true, then
            onDragEvent() is not called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchDragEvent(android.view.DragEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchDragEvent(android.view.DragEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDraw">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchDraw (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchDraw(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchDraw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member DispatchDraw : Android.Graphics.Canvas -&gt; unit&#xA;override this.DispatchDraw : Android.Graphics.Canvas -&gt; unit" Usage="view.DispatchDraw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchDraw", "(Landroid/graphics/Canvas;)V", "GetDispatchDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchDraw", "(Landroid/graphics/Canvas;)V", "GetDispatchDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which to draw the view</param>
        <summary>Called by draw to draw the child views.</summary>
        <remarks>
          <para>Called by draw to draw the child views. This may be overridden
            by derived classes to gain control just before its children are drawn
            (but after its own view has been drawn).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchDraw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchDraw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchDrawableHotspotChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchDrawableHotspotChanged (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchDrawableHotspotChanged(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchDrawableHotspotChanged (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchDrawableHotspotChanged(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchDrawableHotspotChanged(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member DispatchDrawableHotspotChanged : single * single -&gt; unit&#xA;override this.DispatchDrawableHotspotChanged : single * single -&gt; unit" Usage="view.DispatchDrawableHotspotChanged (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchDrawableHotspotChanged", "(FF)V", "GetDispatchDrawableHotspotChanged_FFHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchDrawableHotspotChanged", "(FF)V", "GetDispatchDrawableHotspotChanged_FFHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">hotspot x coordinate</param>
        <param name="y">hotspot y coordinate</param>
        <summary>Dispatches drawableHotspotChanged to all of this View's children.</summary>
        <remarks>
          <para>Dispatches drawableHotspotChanged to all of this View's children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchDrawableHotspotChanged(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchDrawableHotspotChanged(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchFinishTemporaryDetach">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchFinishTemporaryDetach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchFinishTemporaryDetach();" />
      <MemberSignature Language="C#" Value="public virtual void DispatchFinishTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchFinishTemporaryDetach() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchFinishTemporaryDetach" />
      <MemberSignature Language="F#" Value="abstract member DispatchFinishTemporaryDetach : unit -&gt; unit&#xA;override this.DispatchFinishTemporaryDetach : unit -&gt; unit" Usage="view.DispatchFinishTemporaryDetach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchFinishTemporaryDetach", "()V", "GetDispatchFinishTemporaryDetachHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchFinishTemporaryDetach", "()V", "GetDispatchFinishTemporaryDetachHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dispatch <c>#onFinishTemporaryDetach()</c> to this View and its direct children if this is
            a container View.</summary>
        <remarks>
          <para>Dispatch <c>#onFinishTemporaryDetach()</c> to this View and its direct children if this is
            a container View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchFinishTemporaryDetach()" title="Reference documentation">Java documentation for <code>android.view.View.dispatchFinishTemporaryDetach()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericFocusedEvent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DispatchGenericFocusedEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DispatchGenericFocusedEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="protected virtual bool DispatchGenericFocusedEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchGenericFocusedEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchGenericFocusedEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchGenericFocusedEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchGenericFocusedEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchGenericFocusedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchGenericFocusedEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericFocusedEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchGenericFocusedEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericFocusedEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event to the currently focused view.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Dispatch a generic motion event to the currently focused view.</para>
          <para>Do not call this method directly.
            Call <c>#dispatchGenericMotionEvent(MotionEvent)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchGenericFocusedEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchGenericFocusedEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericMotionEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchGenericMotionEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchGenericMotionEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchGenericMotionEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchGenericMotionEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Dispatch a generic motion event.</para>
          <para>Generic motion events with source class <c>InputDevice#SOURCE_CLASS_POINTER</c>
            are delivered to the view under the pointer.  All other generic motion events are
            delivered to the focused view.  Hover events are handled specially and are delivered
            to <c>#onHoverEvent(MotionEvent)</c> first.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="DispatchGenericPointerEvent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DispatchGenericPointerEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DispatchGenericPointerEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="protected virtual bool DispatchGenericPointerEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchGenericPointerEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchGenericPointerEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchGenericPointerEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchGenericPointerEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchGenericPointerEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchGenericPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericPointerEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchGenericPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchGenericPointerEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Dispatch a generic motion event to the view under the first pointer.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Dispatch a generic motion event to the view under the first pointer.</para>
          <para>Do not call this method directly.
            Call <c>#dispatchGenericMotionEvent(MotionEvent)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchGenericPointerEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchGenericPointerEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchHoverEvent">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DispatchHoverEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool DispatchHoverEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="protected virtual bool DispatchHoverEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool DispatchHoverEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchHoverEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchHoverEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchHoverEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchHoverEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchHoverEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchHoverEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Dispatch a hover event.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Dispatch a hover event.</para>
          <para>Do not call this method directly.
            Call <c>#dispatchGenericMotionEvent(MotionEvent)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchHoverEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchHoverEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchKeyEvent (e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchKeyEvent(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyEvent : Android.Views.KeyEvent -&gt; bool" Usage="view.DispatchKeyEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <param name="event">The key event to be dispatched.</param>
        <summary>Dispatch a key event to the next view on the focus path.</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Dispatch a key event to the next view on the focus path. This path runs
            from the top of the view tree down to the currently focused view. If this
            view has focus, it will dispatch to itself. Otherwise it will dispatch
            the next node down the focus path. This method also fires any key
            listeners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyEventPreIme">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchKeyEventPreIme (e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchKeyEventPreIme(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyEventPreIme (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyEventPreIme(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchKeyEventPreIme(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyEventPreIme : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyEventPreIme : Android.Views.KeyEvent -&gt; bool" Usage="view.DispatchKeyEventPreIme e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyEventPreIme", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEventPreIme_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyEventPreIme", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEventPreIme_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <param name="event">The key event to be dispatched.</param>
        <summary>Dispatch a key event before it is processed by any input method
            associated with the view hierarchy.</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Dispatch a key event before it is processed by any input method
            associated with the view hierarchy.  This can be used to intercept
            key events in special situations before the IME consumes them; a
            typical example would be handling the BACK key to update the application's
            UI instead of allowing the IME to see it and close itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchKeyEventPreIme(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchKeyEventPreIme(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DispatchKeyShortcutEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchKeyShortcutEvent (e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchKeyShortcutEvent(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchKeyShortcutEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchKeyShortcutEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool&#xA;override this.DispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool" Usage="view.DispatchKeyShortcutEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The key event to be dispatched.</param>
        <param name="event">The key event to be dispatched.</param>
        <summary>Dispatches a key shortcut event.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Dispatches a key shortcut event.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchKeyShortcutEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchKeyShortcutEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedFling">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchNestedFling (velocityX As Single, velocityY As Single, consumed As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedFling (float velocityX, float velocityY, bool consumed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedFling(float32 velocityX, float32 velocityY, bool consumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchNestedFling(System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchNestedFling : single * single * bool -&gt; bool&#xA;override this.DispatchNestedFling : single * single * bool -&gt; bool" Usage="view.DispatchNestedFling (velocityX, velocityY, consumed)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocityX" Type="System.Single" />
        <Parameter Name="velocityY" Type="System.Single" />
        <Parameter Name="consumed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="velocityX">Horizontal fling velocity in pixels per second</param>
        <param name="velocityY">Vertical fling velocity in pixels per second</param>
        <param name="consumed">true if the child consumed the fling, false otherwise</param>
        <summary>Dispatch a fling to a nested scrolling parent.</summary>
        <returns>true if the nested scrolling parent consumed or otherwise reacted to the fling</returns>
        <remarks>
          <para>Dispatch a fling to a nested scrolling parent.</para>
          <para>This method should be used to indicate that a nested scrolling child has detected
            suitable conditions for a fling. Generally this means that a touch scroll has ended with a
            <c>VelocityTracker velocity</c> in the direction of scrolling that meets or exceeds
            the <c>ViewConfiguration#getScaledMinimumFlingVelocity() minimum fling velocity</c>
            along a scrollable axis.</para>
          <para>If a nested scrolling child view would normally fling but it is at the edge of
            its own content, it can use this method to delegate the fling to its nested scrolling
            parent instead. The parent may optionally consume the fling or observe a child fling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchNestedFling(float,%20float,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchNestedFling(float, float, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedPreFling">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchNestedPreFling (velocityX As Single, velocityY As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchNestedPreFling(float velocityX, float velocityY);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedPreFling (float velocityX, float velocityY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedPreFling(float32 velocityX, float32 velocityY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchNestedPreFling(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member DispatchNestedPreFling : single * single -&gt; bool&#xA;override this.DispatchNestedPreFling : single * single -&gt; bool" Usage="view.DispatchNestedPreFling (velocityX, velocityY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="velocityX" Type="System.Single" />
        <Parameter Name="velocityY" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="velocityX">Horizontal fling velocity in pixels per second</param>
        <param name="velocityY">Vertical fling velocity in pixels per second</param>
        <summary>Dispatch a fling to a nested scrolling parent before it is processed by this view.</summary>
        <returns>true if a nested scrolling parent consumed the fling</returns>
        <remarks>
          <para>Dispatch a fling to a nested scrolling parent before it is processed by this view.</para>
          <para>Nested pre-fling events are to nested fling events what touch intercept is to touch
            and what nested pre-scroll is to nested scroll. <c>dispatchNestedPreFling</c>
            offsets an opportunity for the parent view in a nested fling to fully consume the fling
            before the child view consumes it. If this method returns <c>true</c>, a nested
            parent view consumed the fling and this view should not scroll as a result.</para>
          <para>For a better user experience, only one view in a nested scrolling chain should consume
            the fling at a time. If a parent view consumed the fling this method will return false.
            Custom view implementations should account for this in two ways:</para>
          <para>&lt;ul&gt;
                &lt;li&gt;If a custom view is paged and needs to settle to a fixed page-point, do not
                call <c>dispatchNestedPreFling</c>; consume the fling and settle to a valid
                position regardless.&lt;/li&gt;
                &lt;li&gt;If a nested parent does consume the fling, this view should not scroll at all,
                even to settle back to a valid idle position.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Views should also not offer fling velocities to nested parent views along an axis
            where scrolling is not currently supported; a <c>android.widget.ScrollView ScrollView</c>
            should not offer a horizontal fling velocity to its parents since scrolling along that
            axis is not permitted and carrying velocity along that motion does not make sense.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchNestedPreFling(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchNestedPreFling(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedPrePerformAccessibilityAction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchNestedPrePerformAccessibilityAction (action As Action, arguments As Bundle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchNestedPrePerformAccessibilityAction(Android::Views::Accessibility::Action action, Android::OS::Bundle ^ arguments);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedPrePerformAccessibilityAction (Android.Views.Accessibility.Action action, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedPrePerformAccessibilityAction(valuetype Android.Views.Accessibility.Action action, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchNestedPrePerformAccessibilityAction(Android.Views.Accessibility.Action,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member DispatchNestedPrePerformAccessibilityAction : Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool&#xA;override this.DispatchNestedPrePerformAccessibilityAction : Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool" Usage="view.DispatchNestedPrePerformAccessibilityAction (action, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchNestedPrePerformAccessibilityAction", "(ILandroid/os/Bundle;)Z", "GetDispatchNestedPrePerformAccessibilityAction_ILandroid_os_Bundle_Handler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchNestedPrePerformAccessibilityAction", "(ILandroid/os/Bundle;)Z", "GetDispatchNestedPrePerformAccessibilityAction_ILandroid_os_Bundle_Handler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.Views.Accessibility.Action">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">Accessibility action to delegate</param>
        <param name="arguments">Optional action arguments</param>
        <summary>Report an accessibility action to this view's parents for delegated processing.</summary>
        <returns>true if the action was consumed by a parent</returns>
        <remarks>
          <para>Report an accessibility action to this view's parents for delegated processing.</para>
          <para>Implementations of <c>#performAccessibilityAction(int, Bundle)</c> may internally
            call this method to delegate an accessibility action to a supporting parent. If the parent
            returns true from its
            <c>ViewParent#onNestedPrePerformAccessibilityAction(View, int, android.os.Bundle)</c>
            method this method will return true to signify that the action was consumed.</para>
          <para>This method is useful for implementing nested scrolling child views. If
            <c>#isNestedScrollingEnabled()</c> returns true and the action is a scrolling action
            a custom view implementation may invoke this method to allow a parent to consume the
            scroll first. If this method returns true the custom view should skip its own scrolling
            behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchNestedPrePerformAccessibilityAction(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchNestedPrePerformAccessibilityAction(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedPreScroll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchNestedPreScroll (dx As Integer, dy As Integer, consumed As Integer(), offsetInWindow As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchNestedPreScroll(int dx, int dy, cli::array &lt;int&gt; ^ consumed, cli::array &lt;int&gt; ^ offsetInWindow);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedPreScroll (int dx, int dy, int[]? consumed, int[]? offsetInWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedPreScroll(int32 dx, int32 dy, int32[] consumed, int32[] offsetInWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchNestedPreScroll(System.Int32,System.Int32,System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member DispatchNestedPreScroll : int * int * int[] * int[] -&gt; bool&#xA;override this.DispatchNestedPreScroll : int * int * int[] * int[] -&gt; bool" Usage="view.DispatchNestedPreScroll (dx, dy, consumed, offsetInWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
        <Parameter Name="consumed" Type="System.Int32[]" />
        <Parameter Name="offsetInWindow" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="dx">Horizontal scroll distance in pixels</param>
        <param name="dy">Vertical scroll distance in pixels</param>
        <param name="consumed">Output. If not null, consumed[0] will contain the consumed component of dx
                            and consumed[1] the consumed dy.</param>
        <param name="offsetInWindow">Optional. If not null, on return this will contain the offset
                                  in local view coordinates of this view from before this operation
                                  to after it completes. View implementations may use this to adjust
                                  expected input coordinate tracking.</param>
        <summary>Dispatch one step of a nested scroll in progress before this view consumes any portion of it.</summary>
        <returns>true if the parent consumed some or all of the scroll delta</returns>
        <remarks>
          <para>Dispatch one step of a nested scroll in progress before this view consumes any portion of it.</para>
          <para>Nested pre-scroll events are to nested scroll events what touch intercept is to touch.
            <c>dispatchNestedPreScroll</c> offers an opportunity for the parent view in a nested
            scrolling operation to consume some or all of the scroll operation before the child view
            consumes it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchNestedPreScroll(int,%20int,%20int[],%20int[])" title="Reference documentation">Java documentation for <code>android.view.View.dispatchNestedPreScroll(int, int, int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchNestedScroll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchNestedScroll (dxConsumed As Integer, dyConsumed As Integer, dxUnconsumed As Integer, dyUnconsumed As Integer, offsetInWindow As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, cli::array &lt;int&gt; ^ offsetInWindow);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchNestedScroll (int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int[]? offsetInWindow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchNestedScroll(int32 dxConsumed, int32 dyConsumed, int32 dxUnconsumed, int32 dyUnconsumed, int32[] offsetInWindow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchNestedScroll(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member DispatchNestedScroll : int * int * int * int * int[] -&gt; bool&#xA;override this.DispatchNestedScroll : int * int * int * int * int[] -&gt; bool" Usage="view.DispatchNestedScroll (dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed, offsetInWindow)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dxConsumed" Type="System.Int32" />
        <Parameter Name="dyConsumed" Type="System.Int32" />
        <Parameter Name="dxUnconsumed" Type="System.Int32" />
        <Parameter Name="dyUnconsumed" Type="System.Int32" />
        <Parameter Name="offsetInWindow" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="dxConsumed">Horizontal distance in pixels consumed by this view during this scroll step</param>
        <param name="dyConsumed">Vertical distance in pixels consumed by this view during this scroll step</param>
        <param name="dxUnconsumed">Horizontal scroll distance in pixels not consumed by this view</param>
        <param name="dyUnconsumed">Horizontal scroll distance in pixels not consumed by this view</param>
        <param name="offsetInWindow">Optional. If not null, on return this will contain the offset
                                  in local view coordinates of this view from before this operation
                                  to after it completes. View implementations may use this to adjust
                                  expected input coordinate tracking.</param>
        <summary>Dispatch one step of a nested scroll in progress.</summary>
        <returns>true if the event was dispatched, false if it could not be dispatched.</returns>
        <remarks>
          <para>Dispatch one step of a nested scroll in progress.</para>
          <para>Implementations of views that support nested scrolling should call this to report
            info about a scroll in progress to the current nested scrolling parent. If a nested scroll
            is not currently in progress or nested scrolling is not
            <c>#isNestedScrollingEnabled() enabled</c> for this view this method does nothing.</para>
          <para>Compatible View implementations should also call
            <c>#dispatchNestedPreScroll(int, int, int[], int[]) dispatchNestedPreScroll</c> before
            consuming a component of the scroll event themselves.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchNestedScroll(int,%20int,%20int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.view.View.dispatchNestedScroll(int, int, int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="DispatchPointerCaptureChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchPointerCaptureChanged (hasCapture As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchPointerCaptureChanged(bool hasCapture);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchPointerCaptureChanged (bool hasCapture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchPointerCaptureChanged(bool hasCapture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchPointerCaptureChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchPointerCaptureChanged : bool -&gt; unit&#xA;override this.DispatchPointerCaptureChanged : bool -&gt; unit" Usage="view.DispatchPointerCaptureChanged hasCapture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchPointerCaptureChanged", "(Z)V", "GetDispatchPointerCaptureChanged_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchPointerCaptureChanged", "(Z)V", "GetDispatchPointerCaptureChanged_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasCapture" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasCapture">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchPointerCaptureChanged(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchPointerCaptureChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchPopulateAccessibilityEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchPopulateAccessibilityEvent (e As AccessibilityEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchPopulateAccessibilityEvent(Android::Views::Accessibility::AccessibilityEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool&#xA;override this.DispatchPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; bool" Usage="view.DispatchPopulateAccessibilityEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event.</param>
        <param name="event">The event.</param>
        <summary>Dispatches an <c>AccessibilityEvent</c> to the <c>View</c> first and then
            to its children for adding their text content to the event.</summary>
        <returns>True if the event population was completed.</returns>
        <remarks>
          <para>Dispatches an <c>AccessibilityEvent</c> to the <c>View</c> first and then
            to its children for adding their text content to the event. Note that the
            event text is populated in a separate dispatch path since we add to the
            event not only the text of the source but also the text of all its descendants.
            A typical implementation will call
            <c>#onPopulateAccessibilityEvent(AccessibilityEvent)</c> on the this view
            and then call the <c>#dispatchPopulateAccessibilityEvent(AccessibilityEvent)</c>
            on each child. Override this method if custom population of the event text
            content is required.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#dispatchPopulateAccessibilityEvent(View, AccessibilityEvent)</c>
            is responsible for handling this call.</para>
          <para>If this view sets <c>#isAccessibilityDataSensitive()</c> then this view should only append
            sensitive information to an event that also sets
            <c>AccessibilityEvent#isAccessibilityDataSensitive()</c>.</para>
          <para>&lt;em&gt;Note:&lt;/em&gt; Accessibility events of certain types are not dispatched for
            populating the event text via this method. For details refer to <c>AccessibilityEvent</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="DispatchProvideAutofillStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchProvideAutofillStructure (structure As ViewStructure, flags As AutofillFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchProvideAutofillStructure(Android::Views::ViewStructure ^ structure, Android::Views::AutofillFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchProvideAutofillStructure (Android.Views.ViewStructure structure, Android.Views.AutofillFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchProvideAutofillStructure(class Android.Views.ViewStructure structure, valuetype Android.Views.AutofillFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchProvideAutofillStructure(Android.Views.ViewStructure,Android.Views.AutofillFlags)" />
      <MemberSignature Language="F#" Value="abstract member DispatchProvideAutofillStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit&#xA;override this.DispatchProvideAutofillStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit" Usage="view.DispatchProvideAutofillStructure (structure, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchProvideAutofillStructure", "(Landroid/view/ViewStructure;I)V", "GetDispatchProvideAutofillStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchProvideAutofillStructure", "(Landroid/view/ViewStructure;I)V", "GetDispatchProvideAutofillStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
        <Parameter Name="flags" Type="Android.Views.AutofillFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="structure">fill in with structured view data for autofill purposes.</param>
        <param name="flags">optional flags.</param>
        <summary>Dispatches creation of a <c>ViewStructure</c>s for autofill purposes down the hierarchy,
            when an Assist structure is being created as part of an autofill request.</summary>
        <remarks>
          <para>Dispatches creation of a <c>ViewStructure</c>s for autofill purposes down the hierarchy,
            when an Assist structure is being created as part of an autofill request.</para>
          <para>The default implementation does the following:
            &lt;ul&gt;
              &lt;li&gt;Sets the <c>AutofillId</c> in the structure.
              &lt;li&gt;Calls <c>#onProvideAutofillStructure(ViewStructure, int)</c>.
              &lt;li&gt;Calls <c>#onProvideAutofillVirtualStructure(ViewStructure, int)</c>.
            &lt;/ul&gt;</para>
          <para>Typically, this method should only be overridden by subclasses that provide a view
            hierarchy (such as <c>ViewGroup</c>) - other classes should override
            <c>#onProvideAutofillStructure(ViewStructure, int)</c> or
            <c>#onProvideAutofillVirtualStructure(ViewStructure, int)</c> instead.</para>
          <para>When overridden, it must:
            
            &lt;ul&gt;
              &lt;li&gt;Either call
                  <c>super.dispatchProvideAutofillStructure(structure, flags)</c> or explicitly
                  set the <c>AutofillId</c> in the structure (for example, by calling
                  <c>structure.setAutofillId(getAutofillId())</c>).
              &lt;li&gt;Decide how to handle the <c>#AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS</c> flag - when
                  set, all views in the structure should be considered important for autofill,
                  regardless of what <c>#isImportantForAutofill()</c> returns. We encourage you to
                  respect this flag to provide a better user experience - this flag is typically used
                  when an user explicitly requested autofill. If the flag is not set,
                  then only views marked as important for autofill should be included in the
                  structure - skipping non-important views optimizes the overall autofill performance.
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchProvideAutofillStructure(android.view.ViewStructure,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchProvideAutofillStructure(android.view.ViewStructure, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchProvideStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchProvideStructure (structure As ViewStructure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchProvideStructure(Android::Views::ViewStructure ^ structure);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchProvideStructure (Android.Views.ViewStructure? structure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchProvideStructure(class Android.Views.ViewStructure structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchProvideStructure(Android.Views.ViewStructure)" />
      <MemberSignature Language="F#" Value="abstract member DispatchProvideStructure : Android.Views.ViewStructure -&gt; unit&#xA;override this.DispatchProvideStructure : Android.Views.ViewStructure -&gt; unit" Usage="view.DispatchProvideStructure structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchProvideStructure", "(Landroid/view/ViewStructure;)V", "GetDispatchProvideStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchProvideStructure", "(Landroid/view/ViewStructure;)V", "GetDispatchProvideStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
      </Parameters>
      <Docs>
        <param name="structure">To be added.</param>
        <summary>Dispatch creation of <c>ViewStructure</c> down the hierarchy.</summary>
        <remarks>
          <para>Dispatch creation of <c>ViewStructure</c> down the hierarchy.  The default
            implementation calls <c>#onProvideStructure</c> and
            <c>#onProvideVirtualStructure</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchProvideStructure(android.view.ViewStructure)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchProvideStructure(android.view.ViewStructure)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchRestoreInstanceState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchRestoreInstanceState (container As SparseArray)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchRestoreInstanceState(Android::Util::SparseArray ^ container);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchRestoreInstanceState (Android.Util.SparseArray? container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchRestoreInstanceState(class Android.Util.SparseArray container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchRestoreInstanceState(Android.Util.SparseArray)" />
      <MemberSignature Language="F#" Value="abstract member DispatchRestoreInstanceState : Android.Util.SparseArray -&gt; unit&#xA;override this.DispatchRestoreInstanceState : Android.Util.SparseArray -&gt; unit" Usage="view.DispatchRestoreInstanceState container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchRestoreInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchRestoreInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">The SparseArray which holds previously saved state.</param>
        <summary>Called by <c>#restoreHierarchyState(android.util.SparseArray)</c> to retrieve the
            state for this view and its children.</summary>
        <remarks>
          <para>Called by <c>#restoreHierarchyState(android.util.SparseArray)</c> to retrieve the
            state for this view and its children. May be overridden to modify how restoring
            happens to a view's children; for example, some views may want to not store state
            for their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchRestoreInstanceState(android.util.SparseArray%3Candroid.os.Parcelable%3E)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchRestoreInstanceState(android.util.SparseArray&lt;android.os.Parcelable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchSaveInstanceState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchSaveInstanceState (container As SparseArray)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchSaveInstanceState(Android::Util::SparseArray ^ container);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchSaveInstanceState (Android.Util.SparseArray? container);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSaveInstanceState(class Android.Util.SparseArray container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSaveInstanceState(Android.Util.SparseArray)" />
      <MemberSignature Language="F#" Value="abstract member DispatchSaveInstanceState : Android.Util.SparseArray -&gt; unit&#xA;override this.DispatchSaveInstanceState : Android.Util.SparseArray -&gt; unit" Usage="view.DispatchSaveInstanceState container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchSaveInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchSaveInstanceState_Landroid_util_SparseArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchSaveInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchSaveInstanceState_Landroid_util_SparseArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">The SparseArray in which to save the view's state.</param>
        <summary>Called by <c>#saveHierarchyState(android.util.SparseArray)</c> to store the state for
            this view and its children.</summary>
        <remarks>
          <para>Called by <c>#saveHierarchyState(android.util.SparseArray)</c> to store the state for
            this view and its children. May be overridden to modify how freezing happens to a
            view's children; for example, some views may want to not store state for their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchSaveInstanceState(android.util.SparseArray%3Candroid.os.Parcelable%3E)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchSaveInstanceState(android.util.SparseArray&lt;android.os.Parcelable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchScrollCaptureSearch">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchScrollCaptureSearch (localVisibleRect As Rect, windowOffset As Point, targets As IConsumer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchScrollCaptureSearch(Android::Graphics::Rect ^ localVisibleRect, Android::Graphics::Point ^ windowOffset, Java::Util::Functions::IConsumer ^ targets);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchScrollCaptureSearch (Android.Graphics.Rect localVisibleRect, Android.Graphics.Point windowOffset, Java.Util.Functions.IConsumer targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchScrollCaptureSearch(class Android.Graphics.Rect localVisibleRect, class Android.Graphics.Point windowOffset, class Java.Util.Functions.IConsumer targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchScrollCaptureSearch(Android.Graphics.Rect,Android.Graphics.Point,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member DispatchScrollCaptureSearch : Android.Graphics.Rect * Android.Graphics.Point * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.DispatchScrollCaptureSearch : Android.Graphics.Rect * Android.Graphics.Point * Java.Util.Functions.IConsumer -&gt; unit" Usage="view.DispatchScrollCaptureSearch (localVisibleRect, windowOffset, targets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchScrollCaptureSearch", "(Landroid/graphics/Rect;Landroid/graphics/Point;Ljava/util/function/Consumer;)V", "GetDispatchScrollCaptureSearch_Landroid_graphics_Rect_Landroid_graphics_Point_Ljava_util_function_Consumer_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchScrollCaptureSearch", "(Landroid/graphics/Rect;Landroid/graphics/Point;Ljava/util/function/Consumer;)V", "GetDispatchScrollCaptureSearch_Landroid_graphics_Rect_Landroid_graphics_Point_Ljava_util_function_Consumer_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localVisibleRect" Type="Android.Graphics.Rect" />
        <Parameter Name="windowOffset" Type="Android.Graphics.Point" />
        <Parameter Name="targets" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="localVisibleRect">the visible area of this ViewGroup in local coordinates, according to
                                    the parent</param>
        <param name="windowOffset">the offset of this view within the window</param>
        <param name="targets">accepts potential scroll capture targets; <c>Consumer#accept
                                    results.accept</c> may be called zero or more times on the calling
                                    thread before onScrollCaptureSearch returns</param>
        <summary>Dispatch a scroll capture search request down the view hierarchy.</summary>
        <remarks>
          <para>Dispatch a scroll capture search request down the view hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchScrollCaptureSearch(android.graphics.Rect,%20android.graphics.Point,%20java.util.function.Consumer%3Candroid.view.ScrollCaptureTarget%3E)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchScrollCaptureSearch(android.graphics.Rect, android.graphics.Point, java.util.function.Consumer&lt;android.view.ScrollCaptureTarget&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchSetActivated">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchSetActivated (activated As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchSetActivated(bool activated);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetActivated (bool activated);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetActivated(bool activated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSetActivated(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchSetActivated : bool -&gt; unit&#xA;override this.DispatchSetActivated : bool -&gt; unit" Usage="view.DispatchSetActivated activated" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchSetActivated", "(Z)V", "GetDispatchSetActivated_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchSetActivated", "(Z)V", "GetDispatchSetActivated_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activated">The new activated state</param>
        <summary>Dispatch setActivated to all of this View's children.</summary>
        <remarks>
          <para>Dispatch setActivated to all of this View's children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchSetActivated(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchSetActivated(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Activated" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSetPressed">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchSetPressed (pressed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchSetPressed(bool pressed);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetPressed (bool pressed);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetPressed(bool pressed) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSetPressed(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchSetPressed : bool -&gt; unit&#xA;override this.DispatchSetPressed : bool -&gt; unit" Usage="view.DispatchSetPressed pressed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchSetPressed", "(Z)V", "GetDispatchSetPressed_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchSetPressed", "(Z)V", "GetDispatchSetPressed_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pressed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pressed">The new pressed state</param>
        <summary>Dispatch setPressed to all of this View's children.</summary>
        <remarks>
          <para>Dispatch setPressed to all of this View's children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchSetPressed(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchSetPressed(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Pressed" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSetSelected">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchSetSelected (selected As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchSetSelected(bool selected);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchSetSelected (bool selected);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchSetSelected(bool selected) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSetSelected(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchSetSelected : bool -&gt; unit&#xA;override this.DispatchSetSelected : bool -&gt; unit" Usage="view.DispatchSetSelected selected" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchSetSelected", "(Z)V", "GetDispatchSetSelected_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchSetSelected", "(Z)V", "GetDispatchSetSelected_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selected" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="selected">The new selected state</param>
        <summary>Dispatch setSelected to all of this View's children.</summary>
        <remarks>
          <para>Dispatch setSelected to all of this View's children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchSetSelected(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchSetSelected(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Selected" />
      </Docs>
    </Member>
    <Member MemberName="DispatchStartTemporaryDetach">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchStartTemporaryDetach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchStartTemporaryDetach();" />
      <MemberSignature Language="C#" Value="public virtual void DispatchStartTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchStartTemporaryDetach() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchStartTemporaryDetach" />
      <MemberSignature Language="F#" Value="abstract member DispatchStartTemporaryDetach : unit -&gt; unit&#xA;override this.DispatchStartTemporaryDetach : unit -&gt; unit" Usage="view.DispatchStartTemporaryDetach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchStartTemporaryDetach", "()V", "GetDispatchStartTemporaryDetachHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchStartTemporaryDetach", "()V", "GetDispatchStartTemporaryDetachHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dispatch <c>#onStartTemporaryDetach()</c> to this View and its direct children if this is
            a container View.</summary>
        <remarks>
          <para>Dispatch <c>#onStartTemporaryDetach()</c> to this View and its direct children if this is
            a container View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchStartTemporaryDetach()" title="Reference documentation">Java documentation for <code>android.view.View.dispatchStartTemporaryDetach()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchSystemUiVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchSystemUiVisibilityChanged (visibility As SystemUiFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchSystemUiVisibilityChanged(Android::Views::SystemUiFlags visibility);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchSystemUiVisibilityChanged (Android.Views.SystemUiFlags visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchSystemUiVisibilityChanged(valuetype Android.Views.SystemUiFlags visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSystemUiVisibilityChanged(Android.Views.SystemUiFlags)" />
      <MemberSignature Language="F#" Value="abstract member DispatchSystemUiVisibilityChanged : Android.Views.SystemUiFlags -&gt; unit&#xA;override this.DispatchSystemUiVisibilityChanged : Android.Views.SystemUiFlags -&gt; unit" Usage="view.DispatchSystemUiVisibilityChanged visibility" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchSystemUiVisibilityChanged", "(I)V", "GetDispatchSystemUiVisibilityChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchSystemUiVisibilityChanged", "(I)V", "GetDispatchSystemUiVisibilityChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">To be added.</param>
        <summary>Dispatch callbacks to <c>#setOnSystemUiVisibilityChangeListener</c> down
            the view hierarchy.</summary>
        <remarks>
          <para>Dispatch callbacks to <c>#setOnSystemUiVisibilityChangeListener</c> down
            the view hierarchy.</para>
          <para>This member is deprecated. Use <c>WindowInsets#isVisible(int)</c> to find out about system bar visibilities
            by setting a <c>OnApplyWindowInsetsListener</c> on this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchSystemUiVisibilityChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchSystemUiVisibilityChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="DispatchSystemUiVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Public Sub DispatchSystemUiVisibilityChanged (visibility As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DispatchSystemUiVisibilityChanged(int visibility);" />
      <MemberSignature Language="C#" Value="public void DispatchSystemUiVisibilityChanged (int visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DispatchSystemUiVisibilityChanged(int32 visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchSystemUiVisibilityChanged(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DispatchSystemUiVisibilityChanged : int -&gt; unit" Usage="view.DispatchSystemUiVisibilityChanged visibility" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Please Use DispatchSystemUiVisibilityChanged(SystemUiFlags)")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Please Use DispatchSystemUiVisibilityChanged(SystemUiFlags)")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="visibility">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchTouchEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchTouchEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchTouchEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchTouchEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Pass the touch screen motion event down to the target view, or this
            view if it is the target.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Pass the touch screen motion event down to the target view, or this
            view if it is the target.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchTrackballEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchTrackballEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchTrackballEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchTrackballEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.DispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.DispatchTrackballEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be dispatched.</param>
        <param name="event">The motion event to be dispatched.</param>
        <summary>Pass a trackball motion event down to the focused view.</summary>
        <returns>True if the event was handled by the view, false otherwise.</returns>
        <remarks>
          <para>Pass a trackball motion event down to the focused view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchUnhandledMove">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchUnhandledMove (focused As View, direction As FocusSearchDirection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DispatchUnhandledMove(Android::Views::View ^ focused, Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual bool DispatchUnhandledMove (Android.Views.View? focused, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DispatchUnhandledMove(class Android.Views.View focused, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchUnhandledMove(Android.Views.View,Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member DispatchUnhandledMove : Android.Views.View * Android.Views.FocusSearchDirection -&gt; bool&#xA;override this.DispatchUnhandledMove : Android.Views.View * Android.Views.FocusSearchDirection -&gt; bool" Usage="view.DispatchUnhandledMove (focused, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchUnhandledMove", "(Landroid/view/View;I)Z", "GetDispatchUnhandledMove_Landroid_view_View_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchUnhandledMove", "(Landroid/view/View;I)Z", "GetDispatchUnhandledMove_Landroid_view_View_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focused" Type="Android.Views.View" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="focused">The currently focused view.</param>
        <param name="direction">The direction focus wants to move. One of FOCUS_UP,
                   FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT.</param>
        <summary>This method is the last chance for the focused view and its ancestors to
            respond to an arrow key.</summary>
        <returns>True if the this view consumed this unhandled move.</returns>
        <remarks>
          <para>This method is the last chance for the focused view and its ancestors to
            respond to an arrow key. This is called when the focused view did not
            consume the key internally, nor could the view system find a new view in
            the requested direction to give focus to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchUnhandledMove(android.view.View,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchUnhandledMove(android.view.View, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DispatchVisibilityChanged (changedView As View, visibility As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DispatchVisibilityChanged(Android::Views::View ^ changedView, Android::Views::ViewStates visibility);" />
      <MemberSignature Language="C#" Value="protected virtual void DispatchVisibilityChanged (Android.Views.View changedView, Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DispatchVisibilityChanged(class Android.Views.View changedView, valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchVisibilityChanged(Android.Views.View,Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member DispatchVisibilityChanged : Android.Views.View * Android.Views.ViewStates -&gt; unit&#xA;override this.DispatchVisibilityChanged : Android.Views.View * Android.Views.ViewStates -&gt; unit" Usage="view.DispatchVisibilityChanged (changedView, visibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchVisibilityChanged", "(Landroid/view/View;I)V", "GetDispatchVisibilityChanged_Landroid_view_View_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchVisibilityChanged", "(Landroid/view/View;I)V", "GetDispatchVisibilityChanged_Landroid_view_View_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedView" Type="Android.Views.View" />
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="changedView">The view whose visibility changed. Could be 'this' or
            an ancestor view.</param>
        <param name="visibility">The new visibility of changedView: <c>#VISIBLE</c>,
            <c>#INVISIBLE</c> or <c>#GONE</c>.</param>
        <summary>Dispatch a view visibility change down the view hierarchy.</summary>
        <remarks>
          <para>Dispatch a view visibility change down the view hierarchy.
            ViewGroups should override to route to their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchVisibilityChanged(android.view.View,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchVisibilityChanged(android.view.View, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowFocusChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchWindowFocusChanged (hasFocus As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchWindowFocusChanged(bool hasFocus);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowFocusChanged (bool hasFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowFocusChanged(bool hasFocus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowFocusChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowFocusChanged : bool -&gt; unit&#xA;override this.DispatchWindowFocusChanged : bool -&gt; unit" Usage="view.DispatchWindowFocusChanged hasFocus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowFocusChanged", "(Z)V", "GetDispatchWindowFocusChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowFocusChanged", "(Z)V", "GetDispatchWindowFocusChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">True if the window containing this view now has focus,
                   false otherwise.</param>
        <summary>Called when the window containing this view gains or loses window focus.</summary>
        <remarks>
          <para>Called when the window containing this view gains or loses window focus.
            ViewGroups should override to route to their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowFocusChanged(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowFocusChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowInsetsAnimationEnd">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchWindowInsetsAnimationEnd (animation As WindowInsetsAnimation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchWindowInsetsAnimationEnd(Android::Views::WindowInsetsAnimation ^ animation);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowInsetsAnimationEnd (Android.Views.WindowInsetsAnimation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowInsetsAnimationEnd(class Android.Views.WindowInsetsAnimation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowInsetsAnimationEnd(Android.Views.WindowInsetsAnimation)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowInsetsAnimationEnd : Android.Views.WindowInsetsAnimation -&gt; unit&#xA;override this.DispatchWindowInsetsAnimationEnd : Android.Views.WindowInsetsAnimation -&gt; unit" Usage="view.DispatchWindowInsetsAnimationEnd animation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowInsetsAnimationEnd", "(Landroid/view/WindowInsetsAnimation;)V", "GetDispatchWindowInsetsAnimationEnd_Landroid_view_WindowInsetsAnimation_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowInsetsAnimationEnd", "(Landroid/view/WindowInsetsAnimation;)V", "GetDispatchWindowInsetsAnimationEnd_Landroid_view_WindowInsetsAnimation_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.WindowInsetsAnimation" />
      </Parameters>
      <Docs>
        <param name="animation">The current ongoing <c>WindowInsetsAnimation</c>.</param>
        <summary>Dispatches <c>WindowInsetsAnimation.Callback#onEnd(WindowInsetsAnimation)</c>
            when Window Insets animation ends.</summary>
        <remarks>
          <para>Dispatches <c>WindowInsetsAnimation.Callback#onEnd(WindowInsetsAnimation)</c>
            when Window Insets animation ends.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowInsetsAnimationEnd(android.view.WindowInsetsAnimation)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowInsetsAnimationEnd(android.view.WindowInsetsAnimation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowInsetsAnimationPrepare">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchWindowInsetsAnimationPrepare (animation As WindowInsetsAnimation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchWindowInsetsAnimationPrepare(Android::Views::WindowInsetsAnimation ^ animation);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowInsetsAnimationPrepare (Android.Views.WindowInsetsAnimation animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowInsetsAnimationPrepare(class Android.Views.WindowInsetsAnimation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowInsetsAnimationPrepare(Android.Views.WindowInsetsAnimation)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowInsetsAnimationPrepare : Android.Views.WindowInsetsAnimation -&gt; unit&#xA;override this.DispatchWindowInsetsAnimationPrepare : Android.Views.WindowInsetsAnimation -&gt; unit" Usage="view.DispatchWindowInsetsAnimationPrepare animation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowInsetsAnimationPrepare", "(Landroid/view/WindowInsetsAnimation;)V", "GetDispatchWindowInsetsAnimationPrepare_Landroid_view_WindowInsetsAnimation_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowInsetsAnimationPrepare", "(Landroid/view/WindowInsetsAnimation;)V", "GetDispatchWindowInsetsAnimationPrepare_Landroid_view_WindowInsetsAnimation_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.WindowInsetsAnimation" />
      </Parameters>
      <Docs>
        <param name="animation">current animation</param>
        <summary>Dispatches <c>WindowInsetsAnimation.Callback#onPrepare(WindowInsetsAnimation)</c>
            when Window Insets animation is being prepared.</summary>
        <remarks>
          <para>Dispatches <c>WindowInsetsAnimation.Callback#onPrepare(WindowInsetsAnimation)</c>
            when Window Insets animation is being prepared.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowInsetsAnimationPrepare(android.view.WindowInsetsAnimation)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowInsetsAnimationPrepare(android.view.WindowInsetsAnimation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowInsetsAnimationProgress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchWindowInsetsAnimationProgress (insets As WindowInsets, runningAnimations As IList(Of WindowInsetsAnimation)) As WindowInsets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::WindowInsets ^ DispatchWindowInsetsAnimationProgress(Android::Views::WindowInsets ^ insets, System::Collections::Generic::IList&lt;Android::Views::WindowInsetsAnimation ^&gt; ^ runningAnimations);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets DispatchWindowInsetsAnimationProgress (Android.Views.WindowInsets insets, System.Collections.Generic.IList&lt;Android.Views.WindowInsetsAnimation&gt; runningAnimations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets DispatchWindowInsetsAnimationProgress(class Android.Views.WindowInsets insets, class System.Collections.Generic.IList`1&lt;class Android.Views.WindowInsetsAnimation&gt; runningAnimations) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowInsetsAnimationProgress(Android.Views.WindowInsets,System.Collections.Generic.IList{Android.Views.WindowInsetsAnimation})" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowInsetsAnimationProgress : Android.Views.WindowInsets * System.Collections.Generic.IList&lt;Android.Views.WindowInsetsAnimation&gt; -&gt; Android.Views.WindowInsets&#xA;override this.DispatchWindowInsetsAnimationProgress : Android.Views.WindowInsets * System.Collections.Generic.IList&lt;Android.Views.WindowInsetsAnimation&gt; -&gt; Android.Views.WindowInsets" Usage="view.DispatchWindowInsetsAnimationProgress (insets, runningAnimations)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowInsetsAnimationProgress", "(Landroid/view/WindowInsets;Ljava/util/List;)Landroid/view/WindowInsets;", "GetDispatchWindowInsetsAnimationProgress_Landroid_view_WindowInsets_Ljava_util_List_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowInsetsAnimationProgress", "(Landroid/view/WindowInsets;Ljava/util/List;)Landroid/view/WindowInsets;", "GetDispatchWindowInsetsAnimationProgress_Landroid_view_WindowInsets_Ljava_util_List_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
        <Parameter Name="runningAnimations" Type="System.Collections.Generic.IList&lt;Android.Views.WindowInsetsAnimation&gt;" />
      </Parameters>
      <Docs>
        <param name="insets">The current <c>WindowInsets</c>.</param>
        <param name="runningAnimations">The currently running <c>WindowInsetsAnimation</c>s.</param>
        <summary>Dispatches <c>WindowInsetsAnimation.Callback#onProgress(WindowInsets, List)</c>
            when Window Insets animation makes progress.</summary>
        <returns>current <c>WindowInsets</c>.</returns>
        <remarks>
          <para>Dispatches <c>WindowInsetsAnimation.Callback#onProgress(WindowInsets, List)</c>
            when Window Insets animation makes progress.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowInsetsAnimationProgress(android.view.WindowInsets,%20java.util.List%3Candroid.view.WindowInsetsAnimation%3E)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowInsetsAnimationProgress(android.view.WindowInsets, java.util.List&lt;android.view.WindowInsetsAnimation&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowInsetsAnimationStart">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DispatchWindowInsetsAnimationStart (animation As WindowInsetsAnimation, bounds As WindowInsetsAnimation.Bounds) As WindowInsetsAnimation.Bounds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::WindowInsetsAnimation::Bounds ^ DispatchWindowInsetsAnimationStart(Android::Views::WindowInsetsAnimation ^ animation, Android::Views::WindowInsetsAnimation::Bounds ^ bounds);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsetsAnimation.Bounds DispatchWindowInsetsAnimationStart (Android.Views.WindowInsetsAnimation animation, Android.Views.WindowInsetsAnimation.Bounds bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsetsAnimation/Bounds DispatchWindowInsetsAnimationStart(class Android.Views.WindowInsetsAnimation animation, class Android.Views.WindowInsetsAnimation/Bounds bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowInsetsAnimationStart(Android.Views.WindowInsetsAnimation,Android.Views.WindowInsetsAnimation.Bounds)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowInsetsAnimationStart : Android.Views.WindowInsetsAnimation * Android.Views.WindowInsetsAnimation.Bounds -&gt; Android.Views.WindowInsetsAnimation.Bounds&#xA;override this.DispatchWindowInsetsAnimationStart : Android.Views.WindowInsetsAnimation * Android.Views.WindowInsetsAnimation.Bounds -&gt; Android.Views.WindowInsetsAnimation.Bounds" Usage="view.DispatchWindowInsetsAnimationStart (animation, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowInsetsAnimationStart", "(Landroid/view/WindowInsetsAnimation;Landroid/view/WindowInsetsAnimation$Bounds;)Landroid/view/WindowInsetsAnimation$Bounds;", "GetDispatchWindowInsetsAnimationStart_Landroid_view_WindowInsetsAnimation_Landroid_view_WindowInsetsAnimation_Bounds_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowInsetsAnimationStart", "(Landroid/view/WindowInsetsAnimation;Landroid/view/WindowInsetsAnimation$Bounds;)Landroid/view/WindowInsetsAnimation$Bounds;", "GetDispatchWindowInsetsAnimationStart_Landroid_view_WindowInsetsAnimation_Landroid_view_WindowInsetsAnimation_Bounds_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsetsAnimation+Bounds</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.WindowInsetsAnimation" />
        <Parameter Name="bounds" Type="Android.Views.WindowInsetsAnimation+Bounds" />
      </Parameters>
      <Docs>
        <param name="animation">current animation</param>
        <param name="bounds">the upper and lower <c>Bounds</c> that provides range of
             <c>WindowInsetsAnimation</c>.</param>
        <summary>Dispatches <c>WindowInsetsAnimation.Callback#onStart(WindowInsetsAnimation, Bounds)</c>
            when Window Insets animation is started.</summary>
        <returns>the upper and lower <c>Bounds</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowInsetsAnimationStart(android.view.WindowInsetsAnimation,%20android.view.Bounds)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowInsetsAnimationStart(android.view.WindowInsetsAnimation, android.view.Bounds)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowSystemUiVisiblityChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchWindowSystemUiVisiblityChanged (visible As SystemUiFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchWindowSystemUiVisiblityChanged(Android::Views::SystemUiFlags visible);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowSystemUiVisiblityChanged (Android.Views.SystemUiFlags visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowSystemUiVisiblityChanged(valuetype Android.Views.SystemUiFlags visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowSystemUiVisiblityChanged(Android.Views.SystemUiFlags)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowSystemUiVisiblityChanged : Android.Views.SystemUiFlags -&gt; unit&#xA;override this.DispatchWindowSystemUiVisiblityChanged : Android.Views.SystemUiFlags -&gt; unit" Usage="view.DispatchWindowSystemUiVisiblityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowSystemUiVisiblityChanged", "(I)V", "GetDispatchWindowSystemUiVisiblityChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowSystemUiVisiblityChanged", "(I)V", "GetDispatchWindowSystemUiVisiblityChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Dispatch callbacks to <c>#onWindowSystemUiVisibilityChanged(int)</c> down
            the view hierarchy.</summary>
        <remarks>
          <para>Dispatch callbacks to <c>#onWindowSystemUiVisibilityChanged(int)</c> down
            the view hierarchy.</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowSystemUiVisiblityChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowSystemUiVisiblityChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DispatchWindowVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchWindowVisibilityChanged (visibility As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchWindowVisibilityChanged(Android::Views::ViewStates visibility);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchWindowVisibilityChanged (Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchWindowVisibilityChanged(valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DispatchWindowVisibilityChanged(Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member DispatchWindowVisibilityChanged : Android.Views.ViewStates -&gt; unit&#xA;override this.DispatchWindowVisibilityChanged : Android.Views.ViewStates -&gt; unit" Usage="view.DispatchWindowVisibilityChanged visibility" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchWindowVisibilityChanged", "(I)V", "GetDispatchWindowVisibilityChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchWindowVisibilityChanged", "(I)V", "GetDispatchWindowVisibilityChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">The new visibility of the window.</param>
        <summary>Dispatch a window visibility change down the view hierarchy.</summary>
        <remarks>
          <para>Dispatch a window visibility change down the view hierarchy.
            ViewGroups should override to route to their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#dispatchWindowVisibilityChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.dispatchWindowVisibilityChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnWindowVisibilityChanged(Android.Views.ViewStates)" />
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Display As Display" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Display ^ Display { Android::Views::Display ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Display? Display { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Display Display" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Display" />
      <MemberSignature Language="F#" Value="member this.Display : Android.Views.Display" Usage="Android.Views.View.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplay", "()Landroid/view/Display;", "GetGetDisplayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplay", "()Landroid/view/Display;", "GetGetDisplayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the logical display to which the view's window has been attached.</summary>
        <value>The logical display, or null if the view is not currently attached to a window.</value>
        <remarks>
          <para>Gets the logical display to which the view's window has been attached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDisplay()" title="Reference documentation">Java documentation for <code>android.view.View.getDisplay()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Drag">
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drag As EventHandler(Of View.DragEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::DragEventArgs ^&gt; ^ Drag;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.DragEventArgs&gt; Drag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/DragEventArgs&gt; Drag" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.Drag" />
      <MemberSignature Language="F#" Value="member this.Drag : EventHandler&lt;Android.Views.View.DragEventArgs&gt; " Usage="member this.Drag : System.EventHandler&lt;Android.Views.View.DragEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+DragEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagAccessibilityAction">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagAccessibilityAction As DragFlags  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagAccessibilityAction = 1024;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagAccessibilityAction = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagAccessibilityAction = (1024)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagAccessibilityAction" />
      <MemberSignature Language="F#" Value="val mutable DragFlagAccessibilityAction : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagAccessibilityAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_ACCESSIBILITY_ACTION", ApiSince=32)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_ACCESSIBILITY_ACTION", ApiSince=32)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android32.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android32.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Flag indicating that the drag was initiated with
            <c>AccessibilityNodeInfo.AccessibilityAction#ACTION_DRAG_START</c>.</summary>
        <remarks>
          <para>Flag indicating that the drag was initiated with
            <c>AccessibilityNodeInfo.AccessibilityAction#ACTION_DRAG_START</c>. When
            <c>#startDragAndDrop(ClipData, DragShadowBuilder, Object, int)</c> is called, this
            is used by the system to perform a drag without animations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_ACCESSIBILITY_ACTION" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_ACCESSIBILITY_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagGlobal">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagGlobal As DragFlags  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagGlobal = 256;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagGlobal = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagGlobal = (256)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagGlobal" />
      <MemberSignature Language="F#" Value="val mutable DragFlagGlobal : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagGlobal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_GLOBAL", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_GLOBAL", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Flag indicating that a drag can cross window boundaries.</summary>
        <remarks>
          <para>Flag indicating that a drag can cross window boundaries.  When
            <c>#startDragAndDrop(ClipData, DragShadowBuilder, Object, int)</c> is called
            with this flag set, all visible applications with targetSdkVersion &gt;=
            <c>android.os.Build.VERSION_CODES#N API 24</c> will be able to participate
            in the drag operation and receive the dragged content.</para>
          <para>If this is the only flag set, then the drag recipient will only have access to text data
            and intents contained in the <c>ClipData</c> object. Access to URIs contained in the
            <c>ClipData</c> is determined by other DRAG_FLAG_GLOBAL_* flags</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_GLOBAL" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_GLOBAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagGlobalPersistableUriPermission">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagGlobalPersistableUriPermission As DragFlags  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagGlobalPersistableUriPermission = 64;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagGlobalPersistableUriPermission = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagGlobalPersistableUriPermission = (64)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagGlobalPersistableUriPermission" />
      <MemberSignature Language="F#" Value="val mutable DragFlagGlobalPersistableUriPermission : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagGlobalPersistableUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>When this flag is used with <c>#DRAG_FLAG_GLOBAL_URI_READ</c> and/or <c>#DRAG_FLAG_GLOBAL_URI_WRITE</c>, the URI permission grant can be persisted across device
            reboots until explicitly revoked with
            <c>android.content.Context#revokeUriPermission(Uri, int)</c> Context.</summary>
        <remarks>
          <para>When this flag is used with <c>#DRAG_FLAG_GLOBAL_URI_READ</c> and/or <c>#DRAG_FLAG_GLOBAL_URI_WRITE</c>, the URI permission grant can be persisted across device
            reboots until explicitly revoked with
            <c>android.content.Context#revokeUriPermission(Uri, int)</c> Context.revokeUriPermission}.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagGlobalPrefixUriPermission">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagGlobalPrefixUriPermission As DragFlags  = 128" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagGlobalPrefixUriPermission = 128;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagGlobalPrefixUriPermission = 128;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagGlobalPrefixUriPermission = (128)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagGlobalPrefixUriPermission" />
      <MemberSignature Language="F#" Value="val mutable DragFlagGlobalPrefixUriPermission : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagGlobalPrefixUriPermission" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>When this flag is used with <c>#DRAG_FLAG_GLOBAL_URI_READ</c> and/or <c>#DRAG_FLAG_GLOBAL_URI_WRITE</c>, the URI permission grant applies to any URI that is a prefix
            match against the original granted URI.</summary>
        <remarks>
          <para>When this flag is used with <c>#DRAG_FLAG_GLOBAL_URI_READ</c> and/or <c>#DRAG_FLAG_GLOBAL_URI_WRITE</c>, the URI permission grant applies to any URI that is a prefix
            match against the original granted URI.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagGlobalUriRead">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagGlobalUriRead As DragFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagGlobalUriRead = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagGlobalUriRead = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagGlobalUriRead = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagGlobalUriRead" />
      <MemberSignature Language="F#" Value="val mutable DragFlagGlobalUriRead : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagGlobalUriRead" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_GLOBAL_URI_READ", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_GLOBAL_URI_READ", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>When this flag is used with <c>#DRAG_FLAG_GLOBAL</c>, the drag recipient will be able to
            request read access to the content URI(s) contained in the <c>ClipData</c> object.</summary>
        <remarks>
          <para>When this flag is used with <c>#DRAG_FLAG_GLOBAL</c>, the drag recipient will be able to
            request read access to the content URI(s) contained in the <c>ClipData</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_GLOBAL_URI_READ" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_GLOBAL_URI_READ</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagGlobalUriWrite">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagGlobalUriWrite As DragFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagGlobalUriWrite = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagGlobalUriWrite = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagGlobalUriWrite = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagGlobalUriWrite" />
      <MemberSignature Language="F#" Value="val mutable DragFlagGlobalUriWrite : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagGlobalUriWrite" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_GLOBAL_URI_WRITE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_GLOBAL_URI_WRITE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>When this flag is used with <c>#DRAG_FLAG_GLOBAL</c>, the drag recipient will be able to
            request write access to the content URI(s) contained in the <c>ClipData</c> object.</summary>
        <remarks>
          <para>When this flag is used with <c>#DRAG_FLAG_GLOBAL</c>, the drag recipient will be able to
            request write access to the content URI(s) contained in the <c>ClipData</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_GLOBAL_URI_WRITE" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_GLOBAL_URI_WRITE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragFlagOpaque">
      <MemberSignature Language="VB.NET" Value="Public Const DragFlagOpaque As DragFlags  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::DragFlags DragFlagOpaque = 512;" />
      <MemberSignature Language="C#" Value="public const Android.Views.DragFlags DragFlagOpaque = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DragFlags DragFlagOpaque = (512)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.DragFlagOpaque" />
      <MemberSignature Language="F#" Value="val mutable DragFlagOpaque : Android.Views.DragFlags" Usage="Android.Views.View.DragFlagOpaque" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DRAG_FLAG_OPAQUE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DRAG_FLAG_OPAQUE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DragFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DragFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Flag indicating that the drag shadow will be opaque.</summary>
        <remarks>
          <para>Flag indicating that the drag shadow will be opaque.  When
            <c>#startDragAndDrop(ClipData, DragShadowBuilder, Object, int)</c> is called
            with this flag set, the drag shadow will be opaque, otherwise, it will be semitransparent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#DRAG_FLAG_OPAQUE" title="Reference documentation">Java documentation for <code>android.view.View.DRAG_FLAG_OPAQUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Draw (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Draw(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas -&gt; unit" Usage="view.Draw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas to which the View is rendered.</param>
        <summary>Manually render this view (and all of its children) to the given Canvas.</summary>
        <remarks>
          <para>Manually render this view (and all of its children) to the given Canvas.
            The view must have already done a full layout before this function is
            called.  When implementing a view, implement
            <c>#onDraw(android.graphics.Canvas)</c> instead of overriding this method.
            If you do need to override this method, call the superclass version.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#draw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.view.View.draw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DrawableHotspotChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawableHotspotChanged (x As Single, y As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawableHotspotChanged(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual void DrawableHotspotChanged (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawableHotspotChanged(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DrawableHotspotChanged(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member DrawableHotspotChanged : single * single -&gt; unit&#xA;override this.DrawableHotspotChanged : single * single -&gt; unit" Usage="view.DrawableHotspotChanged (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drawableHotspotChanged", "(FF)V", "GetDrawableHotspotChanged_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drawableHotspotChanged", "(FF)V", "GetDrawableHotspotChanged_FFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">hotspot x coordinate</param>
        <param name="y">hotspot y coordinate</param>
        <summary>This function is called whenever the view hotspot changes and needs to
            be propagated to drawables or child views managed by the view.</summary>
        <remarks>
          <para>This function is called whenever the view hotspot changes and needs to
            be propagated to drawables or child views managed by the view.</para>
          <para>Dispatching to child views is handled by
            <c>#dispatchDrawableHotspotChanged(float, float)</c>.</para>
          <para>Be sure to call through to the superclass when overriding this function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#drawableHotspotChanged(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.drawableHotspotChanged(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawableStateChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub DrawableStateChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void DrawableStateChanged();" />
      <MemberSignature Language="C#" Value="protected virtual void DrawableStateChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DrawableStateChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.DrawableStateChanged" />
      <MemberSignature Language="F#" Value="abstract member DrawableStateChanged : unit -&gt; unit&#xA;override this.DrawableStateChanged : unit -&gt; unit" Usage="view.DrawableStateChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drawableStateChanged", "()V", "GetDrawableStateChangedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drawableStateChanged", "()V", "GetDrawableStateChangedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This function is called whenever the state of the view changes in such
            a way that it impacts the state of drawables being shown.</summary>
        <remarks>
          <para>This function is called whenever the state of the view changes in such
            a way that it impacts the state of drawables being shown.</para>
          <para>If the View has a StateListAnimator, it will also be called to run necessary state
            change animations.</para>
          <para>Be sure to call through to the superclass when overriding this function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#drawableStateChanged()" title="Reference documentation">Java documentation for <code>android.view.View.drawableStateChanged()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCache">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DrawingCache As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Bitmap ^ DrawingCache { Android::Graphics::Bitmap ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap? DrawingCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap DrawingCache" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DrawingCache" />
      <MemberSignature Language="F#" Value="member this.DrawingCache : Android.Graphics.Bitmap" Usage="Android.Views.View.DrawingCache" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDrawingCache", "()Landroid/graphics/Bitmap;", "GetGetDrawingCacheHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDrawingCache", "()Landroid/graphics/Bitmap;", "GetGetDrawingCacheHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Calling this method is equivalent to calling <c>getDrawingCache(false)</c>.</summary>
        <value>A non-scaled bitmap representing this view or null if cache is disabled.</value>
        <remarks>
          <para>Calling this method is equivalent to calling <c>getDrawingCache(false)</c>.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingCache()" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingCache()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.GetDrawingCache(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheBackgroundColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DrawingCacheBackgroundColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Color DrawingCacheBackgroundColor { Android::Graphics::Color get(); void set(Android::Graphics::Color value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Color DrawingCacheBackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color DrawingCacheBackgroundColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DrawingCacheBackgroundColor" />
      <MemberSignature Language="F#" Value="member this.DrawingCacheBackgroundColor : Android.Graphics.Color with get, set" Usage="Android.Views.View.DrawingCacheBackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDrawingCacheBackgroundColor", "()I", "GetGetDrawingCacheBackgroundColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDrawingCacheBackgroundColor", "()I", "GetGetDrawingCacheBackgroundColorHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDrawingCacheBackgroundColor", "(I)V", "GetSetDrawingCacheBackgroundColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDrawingCacheBackgroundColor", "(I)V", "GetSetDrawingCacheBackgroundColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="color">The background color to use for the drawing cache's bitmap</param>
        <summary>This member is deprecated. -or- Setting a solid background color for the drawing cache's bitmaps will improve
            performance and memory usage.</summary>
        <value>The background color to used for the drawing cache's bitmap</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingCacheBackgroundColor()" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingCacheBackgroundColor()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Setting a solid background color for the drawing cache's bitmaps will improve
            performance and memory usage. Note, though that this should only be used if this
            view will always be drawn on top of a solid color.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setDrawingCacheBackgroundColor(int)" title="Reference documentation">Java documentation for <code>android.view.View.setDrawingCacheBackgroundColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheBackgroundColor" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DrawingCacheEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DrawingCacheEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool DrawingCacheEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DrawingCacheEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DrawingCacheEnabled" />
      <MemberSignature Language="F#" Value="member this.DrawingCacheEnabled : bool with get, set" Usage="Android.Views.View.DrawingCacheEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDrawingCacheEnabled", "()Z", "GetIsDrawingCacheEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDrawingCacheEnabled", "()Z", "GetIsDrawingCacheEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDrawingCacheEnabled", "(Z)V", "GetSetDrawingCacheEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDrawingCacheEnabled", "(Z)V", "GetSetDrawingCacheEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">true to enable the drawing cache, false otherwise</param>
        <summary>Indicates whether the drawing cache is enabled for this view. -or- Enables or disables the drawing cache.</summary>
        <value>true if the drawing cache is enabled</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether the drawing cache is enabled for this view.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isDrawingCacheEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isDrawingCacheEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enables or disables the drawing cache. When the drawing cache is enabled, the next call
            to <c>#getDrawingCache()</c> or <c>#buildDrawingCache()</c> will draw the view in a
            bitmap. Calling <c>#draw(android.graphics.Canvas)</c> will not draw from the cache when
            the cache is enabled. To benefit from the cache, you must request the drawing cache by
            calling <c>#getDrawingCache()</c> and draw it on screen if the returned bitmap is not
            null.</para>
          <para>Enabling the drawing cache is similar to
            <c>#setLayerType(int, android.graphics.Paint) setting a layer</c> when hardware
            acceleration is turned off. When hardware acceleration is turned on, enabling the
            drawing cache has no effect on rendering because the system uses a different mechanism
            for acceleration which ignores the flag. If you want to use a Bitmap for the view, even
            when hardware acceleration is enabled, see <c>#setLayerType(int, android.graphics.Paint)</c>
            for information on how to enable software and hardware layers.</para>
          <para>This API can be used to manually generate
            a bitmap copy of this view, by setting the flag to <c>true</c> and calling
            <c>#getDrawingCache()</c>.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setDrawingCacheEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setDrawingCacheEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="P:Android.Views.View.DrawingCache" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="DrawingCacheQuality">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DrawingCacheQuality As DrawingCacheQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::DrawingCacheQuality DrawingCacheQuality { Android::Views::DrawingCacheQuality get(); void set(Android::Views::DrawingCacheQuality value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.DrawingCacheQuality DrawingCacheQuality { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DrawingCacheQuality DrawingCacheQuality" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DrawingCacheQuality" />
      <MemberSignature Language="F#" Value="member this.DrawingCacheQuality : Android.Views.DrawingCacheQuality with get, set" Usage="Android.Views.View.DrawingCacheQuality" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDrawingCacheQuality", "()I", "GetGetDrawingCacheQualityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDrawingCacheQuality", "()I", "GetGetDrawingCacheQualityHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDrawingCacheQuality", "(I)V", "GetSetDrawingCacheQuality_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDrawingCacheQuality", "(I)V", "GetSetDrawingCacheQuality_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DrawingCacheQuality</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="quality">One of <c>#DRAWING_CACHE_QUALITY_AUTO</c>,
                   <c>#DRAWING_CACHE_QUALITY_LOW</c>, or <c>#DRAWING_CACHE_QUALITY_HIGH</c></param>
        <summary>Returns the quality of the drawing cache. -or- Set the drawing cache quality of this view.</summary>
        <value>One of <c>#DRAWING_CACHE_QUALITY_AUTO</c>,
                    <c>#DRAWING_CACHE_QUALITY_LOW</c>, or <c>#DRAWING_CACHE_QUALITY_HIGH</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the quality of the drawing cache.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingCacheQuality()" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingCacheQuality()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the drawing cache quality of this view. This value is used only when the
            drawing cache is enabled</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setDrawingCacheQuality(int)" title="Reference documentation">Java documentation for <code>android.view.View.setDrawingCacheQuality(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.DrawingCacheQuality" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
      </Docs>
    </Member>
    <Member MemberName="DrawingTime">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DrawingTime As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long DrawingTime { long get(); };" />
      <MemberSignature Language="C#" Value="public virtual long DrawingTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DrawingTime" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DrawingTime" />
      <MemberSignature Language="F#" Value="member this.DrawingTime : int64" Usage="Android.Views.View.DrawingTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDrawingTime", "()J", "GetGetDrawingTimeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDrawingTime", "()J", "GetGetDrawingTimeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the time at which the drawing of the view hierarchy started.</summary>
        <value>the drawing start time in milliseconds</value>
        <remarks>
          <para>Return the time at which the drawing of the view hierarchy started.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingTime()" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingTime()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DuplicateParentStateEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DuplicateParentStateEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DuplicateParentStateEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool DuplicateParentStateEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DuplicateParentStateEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.DuplicateParentStateEnabled" />
      <MemberSignature Language="F#" Value="member this.DuplicateParentStateEnabled : bool with get, set" Usage="Android.Views.View.DuplicateParentStateEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDuplicateParentStateEnabled", "()Z", "GetIsDuplicateParentStateEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDuplicateParentStateEnabled", "()Z", "GetIsDuplicateParentStateEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDuplicateParentStateEnabled", "(Z)V", "GetSetDuplicateParentStateEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDuplicateParentStateEnabled", "(Z)V", "GetSetDuplicateParentStateEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">True to enable duplication of the parent's drawable state, false
                           to disable it.</param>
        <summary>Indicates whether this duplicates its drawable state from its parent. -or- Enables or disables the duplication of the parent's state into this view.</summary>
        <value>True if this view's drawable state is duplicated from the parent,
                    false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether this duplicates its drawable state from its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isDuplicateParentStateEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isDuplicateParentStateEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enables or disables the duplication of the parent's state into this view. When
            duplication is enabled, this view gets its drawable state from its parent rather
            than from its own internal properties.</para>
          <para>Note: in the current implementation, setting this property to true after the
            view was added to a ViewGroup might have no effect at all. This property should
            always be used from XML or set to true before adding this view to a ViewGroup.</para>
          <para>Note: if this view's parent addStateFromChildren property is enabled and this
            property is enabled, an exception will be thrown.</para>
          <para>Note: if the child view uses and updates additional states which are unknown to the
            parent, these states should not be affected by this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setDuplicateParentStateEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setDuplicateParentStateEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
        <altmember cref="P:Android.Views.View.DuplicateParentStateEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Elevation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Elevation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float Elevation { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float Elevation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Elevation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Elevation" />
      <MemberSignature Language="F#" Value="member this.Elevation : single with get, set" Usage="Android.Views.View.Elevation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getElevation", "()F", "GetGetElevationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getElevation", "()F", "GetGetElevationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The base elevation of this view relative to its parent, in pixels. -or- Sets the base elevation of this view, in pixels.</summary>
        <value>The base depth position of the view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The base elevation of this view relative to its parent, in pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getElevation()" title="Reference documentation">Java documentation for <code>android.view.View.getElevation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the base elevation of this view, in pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setElevation(float)" title="Reference documentation">Java documentation for <code>android.view.View.setElevation(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EmptyStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EmptyStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EmptyStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EmptyStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EmptyStateSet" />
      <MemberSignature Language="F#" Value="member this.EmptyStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EmptyStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EMPTY_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EMPTY_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view has no states set.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view has no states set. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#EMPTY_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.EMPTY_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Enabled" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="Android.Views.View.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEnabled", "()Z", "GetIsEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEnabled", "()Z", "GetIsEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">True if this view is enabled, false otherwise.</param>
        <summary>Returns the enabled status for this view. -or- Set the enabled state of this view.</summary>
        <value>True if this view is enabled, false otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the enabled status for this view. The interpretation of the
            enabled state varies by subclass.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the enabled state of this view. The interpretation of the enabled
            state varies by subclass.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledFocusedSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledFocusedSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledFocusedSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledFocusedSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled, focused and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_FOCUSED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_FOCUSED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledFocusedSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledFocusedSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledFocusedSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused, selected and its window
            has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled, focused, selected and its window
            has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled and has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledFocusedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledFocusedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledFocusedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledFocusedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledFocusedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledFocusedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, focused and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled, focused and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled, selected and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="EnabledStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="EnabledWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property EnabledWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ EnabledWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? EnabledWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; EnabledWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.EnabledWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.EnabledWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.EnabledWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENABLED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENABLED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is enabled and that its window has focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is enabled and that its window has focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#ENABLED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.ENABLED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="ExplicitStyle">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExplicitStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ExplicitStyle { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int ExplicitStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExplicitStyle" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ExplicitStyle" />
      <MemberSignature Language="F#" Value="member this.ExplicitStyle : int" Usage="Android.Views.View.ExplicitStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExplicitStyle", "()I", "GetGetExplicitStyleHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExplicitStyle", "()I", "GetGetExplicitStyleHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resource ID for the style specified using <c>style="..."</c> in the
            <c>AttributeSet</c>'s backing XML element or <c>Resources#ID_NULL</c> otherwise if not
            specified or otherwise not applicable.</summary>
        <value>The resource ID for the style specified using <c>style="..."</c> in the
                 <c>AttributeSet</c>'s backing XML element or <c>Resources#ID_NULL</c> otherwise
                 if not specified or otherwise not applicable.</value>
        <remarks>
          <para>Returns the resource ID for the style specified using <c>style="..."</c> in the
            <c>AttributeSet</c>'s backing XML element or <c>Resources#ID_NULL</c> otherwise if not
            specified or otherwise not applicable.</para>
          <para>Each <c>View</c> can have an explicit style specified in the layout file.
            This style is used first during the <c>View</c> attribute resolution, then if an attribute
            is not defined there the resource system looks at default style and theme as fallbacks.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; this method will only return actual values if the view attribute debugging
            is enabled in Android developer options.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getExplicitStyle()" title="Reference documentation">Java documentation for <code>android.view.View.getExplicitStyle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterTouchesWhenObscured">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FilterTouchesWhenObscured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FilterTouchesWhenObscured { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool FilterTouchesWhenObscured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FilterTouchesWhenObscured" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FilterTouchesWhenObscured" />
      <MemberSignature Language="F#" Value="member this.FilterTouchesWhenObscured : bool with get, set" Usage="Android.Views.View.FilterTouchesWhenObscured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFilterTouchesWhenObscured", "()Z", "GetGetFilterTouchesWhenObscuredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFilterTouchesWhenObscured", "()Z", "GetGetFilterTouchesWhenObscuredHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFilterTouchesWhenObscured", "(Z)V", "GetSetFilterTouchesWhenObscured_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFilterTouchesWhenObscured", "(Z)V", "GetSetFilterTouchesWhenObscured_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">True if touch filtering should be enabled.</param>
        <summary>Gets whether the framework should discard touches when the view's
            window is obscured by another visible window at the touched location. -or- Sets whether the framework should discard touches when the view's
            window is obscured by another visible window at the touched location.</summary>
        <value>True if touch filtering is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets whether the framework should discard touches when the view's
            window is obscured by another visible window at the touched location.
            Refer to the <c>View</c> security documentation for more details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getFilterTouchesWhenObscured()" title="Reference documentation">Java documentation for <code>android.view.View.getFilterTouchesWhenObscured()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the framework should discard touches when the view's
            window is obscured by another visible window at the touched location.
            Refer to the <c>View</c> security documentation for more details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFilterTouchesWhenObscured(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setFilterTouchesWhenObscured(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.FilterTouchesWhenObscured" />
      </Docs>
    </Member>
    <Member MemberName="FindFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFocus () As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ FindFocus();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? FindFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindFocus" />
      <MemberSignature Language="F#" Value="abstract member FindFocus : unit -&gt; Android.Views.View&#xA;override this.FindFocus : unit -&gt; Android.Views.View" Usage="view.FindFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findFocus", "()Landroid/view/View;", "GetFindFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findFocus", "()Landroid/view/View;", "GetFindFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Find the view in the hierarchy rooted at this view that currently has
            focus.</summary>
        <returns>The view that currently has focus, or null if no focused view can
                    be found.</returns>
        <remarks>
          <para>Find the view in the hierarchy rooted at this view that currently has
            focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findFocus()" title="Reference documentation">Java documentation for <code>android.view.View.findFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindOnBackInvokedDispatcher">
      <MemberSignature Language="VB.NET" Value="Public Function FindOnBackInvokedDispatcher () As IOnBackInvokedDispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Window::IOnBackInvokedDispatcher ^ FindOnBackInvokedDispatcher();" />
      <MemberSignature Language="C#" Value="public Android.Window.IOnBackInvokedDispatcher? FindOnBackInvokedDispatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Window.IOnBackInvokedDispatcher FindOnBackInvokedDispatcher() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindOnBackInvokedDispatcher" />
      <MemberSignature Language="F#" Value="member this.FindOnBackInvokedDispatcher : unit -&gt; Android.Window.IOnBackInvokedDispatcher" Usage="view.FindOnBackInvokedDispatcher " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Window.IOnBackInvokedDispatcher</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Walk up the View hierarchy to find the nearest <c>OnBackInvokedDispatcher</c>.</summary>
        <returns>The <c>OnBackInvokedDispatcher</c> from this or the nearest
            ancestor, or null if this view is both not attached and have no ancestor providing an
            <c>OnBackInvokedDispatcher</c>.</returns>
        <remarks>
          <para>Walk up the View hierarchy to find the nearest <c>OnBackInvokedDispatcher</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findOnBackInvokedDispatcher()" title="Reference documentation">Java documentation for <code>android.view.View.findOnBackInvokedDispatcher()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="VB.NET" Value="Public Function FindViewById (id As Integer) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Views::View ^ FindViewById(int id);" />
      <MemberSignature Language="C#" Value="public Android.Views.View? FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.FindViewById : int -&gt; Android.Views.View" Usage="view.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds the first descendant view with the given ID, the view itself if
            the ID matches <c>#getId()</c>, or <c>null</c> if the ID is invalid
            (&lt; 0) or there is no matching view in the hierarchy.</summary>
        <returns>a view with given ID if found, or <c>null</c> otherwise</returns>
        <remarks>
          <para>Finds the first descendant view with the given ID, the view itself if
            the ID matches <c>#getId()</c>, or <c>null</c> if the ID is invalid
            (&lt; 0) or there is no matching view in the hierarchy.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findViewById(int)" title="Reference documentation">Java documentation for <code>android.view.View.findViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById&lt;T&gt;">
      <MemberSignature Language="VB.NET" Value="Public Function FindViewById(Of T As View) (id As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Android::Views::View T FindViewById(int id);" />
      <MemberSignature Language="C#" Value="public T? FindViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindViewById``1(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.FindViewById : int -&gt; 'T (requires 'T :&gt; Android.Views.View)" Usage="view.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithContentDescription">
      <MemberSignature Language="VB.NET" Value="Public Const FindViewsWithContentDescription As FindViewsWith  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::FindViewsWith FindViewsWithContentDescription = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.FindViewsWith FindViewsWithContentDescription = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.FindViewsWith FindViewsWithContentDescription = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.FindViewsWithContentDescription" />
      <MemberSignature Language="F#" Value="val mutable FindViewsWithContentDescription : Android.Views.FindViewsWith" Usage="Android.Views.View.FindViewsWithContentDescription" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FIND_VIEWS_WITH_CONTENT_DESCRIPTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FIND_VIEWS_WITH_CONTENT_DESCRIPTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.FindViewsWith enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.FindViewsWith enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.FindViewsWith</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Find find views that contain the specified content description.</summary>
        <remarks>
          <para>Find find views that contain the specified content description.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FIND_VIEWS_WITH_CONTENT_DESCRIPTION" title="Reference documentation">Java documentation for <code>android.view.View.FIND_VIEWS_WITH_CONTENT_DESCRIPTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithText">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FindViewsWithText (outViews As IList(Of View), searched As ICharSequence, flags As FindViewsWith)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FindViewsWithText(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ outViews, Java::Lang::ICharSequence ^ searched, Android::Views::FindViewsWith flags);" />
      <MemberSignature Language="C#" Value="public virtual void FindViewsWithText (System.Collections.Generic.IList&lt;Android.Views.View&gt;? outViews, Java.Lang.ICharSequence? searched, Android.Views.FindViewsWith flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FindViewsWithText(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; outViews, class Java.Lang.ICharSequence searched, valuetype Android.Views.FindViewsWith flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindViewsWithText(System.Collections.Generic.IList{Android.Views.View},Java.Lang.ICharSequence,Android.Views.FindViewsWith)" />
      <MemberSignature Language="F#" Value="abstract member FindViewsWithText : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Java.Lang.ICharSequence * Android.Views.FindViewsWith -&gt; unit&#xA;override this.FindViewsWithText : System.Collections.Generic.IList&lt;Android.Views.View&gt; * Java.Lang.ICharSequence * Android.Views.FindViewsWith -&gt; unit" Usage="view.FindViewsWithText (outViews, searched, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewsWithText", "(Ljava/util/ArrayList;Ljava/lang/CharSequence;I)V", "GetFindViewsWithText_Ljava_util_ArrayList_Ljava_lang_CharSequence_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewsWithText", "(Ljava/util/ArrayList;Ljava/lang/CharSequence;I)V", "GetFindViewsWithText_Ljava_util_ArrayList_Ljava_lang_CharSequence_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outViews" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="searched" Type="Java.Lang.ICharSequence" />
        <Parameter Name="flags" Type="Android.Views.FindViewsWith">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <param name="outViews">The output list of matching Views.</param>
        <param name="searched">The text to match against.</param>
        <summary>Finds the Views that contain given text.</summary>
        <remarks>
          <para>Finds the Views that contain given text. The containment is case insensitive.
            The search is performed by either the text that the View renders or the content
            description that describes the view for accessibility purposes and the view does
            not render or both. Clients can specify how the search is to be performed via
            passing the <c>#FIND_VIEWS_WITH_TEXT</c> and
            <c>#FIND_VIEWS_WITH_CONTENT_DESCRIPTION</c> flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findViewsWithText(java.util.ArrayList%3Candroid.view.View%3E,%20java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.findViewsWithText(java.util.ArrayList&lt;android.view.View&gt;, java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindViewsWithText">
      <MemberSignature Language="VB.NET" Value="Public Sub FindViewsWithText (outViews As IList(Of View), searched As String, flags As FindViewsWith)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FindViewsWithText(System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ outViews, System::String ^ searched, Android::Views::FindViewsWith flags);" />
      <MemberSignature Language="C#" Value="public void FindViewsWithText (System.Collections.Generic.IList&lt;Android.Views.View&gt;? outViews, string? searched, Android.Views.FindViewsWith flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void FindViewsWithText(class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; outViews, string searched, valuetype Android.Views.FindViewsWith flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindViewsWithText(System.Collections.Generic.IList{Android.Views.View},System.String,Android.Views.FindViewsWith)" />
      <MemberSignature Language="F#" Value="member this.FindViewsWithText : System.Collections.Generic.IList&lt;Android.Views.View&gt; * string * Android.Views.FindViewsWith -&gt; unit" Usage="view.FindViewsWithText (outViews, searched, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outViews" Type="System.Collections.Generic.IList&lt;Android.Views.View&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="searched" Type="System.String" />
        <Parameter Name="flags" Type="Android.Views.FindViewsWith">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <param name="outViews">The output list of matching Views.</param>
        <param name="searched">The text to match against.</param>
        <summary>Finds the Views that contain given text.</summary>
        <remarks>
          <para>Finds the Views that contain given text. The containment is case insensitive.
            The search is performed by either the text that the View renders or the content
            description that describes the view for accessibility purposes and the view does
            not render or both. Clients can specify how the search is to be performed via
            passing the <c>#FIND_VIEWS_WITH_TEXT</c> and
            <c>#FIND_VIEWS_WITH_CONTENT_DESCRIPTION</c> flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findViewsWithText(java.util.ArrayList%3Candroid.view.View%3E,%20java.lang.CharSequence,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.findViewsWithText(java.util.ArrayList&lt;android.view.View&gt;, java.lang.CharSequence, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindViewWithTag">
      <MemberSignature Language="VB.NET" Value="Public Function FindViewWithTag (tag As Object) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Views::View ^ FindViewWithTag(Java::Lang::Object ^ tag);" />
      <MemberSignature Language="C#" Value="public Android.Views.View? FindViewWithTag (Java.Lang.Object? tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View FindViewWithTag(class Java.Lang.Object tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FindViewWithTag(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.FindViewWithTag : Java.Lang.Object -&gt; Android.Views.View" Usage="view.FindViewWithTag tag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewWithTag", "(Ljava/lang/Object;)Landroid/view/View;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewWithTag", "(Ljava/lang/Object;)Landroid/view/View;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tag" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="tag">The tag to search for, using "tag.equals(getTag())".</param>
        <summary>Look for a child view with the given tag.</summary>
        <returns>The View that has the given tag in the hierarchy or null</returns>
        <remarks>
          <para>Look for a child view with the given tag.  If this view has the given
            tag, return this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#findViewWithTag(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.view.View.findViewWithTag(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FitsSystemWindows">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FitsSystemWindows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool FitsSystemWindows { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool FitsSystemWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FitsSystemWindows" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FitsSystemWindows" />
      <MemberSignature Language="F#" Value="member this.FitsSystemWindows : bool" Usage="Android.Views.View.FitsSystemWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFitsSystemWindows", "()Z", "GetGetFitsSystemWindowsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFitsSystemWindows", "()Z", "GetGetFitsSystemWindowsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check for state of <c>#setFitsSystemWindows(boolean)</c>.</summary>
        <value>
          <c>true</c> if the default implementation of
            <c>#fitSystemWindows(Rect)</c> will be executed.</value>
        <remarks>
          <para>Check for state of <c>#setFitsSystemWindows(boolean)</c>. If this method
            returns <c>true</c>, the default implementation of <c>#fitSystemWindows(Rect)</c>
            will be executed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getFitsSystemWindows()" title="Reference documentation">Java documentation for <code>android.view.View.getFitsSystemWindows()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" />
        <altmember cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="FitSystemWindows">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FitSystemWindows (insets As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FitSystemWindows(Android::Graphics::Rect ^ insets);" />
      <MemberSignature Language="C#" Value="protected virtual bool FitSystemWindows (Android.Graphics.Rect? insets);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FitSystemWindows(class Android.Graphics.Rect insets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member FitSystemWindows : Android.Graphics.Rect -&gt; bool&#xA;override this.FitSystemWindows : Android.Graphics.Rect -&gt; bool" Usage="view.FitSystemWindows insets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fitSystemWindows", "(Landroid/graphics/Rect;)Z", "GetFitSystemWindows_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fitSystemWindows", "(Landroid/graphics/Rect;)Z", "GetFitSystemWindows_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="insets">Current content insets of the window.  Prior to
            <c>android.os.Build.VERSION_CODES#JELLY_BEAN</c> you must not modify
            the insets or else you and Android will be unhappy.</param>
        <summary>Called by the view hierarchy when the content insets for a window have
            changed, to allow it to adjust its content to fit within those windows.</summary>
        <returns>
          <c>true</c> if this view applied the insets and it should not
            continue propagating further down the hierarchy, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by the view hierarchy when the content insets for a window have
            changed, to allow it to adjust its content to fit within those windows.
            The content insets tell you the space that the status bar, input method,
            and other system windows infringe on the application's window.</para>
          <para>You do not normally need to deal with this function, since the default
            window decoration given to applications takes care of applying it to the
            content of the window.  If you use <c>#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c>
            or <c>#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c> this will not be the case,
            and your content can be placed under those system elements.  You can then
            use this method within your view hierarchy if you have parts of your UI
            which you would like to ensure are not being covered.</para>
          <para>The default implementation of this method simply applies the content
            insets to the view's padding, consuming that content (modifying the
            insets to be 0), and returning true.  This behavior is off by default, but can
            be enabled through <c>#setFitsSystemWindows(boolean)</c>.</para>
          <para>This function's traversal down the hierarchy is depth-first.  The same content
            insets object is propagated down the hierarchy, so any changes made to it will
            be seen by all following views (including potentially ones above in
            the hierarchy since this is a depth-first traversal).  The first view
            that returns true will abort the entire traversal.</para>
          <para>The default implementation works well for a situation where it is
            used with a container that covers the entire window, allowing it to
            apply the appropriate insets to its content on all edges.  If you need
            a more complicated layout (such as two different views fitting system
            windows, one on the top of the window, and one on the bottom),
            you can override the method and handle the insets however you would like.
            Note that the insets provided by the framework are always relative to the
            far edges of the window, not accounting for the location of the called view
            within that window.  (In fact when this method is called you do not yet know
            where the layout will place the view, as it is done before layout happens.)</para>
          <para>Note: unlike many View methods, there is no dispatch phase to this
            call.  If you are overriding it in a ViewGroup and want to allow the
            call to continue to your children, you must be sure to call the super
            implementation.</para>
          <para>Here is a sample layout that makes use of fitting system windows
            to have controls for a video view placed inside of the window decorations
            that it hides and shows.  This can be used with code like the second
            sample (video player) shown in <c>#setSystemUiVisibility(int)</c>.
            
            {</para>
          <para>This member is deprecated. As of API 20 use <c>#dispatchApplyWindowInsets(WindowInsets)</c> to apply
            insets to views. Views should override <c>#onApplyWindowInsets(WindowInsets)</c> or use
            <c>#setOnApplyWindowInsetsListener(android.view.View.OnApplyWindowInsetsListener)</c>
            to implement handling their own insets.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#fitSystemWindows(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.fitSystemWindows(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FitsSystemWindows" />
        <altmember cref="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Focusable" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="Android.Views.View.Focusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFocusable", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFocusable", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="focusable">If true, this view can receive the focus.</param>
        <summary>Returns whether this View is currently able to take focus. -or- Set whether this view can receive the focus.</summary>
        <value>True if this view can take focus, or false otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this View is currently able to take focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isFocusable()" title="Reference documentation">Java documentation for <code>android.view.View.isFocusable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view can receive the focus.</para>
          <para>Setting this to false will also ensure that this view is not focusable
            in touch mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFocusable(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setFocusable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusableInTouchMode" />
      </Docs>
    </Member>
    <Member MemberName="FocusableAuto">
      <MemberSignature Language="VB.NET" Value="Public Const FocusableAuto As ViewFocusability  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewFocusability FocusableAuto = 16;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewFocusability FocusableAuto = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewFocusability FocusableAuto = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.FocusableAuto" />
      <MemberSignature Language="F#" Value="val mutable FocusableAuto : Android.Views.ViewFocusability" Usage="Android.Views.View.FocusableAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSABLE_AUTO", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSABLE_AUTO", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewFocusability enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewFocusability enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewFocusability</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>This view determines focusability automatically.</summary>
        <remarks>
          <para>This view determines focusability automatically. This is the default.</para>
          <para>Use with <c>#setFocusable(int)</c> and &lt;c&gt;android:focusable&lt;/c&gt;.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FOCUSABLE_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.FOCUSABLE_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusableInTouchMode">
      <MemberSignature Language="VB.NET" Value="Public Property FocusableInTouchMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FocusableInTouchMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool FocusableInTouchMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusableInTouchMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusableInTouchMode" />
      <MemberSignature Language="F#" Value="member this.FocusableInTouchMode : bool with get, set" Usage="Android.Views.View.FocusableInTouchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFocusableInTouchMode", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFocusableInTouchMode", "()Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFocusableInTouchMode", "(Z)V", "GetSetFocusableInTouchMode_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFocusableInTouchMode", "(Z)V", "GetSetFocusableInTouchMode_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="focusableInTouchMode">If true, this view can receive the focus while
              in touch mode.</param>
        <summary>When a view is focusable, it may not want to take focus when in touch mode. -or- Set whether this view can receive focus while in touch mode.</summary>
        <value>Whether the view is focusable in touch mode.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>When a view is focusable, it may not want to take focus when in touch mode.
            For example, a button would like focus when the user is navigating via a D-pad
            so that the user can click on it, but once the user starts touching the screen,
            the button shouldn't take focus</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isFocusableInTouchMode()" title="Reference documentation">Java documentation for <code>android.view.View.isFocusableInTouchMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view can receive focus while in touch mode.</para>
          <para>Setting this to true will also ensure that this view is focusable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFocusableInTouchMode(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setFocusableInTouchMode(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusChange">
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusChange As EventHandler(Of View.FocusChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::FocusChangeEventArgs ^&gt; ^ FocusChange;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.FocusChangeEventArgs&gt; FocusChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/FocusChangeEventArgs&gt; FocusChange" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.FocusChange" />
      <MemberSignature Language="F#" Value="member this.FocusChange : EventHandler&lt;Android.Views.View.FocusChangeEventArgs&gt; " Usage="member this.FocusChange : System.EventHandler&lt;Android.Views.View.FocusChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+FocusChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedByDefault">
      <MemberSignature Language="VB.NET" Value="Public Property FocusedByDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool FocusedByDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool FocusedByDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool FocusedByDefault" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusedByDefault" />
      <MemberSignature Language="F#" Value="member this.FocusedByDefault : bool with get, set" Usage="Android.Views.View.FocusedByDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFocusedByDefault", "()Z", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFocusedByDefault", "()Z", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFocusedByDefault", "(Z)V", "GetSetFocusedByDefault_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFocusedByDefault", "(Z)V", "GetSetFocusedByDefault_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="isFocusedByDefault">
          <c>true</c> to set this view as the default-focus view,
                                      <c>false</c> otherwise.</param>
        <summary>Returns whether this View should receive focus when the focus is restored for the view
            hierarchy containing this view. -or- Sets whether this View should receive focus when the focus is restored for the view
            hierarchy containing this view.</summary>
        <value>
          <c>true</c> if this view is the default-focus view, <c>false</c> otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this View should receive focus when the focus is restored for the view
            hierarchy containing this view.</para>
          <para>Focus gets restored for a view hierarchy when the root of the hierarchy gets added to a
            window or serves as a target of cluster navigation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isFocusedByDefault()" title="Reference documentation">Java documentation for <code>android.view.View.isFocusedByDefault()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether this View should receive focus when the focus is restored for the view
            hierarchy containing this view.</para>
          <para>Focus gets restored for a view hierarchy when the root of the hierarchy gets added to a
            window or serves as a target of cluster navigation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFocusedByDefault(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setFocusedByDefault(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property FocusedSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ FocusedSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? FocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusedSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.FocusedSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.FocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is focused and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FOCUSED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.FOCUSED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property FocusedSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ FocusedSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? FocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.FocusedSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.FocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is focused, selected and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property FocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ FocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? FocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.FocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.FocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is focused.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is focused. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="FocusedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property FocusedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ FocusedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? FocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; FocusedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.FocusedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.FocusedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.FocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FOCUSED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FOCUSED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view has the focus and that its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view has the focus and that its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#FOCUSED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.FOCUSED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="FocusSearch">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FocusSearch (direction As FocusSearchDirection) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ FocusSearch(Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? FocusSearch (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FocusSearch(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.FocusSearch(Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member FocusSearch : Android.Views.FocusSearchDirection -&gt; Android.Views.View&#xA;override this.FocusSearch : Android.Views.FocusSearchDirection -&gt; Android.Views.View" Usage="view.FocusSearch direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("focusSearch", "(I)Landroid/view/View;", "GetFocusSearch_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("focusSearch", "(I)Landroid/view/View;", "GetFocusSearch_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <summary>Find the nearest view in the specified direction that can take focus.</summary>
        <returns>The nearest focusable in the specified direction, or null if none
                    can be found.</returns>
        <remarks>
          <para>Find the nearest view in the specified direction that can take focus.
            This does not actually give focus to that view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#focusSearch(int)" title="Reference documentation">Java documentation for <code>android.view.View.focusSearch(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForceDarkAllowed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForceDarkAllowed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ForceDarkAllowed { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ForceDarkAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceDarkAllowed" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ForceDarkAllowed" />
      <MemberSignature Language="F#" Value="member this.ForceDarkAllowed : bool with get, set" Usage="Android.Views.View.ForceDarkAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isForceDarkAllowed", "()Z", "GetIsForceDarkAllowedHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isForceDarkAllowed", "()Z", "GetIsForceDarkAllowedHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setForceDarkAllowed", "(Z)V", "GetSetForceDarkAllowed_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setForceDarkAllowed", "(Z)V", "GetSetForceDarkAllowed_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="allow">Whether or not to allow force dark.</param>
        <summary>See <c>#setForceDarkAllowed(boolean)</c> -or- Sets whether or not to allow force dark to apply to this view.</summary>
        <value>true if force dark is allowed (default), false if it is disabled</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>See <c>#setForceDarkAllowed(boolean)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isForceDarkAllowed()" title="Reference documentation">Java documentation for <code>android.view.View.isForceDarkAllowed()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether or not to allow force dark to apply to this view.
            
            Setting this to false will disable the auto-dark feature on everything this view
            draws, including any descendants.
            
            Setting this to true will allow this view to be automatically made dark, however
            a value of 'true' will not override any 'false' value in its parent chain nor will
            it prevent any 'false' in any of its children.
            
            The default behavior of force dark is also influenced by the Theme's
            <c>android.R.styleable#Theme_isLightTheme isLightTheme</c> attribute.
            If a theme is isLightTheme="false", then force dark is globally disabled for that theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setForceDarkAllowed(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setForceDarkAllowed(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceHasOverlappingRendering">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceHasOverlappingRendering (hasOverlappingRendering As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceHasOverlappingRendering(bool hasOverlappingRendering);" />
      <MemberSignature Language="C#" Value="public virtual void ForceHasOverlappingRendering (bool hasOverlappingRendering);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceHasOverlappingRendering(bool hasOverlappingRendering) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ForceHasOverlappingRendering(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ForceHasOverlappingRendering : bool -&gt; unit&#xA;override this.ForceHasOverlappingRendering : bool -&gt; unit" Usage="view.ForceHasOverlappingRendering hasOverlappingRendering" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forceHasOverlappingRendering", "(Z)V", "GetForceHasOverlappingRendering_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forceHasOverlappingRendering", "(Z)V", "GetForceHasOverlappingRendering_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasOverlappingRendering" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasOverlappingRendering">The value for overlapping rendering to be used internally
            instead of that returned by <c>#hasOverlappingRendering()</c>.</param>
        <summary>Sets the behavior for overlapping rendering for this view (see <c>#hasOverlappingRendering()</c> for more details on this behavior).</summary>
        <remarks>
          <para>Sets the behavior for overlapping rendering for this view (see <c>#hasOverlappingRendering()</c> for more details on this behavior). Calling this method
            is an alternative to overriding <c>#hasOverlappingRendering()</c> in a subclass,
            providing the value which is then used internally. That is, when <c>#forceHasOverlappingRendering(boolean)</c> is called, the value of <c>#hasOverlappingRendering()</c> is ignored and the value passed into this method is used
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#forceHasOverlappingRendering(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.forceHasOverlappingRendering(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceLayout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ForceLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ForceLayout();" />
      <MemberSignature Language="C#" Value="public virtual void ForceLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForceLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ForceLayout" />
      <MemberSignature Language="F#" Value="abstract member ForceLayout : unit -&gt; unit&#xA;override this.ForceLayout : unit -&gt; unit" Usage="view.ForceLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forceLayout", "()V", "GetForceLayoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forceLayout", "()V", "GetForceLayoutHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces this view to be laid out during the next layout pass.</summary>
        <remarks>
          <para>Forces this view to be laid out during the next layout pass.
            This method does not call requestLayout() or forceLayout()
            on the parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#forceLayout()" title="Reference documentation">Java documentation for <code>android.view.View.forceLayout()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Foreground">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Foreground As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ Foreground { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? Foreground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable Foreground" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Foreground" />
      <MemberSignature Language="F#" Value="member this.Foreground : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.Foreground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForeground", "()Landroid/graphics/drawable/Drawable;", "GetGetForegroundHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForeground", "()Landroid/graphics/drawable/Drawable;", "GetGetForegroundHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setForeground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetForeground_Landroid_graphics_drawable_Drawable_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setForeground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetForeground_Landroid_graphics_drawable_Drawable_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="foreground">the Drawable to be drawn on top of the children</param>
        <summary>Returns the drawable used as the foreground of this View. -or- Supply a Drawable that is to be rendered on top of all of the content in the view.</summary>
        <value>a Drawable or null if no foreground was set</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the drawable used as the foreground of this View. The
            foreground drawable, if non-null, is always drawn on top of the view's content.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getForeground()" title="Reference documentation">Java documentation for <code>android.view.View.getForeground()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Supply a Drawable that is to be rendered on top of all of the content in the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setForeground(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setForeground(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundGravity">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ForegroundGravity As GravityFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::GravityFlags ForegroundGravity { Android::Views::GravityFlags get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.GravityFlags ForegroundGravity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.GravityFlags ForegroundGravity" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ForegroundGravity" />
      <MemberSignature Language="F#" Value="member this.ForegroundGravity : Android.Views.GravityFlags" Usage="Android.Views.View.ForegroundGravity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForegroundGravity", "()I", "GetGetForegroundGravityHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForegroundGravity", "()I", "GetGetForegroundGravityHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.GravityFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Describes how the foreground is positioned.</summary>
        <value>foreground gravity.</value>
        <remarks>
          <para>Describes how the foreground is positioned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getForegroundGravity()" title="Reference documentation">Java documentation for <code>android.view.View.getForegroundGravity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundTintBlendMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForegroundTintBlendMode As BlendMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::BlendMode ^ ForegroundTintBlendMode { Android::Graphics::BlendMode ^ get(); void set(Android::Graphics::BlendMode ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.BlendMode? ForegroundTintBlendMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.BlendMode ForegroundTintBlendMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ForegroundTintBlendMode" />
      <MemberSignature Language="F#" Value="member this.ForegroundTintBlendMode : Android.Graphics.BlendMode with get, set" Usage="Android.Views.View.ForegroundTintBlendMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForegroundTintBlendMode", "()Landroid/graphics/BlendMode;", "GetGetForegroundTintBlendModeHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForegroundTintBlendMode", "()Landroid/graphics/BlendMode;", "GetGetForegroundTintBlendModeHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setForegroundTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetForegroundTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setForegroundTintBlendMode", "(Landroid/graphics/BlendMode;)V", "GetSetForegroundTintBlendMode_Landroid_graphics_BlendMode_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.BlendMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="blendMode">the blending mode used to apply the tint, may be
                            <c>null</c> to clear tint</param>
        <summary>Return the blending mode used to apply the tint to the foreground
            drawable, if specified. -or- Specifies the blending mode used to apply the tint specified by
            <c>#setForegroundTintList(ColorStateList)</c>} to the background
            drawable.</summary>
        <value>the blending mode used to apply the tint to the foreground
                    drawable</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the blending mode used to apply the tint to the foreground
            drawable, if specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getForegroundTintBlendMode()" title="Reference documentation">Java documentation for <code>android.view.View.getForegroundTintBlendMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies the blending mode used to apply the tint specified by
            <c>#setForegroundTintList(ColorStateList)</c>} to the background
            drawable. The default mode is <c>BlendMode#SRC_IN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setForegroundTintBlendMode(android.graphics.BlendMode)" title="Reference documentation">Java documentation for <code>android.view.View.setForegroundTintBlendMode(android.graphics.BlendMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundTintList">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForegroundTintList As ColorStateList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::Res::ColorStateList ^ ForegroundTintList { Android::Content::Res::ColorStateList ^ get(); void set(Android::Content::Res::ColorStateList ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.ColorStateList? ForegroundTintList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.ColorStateList ForegroundTintList" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ForegroundTintList" />
      <MemberSignature Language="F#" Value="member this.ForegroundTintList : Android.Content.Res.ColorStateList with get, set" Usage="Android.Views.View.ForegroundTintList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForegroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetForegroundTintListHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForegroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetForegroundTintListHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setForegroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetForegroundTintList_Landroid_content_res_ColorStateList_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setForegroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetForegroundTintList_Landroid_content_res_ColorStateList_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.ColorStateList</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tint">the tint to apply, may be <c>null</c> to clear tint</param>
        <summary>Return the tint applied to the foreground drawable, if specified. -or- Applies a tint to the foreground drawable.</summary>
        <value>the tint applied to the foreground drawable</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the tint applied to the foreground drawable, if specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getForegroundTintList()" title="Reference documentation">Java documentation for <code>android.view.View.getForegroundTintList()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Applies a tint to the foreground drawable. Does not modify the current tint
            mode, which is <c>PorterDuff.Mode#SRC_IN</c> by default.</para>
          <para>Subsequent calls to <c>#setForeground(Drawable)</c> will automatically
            mutate the drawable and apply the specified tint and tint mode using
            <c>Drawable#setTintList(ColorStateList)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setForegroundTintList(android.content.res.ColorStateList)" title="Reference documentation">Java documentation for <code>android.view.View.setForegroundTintList(android.content.res.ColorStateList)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForegroundTintMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForegroundTintMode As PorterDuff.Mode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::PorterDuff::Mode ^ ForegroundTintMode { Android::Graphics::PorterDuff::Mode ^ get(); void set(Android::Graphics::PorterDuff::Mode ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.PorterDuff.Mode? ForegroundTintMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.PorterDuff/Mode ForegroundTintMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ForegroundTintMode" />
      <MemberSignature Language="F#" Value="member this.ForegroundTintMode : Android.Graphics.PorterDuff.Mode with get, set" Usage="Android.Views.View.ForegroundTintMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForegroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetForegroundTintModeHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForegroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetForegroundTintModeHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setForegroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetForegroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setForegroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetForegroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.PorterDuff+Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the blending mode used to apply the tint to the foreground
            drawable, if specified.</summary>
        <value>the blending mode used to apply the tint to the foreground
                    drawable</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getForegroundTintMode()" title="Reference documentation">Java documentation for <code>android.view.View.getForegroundTintMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GatherTransparentRegion">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GatherTransparentRegion (region As Region) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GatherTransparentRegion(Android::Graphics::Region ^ region);" />
      <MemberSignature Language="C#" Value="public virtual bool GatherTransparentRegion (Android.Graphics.Region? region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GatherTransparentRegion(class Android.Graphics.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GatherTransparentRegion(Android.Graphics.Region)" />
      <MemberSignature Language="F#" Value="abstract member GatherTransparentRegion : Android.Graphics.Region -&gt; bool&#xA;override this.GatherTransparentRegion : Android.Graphics.Region -&gt; bool" Usage="view.GatherTransparentRegion region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("gatherTransparentRegion", "(Landroid/graphics/Region;)Z", "GetGatherTransparentRegion_Landroid_graphics_Region_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("gatherTransparentRegion", "(Landroid/graphics/Region;)Z", "GetGatherTransparentRegion_Landroid_graphics_Region_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="Android.Graphics.Region" />
      </Parameters>
      <Docs>
        <param name="region">The transparent region for this ViewAncestor (window).</param>
        <summary>This is used by the ViewRoot to perform an optimization when
            the view hierarchy contains one or several SurfaceView.</summary>
        <returns>Returns true if the effective visibility of the view at this
            point is opaque, regardless of the transparent region; returns false
            if it is possible for underlying windows to be seen behind the view.</returns>
        <remarks>
          <para>This is used by the ViewRoot to perform an optimization when
            the view hierarchy contains one or several SurfaceView.
            SurfaceView is always considered transparent, but its children are not,
            therefore all View objects remove themselves from the global transparent
            region (passed as a parameter to this function).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#gatherTransparentRegion(android.graphics.Region)" title="Reference documentation">Java documentation for <code>android.view.View.gatherTransparentRegion(android.graphics.Region)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateDisplayHash">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateDisplayHash (hashAlgorithm As String, bounds As Rect, executor As IExecutor, callback As IDisplayHashResultCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateDisplayHash(System::String ^ hashAlgorithm, Android::Graphics::Rect ^ bounds, Java::Util::Concurrent::IExecutor ^ executor, Android::Views::DisplayHash::IDisplayHashResultCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void GenerateDisplayHash (string hashAlgorithm, Android.Graphics.Rect? bounds, Java.Util.Concurrent.IExecutor executor, Android.Views.DisplayHash.IDisplayHashResultCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateDisplayHash(string hashAlgorithm, class Android.Graphics.Rect bounds, class Java.Util.Concurrent.IExecutor executor, class Android.Views.DisplayHash.IDisplayHashResultCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GenerateDisplayHash(System.String,Android.Graphics.Rect,Java.Util.Concurrent.IExecutor,Android.Views.DisplayHash.IDisplayHashResultCallback)" />
      <MemberSignature Language="F#" Value="abstract member GenerateDisplayHash : string * Android.Graphics.Rect * Java.Util.Concurrent.IExecutor * Android.Views.DisplayHash.IDisplayHashResultCallback -&gt; unit&#xA;override this.GenerateDisplayHash : string * Android.Graphics.Rect * Java.Util.Concurrent.IExecutor * Android.Views.DisplayHash.IDisplayHashResultCallback -&gt; unit" Usage="view.GenerateDisplayHash (hashAlgorithm, bounds, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateDisplayHash", "(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/concurrent/Executor;Landroid/view/displayhash/DisplayHashResultCallback;)V", "GetGenerateDisplayHash_Ljava_lang_String_Landroid_graphics_Rect_Ljava_util_concurrent_Executor_Landroid_view_displayhash_DisplayHashResultCallback_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateDisplayHash", "(Ljava/lang/String;Landroid/graphics/Rect;Ljava/util/concurrent/Executor;Landroid/view/displayhash/DisplayHashResultCallback;)V", "GetGenerateDisplayHash_Ljava_lang_String_Landroid_graphics_Rect_Ljava_util_concurrent_Executor_Landroid_view_displayhash_DisplayHashResultCallback_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.String" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Views.DisplayHash.IDisplayHashResultCallback" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm">The hash algorithm to use when hashing the display. Must be one of
                                 the values returned from
                                 <c>DisplayHashManager#getSupportedHashAlgorithms()</c></param>
        <param name="bounds">The bounds for the content within the View to generate the hash for. If
                          bounds are null, the entire View's bounds will be used. If empty, it will
                          invoke the callback
                          <c>DisplayHashResultCallback#onDisplayHashError</c> with error
                          <c>DisplayHashResultCallback#DISPLAY_HASH_ERROR_INVALID_BOUNDS</c></param>
        <param name="executor">The executor that the callback should be invoked on.</param>
        <param name="callback">The callback to handle the results of generating the display hash</param>
        <summary>Called to generate a <c>DisplayHash</c> for this view.</summary>
        <remarks>
          <para>Called to generate a <c>DisplayHash</c> for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#generateDisplayHash(java.lang.String,%20android.graphics.Rect,%20java.util.concurrent.Executor,%20android.view.displayhash.DisplayHashResultCallback)" title="Reference documentation">Java documentation for <code>android.view.View.generateDisplayHash(java.lang.String, android.graphics.Rect, java.util.concurrent.Executor, android.view.displayhash.DisplayHashResultCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateViewId">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GenerateViewId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GenerateViewId();" />
      <MemberSignature Language="C#" Value="public static int GenerateViewId ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GenerateViewId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GenerateViewId" />
      <MemberSignature Language="F#" Value="static member GenerateViewId : unit -&gt; int" Usage="Android.Views.View.GenerateViewId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateViewId", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateViewId", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a value suitable for use in <c>#setId(int)</c>.</summary>
        <returns>a generated ID value</returns>
        <remarks>
          <para>Generate a value suitable for use in <c>#setId(int)</c>.
            This value will not collide with ID values generated at build time by aapt for R.id.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#generateViewId()" title="Reference documentation">Java documentation for <code>android.view.View.generateViewId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GenericMotion">
      <MemberSignature Language="VB.NET" Value="Public Custom Event GenericMotion As EventHandler(Of View.GenericMotionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::GenericMotionEventArgs ^&gt; ^ GenericMotion;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.GenericMotionEventArgs&gt; GenericMotion;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/GenericMotionEventArgs&gt; GenericMotion" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.GenericMotion" />
      <MemberSignature Language="F#" Value="member this.GenericMotion : EventHandler&lt;Android.Views.View.GenericMotionEventArgs&gt; " Usage="member this.GenericMotion : System.EventHandler&lt;Android.Views.View.GenericMotionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+GenericMotionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessibilityDelegate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccessibilityDelegate () As View.AccessibilityDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View::AccessibilityDelegate ^ GetAccessibilityDelegate();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View.AccessibilityDelegate? GetAccessibilityDelegate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View/AccessibilityDelegate GetAccessibilityDelegate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetAccessibilityDelegate" />
      <MemberSignature Language="F#" Value="abstract member GetAccessibilityDelegate : unit -&gt; Android.Views.View.AccessibilityDelegate&#xA;override this.GetAccessibilityDelegate : unit -&gt; Android.Views.View.AccessibilityDelegate" Usage="view.GetAccessibilityDelegate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAccessibilityDelegate", "()Landroid/view/View$AccessibilityDelegate;", "GetGetAccessibilityDelegateHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAccessibilityDelegate", "()Landroid/view/View$AccessibilityDelegate;", "GetGetAccessibilityDelegateHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View+AccessibilityDelegate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the delegate for implementing accessibility support via
            composition.</summary>
        <returns>The delegate, or null if none set.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAccessibilityDelegate()" title="Reference documentation">Java documentation for <code>android.view.View.getAccessibilityDelegate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeResolutionStack">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAttributeResolutionStack (attribute As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetAttributeResolutionStack(int attribute);" />
      <MemberSignature Language="C#" Value="public virtual int[] GetAttributeResolutionStack (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetAttributeResolutionStack(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetAttributeResolutionStack(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeResolutionStack : int -&gt; int[]&#xA;override this.GetAttributeResolutionStack : int -&gt; int[]" Usage="view.GetAttributeResolutionStack attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeResolutionStack", "(I)[I", "GetGetAttributeResolutionStack_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeResolutionStack", "(I)[I", "GetGetAttributeResolutionStack_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute">Attribute resource ID for which the resolution stack should be returned.</param>
        <summary>Returns the ordered list of resource ID that are considered when resolving attribute values
            for this <c>View</c>.</summary>
        <returns>ordered list of resource ID that are considered when resolving attribute values for
            this <c>View</c>.</returns>
        <remarks>
          <para>Returns the ordered list of resource ID that are considered when resolving attribute values
            for this <c>View</c>. The list will include layout resource ID if the View is inflated from
            XML. It will also include a set of explicit styles if specified in XML using
            <c>style="..."</c>. Finally, it will include the default styles resolved from the theme.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; this method will only return actual values if the view attribute debugging
            is enabled in Android developer options.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAttributeResolutionStack(int)" title="Reference documentation">Java documentation for <code>android.view.View.getAttributeResolutionStack(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutofillHints">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutofillHints () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetAutofillHints();" />
      <MemberSignature Language="C#" Value="public virtual string[]? GetAutofillHints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAutofillHints() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetAutofillHints" />
      <MemberSignature Language="F#" Value="abstract member GetAutofillHints : unit -&gt; string[]&#xA;override this.GetAutofillHints : unit -&gt; string[]" Usage="view.GetAutofillHints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAutofillHints", "()[Ljava/lang/String;", "GetGetAutofillHintsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAutofillHints", "()[Ljava/lang/String;", "GetGetAutofillHintsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the hints that help an <c>android.service.autofill.AutofillService</c> determine how
            to autofill the view with the user's data.</summary>
        <returns>The hints set via the attribute or <c>#setAutofillHints(String...)</c>, or
            <c>null</c> if no hints were set.</returns>
        <remarks>
          <para>Gets the hints that help an <c>android.service.autofill.AutofillService</c> determine how
            to autofill the view with the user's data.</para>
          <para>See <c>#setAutofillHints(String...)</c> for more info about these hints.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getAutofillHints()" title="Reference documentation">Java documentation for <code>android.view.View.getAutofillHints()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClipBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClipBounds (outRect As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetClipBounds(Android::Graphics::Rect ^ outRect);" />
      <MemberSignature Language="C#" Value="public virtual bool GetClipBounds (Android.Graphics.Rect? outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetClipBounds(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetClipBounds(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetClipBounds : Android.Graphics.Rect -&gt; bool&#xA;override this.GetClipBounds : Android.Graphics.Rect -&gt; bool" Usage="view.GetClipBounds outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getClipBounds", "(Landroid/graphics/Rect;)Z", "GetGetClipBounds_Landroid_graphics_Rect_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getClipBounds", "(Landroid/graphics/Rect;)Z", "GetGetClipBounds_Landroid_graphics_Rect_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">rectangle in which to place the clip bounds of the view</param>
        <summary>Populates an output rectangle with the clip bounds of the view,
            returning <c>true</c> if successful or <c>false</c> if the view's
            clip bounds are <c>null</c>.</summary>
        <returns>
          <c>true</c> if successful or <c>false</c> if the view's
                    clip bounds are <c>null</c></returns>
        <remarks>
          <para>Populates an output rectangle with the clip bounds of the view,
            returning <c>true</c> if successful or <c>false</c> if the view's
            clip bounds are <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getClipBounds(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getClipBounds(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSize">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDefaultSize (size As Integer, measureSpec As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDefaultSize(int size, int measureSpec);" />
      <MemberSignature Language="C#" Value="public static int GetDefaultSize (int size, int measureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDefaultSize(int32 size, int32 measureSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetDefaultSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member GetDefaultSize : int * int -&gt; int" Usage="Android.Views.View.GetDefaultSize (size, measureSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefaultSize", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefaultSize", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">Default size for this view</param>
        <param name="measureSpec">Constraints imposed by the parent</param>
        <summary>Utility to return a default size.</summary>
        <returns>The size this view should be.</returns>
        <remarks>
          <para>Utility to return a default size. Uses the supplied size if the
            MeasureSpec imposed no constraints. Will get larger if allowed
            by the MeasureSpec.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDefaultSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.getDefaultSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawableState">
      <MemberSignature Language="VB.NET" Value="Public Function GetDrawableState () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;int&gt; ^ GetDrawableState();" />
      <MemberSignature Language="C#" Value="public int[]? GetDrawableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32[] GetDrawableState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetDrawableState" />
      <MemberSignature Language="F#" Value="member this.GetDrawableState : unit -&gt; int[]" Usage="view.GetDrawableState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDrawableState", "()[I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDrawableState", "()[I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return an array of resource IDs of the drawable states representing the
            current state of the view.</summary>
        <returns>The current drawable state</returns>
        <remarks>
          <para>Return an array of resource IDs of the drawable states representing the
            current state of the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawableState()" title="Reference documentation">Java documentation for <code>android.view.View.getDrawableState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Graphics.Drawables.Drawable.SetState(System.Int32[])" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
        <altmember cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawingCache">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDrawingCache (autoScale As Boolean) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Graphics::Bitmap ^ GetDrawingCache(bool autoScale);" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap? GetDrawingCache (bool autoScale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Bitmap GetDrawingCache(bool autoScale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetDrawingCache(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetDrawingCache : bool -&gt; Android.Graphics.Bitmap&#xA;override this.GetDrawingCache : bool -&gt; Android.Graphics.Bitmap" Usage="view.GetDrawingCache autoScale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDrawingCache", "(Z)Landroid/graphics/Bitmap;", "GetGetDrawingCache_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDrawingCache", "(Z)Landroid/graphics/Bitmap;", "GetGetDrawingCache_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoScale" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoScale">Indicates whether the generated bitmap should be scaled based on
                   the current density of the screen when the application is in compatibility
                   mode.</param>
        <summary>Returns the bitmap in which this view drawing is cached.</summary>
        <returns>A bitmap representing this view or null if cache is disabled.</returns>
        <remarks>
          <para>Returns the bitmap in which this view drawing is cached. The returned bitmap
            is null when caching is disabled. If caching is enabled and the cache is not ready,
            this method will create it. Calling <c>#draw(android.graphics.Canvas)</c> will not
            draw from the cache when the cache is enabled. To benefit from the cache, you must
            request the drawing cache by calling this method and draw it on screen if the
            returned bitmap is not null.</para>
          <para>Note about auto scaling in compatibility mode: When auto scaling is not enabled,
            this method will create a bitmap of the same size as this view. Because this bitmap
            will be drawn scaled by the parent ViewGroup, the result on screen might show
            scaling artifacts. To avoid such artifacts, you should call this method by setting
            the auto scaling to true. Doing so, however, will generate a bitmap of a different
            size than the view. This implies that your application must be able to handle this
            size.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingCache(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingCache(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="P:Android.Views.View.DrawingCacheEnabled" />
        <altmember cref="M:Android.Views.View.BuildDrawingCache(System.Boolean)" />
        <altmember cref="M:Android.Views.View.DestroyDrawingCache" />
      </Docs>
    </Member>
    <Member MemberName="GetDrawingRect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetDrawingRect (outRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetDrawingRect(Android::Graphics::Rect ^ outRect);" />
      <MemberSignature Language="C#" Value="public virtual void GetDrawingRect (Android.Graphics.Rect? outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDrawingRect(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetDrawingRect(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetDrawingRect : Android.Graphics.Rect -&gt; unit&#xA;override this.GetDrawingRect : Android.Graphics.Rect -&gt; unit" Usage="view.GetDrawingRect outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDrawingRect", "(Landroid/graphics/Rect;)V", "GetGetDrawingRect_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDrawingRect", "(Landroid/graphics/Rect;)V", "GetGetDrawingRect_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">The (scrolled) drawing bounds of the view.</param>
        <summary>Return the visible drawing bounds of your view.</summary>
        <remarks>
          <para>Return the visible drawing bounds of your view. Fills in the output
            rectangle with the values from getScrollX(), getScrollY(),
            getWidth(), and getHeight(). These bounds do not account for any
            transformation properties currently set on the view, such as
            <c>#setScaleX(float)</c> or <c>#setRotation(float)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getDrawingRect(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getDrawingRect(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFocusable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocusable () As ViewFocusability" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ViewFocusability GetFocusable();" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewFocusability GetFocusable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Views.ViewFocusability GetFocusable() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetFocusable" />
      <MemberSignature Language="F#" Value="abstract member GetFocusable : unit -&gt; Android.Views.ViewFocusability&#xA;override this.GetFocusable : unit -&gt; Android.Views.ViewFocusability" Usage="view.GetFocusable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFocusable", "()I", "GetGetFocusableHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFocusable", "()I", "GetGetFocusableHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewFocusability</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the focusable setting for this view.</summary>
        <returns>One of <c>#NOT_FOCUSABLE</c>, <c>#FOCUSABLE</c>, or <c>#FOCUSABLE_AUTO</c>.</returns>
        <remarks>
          <para>Returns the focusable setting for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getFocusable()" title="Reference documentation">Java documentation for <code>android.view.View.getFocusable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusables">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFocusables (direction As FocusSearchDirection) As IList(Of View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ GetFocusables(Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.View&gt;? GetFocusables (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; GetFocusables(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetFocusables(Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member GetFocusables : Android.Views.FocusSearchDirection -&gt; System.Collections.Generic.IList&lt;Android.Views.View&gt;&#xA;override this.GetFocusables : Android.Views.FocusSearchDirection -&gt; System.Collections.Generic.IList&lt;Android.Views.View&gt;" Usage="view.GetFocusables direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFocusables", "(I)Ljava/util/ArrayList;", "GetGetFocusables_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFocusables", "(I)Ljava/util/ArrayList;", "GetGetFocusables_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.View&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction of the focus</param>
        <summary>Find and return all focusable views that are descendants of this view,
            possibly including this view if it is focusable itself.</summary>
        <returns>A list of focusable views</returns>
        <remarks>
          <para>Find and return all focusable views that are descendants of this view,
            possibly including this view if it is focusable itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getFocusables(int)" title="Reference documentation">Java documentation for <code>android.view.View.getFocusables(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFocusedRect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetFocusedRect (r As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetFocusedRect(Android::Graphics::Rect ^ r);" />
      <MemberSignature Language="C#" Value="public virtual void GetFocusedRect (Android.Graphics.Rect? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFocusedRect(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetFocusedRect(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetFocusedRect : Android.Graphics.Rect -&gt; unit&#xA;override this.GetFocusedRect : Android.Graphics.Rect -&gt; unit" Usage="view.GetFocusedRect r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFocusedRect", "(Landroid/graphics/Rect;)V", "GetGetFocusedRect_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFocusedRect", "(Landroid/graphics/Rect;)V", "GetGetFocusedRect_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">The rectangle to fill in, in this view's coordinates.</param>
        <summary>When a view has focus and the user navigates away from it, the next view is searched for
            starting from the rectangle filled in by this method.</summary>
        <remarks>
          <para>When a view has focus and the user navigates away from it, the next view is searched for
            starting from the rectangle filled in by this method.
            
            By default, the rectangle is the <c>#getDrawingRect(android.graphics.Rect)</c>)
            of the view.  However, if your view maintains some idea of internal selection,
            such as a cursor, or a selected row or column, you should override this method and
            fill in a more specific rectangle.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getFocusedRect(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getFocusedRect(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVisibleRect">
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalVisibleRect (r As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetGlobalVisibleRect(Android::Graphics::Rect ^ r);" />
      <MemberSignature Language="C#" Value="public bool GetGlobalVisibleRect (Android.Graphics.Rect? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetGlobalVisibleRect(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.GetGlobalVisibleRect : Android.Graphics.Rect -&gt; bool" Usage="view.GetGlobalVisibleRect r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">If the method returns true, contains the coordinates of the
                 visible portion of this view in the coordinate space of the view's
                 root view. If the method returns false, the contents of <c>r</c>
                 are undefined.</param>
        <summary>Sets <c>r</c> to the coordinates of the non-clipped area of this view in
            the coordinate space of the view's root view.</summary>
        <returns>true if at least part of the view is visible within the root
                 view; otherwise false.</returns>
        <remarks>
          <para>Sets <c>r</c> to the coordinates of the non-clipped area of this view in
            the coordinate space of the view's root view.</para>
          <para>See <c>#getGlobalVisibleRect(Rect, Point)
            getGlobalVisibleRect(Rect, Point)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getGlobalVisibleRect(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getGlobalVisibleRect(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVisibleRect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalVisibleRect (r As Rect, globalOffset As Point) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetGlobalVisibleRect(Android::Graphics::Rect ^ r, Android::Graphics::Point ^ globalOffset);" />
      <MemberSignature Language="C#" Value="public virtual bool GetGlobalVisibleRect (Android.Graphics.Rect? r, Android.Graphics.Point? globalOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetGlobalVisibleRect(class Android.Graphics.Rect r, class Android.Graphics.Point globalOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetGlobalVisibleRect(Android.Graphics.Rect,Android.Graphics.Point)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalVisibleRect : Android.Graphics.Rect * Android.Graphics.Point -&gt; bool&#xA;override this.GetGlobalVisibleRect : Android.Graphics.Rect * Android.Graphics.Point -&gt; bool" Usage="view.GetGlobalVisibleRect (r, globalOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;Landroid/graphics/Point;)Z", "GetGetGlobalVisibleRect_Landroid_graphics_Rect_Landroid_graphics_Point_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGlobalVisibleRect", "(Landroid/graphics/Rect;Landroid/graphics/Point;)Z", "GetGetGlobalVisibleRect_Landroid_graphics_Rect_Landroid_graphics_Point_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
        <Parameter Name="globalOffset" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="r">If the method returns true, contains the coordinates of the
                 visible portion of this view in the coordinate space of the view's
                 root view. If the method returns false, the contents of <c>r</c>
                 are undefined.</param>
        <param name="globalOffset">If the method returns true, contains the offset of
                 the x and y coordinates of this view from the top left corner of the
                 view's root view. If the method returns false, the contents of
                 <c>globalOffset</c> are undefined. The argument can be null (see
                 <c>#getGlobalVisibleRect(Rect) getGlobalVisibleRect(Rect)</c>.</param>
        <summary>Sets <c>r</c> to the coordinates of the non-clipped area of this view in
            the coordinate space of the view's root view.</summary>
        <returns>true if at least part of the view is visible within the root
                 view; false if the view is completely clipped or translated out of
                 the visible area of the root view.</returns>
        <remarks>
          <para>Sets <c>r</c> to the coordinates of the non-clipped area of this view in
            the coordinate space of the view's root view. Sets <c>globalOffset</c>
            to the offset of the view's x and y coordinates from the coordinate space
            origin, which is the top left corner of the root view irrespective of
            screen decorations and system UI elements.</para>
          <para>To convert <c>r</c> to coordinates relative to the top left corner of
            this view (without taking view rotations into account), offset <c>r</c>
            by the inverse values of
            <c>globalOffset</c>&amp;mdash;<c>r.offset(-globalOffset.x,
            -globalOffset.y)</c>&amp;mdash;which is equivalent to calling
            <c>#getLocalVisibleRect(Rect) getLocalVisibleRect(Rect)</c>.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; Do not use this method to determine the size of a window
            in multi-window mode; use
            <c>WindowManager#getCurrentWindowMetrics()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getGlobalVisibleRect(android.graphics.Rect,%20android.graphics.Point)" title="Reference documentation">Java documentation for <code>android.view.View.getGlobalVisibleRect(android.graphics.Rect, android.graphics.Point)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetHasOverlappingRendering">
      <MemberSignature Language="VB.NET" Value="Public Function GetHasOverlappingRendering () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetHasOverlappingRendering();" />
      <MemberSignature Language="C#" Value="public bool GetHasOverlappingRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetHasOverlappingRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetHasOverlappingRendering" />
      <MemberSignature Language="F#" Value="member this.GetHasOverlappingRendering : unit -&gt; bool" Usage="view.GetHasOverlappingRendering " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHasOverlappingRendering", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHasOverlappingRendering", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the value for overlapping rendering that is used internally.</summary>
        <returns>The value for overlapping rendering being used internally.</returns>
        <remarks>
          <para>Returns the value for overlapping rendering that is used internally. This is either
            the value passed into <c>#forceHasOverlappingRendering(boolean)</c>, if called, or
            the return value of <c>#hasOverlappingRendering()</c>, otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHasOverlappingRendering()" title="Reference documentation">Java documentation for <code>android.view.View.getHasOverlappingRendering()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitRect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetHitRect (outRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetHitRect(Android::Graphics::Rect ^ outRect);" />
      <MemberSignature Language="C#" Value="public virtual void GetHitRect (Android.Graphics.Rect? outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetHitRect(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetHitRect(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetHitRect : Android.Graphics.Rect -&gt; unit&#xA;override this.GetHitRect : Android.Graphics.Rect -&gt; unit" Usage="view.GetHitRect outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHitRect", "(Landroid/graphics/Rect;)V", "GetGetHitRect_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHitRect", "(Landroid/graphics/Rect;)V", "GetGetHitRect_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">The hit rectangle of the view.</param>
        <summary>Hit rectangle in parent's coordinates</summary>
        <remarks>
          <para>Hit rectangle in parent's coordinates</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHitRect(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getHitRect(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalVisibleRect">
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalVisibleRect (r As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetLocalVisibleRect(Android::Graphics::Rect ^ r);" />
      <MemberSignature Language="C#" Value="public bool GetLocalVisibleRect (Android.Graphics.Rect? r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetLocalVisibleRect(class Android.Graphics.Rect r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetLocalVisibleRect(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="member this.GetLocalVisibleRect : Android.Graphics.Rect -&gt; bool" Usage="view.GetLocalVisibleRect r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocalVisibleRect", "(Landroid/graphics/Rect;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocalVisibleRect", "(Landroid/graphics/Rect;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="r">If the method returns true, contains the coordinates of the
                 visible portion of this view relative to the top left corner of the
                 view. If the method returns false, the contents of <c>r</c> are
                 undefined.</param>
        <summary>Sets <c>r</c> to the coordinates of the non-clipped area of this view
            relative to the top left corner of the view.</summary>
        <returns>true if at least part of the view is visible; false if the view
                 is completely clipped or translated out of the visible area.</returns>
        <remarks>
          <para>Sets <c>r</c> to the coordinates of the non-clipped area of this view
            relative to the top left corner of the view.</para>
          <para>If the view is clipped on the left or top, the left and top
            coordinates are offset from 0 by the clipped amount. For example, if the
            view is off screen 50px on the left and 30px at the top, the left and top
            coordinates are 50 and 30 respectively.</para>
          <para>If the view is clipped on the right or bottom, the right and bottom
            coordinates are reduced by the clipped amount. For example, if the view
            is off screen 40px on the right and 20px at the bottom, the right
            coordinate is the view width - 40, and the bottom coordinate is the view
            height - 20.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLocalVisibleRect(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getLocalVisibleRect(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocationInSurface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetLocationInSurface (location As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetLocationInSurface(cli::array &lt;int&gt; ^ location);" />
      <MemberSignature Language="C#" Value="public virtual void GetLocationInSurface (int[] location);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLocationInSurface(int32[] location) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetLocationInSurface(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetLocationInSurface : int[] -&gt; unit&#xA;override this.GetLocationInSurface : int[] -&gt; unit" Usage="view.GetLocationInSurface location" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocationInSurface", "([I)V", "GetGetLocationInSurface_arrayIHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocationInSurface", "([I)V", "GetGetLocationInSurface_arrayIHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="location" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="location">A two-element integer array in which the view coordinates
                 are stored. The x-coordinate is at index 0; the y-coordinate, at
                 index 1.</param>
        <summary>Gets the coordinates of this view in the coordinate space of the
            <c>Surface</c> that contains the view.</summary>
        <remarks>
          <para>Gets the coordinates of this view in the coordinate space of the
            <c>Surface</c> that contains the view.</para>
          <para>In multiple-screen scenarios, if the surface spans multiple screens,
            the coordinate space of the surface also spans multiple screens.</para>
          <para>After the method returns, the argument array contains the x and y
            coordinates of the view relative to the view's left and top edges,
            respectively.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLocationInSurface(int[])" title="Reference documentation">Java documentation for <code>android.view.View.getLocationInSurface(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocationInWindow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetLocationInWindow (outLocation As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetLocationInWindow(cli::array &lt;int&gt; ^ outLocation);" />
      <MemberSignature Language="C#" Value="public virtual void GetLocationInWindow (int[]? outLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLocationInWindow(int32[] outLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetLocationInWindow(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetLocationInWindow : int[] -&gt; unit&#xA;override this.GetLocationInWindow : int[] -&gt; unit" Usage="view.GetLocationInWindow outLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocationInWindow", "([I)V", "GetGetLocationInWindow_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocationInWindow", "([I)V", "GetGetLocationInWindow_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outLocation" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="outLocation">A two-element integer array in which the view
                 coordinates are stored. The x-coordinate is at index 0; the
                 y-coordinate, at index 1.</param>
        <summary>Gets the coordinates of this view in the coordinate space of the window
            that contains the view, irrespective of system decorations.</summary>
        <remarks>
          <para>Gets the coordinates of this view in the coordinate space of the window
            that contains the view, irrespective of system decorations.</para>
          <para>In multi-window mode, the origin of the coordinate space is the
            top left corner of the window that contains the view. In full screen
            mode, the origin is the top left corner of the device screen.</para>
          <para>In multiple-screen scenarios, if the app spans multiple screens, the
            coordinate space also spans multiple screens. But if the app is
            restricted to a single screen, the coordinate space includes only the
            screen on which the app is running.</para>
          <para>After the method returns, the argument array contains the x and y
            coordinates of the view relative to the view's left and top edges,
            respectively.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLocationInWindow(int[])" title="Reference documentation">Java documentation for <code>android.view.View.getLocationInWindow(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLocationOnScreen">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetLocationOnScreen (outLocation As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetLocationOnScreen(cli::array &lt;int&gt; ^ outLocation);" />
      <MemberSignature Language="C#" Value="public virtual void GetLocationOnScreen (int[]? outLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetLocationOnScreen(int32[] outLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetLocationOnScreen(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetLocationOnScreen : int[] -&gt; unit&#xA;override this.GetLocationOnScreen : int[] -&gt; unit" Usage="view.GetLocationOnScreen outLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocationOnScreen", "([I)V", "GetGetLocationOnScreen_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocationOnScreen", "([I)V", "GetGetLocationOnScreen_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outLocation" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="outLocation">A two-element integer array in which the view
                 coordinates are stored. The x-coordinate is at index 0; the
                 y-coordinate, at index 1.</param>
        <summary>Gets the coordinates of this view in the coordinate space of the device
            screen, irrespective of system decorations and whether the system is in
            multi-window mode.</summary>
        <remarks>
          <para>Gets the coordinates of this view in the coordinate space of the device
            screen, irrespective of system decorations and whether the system is in
            multi-window mode.</para>
          <para>In multi-window mode, the coordinate space encompasses the entire
            device screen, ignoring the bounds of the app window. For example, if the
            view is in the bottom portion of a horizontal split screen, the top edge
            of the screen&amp;mdash;not the top edge of the window&amp;mdash;is the origin
            from which the y-coordinate is calculated.</para>
          <para>In multiple-screen scenarios, the coordinate space can span screens.
            For example, if the app is spanning both screens of a dual-screen device
            and the view is located on the right-hand screen, the x-coordinate is
            calculated from the left edge of the left-hand screen to the left edge of
            the view. When the app is restricted to a single screen in a
            multiple-screen environment, the coordinate space includes only the
            screen on which the app is running.</para>
          <para>After the method returns, the argument array contains the x and y
            coordinates of the view relative to the view's left and top edges,
            respectively.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLocationOnScreen(int[])" title="Reference documentation">Java documentation for <code>android.view.View.getLocationOnScreen(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetReceiveContentMimeTypes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReceiveContentMimeTypes () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetReceiveContentMimeTypes();" />
      <MemberSignature Language="C#" Value="public virtual string[]? GetReceiveContentMimeTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetReceiveContentMimeTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetReceiveContentMimeTypes" />
      <MemberSignature Language="F#" Value="abstract member GetReceiveContentMimeTypes : unit -&gt; string[]&#xA;override this.GetReceiveContentMimeTypes : unit -&gt; string[]" Usage="view.GetReceiveContentMimeTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getReceiveContentMimeTypes", "()[Ljava/lang/String;", "GetGetReceiveContentMimeTypesHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getReceiveContentMimeTypes", "()[Ljava/lang/String;", "GetGetReceiveContentMimeTypesHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the MIME types accepted by <c>#performReceiveContent</c> for this view, as
            configured via <c>#setOnReceiveContentListener</c>.</summary>
        <returns>The MIME types accepted by <c>#performReceiveContent</c> for this view (may
            include patterns such as "image/*").</returns>
        <remarks>
          <para>Returns the MIME types accepted by <c>#performReceiveContent</c> for this view, as
            configured via <c>#setOnReceiveContentListener</c>. By default returns null.</para>
          <para>Different features (e.g. pasting from the clipboard, inserting stickers from the soft
            keyboard, etc) may optionally use this metadata to conditionally alter their behavior. For
            example, a soft keyboard may choose to hide its UI for inserting GIFs for a particular
            input field if the MIME types returned here for that field don't include "image/gif" or
            "image/*".</para>
          <para>Note: Comparisons of MIME types should be performed using utilities such as
            <c>ClipDescription#compareMimeTypes</c> rather than simple string equality, in order to
            correctly handle patterns such as "text/*", "image/*", etc. Note that MIME type matching
            in the Android framework is case-sensitive, unlike formal RFC MIME types. As a result,
            you should always write your MIME types with lowercase letters, or use
            <c>android.content.Intent#normalizeMimeType</c> to ensure that it is converted to
            lowercase.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getReceiveContentMimeTypes()" title="Reference documentation">Java documentation for <code>android.view.View.getReceiveContentMimeTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTag">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTag (key As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::Object ^ GetTag(int key);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? GetTag (int key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetTag(int32 key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetTag(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetTag : int -&gt; Java.Lang.Object&#xA;override this.GetTag : int -&gt; Java.Lang.Object" Usage="view.GetTag key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTag", "(I)Ljava/lang/Object;", "GetGetTag_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTag", "(I)Ljava/lang/Object;", "GetGetTag_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the tag</param>
        <summary>Returns the tag associated with this view and the specified key.</summary>
        <returns>the Object stored in this view as a tag, or <c>null</c> if not
                    set</returns>
        <remarks>
          <para>Returns the tag associated with this view and the specified key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTag(int)" title="Reference documentation">Java documentation for <code>android.view.View.getTag(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.SetTag(System.Int32, Java.Lang.Object)" />
        <altmember cref="P:Android.Views.View.Tag" />
      </Docs>
    </Member>
    <Member MemberName="GetWindowVisibleDisplayFrame">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetWindowVisibleDisplayFrame (outRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetWindowVisibleDisplayFrame(Android::Graphics::Rect ^ outRect);" />
      <MemberSignature Language="C#" Value="public virtual void GetWindowVisibleDisplayFrame (Android.Graphics.Rect? outRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetWindowVisibleDisplayFrame(class Android.Graphics.Rect outRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetWindowVisibleDisplayFrame(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetWindowVisibleDisplayFrame : Android.Graphics.Rect -&gt; unit&#xA;override this.GetWindowVisibleDisplayFrame : Android.Graphics.Rect -&gt; unit" Usage="view.GetWindowVisibleDisplayFrame outRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getWindowVisibleDisplayFrame", "(Landroid/graphics/Rect;)V", "GetGetWindowVisibleDisplayFrame_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getWindowVisibleDisplayFrame", "(Landroid/graphics/Rect;)V", "GetGetWindowVisibleDisplayFrame_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outRect">Filled in with the visible display frame.  If the view
            is not attached to a window, this is simply the raw display size.</param>
        <summary>Retrieve the overall visible display size in which the window this view is
            attached to has been positioned in.</summary>
        <remarks>
          <para>Retrieve the overall visible display size in which the window this view is
            attached to has been positioned in.  This takes into account screen
            decorations above the window, for both cases where the window itself
            is being position inside of them or the window is being placed under
            then and covered insets are used for the window to position its content
            inside.  In effect, this tells you the available area where content can
            be placed and remain visible to users.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowVisibleDisplayFrame(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.getWindowVisibleDisplayFrame(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetX () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetX();" />
      <MemberSignature Language="C#" Value="public virtual float GetX ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetX() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetX" />
      <MemberSignature Language="F#" Value="abstract member GetX : unit -&gt; single&#xA;override this.GetX : unit -&gt; single" Usage="view.GetX " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getX", "()F", "GetGetXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getX", "()F", "GetGetXHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual x position of this view, in pixels.</summary>
        <returns>The visual x position of this view, in pixels.</returns>
        <remarks>
          <para>The visual x position of this view, in pixels. This is equivalent to the
            <c>#setTranslationX(float) translationX</c> property plus the current
            <c>#getLeft() left</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getX()" title="Reference documentation">Java documentation for <code>android.view.View.getX()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetY () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetY();" />
      <MemberSignature Language="C#" Value="public virtual float GetY ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetY() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetY" />
      <MemberSignature Language="F#" Value="abstract member GetY : unit -&gt; single&#xA;override this.GetY : unit -&gt; single" Usage="view.GetY " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getY", "()F", "GetGetYHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getY", "()F", "GetGetYHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual y position of this view, in pixels.</summary>
        <returns>The visual y position of this view, in pixels.</returns>
        <remarks>
          <para>The visual y position of this view, in pixels. This is equivalent to the
            <c>#setTranslationY(float) translationY</c> property plus the current
            <c>#getTop() top</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getY()" title="Reference documentation">Java documentation for <code>android.view.View.getY()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetZ">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetZ () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetZ();" />
      <MemberSignature Language="C#" Value="public virtual float GetZ ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetZ() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.GetZ" />
      <MemberSignature Language="F#" Value="abstract member GetZ : unit -&gt; single&#xA;override this.GetZ : unit -&gt; single" Usage="view.GetZ " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getZ", "()F", "GetGetZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getZ", "()F", "GetGetZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The visual z position of this view, in pixels.</summary>
        <returns>The visual z position of this view, in pixels.</returns>
        <remarks>
          <para>The visual z position of this view, in pixels. This is equivalent to the
            <c>#setTranslationZ(float) translationZ</c> property plus the current
            <c>#getElevation() elevation</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getZ()" title="Reference documentation">Java documentation for <code>android.view.View.getZ()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Handler As Handler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::Handler ^ Handler { Android::OS::Handler ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Handler? Handler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Handler Handler" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Handler" />
      <MemberSignature Language="F#" Value="member this.Handler : Android.OS.Handler" Usage="Android.Views.View.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandler", "()Landroid/os/Handler;", "GetGetHandlerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandler", "()Landroid/os/Handler;", "GetGetHandlerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Handler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>A handler associated with the thread running the View. This
            handler can be used to pump events in the UI events queue.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandler()" title="Reference documentation">Java documentation for <code>android.view.View.getHandler()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HandwritingBoundsOffsetBottom">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandwritingBoundsOffsetBottom As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float HandwritingBoundsOffsetBottom { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float HandwritingBoundsOffsetBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HandwritingBoundsOffsetBottom" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HandwritingBoundsOffsetBottom" />
      <MemberSignature Language="F#" Value="member this.HandwritingBoundsOffsetBottom : single" Usage="Android.Views.View.HandwritingBoundsOffsetBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandwritingBoundsOffsetBottom", "()F", "GetGetHandwritingBoundsOffsetBottomHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandwritingBoundsOffsetBottom", "()F", "GetGetHandwritingBoundsOffsetBottomHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the amount of offset applied to the bottom edge of this view's handwriting bounds, in
            the unit of pixel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the amount of offset applied to the bottom edge of this view's handwriting bounds, in
            the unit of pixel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandwritingBoundsOffsetBottom()" title="Reference documentation">Java documentation for <code>android.view.View.getHandwritingBoundsOffsetBottom()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandwritingBoundsOffsetLeft">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandwritingBoundsOffsetLeft As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float HandwritingBoundsOffsetLeft { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float HandwritingBoundsOffsetLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HandwritingBoundsOffsetLeft" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HandwritingBoundsOffsetLeft" />
      <MemberSignature Language="F#" Value="member this.HandwritingBoundsOffsetLeft : single" Usage="Android.Views.View.HandwritingBoundsOffsetLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandwritingBoundsOffsetLeft", "()F", "GetGetHandwritingBoundsOffsetLeftHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandwritingBoundsOffsetLeft", "()F", "GetGetHandwritingBoundsOffsetLeftHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the amount of offset applied to the left edge of this view's handwriting bounds,
            in the unit of pixel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the amount of offset applied to the left edge of this view's handwriting bounds,
            in the unit of pixel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandwritingBoundsOffsetLeft()" title="Reference documentation">Java documentation for <code>android.view.View.getHandwritingBoundsOffsetLeft()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandwritingBoundsOffsetRight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandwritingBoundsOffsetRight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float HandwritingBoundsOffsetRight { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float HandwritingBoundsOffsetRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HandwritingBoundsOffsetRight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HandwritingBoundsOffsetRight" />
      <MemberSignature Language="F#" Value="member this.HandwritingBoundsOffsetRight : single" Usage="Android.Views.View.HandwritingBoundsOffsetRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandwritingBoundsOffsetRight", "()F", "GetGetHandwritingBoundsOffsetRightHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandwritingBoundsOffsetRight", "()F", "GetGetHandwritingBoundsOffsetRightHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the amount of offset applied to the right edge of this view's handwriting bounds, in
            the unit of pixel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the amount of offset applied to the right edge of this view's handwriting bounds, in
            the unit of pixel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandwritingBoundsOffsetRight()" title="Reference documentation">Java documentation for <code>android.view.View.getHandwritingBoundsOffsetRight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandwritingBoundsOffsetTop">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandwritingBoundsOffsetTop As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float HandwritingBoundsOffsetTop { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float HandwritingBoundsOffsetTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HandwritingBoundsOffsetTop" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HandwritingBoundsOffsetTop" />
      <MemberSignature Language="F#" Value="member this.HandwritingBoundsOffsetTop : single" Usage="Android.Views.View.HandwritingBoundsOffsetTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandwritingBoundsOffsetTop", "()F", "GetGetHandwritingBoundsOffsetTopHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandwritingBoundsOffsetTop", "()F", "GetGetHandwritingBoundsOffsetTopHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the amount of offset applied to the top edge of this view's handwriting bounds,
            in the unit of pixel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the amount of offset applied to the top edge of this view's handwriting bounds,
            in the unit of pixel.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandwritingBoundsOffsetTop()" title="Reference documentation">Java documentation for <code>android.view.View.getHandwritingBoundsOffsetTop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandwritingDelegatorCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HandwritingDelegatorCallback As IRunnable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::IRunnable ^ HandwritingDelegatorCallback { Java::Lang::IRunnable ^ get(); void set(Java::Lang::IRunnable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.IRunnable? HandwritingDelegatorCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.IRunnable HandwritingDelegatorCallback" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HandwritingDelegatorCallback" />
      <MemberSignature Language="F#" Value="member this.HandwritingDelegatorCallback : Java.Lang.IRunnable with get, set" Usage="Android.Views.View.HandwritingDelegatorCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHandwritingDelegatorCallback", "()Ljava/lang/Runnable;", "GetGetHandwritingDelegatorCallbackHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHandwritingDelegatorCallback", "()Ljava/lang/Runnable;", "GetGetHandwritingDelegatorCallbackHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHandwritingDelegatorCallback", "(Ljava/lang/Runnable;)V", "GetSetHandwritingDelegatorCallback_Ljava_lang_Runnable_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHandwritingDelegatorCallback", "(Ljava/lang/Runnable;)V", "GetSetHandwritingDelegatorCallback_Ljava_lang_Runnable_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IRunnable</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="callback">a callback which should be called when a stylus <c>MotionEvent</c> occurs
                within this view's bounds</param>
        <summary>Returns the callback set by <c>#setHandwritingDelegatorCallback</c> which should be called
            when a stylus <c>MotionEvent</c> occurs within this view's bounds. -or- Sets a callback which should be called when a stylus <c>MotionEvent</c> occurs within this
            view's bounds.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the callback set by <c>#setHandwritingDelegatorCallback</c> which should be called
            when a stylus <c>MotionEvent</c> occurs within this view's bounds. The callback should only
            be called from the UI thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHandwritingDelegatorCallback()" title="Reference documentation">Java documentation for <code>android.view.View.getHandwritingDelegatorCallback()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a callback which should be called when a stylus <c>MotionEvent</c> occurs within this
            view's bounds. The callback will be called from the UI thread.</para>
          <para>Setting a callback allows this view to act as a handwriting delegator, so that handwriting
            mode for a delegate editor view can be initiated by stylus movement on this delegator view.
            The callback implementation is expected to show and focus the delegate editor view. If a view
            which returns <c>true</c> for <c>#isHandwritingDelegate()</c> creates an input connection
            while the same stylus <c>MotionEvent</c> sequence is ongoing, handwriting mode will be
            initiated for that view.</para>
          <para>A common use case is a custom view which looks like a text editor but does not actually
            support text editing itself, and clicking on the custom view causes an EditText to be shown.
            To support handwriting initiation in this case, this method can be called on the custom view
            to configure it as a delegator. The EditText should call <c>#setIsHandwritingDelegate</c> to
            set it as a delegate. The <c>callback</c> implementation is typically the same as the click
            listener implementation which shows the EditText.</para>
          <para>If <c>null</c> is passed, this view will no longer act as a handwriting initiation
            delegator.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHandwritingDelegatorCallback(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.View.setHandwritingDelegatorCallback(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HapticFeedbackEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HapticFeedbackEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HapticFeedbackEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool HapticFeedbackEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HapticFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HapticFeedbackEnabled" />
      <MemberSignature Language="F#" Value="member this.HapticFeedbackEnabled : bool with get, set" Usage="Android.Views.View.HapticFeedbackEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHapticFeedbackEnabled", "()Z", "GetIsHapticFeedbackEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHapticFeedbackEnabled", "()Z", "GetIsHapticFeedbackEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHapticFeedbackEnabled", "(Z)V", "GetSetHapticFeedbackEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHapticFeedbackEnabled", "(Z)V", "GetSetHapticFeedbackEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hapticFeedbackEnabled">whether haptic feedback enabled for this view.</param>
        <summary>Set whether this view should have haptic feedback for events such as
            long presses.</summary>
        <value>whether this view should have haptic feedback enabled for events
            such as long presses.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHapticFeedbackEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isHapticFeedbackEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view should have haptic feedback for events such as
            long presses.</para>
          <para>You may wish to disable haptic feedback if your view already controls
            its own haptic feedback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHapticFeedbackEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setHapticFeedbackEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="P:Android.Views.View.HapticFeedbackEnabled" />
        <altmember cref="M:Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants)" />
      </Docs>
    </Member>
    <Member MemberName="HasExplicitFocusable">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasExplicitFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasExplicitFocusable { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasExplicitFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExplicitFocusable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasExplicitFocusable" />
      <MemberSignature Language="F#" Value="member this.HasExplicitFocusable : bool" Usage="Android.Views.View.HasExplicitFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasExplicitFocusable", "()Z", "GetHasExplicitFocusableHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasExplicitFocusable", "()Z", "GetHasExplicitFocusableHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is focusable or if it contains a reachable View
            for which <c>#hasExplicitFocusable()</c> returns <c>true</c>.</summary>
        <value>
          <c>true</c> if the view is focusable or if the view contains a focusable
                    view, <c>false</c> otherwise</value>
        <remarks>
          <para>Returns true if this view is focusable or if it contains a reachable View
            for which <c>#hasExplicitFocusable()</c> returns <c>true</c>.
            A "reachable hasExplicitFocusable()" is a view whose parents do not block descendants focus.
            Only <c>#VISIBLE</c> views for which <c>#getFocusable()</c> would return
            <c>#FOCUSABLE</c> are considered focusable.</para>
          <para>This method preserves the pre-<c>Build.VERSION_CODES#O</c> behavior of
            <c>#hasFocusable()</c> in that only views explicitly set focusable will cause
            this method to return true. A view set to <c>#FOCUSABLE_AUTO</c> that resolves
            to focusable will not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasExplicitFocusable()" title="Reference documentation">Java documentation for <code>android.view.View.hasExplicitFocusable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasFocus { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocus" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasFocus" />
      <MemberSignature Language="F#" Value="member this.HasFocus : bool" Usage="Android.Views.View.HasFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasFocus", "()Z", "GetHasFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasFocus", "()Z", "GetHasFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has focus itself, or is the ancestor of the
            view that has focus.</summary>
        <value>True if this view has or contains focus, false otherwise.</value>
        <remarks>
          <para>Returns true if this view has focus itself, or is the ancestor of the
            view that has focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasFocus()" title="Reference documentation">Java documentation for <code>android.view.View.hasFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFocusable">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasFocusable { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasFocusable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFocusable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasFocusable" />
      <MemberSignature Language="F#" Value="member this.HasFocusable : bool" Usage="Android.Views.View.HasFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasFocusable", "()Z", "GetHasFocusableHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasFocusable", "()Z", "GetHasFocusableHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is focusable or if it contains a reachable View
            for which <c>#hasFocusable()</c> returns <c>true</c>.</summary>
        <value>
          <c>true</c> if the view is focusable or if the view contains a focusable
                    view, <c>false</c> otherwise</value>
        <remarks>
          <para>Returns true if this view is focusable or if it contains a reachable View
            for which <c>#hasFocusable()</c> returns <c>true</c>. A "reachable hasFocusable()"
            is a view whose parents do not block descendants focus.
            Only <c>#VISIBLE</c> views are considered focusable.</para>
          <para>As of <c>Build.VERSION_CODES#O</c> views that are determined to be focusable
            through <c>#FOCUSABLE_AUTO</c> will also cause this method to return <c>true</c>.
            Apps that declare a <c>android.content.pm.ApplicationInfo#targetSdkVersion</c> of
            earlier than <c>Build.VERSION_CODES#O</c> will continue to see this method return
            <c>false</c> for views not explicitly marked as focusable.
            Use <c>#hasExplicitFocusable()</c> if you require the pre-<c>Build.VERSION_CODES#O</c>
            behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasFocusable()" title="Reference documentation">Java documentation for <code>android.view.View.hasFocusable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.ViewGroup.TouchscreenBlocksFocus" />
      </Docs>
    </Member>
    <Member MemberName="HasNestedScrollingParent">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasNestedScrollingParent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasNestedScrollingParent { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasNestedScrollingParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNestedScrollingParent" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasNestedScrollingParent" />
      <MemberSignature Language="F#" Value="member this.HasNestedScrollingParent : bool" Usage="Android.Views.View.HasNestedScrollingParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has a nested scrolling parent.</summary>
        <value>whether this view has a nested scrolling parent</value>
        <remarks>
          <para>Returns true if this view has a nested scrolling parent.</para>
          <para>The presence of a nested scrolling parent indicates that this view has initiated
            a nested scroll and it was accepted by an ancestor view further up the view hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasNestedScrollingParent()" title="Reference documentation">Java documentation for <code>android.view.View.hasNestedScrollingParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOnClickListeners">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasOnClickListeners As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasOnClickListeners { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasOnClickListeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOnClickListeners" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasOnClickListeners" />
      <MemberSignature Language="F#" Value="member this.HasOnClickListeners : bool" Usage="Android.Views.View.HasOnClickListeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasOnClickListeners", "()Z", "GetHasOnClickListenersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasOnClickListeners", "()Z", "GetHasOnClickListenersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this view has an attached OnClickListener.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return whether this view has an attached OnClickListener.  Returns
            true if there is a listener, false if there is none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasOnClickListeners()" title="Reference documentation">Java documentation for <code>android.view.View.hasOnClickListeners()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="HasOnLongClickListeners">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasOnLongClickListeners As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasOnLongClickListeners { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasOnLongClickListeners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOnLongClickListeners" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasOnLongClickListeners" />
      <MemberSignature Language="F#" Value="member this.HasOnLongClickListeners : bool" Usage="Android.Views.View.HasOnLongClickListeners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasOnLongClickListeners", "()Z", "GetHasOnLongClickListenersHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasOnLongClickListeners", "()Z", "GetHasOnLongClickListenersHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this view has an attached OnLongClickListener.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return whether this view has an attached OnLongClickListener.  Returns
            true if there is a listener, false if there is none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasOnLongClickListeners()" title="Reference documentation">Java documentation for <code>android.view.View.hasOnLongClickListeners()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasOverlappingRendering">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasOverlappingRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasOverlappingRendering { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasOverlappingRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasOverlappingRendering" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasOverlappingRendering" />
      <MemberSignature Language="F#" Value="member this.HasOverlappingRendering : bool" Usage="Android.Views.View.HasOverlappingRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasOverlappingRendering", "()Z", "GetHasOverlappingRenderingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasOverlappingRendering", "()Z", "GetHasOverlappingRenderingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this View has content which overlaps.</summary>
        <value>true if the content in this view might overlap, false otherwise.</value>
        <remarks>
          <para>Returns whether this View has content which overlaps.</para>
          <para>This function, intended to be overridden by specific View types, is an optimization when
            alpha is set on a view. If rendering overlaps in a view with alpha &lt; 1, that view is drawn to
            an offscreen buffer and then composited into place, which can be expensive. If the view has
            no overlapping rendering, the view can draw each primitive with the appropriate alpha value
            directly. An example of overlapping rendering is a TextView with a background image, such as
            a Button. An example of non-overlapping rendering is a TextView with no background, or an
            ImageView with only the foreground image. The default implementation returns true; subclasses
            should override if they have cases which can be optimized.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The return value of this method is ignored if <c>#forceHasOverlappingRendering(boolean)</c> has been called on this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasOverlappingRendering()" title="Reference documentation">Java documentation for <code>android.view.View.hasOverlappingRendering()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HasPointerCapture">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasPointerCapture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasPointerCapture { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasPointerCapture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPointerCapture" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasPointerCapture" />
      <MemberSignature Language="F#" Value="member this.HasPointerCapture : bool" Usage="Android.Views.View.HasPointerCapture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasPointerCapture", "()Z", "GetHasPointerCaptureHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasPointerCapture", "()Z", "GetHasPointerCaptureHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks pointer capture status.</summary>
        <value>true if the view has pointer capture.</value>
        <remarks>
          <para>Checks pointer capture status.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasPointerCapture()" title="Reference documentation">Java documentation for <code>android.view.View.hasPointerCapture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasTransientState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HasTransientState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasTransientState { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasTransientState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasTransientState" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasTransientState" />
      <MemberSignature Language="F#" Value="member this.HasTransientState : bool with get, set" Usage="Android.Views.View.HasTransientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasTransientState", "()Z", "GetHasTransientStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasTransientState", "()Z", "GetHasTransientStateHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHasTransientState", "(Z)V", "GetSetHasTransientState_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHasTransientState", "(Z)V", "GetSetHasTransientState_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hasTransientState">true if this view has transient state</param>
        <summary>Indicates whether the view is currently tracking transient state that the
            app should not need to concern itself with saving and restoring, but that
            the framework should take special note to preserve when possible. -or- Set whether this view is currently tracking transient state that the
            framework should attempt to preserve when possible.</summary>
        <value>true if the view has transient state</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether the view is currently tracking transient state that the
            app should not need to concern itself with saving and restoring, but that
            the framework should take special note to preserve when possible.</para>
          <para>A view with transient state cannot be trivially rebound from an external
            data source, such as an adapter binding item views in a list. This may be
            because the view is performing an animation, tracking user selection
            of content, or similar.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasTransientState()" title="Reference documentation">Java documentation for <code>android.view.View.hasTransientState()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view is currently tracking transient state that the
            framework should attempt to preserve when possible. This flag is reference counted,
            so every call to setHasTransientState(true) should be paired with a later call
            to setHasTransientState(false).</para>
          <para>A view with transient state cannot be trivially rebound from an external
            data source, such as an adapter binding item views in a list. This may be
            because the view is performing an animation, tracking user selection
            of content, or similar.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHasTransientState(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setHasTransientState(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HasWindowFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HasWindowFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasWindowFocus { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool HasWindowFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasWindowFocus" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HasWindowFocus" />
      <MemberSignature Language="F#" Value="member this.HasWindowFocus : bool" Usage="Android.Views.View.HasWindowFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasWindowFocus", "()Z", "GetHasWindowFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasWindowFocus", "()Z", "GetHasWindowFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is in a window that currently has window focus.</summary>
        <value>True if this view is in a window that currently has window focus.</value>
        <remarks>
          <para>Returns true if this view is in a window that currently has window focus.
            Note that this is not the same as the view itself having focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#hasWindowFocus()" title="Reference documentation">Java documentation for <code>android.view.View.hasWindowFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Views.View.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the height of your view.</summary>
        <value>The height of your view, in pixels.</value>
        <remarks>
          <para>Return the height of your view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHeight()" title="Reference documentation">Java documentation for <code>android.view.View.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalFadingEdgeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalFadingEdgeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HorizontalFadingEdgeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool HorizontalFadingEdgeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalFadingEdgeEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
      <MemberSignature Language="F#" Value="member this.HorizontalFadingEdgeEnabled : bool with get, set" Usage="Android.Views.View.HorizontalFadingEdgeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHorizontalFadingEdgeEnabled", "()Z", "GetIsHorizontalFadingEdgeEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHorizontalFadingEdgeEnabled", "()Z", "GetIsHorizontalFadingEdgeEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHorizontalFadingEdgeEnabled", "(Z)V", "GetSetHorizontalFadingEdgeEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHorizontalFadingEdgeEnabled", "(Z)V", "GetSetHorizontalFadingEdgeEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="horizontalFadingEdgeEnabled">true if the horizontal edges should
                                               be faded when the view is scrolled
                                               horizontally</param>
        <summary>Indicate whether the horizontal edges are faded when the view is
            scrolled horizontally. -or- Define whether the horizontal edges should be faded when this view
            is scrolled horizontally.</summary>
        <value>true if the horizontal edges should are faded on scroll, false
                    otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicate whether the horizontal edges are faded when the view is
            scrolled horizontally.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHorizontalFadingEdgeEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isHorizontalFadingEdgeEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define whether the horizontal edges should be faded when this view
            is scrolled horizontally.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHorizontalFadingEdgeEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setHorizontalFadingEdgeEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalFadingEdgeLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HorizontalFadingEdgeLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HorizontalFadingEdgeLength { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int HorizontalFadingEdgeLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalFadingEdgeLength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalFadingEdgeLength" />
      <MemberSignature Language="F#" Value="member this.HorizontalFadingEdgeLength : int" Usage="Android.Views.View.HorizontalFadingEdgeLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHorizontalFadingEdgeLength", "()I", "GetGetHorizontalFadingEdgeLengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHorizontalFadingEdgeLength", "()I", "GetGetHorizontalFadingEdgeLengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the horizontal faded edges used to indicate that more
            content in this view is visible.</summary>
        <value>The size in pixels of the horizontal faded edge or 0 if horizontal
                    faded edges are not enabled for this view.</value>
        <remarks>
          <para>Returns the size of the horizontal faded edges used to indicate that more
            content in this view is visible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHorizontalFadingEdgeLength()" title="Reference documentation">Java documentation for <code>android.view.View.getHorizontalFadingEdgeLength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalScrollBarEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HorizontalScrollBarEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool HorizontalScrollBarEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HorizontalScrollBarEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalScrollBarEnabled" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarEnabled : bool with get, set" Usage="Android.Views.View.HorizontalScrollBarEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHorizontalScrollBarEnabled", "()Z", "GetIsHorizontalScrollBarEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHorizontalScrollBarEnabled", "()Z", "GetIsHorizontalScrollBarEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHorizontalScrollBarEnabled", "(Z)V", "GetSetHorizontalScrollBarEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHorizontalScrollBarEnabled", "(Z)V", "GetSetHorizontalScrollBarEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="horizontalScrollBarEnabled">true if the horizontal scrollbar should
                                              be painted</param>
        <summary>Indicate whether the horizontal scrollbar should be drawn or not. -or- Define whether the horizontal scrollbar should be drawn or not.</summary>
        <value>true if the horizontal scrollbar should be painted, false
                    otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicate whether the horizontal scrollbar should be drawn or not. The
            scrollbar is not drawn by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHorizontalScrollBarEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isHorizontalScrollBarEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define whether the horizontal scrollbar should be drawn or not. The
            scrollbar is not drawn by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHorizontalScrollBarEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setHorizontalScrollBarEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.HorizontalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbarHeight">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HorizontalScrollbarHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int HorizontalScrollbarHeight { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int HorizontalScrollbarHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HorizontalScrollbarHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalScrollbarHeight" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollbarHeight : int" Usage="Android.Views.View.HorizontalScrollbarHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHorizontalScrollbarHeight", "()I", "GetGetHorizontalScrollbarHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHorizontalScrollbarHeight", "()I", "GetGetHorizontalScrollbarHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the height of the horizontal scrollbar.</summary>
        <value>The height in pixels of the horizontal scrollbar or 0 if
                    there is no horizontal scrollbar.</value>
        <remarks>
          <para>Returns the height of the horizontal scrollbar.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHorizontalScrollbarHeight()" title="Reference documentation">Java documentation for <code>android.view.View.getHorizontalScrollbarHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbarThumbDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalScrollbarThumbDrawable As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ HorizontalScrollbarThumbDrawable { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? HorizontalScrollbarThumbDrawable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable HorizontalScrollbarThumbDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalScrollbarThumbDrawable" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollbarThumbDrawable : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.HorizontalScrollbarThumbDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHorizontalScrollbarThumbDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetHorizontalScrollbarThumbDrawableHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHorizontalScrollbarThumbDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetHorizontalScrollbarThumbDrawableHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHorizontalScrollbarThumbDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHorizontalScrollbarThumbDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHorizontalScrollbarThumbDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHorizontalScrollbarThumbDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currently configured Drawable for the thumb of the horizontal scroll bar if it
            exists, null otherwise. -or- Defines the horizontal thumb drawable</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the currently configured Drawable for the thumb of the horizontal scroll bar if it
            exists, null otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHorizontalScrollbarThumbDrawable()" title="Reference documentation">Java documentation for <code>android.view.View.getHorizontalScrollbarThumbDrawable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Defines the horizontal thumb drawable</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHorizontalScrollbarThumbDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setHorizontalScrollbarThumbDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollbarTrackDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalScrollbarTrackDrawable As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ HorizontalScrollbarTrackDrawable { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? HorizontalScrollbarTrackDrawable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable HorizontalScrollbarTrackDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.HorizontalScrollbarTrackDrawable" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollbarTrackDrawable : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.HorizontalScrollbarTrackDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHorizontalScrollbarTrackDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetHorizontalScrollbarTrackDrawableHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHorizontalScrollbarTrackDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetHorizontalScrollbarTrackDrawableHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHorizontalScrollbarTrackDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHorizontalScrollbarTrackDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHorizontalScrollbarTrackDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHorizontalScrollbarTrackDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currently configured Drawable for the track of the horizontal scroll bar if it
            exists, null otherwise. -or- Defines the horizontal track drawable</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the currently configured Drawable for the track of the horizontal scroll bar if it
            exists, null otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getHorizontalScrollbarTrackDrawable()" title="Reference documentation">Java documentation for <code>android.view.View.getHorizontalScrollbarTrackDrawable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Defines the horizontal track drawable</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHorizontalScrollbarTrackDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setHorizontalScrollbarTrackDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hover">
      <MemberSignature Language="VB.NET" Value="Public Custom Event Hover As EventHandler(Of View.HoverEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::HoverEventArgs ^&gt; ^ Hover;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.HoverEventArgs&gt; Hover;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/HoverEventArgs&gt; Hover" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.Hover" />
      <MemberSignature Language="F#" Value="member this.Hover : EventHandler&lt;Android.Views.View.HoverEventArgs&gt; " Usage="member this.Hover : System.EventHandler&lt;Android.Views.View.HoverEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+HoverEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hovered">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Hovered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Hovered { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Hovered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Hovered" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Hovered" />
      <MemberSignature Language="F#" Value="member this.Hovered : bool with get, set" Usage="Android.Views.View.Hovered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHovered", "()Z", "GetIsHoveredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHovered", "()Z", "GetIsHoveredHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setHovered", "(Z)V", "GetSetHovered_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setHovered", "(Z)V", "GetSetHovered_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hovered">True if the view is hovered.</param>
        <summary>Returns true if the view is currently hovered. -or- Sets whether the view is currently hovered.</summary>
        <value>True if the view is currently hovered.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if the view is currently hovered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHovered()" title="Reference documentation">Java documentation for <code>android.view.View.isHovered()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the view is currently hovered.</para>
          <para>Calling this method also changes the drawable state of the view.  This
            enables the view to react to hover by using different drawable resources
            to change its appearance.</para>
          <para>The <c>#onHoverChanged</c> method is called when the hovered state changes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHovered(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setHovered(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Id { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Id" />
      <MemberSignature Language="F#" Value="member this.Id : int with get, set" Usage="Android.Views.View.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getId", "()I", "GetGetIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getId", "()I", "GetGetIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setId", "(I)V", "GetSetId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setId", "(I)V", "GetSetId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="id">a number used to identify the view</param>
        <summary>Returns this view's identifier. -or- Sets the identifier for this view.</summary>
        <value>a positive integer used to identify the view or <c>#NO_ID</c>
                    if the view has no ID</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns this view's identifier.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getId()" title="Reference documentation">Java documentation for <code>android.view.View.getId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the identifier for this view. The identifier does not have to be
            unique in this view's hierarchy. The identifier should be a positive
            number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Views.View.NoId" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.FindViewById(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImportantForAccessibility As ImportantForAccessibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ImportantForAccessibility ImportantForAccessibility { Android::Views::ImportantForAccessibility get(); void set(Android::Views::ImportantForAccessibility value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ImportantForAccessibility ImportantForAccessibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ImportantForAccessibility ImportantForAccessibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ImportantForAccessibility" />
      <MemberSignature Language="F#" Value="member this.ImportantForAccessibility : Android.Views.ImportantForAccessibility with get, set" Usage="Android.Views.View.ImportantForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getImportantForAccessibility", "()I", "GetGetImportantForAccessibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getImportantForAccessibility", "()I", "GetGetImportantForAccessibilityHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setImportantForAccessibility", "(I)V", "GetSetImportantForAccessibility_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setImportantForAccessibility", "(I)V", "GetSetImportantForAccessibility_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">How to determine whether this view is important for accessibility.</param>
        <summary>Gets the mode for determining whether this View is important for accessibility. -or- Sets how to determine whether this view is important for accessibility
            which is if it fires accessibility events and if it is reported to
            accessibility services that query the screen.</summary>
        <value>The mode for determining whether a view is important for accessibility, one
            of <c>#IMPORTANT_FOR_ACCESSIBILITY_AUTO</c>, <c>#IMPORTANT_FOR_ACCESSIBILITY_YES</c>,
            <c>#IMPORTANT_FOR_ACCESSIBILITY_NO</c>, or
            <c>#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the mode for determining whether this View is important for accessibility.
            A view is important for accessibility if it fires accessibility events and if it
            is reported to accessibility services that query the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getImportantForAccessibility()" title="Reference documentation">Java documentation for <code>android.view.View.getImportantForAccessibility()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets how to determine whether this view is important for accessibility
            which is if it fires accessibility events and if it is reported to
            accessibility services that query the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setImportantForAccessibility(int)" title="Reference documentation">Java documentation for <code>android.view.View.setImportantForAccessibility(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityYes" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNo" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityNoHideDescendants" />
        <altmember cref="F:Android.Views.View.ImportantForAccessibilityAuto" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityAuto">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAccessibilityAuto As ImportantForAccessibility  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAccessibility ImportantForAccessibilityAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAccessibilityAuto" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAccessibilityAuto : Android.Views.ImportantForAccessibility" Usage="Android.Views.View.ImportantForAccessibilityAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_AUTO")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_AUTO")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether a view is important for accessibility.</summary>
        <remarks>
          <para>Automatically determine whether a view is important for accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_ACCESSIBILITY_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_ACCESSIBILITY_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityNo">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAccessibilityNo As ImportantForAccessibility  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAccessibility ImportantForAccessibilityNo = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityNo = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAccessibilityNo" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAccessibilityNo : Android.Views.ImportantForAccessibility" Usage="Android.Views.View.ImportantForAccessibilityNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The view is not important for accessibility.</summary>
        <remarks>
          <para>The view is not important for accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_ACCESSIBILITY_NO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_ACCESSIBILITY_NO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityNoHideDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAccessibilityNoHideDescendants As ImportantForAccessibility  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAccessibility ImportantForAccessibilityNoHideDescendants = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityNoHideDescendants = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityNoHideDescendants = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAccessibilityNoHideDescendants" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAccessibilityNoHideDescendants : Android.Views.ImportantForAccessibility" Usage="Android.Views.View.ImportantForAccessibilityNoHideDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The view is not important for accessibility, nor are any of its
            descendant views.</summary>
        <remarks>
          <para>The view is not important for accessibility, nor are any of its
            descendant views.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAccessibilityYes">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAccessibilityYes As ImportantForAccessibility  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAccessibility ImportantForAccessibilityYes = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAccessibility ImportantForAccessibilityYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAccessibility ImportantForAccessibilityYes = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAccessibilityYes" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAccessibilityYes : Android.Views.ImportantForAccessibility" Usage="Android.Views.View.ImportantForAccessibilityYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_YES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_ACCESSIBILITY_YES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAccessibility enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAccessibility</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The view is important for accessibility.</summary>
        <remarks>
          <para>The view is important for accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_ACCESSIBILITY_YES" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_ACCESSIBILITY_YES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofill">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImportantForAutofill As ImportantForAutofill" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ImportantForAutofill ImportantForAutofill { Android::Views::ImportantForAutofill get(); void set(Android::Views::ImportantForAutofill value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ImportantForAutofill ImportantForAutofill { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ImportantForAutofill ImportantForAutofill" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ImportantForAutofill" />
      <MemberSignature Language="F#" Value="member this.ImportantForAutofill : Android.Views.ImportantForAutofill with get, set" Usage="Android.Views.View.ImportantForAutofill" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getImportantForAutofill", "()I", "GetGetImportantForAutofillHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getImportantForAutofill", "()I", "GetGetImportantForAutofillHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setImportantForAutofill", "(I)V", "GetSetImportantForAutofill_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setImportantForAutofill", "(I)V", "GetSetImportantForAutofill_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">
          <c>#IMPORTANT_FOR_AUTOFILL_AUTO</c>, <c>#IMPORTANT_FOR_AUTOFILL_YES</c>,
            <c>#IMPORTANT_FOR_AUTOFILL_NO</c>, <c>#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS</c>,
            or <c>#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</c>.</param>
        <summary>Gets the mode for determining whether this view is important for autofill. -or- Sets the mode for determining whether this view is considered important for autofill.</summary>
        <value>
          <c>#IMPORTANT_FOR_AUTOFILL_AUTO</c> by default, or value passed to
            <c>#setImportantForAutofill(int)</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the mode for determining whether this view is important for autofill.</para>
          <para>See <c>#setImportantForAutofill(int)</c> and <c>#isImportantForAutofill()</c> for more
            info about this mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getImportantForAutofill()" title="Reference documentation">Java documentation for <code>android.view.View.getImportantForAutofill()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the mode for determining whether this view is considered important for autofill.</para>
          <para>The platform determines the importance for autofill automatically but you
            can use this method to customize the behavior. For example:
            
            &lt;ol&gt;
              &lt;li&gt;When the view contents is irrelevant for autofill (for example, a text field used in a
                  "Captcha" challenge), it should be <c>#IMPORTANT_FOR_AUTOFILL_NO</c>.
              &lt;li&gt;When both the view and its children are irrelevant for autofill (for example, the root
                  view of an activity containing a spreadhseet editor), it should be
                  <c>#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</c>.
              &lt;li&gt;When the view content is relevant for autofill but its children aren't (for example,
                  a credit card expiration date represented by a custom view that overrides the proper
                  autofill methods and has 2 children representing the month and year), it should
                  be <c>#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS</c>.
            &lt;/ol&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; Setting the mode as <c>#IMPORTANT_FOR_AUTOFILL_NO</c> or
            <c>#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</c> does not guarantee the view (and its
            children) will not be used for autofill purpose; for example, when the user explicitly
            makes an autofill request, all views are included in the ViewStructure, and starting in
            <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> the system uses other factors along
            with importance to determine the autofill behavior. See <c>#isImportantForAutofill()</c>
            for more details about how the View's importance for autofill is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setImportantForAutofill(int)" title="Reference documentation">Java documentation for <code>android.view.View.setImportantForAutofill(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofillAuto">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAutofillAuto As ImportantForAutofill  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAutofill ImportantForAutofillAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAutofill ImportantForAutofillAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAutofill ImportantForAutofillAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAutofillAuto" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAutofillAuto : Android.Views.ImportantForAutofill" Usage="Android.Views.View.ImportantForAutofillAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_AUTO", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_AUTO", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether a view is important for autofill.</summary>
        <remarks>
          <para>Automatically determine whether a view is important for autofill.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_AUTOFILL_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_AUTOFILL_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofillNo">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAutofillNo As ImportantForAutofill  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAutofill ImportantForAutofillNo = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAutofill ImportantForAutofillNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAutofill ImportantForAutofillNo = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAutofillNo" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAutofillNo : Android.Views.ImportantForAutofill" Usage="Android.Views.View.ImportantForAutofillNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_NO", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_NO", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The view is not important for autofill, but its children (if any) will be traversed.</summary>
        <remarks>
          <para>The view is not important for autofill, but its children (if any) will be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_AUTOFILL_NO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_AUTOFILL_NO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofillNoExcludeDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAutofillNoExcludeDescendants As ImportantForAutofill  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAutofill ImportantForAutofillNoExcludeDescendants = 8;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAutofill ImportantForAutofillNoExcludeDescendants = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAutofill ImportantForAutofillNoExcludeDescendants = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAutofillNoExcludeDescendants" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAutofillNoExcludeDescendants : Android.Views.ImportantForAutofill" Usage="Android.Views.View.ImportantForAutofillNoExcludeDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>The view is not important for autofill, and its children (if any) will not be traversed.</summary>
        <remarks>
          <para>The view is not important for autofill, and its children (if any) will not be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofillYes">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAutofillYes As ImportantForAutofill  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAutofill ImportantForAutofillYes = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAutofill ImportantForAutofillYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAutofill ImportantForAutofillYes = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAutofillYes" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAutofillYes : Android.Views.ImportantForAutofill" Usage="Android.Views.View.ImportantForAutofillYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_YES", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_YES", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The view is important for autofill, and its children (if any) will be traversed.</summary>
        <remarks>
          <para>The view is important for autofill, and its children (if any) will be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_AUTOFILL_YES" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_AUTOFILL_YES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForAutofillYesExcludeDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForAutofillYesExcludeDescendants As ImportantForAutofill  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ImportantForAutofill ImportantForAutofillYesExcludeDescendants = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ImportantForAutofill ImportantForAutofillYesExcludeDescendants = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ImportantForAutofill ImportantForAutofillYesExcludeDescendants = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForAutofillYesExcludeDescendants" />
      <MemberSignature Language="F#" Value="val mutable ImportantForAutofillYesExcludeDescendants : Android.Views.ImportantForAutofill" Usage="Android.Views.View.ImportantForAutofillYesExcludeDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ImportantForAutofill enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ImportantForAutofill</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The view is important for autofill, but its children (if any) will not be traversed.</summary>
        <remarks>
          <para>The view is important for autofill, but its children (if any) will not be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCapture">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImportantForContentCapture As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ImportantForContentCapture { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ImportantForContentCapture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImportantForContentCapture" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ImportantForContentCapture" />
      <MemberSignature Language="F#" Value="member this.ImportantForContentCapture : int with get, set" Usage="Android.Views.View.ImportantForContentCapture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getImportantForContentCapture", "()I", "GetGetImportantForContentCaptureHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getImportantForContentCapture", "()I", "GetGetImportantForContentCaptureHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setImportantForContentCapture", "(I)V", "GetSetImportantForContentCapture_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setImportantForContentCapture", "(I)V", "GetSetImportantForContentCapture_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">
          <c>#IMPORTANT_FOR_CONTENT_CAPTURE_AUTO</c>,
            <c>#IMPORTANT_FOR_CONTENT_CAPTURE_YES</c>, <c>#IMPORTANT_FOR_CONTENT_CAPTURE_NO</c>,
            <c>#IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS</c>,
            or <c>#IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS</c>.</param>
        <summary>Gets the mode for determining whether this view is important for content capture. -or- Sets the mode for determining whether this view is considered important for content capture.</summary>
        <value>
          <c>#IMPORTANT_FOR_CONTENT_CAPTURE_AUTO</c> by default, or value passed to
            <c>#setImportantForContentCapture(int)</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the mode for determining whether this view is important for content capture.</para>
          <para>See <c>#setImportantForContentCapture(int)</c> and
            <c>#isImportantForContentCapture()</c> for more info about this mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getImportantForContentCapture()" title="Reference documentation">Java documentation for <code>android.view.View.getImportantForContentCapture()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the mode for determining whether this view is considered important for content capture.</para>
          <para>The platform determines the importance for autofill automatically but you
            can use this method to customize the behavior. Typically, a view that provides text should
            be marked as <c>#IMPORTANT_FOR_CONTENT_CAPTURE_YES</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setImportantForContentCapture(int)" title="Reference documentation">Java documentation for <code>android.view.View.setImportantForContentCapture(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCaptureAuto">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForContentCaptureAuto As ViewImportantForContentCapture  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewImportantForContentCapture ImportantForContentCaptureAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewImportantForContentCapture ImportantForContentCaptureAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewImportantForContentCapture ImportantForContentCaptureAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForContentCaptureAuto" />
      <MemberSignature Language="F#" Value="val mutable ImportantForContentCaptureAuto : Android.Views.ViewImportantForContentCapture" Usage="Android.Views.View.ImportantForContentCaptureAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_AUTO", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_AUTO", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewImportantForContentCapture</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Automatically determine whether a view is important for content capture.</summary>
        <remarks>
          <para>Automatically determine whether a view is important for content capture.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_CONTENT_CAPTURE_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_CONTENT_CAPTURE_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCaptureNo">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForContentCaptureNo As ViewImportantForContentCapture  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewImportantForContentCapture ImportantForContentCaptureNo = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewImportantForContentCapture ImportantForContentCaptureNo = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewImportantForContentCapture ImportantForContentCaptureNo = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForContentCaptureNo" />
      <MemberSignature Language="F#" Value="val mutable ImportantForContentCaptureNo : Android.Views.ViewImportantForContentCapture" Usage="Android.Views.View.ImportantForContentCaptureNo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_NO", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_NO", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewImportantForContentCapture</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The view is not important for content capture, but its children (if any) will be traversed.</summary>
        <remarks>
          <para>The view is not important for content capture, but its children (if any) will be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_CONTENT_CAPTURE_NO" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_CONTENT_CAPTURE_NO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCaptureNoExcludeDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForContentCaptureNoExcludeDescendants As ViewImportantForContentCapture  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewImportantForContentCapture ImportantForContentCaptureNoExcludeDescendants = 8;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewImportantForContentCapture ImportantForContentCaptureNoExcludeDescendants = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewImportantForContentCapture ImportantForContentCaptureNoExcludeDescendants = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForContentCaptureNoExcludeDescendants" />
      <MemberSignature Language="F#" Value="val mutable ImportantForContentCaptureNoExcludeDescendants : Android.Views.ViewImportantForContentCapture" Usage="Android.Views.View.ImportantForContentCaptureNoExcludeDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewImportantForContentCapture</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>The view is not important for content capture, and its children (if any) will not be
            traversed.</summary>
        <remarks>
          <para>The view is not important for content capture, and its children (if any) will not be
            traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCaptureYes">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForContentCaptureYes As ViewImportantForContentCapture  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewImportantForContentCapture ImportantForContentCaptureYes = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewImportantForContentCapture ImportantForContentCaptureYes = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewImportantForContentCapture ImportantForContentCaptureYes = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForContentCaptureYes" />
      <MemberSignature Language="F#" Value="val mutable ImportantForContentCaptureYes : Android.Views.ViewImportantForContentCapture" Usage="Android.Views.View.ImportantForContentCaptureYes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_YES", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_YES", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewImportantForContentCapture</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The view is important for content capture, and its children (if any) will be traversed.</summary>
        <remarks>
          <para>The view is important for content capture, and its children (if any) will be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_CONTENT_CAPTURE_YES" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_CONTENT_CAPTURE_YES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportantForContentCaptureYesExcludeDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ImportantForContentCaptureYesExcludeDescendants As ViewImportantForContentCapture  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewImportantForContentCapture ImportantForContentCaptureYesExcludeDescendants = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewImportantForContentCapture ImportantForContentCaptureYesExcludeDescendants = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewImportantForContentCapture ImportantForContentCaptureYesExcludeDescendants = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ImportantForContentCaptureYesExcludeDescendants" />
      <MemberSignature Language="F#" Value="val mutable ImportantForContentCaptureYesExcludeDescendants : Android.Views.ViewImportantForContentCapture" Usage="Android.Views.View.ImportantForContentCaptureYesExcludeDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewImportantForContentCapture enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewImportantForContentCapture</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>The view is important for content capture, but its children (if any) will not be traversed.</summary>
        <remarks>
          <para>The view is important for content capture, but its children (if any) will not be traversed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Inflate (context As Context, resource As Integer, root As ViewGroup) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Views::View ^ Inflate(Android::Content::Context ^ context, int resource, Android::Views::ViewGroup ^ root);" />
      <MemberSignature Language="C#" Value="public static Android.Views.View? Inflate (Android.Content.Context? context, int resource, Android.Views.ViewGroup? root);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.View Inflate(class Android.Content.Context context, int32 resource, class Android.Views.ViewGroup root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Inflate(Android.Content.Context,System.Int32,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="static member Inflate : Android.Content.Context * int * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="Android.Views.View.Inflate (context, resource, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(Landroid/content/Context;ILandroid/view/ViewGroup;)Landroid/view/View;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="context">The Context object for your activity or application.</param>
        <param name="resource">The resource ID to inflate</param>
        <param name="root">A view group that will be the parent.  Used to properly inflate the
            layout_* parameters.</param>
        <summary>Inflate a view from an XML resource.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Inflate a view from an XML resource.  This convenience method wraps the <c>LayoutInflater</c> class, which provides a full range of options for view inflation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#inflate(android.content.Context,%20int,%20android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.view.View.inflate(android.content.Context, int, android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.LayoutInflater" />
      </Docs>
    </Member>
    <Member MemberName="InitializeFadingEdge">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeFadingEdge (a As TypedArray)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeFadingEdge(Android::Content::Res::TypedArray ^ a);" />
      <MemberSignature Language="C#" Value="protected virtual void InitializeFadingEdge (Android.Content.Res.TypedArray? a);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeFadingEdge(class Android.Content.Res.TypedArray a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.InitializeFadingEdge(Android.Content.Res.TypedArray)" />
      <MemberSignature Language="F#" Value="abstract member InitializeFadingEdge : Android.Content.Res.TypedArray -&gt; unit&#xA;override this.InitializeFadingEdge : Android.Content.Res.TypedArray -&gt; unit" Usage="view.InitializeFadingEdge a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initializeFadingEdge", "(Landroid/content/res/TypedArray;)V", "GetInitializeFadingEdge_Landroid_content_res_TypedArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initializeFadingEdge", "(Landroid/content/res/TypedArray;)V", "GetInitializeFadingEdge_Landroid_content_res_TypedArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Content.Res.TypedArray" />
      </Parameters>
      <Docs>
        <param name="a">the styled attributes set to initialize the fading edges from</param>
        <summary>Initializes the fading edges from a given set of styled attributes.</summary>
        <remarks>
          <para>Initializes the fading edges from a given set of styled attributes. This
            method should be called by subclasses that need fading edges and when an
            instance of these subclasses is created programmatically rather than
            being inflated from XML. This method is automatically called when the XML
            is inflated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#initializeFadingEdge(android.content.res.TypedArray)" title="Reference documentation">Java documentation for <code>android.view.View.initializeFadingEdge(android.content.res.TypedArray)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InitializeScrollbars">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeScrollbars (a As TypedArray)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeScrollbars(Android::Content::Res::TypedArray ^ a);" />
      <MemberSignature Language="C#" Value="protected virtual void InitializeScrollbars (Android.Content.Res.TypedArray? a);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeScrollbars(class Android.Content.Res.TypedArray a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.InitializeScrollbars(Android.Content.Res.TypedArray)" />
      <MemberSignature Language="F#" Value="abstract member InitializeScrollbars : Android.Content.Res.TypedArray -&gt; unit&#xA;override this.InitializeScrollbars : Android.Content.Res.TypedArray -&gt; unit" Usage="view.InitializeScrollbars a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("initializeScrollbars", "(Landroid/content/res/TypedArray;)V", "GetInitializeScrollbars_Landroid_content_res_TypedArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("initializeScrollbars", "(Landroid/content/res/TypedArray;)V", "GetInitializeScrollbars_Landroid_content_res_TypedArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Content.Res.TypedArray" />
      </Parameters>
      <Docs>
        <param name="a">the styled attributes set to initialize the scrollbars from</param>
        <summary>Initializes the scrollbars from a given set of styled attributes.</summary>
        <remarks>
          <para>Initializes the scrollbars from a given set of styled attributes. This
            method should be called by subclasses that need scrollbars and when an
            instance of these subclasses is created programmatically rather than
            being inflated from XML. This method is automatically called when the XML
            is inflated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#initializeScrollbars(android.content.res.TypedArray)" title="Reference documentation">Java documentation for <code>android.view.View.initializeScrollbars(android.content.res.TypedArray)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invalidate();" />
      <MemberSignature Language="C#" Value="public virtual void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Invalidate" />
      <MemberSignature Language="F#" Value="abstract member Invalidate : unit -&gt; unit&#xA;override this.Invalidate : unit -&gt; unit" Usage="view.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidate", "()V", "GetInvalidateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidate", "()V", "GetInvalidateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invalidate the whole view.</summary>
        <remarks>
          <para>Invalidate the whole view. If the view is visible,
            <c>#onDraw(android.graphics.Canvas)</c> will be called at some point in
            the future.</para>
          <para>This must be called from a UI thread. To call from a non-UI thread, call
            <c>#postInvalidate()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#invalidate()" title="Reference documentation">Java documentation for <code>android.view.View.invalidate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invalidate (dirty As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invalidate(Android::Graphics::Rect ^ dirty);" />
      <MemberSignature Language="C#" Value="public virtual void Invalidate (Android.Graphics.Rect? dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate(class Android.Graphics.Rect dirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member Invalidate : Android.Graphics.Rect -&gt; unit&#xA;override this.Invalidate : Android.Graphics.Rect -&gt; unit" Usage="view.Invalidate dirty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidate", "(Landroid/graphics/Rect;)V", "GetInvalidate_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidate", "(Landroid/graphics/Rect;)V", "GetInvalidate_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="dirty">the rectangle representing the bounds of the dirty region</param>
        <summary>Mark the area defined by dirty as needing to be drawn.</summary>
        <remarks>
          <para>Mark the area defined by dirty as needing to be drawn. If the view is
            visible, <c>#onDraw(android.graphics.Canvas)</c> will be called at some
            point in the future.</para>
          <para>This must be called from a UI thread. To call from a non-UI thread, call
            <c>#postInvalidate()</c>.</para>
          <para>&lt;b&gt;WARNING:&lt;/b&gt; In API 19 and below, this method may be destructive to
            <c>dirty</c>.</para>
          <para>This member is deprecated. The switch to hardware accelerated rendering in API 14 reduced
            the importance of the dirty rectangle. In API 21 the given rectangle is
            ignored entirely in favor of an internally-calculated area instead.
            Because of this, clients are encouraged to just call <c>#invalidate()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#invalidate(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.invalidate(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Invalidate (l As Integer, t As Integer, r As Integer, b As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Invalidate(int l, int t, int r, int b);" />
      <MemberSignature Language="C#" Value="public virtual void Invalidate (int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invalidate(int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Invalidate(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Invalidate : int * int * int * int -&gt; unit&#xA;override this.Invalidate : int * int * int * int -&gt; unit" Usage="view.Invalidate (l, t, r, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidate", "(IIII)V", "GetInvalidate_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidate", "(IIII)V", "GetInvalidate_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">the left position of the dirty region</param>
        <param name="t">the top position of the dirty region</param>
        <param name="r">the right position of the dirty region</param>
        <param name="b">the bottom position of the dirty region</param>
        <summary>Mark the area defined by the rect (l,t,r,b) as needing to be drawn.</summary>
        <remarks>
          <para>Mark the area defined by the rect (l,t,r,b) as needing to be drawn. The
            coordinates of the dirty rect are relative to the view. If the view is
            visible, <c>#onDraw(android.graphics.Canvas)</c> will be called at some
            point in the future.</para>
          <para>This must be called from a UI thread. To call from a non-UI thread, call
            <c>#postInvalidate()</c>.</para>
          <para>This member is deprecated. The switch to hardware accelerated rendering in API 14 reduced
            the importance of the dirty rectangle. In API 21 the given rectangle is
            ignored entirely in favor of an internally-calculated area instead.
            Because of this, clients are encouraged to just call <c>#invalidate()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#invalidate(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.invalidate(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InvalidateDrawable (drawable As Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InvalidateDrawable(Android::Graphics::Drawables::Drawable ^ drawable);" />
      <MemberSignature Language="C#" Value="public virtual void InvalidateDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.InvalidateDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member InvalidateDrawable : Android.Graphics.Drawables.Drawable -&gt; unit&#xA;override this.InvalidateDrawable : Android.Graphics.Drawables.Drawable -&gt; unit" Usage="view.InvalidateDrawable drawable" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.Drawable.ICallback.InvalidateDrawable(Android.Graphics.Drawables.Drawable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">the drawable to invalidate</param>
        <summary>Invalidates the specified Drawable.</summary>
        <remarks>
          <para>Invalidates the specified Drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#invalidateDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.invalidateDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateOutline">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InvalidateOutline ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InvalidateOutline();" />
      <MemberSignature Language="C#" Value="public virtual void InvalidateOutline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidateOutline() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.InvalidateOutline" />
      <MemberSignature Language="F#" Value="abstract member InvalidateOutline : unit -&gt; unit&#xA;override this.InvalidateOutline : unit -&gt; unit" Usage="view.InvalidateOutline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidateOutline", "()V", "GetInvalidateOutlineHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidateOutline", "()V", "GetInvalidateOutlineHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called to rebuild this View's Outline from its <c>ViewOutlineProvider outline provider</c></summary>
        <remarks>
          <para>Called to rebuild this View's Outline from its <c>ViewOutlineProvider outline provider</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#invalidateOutline()" title="Reference documentation">Java documentation for <code>android.view.View.invalidateOutline()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="InvokeFitsSystemWindows">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InvokeFitsSystemWindows () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InvokeFitsSystemWindows();" />
      <MemberSignature Language="C#" Value="public virtual bool InvokeFitsSystemWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InvokeFitsSystemWindows() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.InvokeFitsSystemWindows" />
      <MemberSignature Language="F#" Value="abstract member InvokeFitsSystemWindows : unit -&gt; bool&#xA;override this.InvokeFitsSystemWindows : unit -&gt; bool" Usage="view.InvokeFitsSystemWindows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fitsSystemWindows", "()Z", "GetInvokeFitsSystemWindowsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fitsSystemWindows", "()Z", "GetInvokeFitsSystemWindowsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("The View.fitsSystemWindows() method was REMOVED by Google in API-16. DO NOT USE.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The View.fitsSystemWindows() method was REMOVED by Google in API-16. DO NOT USE.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#fitsSystemWindows()" title="Reference documentation">Java documentation for <code>android.view.View.fitsSystemWindows()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessibilityDataSensitive">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAccessibilityDataSensitive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAccessibilityDataSensitive { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsAccessibilityDataSensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessibilityDataSensitive" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsAccessibilityDataSensitive" />
      <MemberSignature Language="F#" Value="member this.IsAccessibilityDataSensitive : bool" Usage="Android.Views.View.IsAccessibilityDataSensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAccessibilityDataSensitive", "()Z", "GetIsAccessibilityDataSensitiveHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAccessibilityDataSensitive", "()Z", "GetIsAccessibilityDataSensitiveHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Whether this view should restrict accessibility service access only to services that have the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</summary>
        <value>True if this view should restrict accessibility service access to services that have
            the isAccessibilityTool property.</value>
        <remarks>
          <para>Whether this view should restrict accessibility service access only to services that have the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</para>
          <para>See default behavior provided by <c>#ACCESSIBILITY_DATA_SENSITIVE_AUTO</c>. Otherwise,
            returns true for <c>#ACCESSIBILITY_DATA_SENSITIVE_YES</c> or false for <c>#ACCESSIBILITY_DATA_SENSITIVE_NO</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isAccessibilityDataSensitive()" title="Reference documentation">Java documentation for <code>android.view.View.isAccessibilityDataSensitive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessibilityFocused">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAccessibilityFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAccessibilityFocused { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsAccessibilityFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAccessibilityFocused" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsAccessibilityFocused" />
      <MemberSignature Language="F#" Value="member this.IsAccessibilityFocused : bool" Usage="Android.Views.View.IsAccessibilityFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this View is accessibility focused.</summary>
        <value>True if this View is accessibility focused.</value>
        <remarks>
          <para>Returns whether this View is accessibility focused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isAccessibilityFocused()" title="Reference documentation">Java documentation for <code>android.view.View.isAccessibilityFocused()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttachedToWindow">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttachedToWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttachedToWindow { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsAttachedToWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachedToWindow" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsAttachedToWindow" />
      <MemberSignature Language="F#" Value="member this.IsAttachedToWindow : bool" Usage="Android.Views.View.IsAttachedToWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAttachedToWindow", "()Z", "GetIsAttachedToWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAttachedToWindow", "()Z", "GetIsAttachedToWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view is currently attached to a window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if this view is currently attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isAttachedToWindow()" title="Reference documentation">Java documentation for <code>android.view.View.isAttachedToWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCredential">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsCredential As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCredential { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCredential" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsCredential" />
      <MemberSignature Language="F#" Value="member this.IsCredential : bool with get, set" Usage="Android.Views.View.IsCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCredential", "()Z", "GetIsCredentialHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCredential", "()Z", "GetIsCredentialHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setIsCredential", "(Z)V", "GetSetIsCredential_ZHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setIsCredential", "(Z)V", "GetSetIsCredential_ZHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="isCredential">Whether the view is a credential.</param>
        <summary>Gets the mode for determining whether this view is a credential. -or- Sets whether this view is a credential for Credential Manager purposes.</summary>
        <value>false by default, or value passed to <c>#setIsCredential(boolean)</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the mode for determining whether this view is a credential.</para>
          <para>See <c>#setIsCredential(boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isCredential()" title="Reference documentation">Java documentation for <code>android.view.View.isCredential()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether this view is a credential for Credential Manager purposes.</para>
          <para>See <c>#isCredential()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setIsCredential(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setIsCredential(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDirty { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsDirty" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Android.Views.View.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDirty", "()Z", "GetIsDirtyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDirty", "()Z", "GetIsDirtyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>True if this view has changed since the last time being drawn.</summary>
        <value>The dirty state of this view.</value>
        <remarks>
          <para>True if this view has changed since the last time being drawn.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isDirty()" title="Reference documentation">Java documentation for <code>android.view.View.isDirty()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFocused { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsFocused" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="Android.Views.View.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFocused", "()Z", "GetIsFocusedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFocused", "()Z", "GetIsFocusedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has focus</summary>
        <value>True if this view has focus, false otherwise.</value>
        <remarks>
          <para>Returns true if this view has focus</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isFocused()" title="Reference documentation">Java documentation for <code>android.view.View.isFocused()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHandwritingDelegate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsHandwritingDelegate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsHandwritingDelegate { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsHandwritingDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHandwritingDelegate" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsHandwritingDelegate" />
      <MemberSignature Language="F#" Value="member this.IsHandwritingDelegate : bool with get, set" Usage="Android.Views.View.IsHandwritingDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHandwritingDelegate", "()Z", "GetIsHandwritingDelegateHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHandwritingDelegate", "()Z", "GetIsHandwritingDelegateHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setIsHandwritingDelegate", "(Z)V", "GetSetIsHandwritingDelegate_ZHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setIsHandwritingDelegate", "(Z)V", "GetSetIsHandwritingDelegate_ZHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="isHandwritingDelegate">whether this view is a handwriting initiation delegate</param>
        <summary>Returns whether this view has been set as a handwriting delegate by <c>#setIsHandwritingDelegate</c>. -or- Sets this view to be a handwriting delegate.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this view has been set as a handwriting delegate by <c>#setIsHandwritingDelegate</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHandwritingDelegate()" title="Reference documentation">Java documentation for <code>android.view.View.isHandwritingDelegate()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets this view to be a handwriting delegate. If a delegate view creates an input connection
            while a stylus <c>MotionEvent</c> sequence from a delegator view is ongoing, handwriting
            mode will be initiated for the delegate view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setIsHandwritingDelegate(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setIsHandwritingDelegate(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHardwareAccelerated">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsHardwareAccelerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsHardwareAccelerated { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsHardwareAccelerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHardwareAccelerated" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsHardwareAccelerated" />
      <MemberSignature Language="F#" Value="member this.IsHardwareAccelerated : bool" Usage="Android.Views.View.IsHardwareAccelerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHardwareAccelerated", "()Z", "GetIsHardwareAcceleratedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHardwareAccelerated", "()Z", "GetIsHardwareAcceleratedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view is attached to a hardware accelerated
            window or not.</summary>
        <value>True if the view is attached to a window and the window is
                    hardware accelerated; false in any other case.</value>
        <remarks>
          <para>Indicates whether this view is attached to a hardware accelerated
            window or not.</para>
          <para>Even if this method returns true, it does not mean that every call
            to <c>#draw(android.graphics.Canvas)</c> will be made with an hardware
            accelerated <c>android.graphics.Canvas</c>. For instance, if this view
            is drawn onto an offscreen <c>android.graphics.Bitmap</c> and its
            window is hardware accelerated,
            <c>android.graphics.Canvas#isHardwareAccelerated()</c> will likely
            return false, and this method will return true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isHardwareAccelerated()" title="Reference documentation">Java documentation for <code>android.view.View.isHardwareAccelerated()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsImportantForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsImportantForAccessibility As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsImportantForAccessibility { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsImportantForAccessibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImportantForAccessibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsImportantForAccessibility" />
      <MemberSignature Language="F#" Value="member this.IsImportantForAccessibility : bool" Usage="Android.Views.View.IsImportantForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isImportantForAccessibility", "()Z", "GetIsImportantForAccessibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isImportantForAccessibility", "()Z", "GetIsImportantForAccessibilityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Computes whether this view should be exposed for accessibility.</summary>
        <value>Whether the view is exposed for accessibility.</value>
        <remarks>
          <para>Computes whether this view should be exposed for accessibility. In
            general, views that are interactive or provide information are exposed
            while views that serve only as containers are hidden.</para>
          <para>If an ancestor of this view has importance
            <c>#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</c>, this method
            returns <c>false</c>.</para>
          <para>Otherwise, the value is computed according to the view's
            <c>#getImportantForAccessibility()</c> value:
            &lt;ol&gt;
            &lt;li&gt;<c>#IMPORTANT_FOR_ACCESSIBILITY_NO</c> or
            <c>#IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS</c>, return <c>false
            </c>&lt;li&gt;<c>#IMPORTANT_FOR_ACCESSIBILITY_YES</c>, return <c>true</c>&lt;li&gt;<c>#IMPORTANT_FOR_ACCESSIBILITY_AUTO</c>, return <c>true</c> if
            view satisfies any of the following:
            &lt;ul&gt;
            &lt;li&gt;Is actionable, e.g. <c>#isClickable()</c>,
            <c>#isLongClickable()</c>, or <c>#isFocusable()</c>&lt;li&gt;Has an <c>AccessibilityDelegate</c>&lt;li&gt;Has an interaction listener, e.g. <c>OnTouchListener</c>,
            <c>OnKeyListener</c>, etc.
            &lt;li&gt;Is an accessibility live region, e.g.
            <c>#getAccessibilityLiveRegion()</c> is not
            <c>#ACCESSIBILITY_LIVE_REGION_NONE</c>.
            &lt;/ul&gt;
            &lt;li&gt;Has an accessibility pane title, see <c>#setAccessibilityPaneTitle</c>&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isImportantForAccessibility()" title="Reference documentation">Java documentation for <code>android.view.View.isImportantForAccessibility()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.ImportantForAccessibility" />
      </Docs>
    </Member>
    <Member MemberName="IsImportantForAutofill">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImportantForAutofill As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImportantForAutofill { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsImportantForAutofill { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImportantForAutofill" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsImportantForAutofill" />
      <MemberSignature Language="F#" Value="member this.IsImportantForAutofill : bool" Usage="Android.Views.View.IsImportantForAutofill" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isImportantForAutofill", "()Z", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isImportantForAutofill", "()Z", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hints the Android System whether the <c>android.app.assist.AssistStructure.ViewNode</c>
            associated with this view is considered important for autofill purposes.</summary>
        <value>whether the view is considered important for autofill.</value>
        <remarks>
          <para>Hints the Android System whether the <c>android.app.assist.AssistStructure.ViewNode</c>
            associated with this view is considered important for autofill purposes.</para>
          <para>Generally speaking, a view is important for autofill if:
            &lt;ol&gt;
            &lt;li&gt;The view can be autofilled by an <c>android.service.autofill.AutofillService</c>.
            &lt;li&gt;The view contents can help an <c>android.service.autofill.AutofillService</c>
                determine how other views can be autofilled.
            &lt;ol&gt;</para>
          <para>For example, view containers should typically return <c>false</c> for performance reasons
            (since the important info is provided by their children), but if its properties have relevant
            information (for example, a resource id called <c>credentials</c>, it should return
            <c>true</c>. On the other hand, views representing labels or editable fields should
            typically return <c>true</c>, but in some cases they could return <c>false</c>
            (for example, if they're part of a "Captcha" mechanism).</para>
          <para>The value returned by this method depends on the value returned by
            <c>#getImportantForAutofill()</c>:
            
            &lt;ol&gt;
              &lt;li&gt;if it returns <c>#IMPORTANT_FOR_AUTOFILL_YES</c> or
                  <c>#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS</c>, then it returns <c>true</c>&lt;li&gt;if it returns <c>#IMPORTANT_FOR_AUTOFILL_NO</c> or
                  <c>#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</c>, then it returns <c>false</c>&lt;li&gt;if it returns <c>#IMPORTANT_FOR_AUTOFILL_AUTO</c>, then it uses some simple heuristics
                  that can return <c>true</c> in some cases (like a container with a resource id),
                  but <c>false</c> in most.
              &lt;li&gt;otherwise, it returns <c>false</c>.
            &lt;/ol&gt;</para>
          <para>The behavior of importances depends on Android version:
            &lt;ol&gt;
              &lt;li&gt;For <c>android.os.Build.VERSION_CODES#TIRAMISU</c> and below:
                &lt;ol&gt;
                  &lt;li&gt;When a view is considered important for autofill:
                     &lt;ol&gt;
                       &lt;li&gt;The view might automatically trigger an autofill request when focused on.
                       &lt;li&gt;The contents of the view are included in the <c>ViewStructure</c> used in an
                           autofill request.
                     &lt;/ol&gt;
                   &lt;li&gt;On the other hand, when a view is considered not important for autofill:
                     &lt;ol&gt;
                       &lt;li&gt;The view never automatically triggers autofill requests, but it can trigger a
                           manual request through <c>AutofillManager#requestAutofill(View)</c>.
                       &lt;li&gt;The contents of the view are not included in the <c>ViewStructure</c> used in
                           an autofill request, unless the request has the
                           <c>#AUTOFILL_FLAG_INCLUDE_NOT_IMPORTANT_VIEWS</c> flag.
                     &lt;/ol&gt;
                 &lt;/ol&gt;
             &lt;li&gt;For <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> and above:
               &lt;ol&gt;
                 &lt;li&gt;The system uses importance, along with other view properties and other optimization
                     factors, to determine if a view should trigger autofill on focus.
                 &lt;li&gt;The contents of <c>#IMPORTANT_FOR_AUTOFILL_AUTO</c>,
                   <c>#IMPORTANT_FOR_AUTOFILL_YES</c>, <c>#IMPORTANT_FOR_AUTOFILL_NO</c>,
                   <c>#IMPORTANT_FOR_AUTOFILL_YES_EXCLUDE_DESCENDANTS</c>, and
                   <c>#IMPORTANT_FOR_AUTOFILL_NO_EXCLUDE_DESCENDANTS</c> views will be included in the
                   <c>ViewStructure</c> used in an autofill request.
               &lt;/ol&gt;
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isImportantForAutofill()" title="Reference documentation">Java documentation for <code>android.view.View.isImportantForAutofill()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImportantForContentCapture">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImportantForContentCapture As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImportantForContentCapture { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsImportantForContentCapture { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImportantForContentCapture" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsImportantForContentCapture" />
      <MemberSignature Language="F#" Value="member this.IsImportantForContentCapture : bool" Usage="Android.Views.View.IsImportantForContentCapture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isImportantForContentCapture", "()Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isImportantForContentCapture", "()Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Hints the Android System whether this view is considered important for content capture, based
            on the value explicitly set by <c>#setImportantForContentCapture(int)</c> and heuristics
            when it's <c>#IMPORTANT_FOR_CONTENT_CAPTURE_AUTO</c>.</summary>
        <value>whether the view is considered important for content capture.</value>
        <remarks>
          <para>Hints the Android System whether this view is considered important for content capture, based
            on the value explicitly set by <c>#setImportantForContentCapture(int)</c> and heuristics
            when it's <c>#IMPORTANT_FOR_CONTENT_CAPTURE_AUTO</c>.</para>
          <para>See <c>ContentCaptureManager</c> for more info about content capture.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isImportantForContentCapture()" title="Reference documentation">Java documentation for <code>android.view.View.isImportantForContentCapture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInEditMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInEditMode { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsInEditMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInEditMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsInEditMode" />
      <MemberSignature Language="F#" Value="member this.IsInEditMode : bool" Usage="Android.Views.View.IsInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInEditMode", "()Z", "GetIsInEditModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInEditMode", "()Z", "GetIsInEditModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this View is currently in edit mode.</summary>
        <value>True if this View is in edit mode, false otherwise.</value>
        <remarks>
          <para>Indicates whether this View is currently in edit mode. A View is usually
            in edit mode when displayed within a developer tool. For instance, if
            this View is being drawn by a visual user interface builder, this method
            should return true.</para>
          <para>Subclasses should check the return value of this method to provide
            different behaviors if their normal behavior might interfere with the
            host environment. For instance: the class spawns a thread in its
            constructor, the drawing code relies on device-specific features, etc.</para>
          <para>This method is usually checked in the drawing code of custom widgets.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isInEditMode()" title="Reference documentation">Java documentation for <code>android.view.View.isInEditMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsInLayout">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsInLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInLayout { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsInLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInLayout" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsInLayout" />
      <MemberSignature Language="F#" Value="member this.IsInLayout : bool" Usage="Android.Views.View.IsInLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInLayout", "()Z", "GetIsInLayoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInLayout", "()Z", "GetIsInLayoutHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the view hierarchy is currently undergoing a layout pass.</summary>
        <value>whether the view hierarchy is currently undergoing a layout pass</value>
        <remarks>
          <para>Returns whether the view hierarchy is currently undergoing a layout pass. This
            information is useful to avoid situations such as calling <c>#requestLayout()</c> during
            a layout pass.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isInLayout()" title="Reference documentation">Java documentation for <code>android.view.View.isInLayout()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsInTouchMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsInTouchMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsInTouchMode { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsInTouchMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInTouchMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsInTouchMode" />
      <MemberSignature Language="F#" Value="member this.IsInTouchMode : bool" Usage="Android.Views.View.IsInTouchMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInTouchMode", "()Z", "GetIsInTouchModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInTouchMode", "()Z", "GetIsInTouchModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the touch mode state associated with this view.</summary>
        <value>the touch mode state associated with this view</value>
        <remarks>
          <para>Returns the touch mode state associated with this view.
            
            Attached views return the touch mode state from the associated window's display.
            Detached views just return the default touch mode value defined in
            <c>com.android.internal.R.bool.config_defaultInTouchMode</c>.
            
            Touch mode is entered once the user begins interacting with the device by touch, and
            affects various things like whether focus highlight is always visible to the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isInTouchMode()" title="Reference documentation">Java documentation for <code>android.view.View.isInTouchMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLaidOut">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLaidOut As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLaidOut { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsLaidOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLaidOut" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsLaidOut" />
      <MemberSignature Language="F#" Value="member this.IsLaidOut : bool" Usage="Android.Views.View.IsLaidOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLaidOut", "()Z", "GetIsLaidOutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLaidOut", "()Z", "GetIsLaidOutHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this view has been through at least one layout since it
            was last attached to or detached from a window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if this view has been through at least one layout since it
            was last attached to or detached from a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isLaidOut()" title="Reference documentation">Java documentation for <code>android.view.View.isLaidOut()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLayoutDirectionResolved">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLayoutDirectionResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLayoutDirectionResolved { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsLayoutDirectionResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutDirectionResolved" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsLayoutDirectionResolved" />
      <MemberSignature Language="F#" Value="member this.IsLayoutDirectionResolved : bool" Usage="Android.Views.View.IsLayoutDirectionResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLayoutDirectionResolved", "()Z", "GetIsLayoutDirectionResolvedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLayoutDirectionResolved", "()Z", "GetIsLayoutDirectionResolvedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>true if layout direction has been resolved.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isLayoutDirectionResolved()" title="Reference documentation">Java documentation for <code>android.view.View.isLayoutDirectionResolved()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLayoutRequested">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLayoutRequested As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLayoutRequested { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsLayoutRequested { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLayoutRequested" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsLayoutRequested" />
      <MemberSignature Language="F#" Value="member this.IsLayoutRequested : bool" Usage="Android.Views.View.IsLayoutRequested" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLayoutRequested", "()Z", "GetIsLayoutRequestedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLayoutRequested", "()Z", "GetIsLayoutRequestedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether or not this view's layout will be requested during
            the next hierarchy layout pass.</summary>
        <value>true if the layout will be forced during next layout pass</value>
        <remarks>
          <para>Indicates whether or not this view's layout will be requested during
            the next hierarchy layout pass.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isLayoutRequested()" title="Reference documentation">Java documentation for <code>android.view.View.isLayoutRequested()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOpaque">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsOpaque As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsOpaque { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsOpaque { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpaque" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsOpaque" />
      <MemberSignature Language="F#" Value="member this.IsOpaque : bool" Usage="Android.Views.View.IsOpaque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOpaque", "()Z", "GetIsOpaqueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOpaque", "()Z", "GetIsOpaqueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this View is opaque.</summary>
        <value>True if this View is guaranteed to be fully opaque, false otherwise.</value>
        <remarks>
          <para>Indicates whether this View is opaque. An opaque View guarantees that it will
            draw all the pixels overlapping its bounds using a fully opaque color.</para>
          <para>Subclasses of View should override this method whenever possible to indicate
            whether an instance is opaque. Opaque Views are treated in a special way by
            the View hierarchy, possibly allowing it to perform optimizations during
            invalidate/draw passes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isOpaque()" title="Reference documentation">Java documentation for <code>android.view.View.isOpaque()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="IsPaddingOffsetRequired">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsPaddingOffsetRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsPaddingOffsetRequired { bool get(); };" />
      <MemberSignature Language="C#" Value="protected virtual bool IsPaddingOffsetRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaddingOffsetRequired" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsPaddingOffsetRequired" />
      <MemberSignature Language="F#" Value="member this.IsPaddingOffsetRequired : bool" Usage="Android.Views.View.IsPaddingOffsetRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPaddingOffsetRequired", "()Z", "GetIsPaddingOffsetRequiredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPaddingOffsetRequired", "()Z", "GetIsPaddingOffsetRequiredHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If the View draws content inside its padding and enables fading edges,
            it needs to support padding offsets.</summary>
        <value>True if padding offset must be applied, false otherwise.</value>
        <remarks>
          <para>If the View draws content inside its padding and enables fading edges,
            it needs to support padding offsets. Padding offsets are added to the
            fading edges to extend the length of the fade so that it covers pixels
            drawn inside the padding.</para>
          <para>Subclasses of this class should override this method if they need
            to draw content inside the padding.</para>
          <para>Added in CURRENT.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isPaddingOffsetRequired()" title="Reference documentation">Java documentation for <code>android.view.View.isPaddingOffsetRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.LeftPaddingOffset" />
        <altmember cref="P:Android.Views.View.RightPaddingOffset" />
        <altmember cref="P:Android.Views.View.TopPaddingOffset" />
        <altmember cref="P:Android.Views.View.BottomPaddingOffset" />
      </Docs>
    </Member>
    <Member MemberName="IsPaddingRelative">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPaddingRelative As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPaddingRelative { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsPaddingRelative { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaddingRelative" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsPaddingRelative" />
      <MemberSignature Language="F#" Value="member this.IsPaddingRelative : bool" Usage="Android.Views.View.IsPaddingRelative" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPaddingRelative", "()Z", "GetIsPaddingRelativeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPaddingRelative", "()Z", "GetIsPaddingRelativeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if the padding has been set through relative values
            <c>#setPaddingRelative(int, int, int, int)</c> or through</summary>
        <value>true if the padding is relative or false if it is not.</value>
        <remarks>
          <para>Return if the padding has been set through relative values
            <c>#setPaddingRelative(int, int, int, int)</c> or through</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isPaddingRelative()" title="Reference documentation">Java documentation for <code>android.view.View.isPaddingRelative()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsPivotSet">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPivotSet As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPivotSet { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsPivotSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPivotSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsPivotSet" />
      <MemberSignature Language="F#" Value="member this.IsPivotSet : bool" Usage="Android.Views.View.IsPivotSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPivotSet", "()Z", "GetIsPivotSetHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPivotSet", "()Z", "GetIsPivotSetHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether or not a pivot has been set by a call to <c>#setPivotX(float)</c> or
            <c>#setPivotY(float)</c>.</summary>
        <value>True if a pivot has been set, false if the default pivot is being used</value>
        <remarks>
          <para>Returns whether or not a pivot has been set by a call to <c>#setPivotX(float)</c> or
            <c>#setPivotY(float)</c>. If no pivot has been set then the pivot will be the center
            of the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isPivotSet()" title="Reference documentation">Java documentation for <code>android.view.View.isPivotSet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScrollContainer">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsScrollContainer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsScrollContainer { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsScrollContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScrollContainer" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsScrollContainer" />
      <MemberSignature Language="F#" Value="member this.IsScrollContainer : bool" Usage="Android.Views.View.IsScrollContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isScrollContainer", "()Z", "GetIsScrollContainerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isScrollContainer", "()Z", "GetIsScrollContainerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this view is one of the set of scrollable containers in
            its window.</summary>
        <value>whether this view is one of the set of scrollable containers in
            its window</value>
        <remarks>
          <para>Indicates whether this view is one of the set of scrollable containers in
            its window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isScrollContainer()" title="Reference documentation">Java documentation for <code>android.view.View.isScrollContainer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsShowingLayoutBounds">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsShowingLayoutBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsShowingLayoutBounds { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsShowingLayoutBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShowingLayoutBounds" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsShowingLayoutBounds" />
      <MemberSignature Language="F#" Value="member this.IsShowingLayoutBounds : bool" Usage="Android.Views.View.IsShowingLayoutBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShowingLayoutBounds", "()Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShowingLayoutBounds", "()Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> when the View is attached and the system developer setting to show
            the layout bounds is enabled or <c>false</c> otherwise.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> when the View is attached and the system developer setting to show
            the layout bounds is enabled or <c>false</c> otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isShowingLayoutBounds()" title="Reference documentation">Java documentation for <code>android.view.View.isShowingLayoutBounds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsShown">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsShown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsShown { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsShown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShown" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsShown" />
      <MemberSignature Language="F#" Value="member this.IsShown : bool" Usage="Android.Views.View.IsShown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isShown", "()Z", "GetIsShownHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isShown", "()Z", "GetIsShownHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the visibility of this view and all of its ancestors</summary>
        <value>True if this view and all of its ancestors are <c>#VISIBLE</c></value>
        <remarks>
          <para>Returns the visibility of this view and all of its ancestors</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isShown()" title="Reference documentation">Java documentation for <code>android.view.View.isShown()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTemporarilyDetached">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTemporarilyDetached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTemporarilyDetached { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsTemporarilyDetached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTemporarilyDetached" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsTemporarilyDetached" />
      <MemberSignature Language="F#" Value="member this.IsTemporarilyDetached : bool" Usage="Android.Views.View.IsTemporarilyDetached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTemporarilyDetached", "()Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTemporarilyDetached", "()Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether the <c>View</c> is in the state between <c>#onStartTemporaryDetach()</c>
            and <c>#onFinishTemporaryDetach()</c>.</summary>
        <value>
          <c>true</c> when the View is in the state between <c>#onStartTemporaryDetach()</c>
            and <c>#onFinishTemporaryDetach()</c>.</value>
        <remarks>
          <para>Tells whether the <c>View</c> is in the state between <c>#onStartTemporaryDetach()</c>
            and <c>#onFinishTemporaryDetach()</c>.</para>
          <para>This method always returns <c>true</c> when called directly or indirectly from
            <c>#onStartTemporaryDetach()</c>. The return value when called directly or indirectly from
            <c>#onFinishTemporaryDetach()</c>, however, depends on the OS version.
            &lt;ul&gt;
                &lt;li&gt;<c>true</c> on <c>android.os.Build.VERSION_CODES#N API 24</c>&lt;/li&gt;
                &lt;li&gt;<c>false</c> on <c>android.os.Build.VERSION_CODES#N_MR1 API 25</c>} and later&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isTemporarilyDetached()" title="Reference documentation">Java documentation for <code>android.view.View.isTemporarilyDetached()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAlignmentResolved">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTextAlignmentResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTextAlignmentResolved { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsTextAlignmentResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAlignmentResolved" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsTextAlignmentResolved" />
      <MemberSignature Language="F#" Value="member this.IsTextAlignmentResolved : bool" Usage="Android.Views.View.IsTextAlignmentResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTextAlignmentResolved", "()Z", "GetIsTextAlignmentResolvedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTextAlignmentResolved", "()Z", "GetIsTextAlignmentResolvedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>true if text alignment is resolved.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isTextAlignmentResolved()" title="Reference documentation">Java documentation for <code>android.view.View.isTextAlignmentResolved()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextDirectionResolved">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsTextDirectionResolved As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsTextDirectionResolved { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsTextDirectionResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextDirectionResolved" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.IsTextDirectionResolved" />
      <MemberSignature Language="F#" Value="member this.IsTextDirectionResolved : bool" Usage="Android.Views.View.IsTextDirectionResolved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isTextDirectionResolved", "()Z", "GetIsTextDirectionResolvedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isTextDirectionResolved", "()Z", "GetIsTextDirectionResolvedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>true if text direction is resolved.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isTextDirectionResolved()" title="Reference documentation">Java documentation for <code>android.view.View.isTextDirectionResolved()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleToUserForAutofill">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsVisibleToUserForAutofill (virtualId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsVisibleToUserForAutofill(int virtualId);" />
      <MemberSignature Language="C#" Value="public virtual bool IsVisibleToUserForAutofill (int virtualId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsVisibleToUserForAutofill(int32 virtualId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.IsVisibleToUserForAutofill(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsVisibleToUserForAutofill : int -&gt; bool&#xA;override this.IsVisibleToUserForAutofill : int -&gt; bool" Usage="view.IsVisibleToUserForAutofill virtualId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isVisibleToUserForAutofill", "(I)Z", "GetIsVisibleToUserForAutofill_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isVisibleToUserForAutofill", "(I)Z", "GetIsVisibleToUserForAutofill_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="virtualId">To be added.</param>
        <summary>Computes whether this virtual autofill view is visible to the user.</summary>
        <returns>Whether the view is visible on the screen.</returns>
        <remarks>
          <para>Computes whether this virtual autofill view is visible to the user.</para>
          <para>&lt;b&gt;Note: &lt;/b&gt;By default it returns <c>true</c>, but views providing a virtual hierarchy
            view must override it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isVisibleToUserForAutofill(int)" title="Reference documentation">Java documentation for <code>android.view.View.isVisibleToUserForAutofill(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.View.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JumpDrawablesToCurrentState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub JumpDrawablesToCurrentState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void JumpDrawablesToCurrentState();" />
      <MemberSignature Language="C#" Value="public virtual void JumpDrawablesToCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void JumpDrawablesToCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.JumpDrawablesToCurrentState" />
      <MemberSignature Language="F#" Value="abstract member JumpDrawablesToCurrentState : unit -&gt; unit&#xA;override this.JumpDrawablesToCurrentState : unit -&gt; unit" Usage="view.JumpDrawablesToCurrentState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("jumpDrawablesToCurrentState", "()V", "GetJumpDrawablesToCurrentStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("jumpDrawablesToCurrentState", "()V", "GetJumpDrawablesToCurrentStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call <c>Drawable#jumpToCurrentState() Drawable.jumpToCurrentState()</c>
            on all Drawable objects associated with this view.</summary>
        <remarks>
          <para>Call <c>Drawable#jumpToCurrentState() Drawable.jumpToCurrentState()</c>
            on all Drawable objects associated with this view.</para>
          <para>Also calls <c>StateListAnimator#jumpToCurrentState()</c> if there is a StateListAnimator
            attached to this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#jumpDrawablesToCurrentState()" title="Reference documentation">Java documentation for <code>android.view.View.jumpDrawablesToCurrentState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="KeepScreenOn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeepScreenOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool KeepScreenOn { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool KeepScreenOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepScreenOn" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.KeepScreenOn" />
      <MemberSignature Language="F#" Value="member this.KeepScreenOn : bool with get, set" Usage="Android.Views.View.KeepScreenOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeepScreenOn", "()Z", "GetGetKeepScreenOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeepScreenOn", "()Z", "GetGetKeepScreenOnHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setKeepScreenOn", "(Z)V", "GetSetKeepScreenOn_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setKeepScreenOn", "(Z)V", "GetSetKeepScreenOn_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="keepScreenOn">Supply true to set <c>#KEEP_SCREEN_ON</c>.</param>
        <summary>Returns whether the screen should remain on, corresponding to the current
            value of <c>#KEEP_SCREEN_ON</c>. -or- Controls whether the screen should remain on, modifying the
            value of <c>#KEEP_SCREEN_ON</c>.</summary>
        <value>Returns true if <c>#KEEP_SCREEN_ON</c> is set.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether the screen should remain on, corresponding to the current
            value of <c>#KEEP_SCREEN_ON</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getKeepScreenOn()" title="Reference documentation">Java documentation for <code>android.view.View.getKeepScreenOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls whether the screen should remain on, modifying the
            value of <c>#KEEP_SCREEN_ON</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setKeepScreenOn(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setKeepScreenOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.KeepScreenOn" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardNavigationCluster">
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardNavigationCluster As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeyboardNavigationCluster { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool KeyboardNavigationCluster { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeyboardNavigationCluster" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.KeyboardNavigationCluster" />
      <MemberSignature Language="F#" Value="member this.KeyboardNavigationCluster : bool with get, set" Usage="Android.Views.View.KeyboardNavigationCluster" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isKeyboardNavigationCluster", "()Z", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isKeyboardNavigationCluster", "()Z", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setKeyboardNavigationCluster", "(Z)V", "GetSetKeyboardNavigationCluster_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setKeyboardNavigationCluster", "(Z)V", "GetSetKeyboardNavigationCluster_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="isCluster">If true, this view is a root of a cluster.</param>
        <summary>Returns whether this View is a root of a keyboard navigation cluster. -or- Set whether this view is a root of a keyboard navigation cluster.</summary>
        <value>True if this view is a root of a cluster, or false otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this View is a root of a keyboard navigation cluster.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isKeyboardNavigationCluster()" title="Reference documentation">Java documentation for <code>android.view.View.isKeyboardNavigationCluster()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view is a root of a keyboard navigation cluster.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setKeyboardNavigationCluster(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setKeyboardNavigationCluster(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardNavigationClusterSearch">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function KeyboardNavigationClusterSearch (currentCluster As View, direction As FocusSearchDirection) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ KeyboardNavigationClusterSearch(Android::Views::View ^ currentCluster, Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? KeyboardNavigationClusterSearch (Android.Views.View? currentCluster, Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View KeyboardNavigationClusterSearch(class Android.Views.View currentCluster, valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.KeyboardNavigationClusterSearch(Android.Views.View,Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="abstract member KeyboardNavigationClusterSearch : Android.Views.View * Android.Views.FocusSearchDirection -&gt; Android.Views.View&#xA;override this.KeyboardNavigationClusterSearch : Android.Views.View * Android.Views.FocusSearchDirection -&gt; Android.Views.View" Usage="view.KeyboardNavigationClusterSearch (currentCluster, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keyboardNavigationClusterSearch", "(Landroid/view/View;I)Landroid/view/View;", "GetKeyboardNavigationClusterSearch_Landroid_view_View_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keyboardNavigationClusterSearch", "(Landroid/view/View;I)Landroid/view/View;", "GetKeyboardNavigationClusterSearch_Landroid_view_View_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="currentCluster" Type="Android.Views.View" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="currentCluster">The starting point of the search. Null means the current cluster is not
                                  found yet</param>
        <param name="direction">Direction to look</param>
        <summary>Find the nearest keyboard navigation cluster in the specified direction.</summary>
        <returns>The nearest keyboard navigation cluster in the specified direction, or null if none
                    can be found</returns>
        <remarks>
          <para>Find the nearest keyboard navigation cluster in the specified direction.
            This does not actually give focus to that cluster.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#keyboardNavigationClusterSearch(android.view.View,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.keyboardNavigationClusterSearch(android.view.View, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDispatcherState">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyDispatcherState As KeyEvent.DispatcherState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::KeyEvent::DispatcherState ^ KeyDispatcherState { Android::Views::KeyEvent::DispatcherState ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.KeyEvent.DispatcherState? KeyDispatcherState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.KeyEvent/DispatcherState KeyDispatcherState" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.KeyDispatcherState" />
      <MemberSignature Language="F#" Value="member this.KeyDispatcherState : Android.Views.KeyEvent.DispatcherState" Usage="Android.Views.View.KeyDispatcherState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKeyDispatcherState", "()Landroid/view/KeyEvent$DispatcherState;", "GetGetKeyDispatcherStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKeyDispatcherState", "()Landroid/view/KeyEvent$DispatcherState;", "GetGetKeyDispatcherStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent+DispatcherState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the global <c>KeyEvent.DispatcherState KeyEvent.DispatcherState</c>
            for this view's window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getKeyDispatcherState()" title="Reference documentation">Java documentation for <code>android.view.View.getKeyDispatcherState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="KeyPress">
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyPress As EventHandler(Of View.KeyEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::KeyEventArgs ^&gt; ^ KeyPress;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.KeyEventArgs&gt; KeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/KeyEventArgs&gt; KeyPress" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.KeyPress" />
      <MemberSignature Language="F#" Value="member this.KeyPress : EventHandler&lt;Android.Views.View.KeyEventArgs&gt; " Usage="member this.KeyPress : System.EventHandler&lt;Android.Views.View.KeyEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+KeyEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LabelFor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LabelFor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LabelFor { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int LabelFor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LabelFor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LabelFor" />
      <MemberSignature Language="F#" Value="member this.LabelFor : int with get, set" Usage="Android.Views.View.LabelFor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLabelFor", "()I", "GetGetLabelForHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLabelFor", "()I", "GetGetLabelForHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLabelFor", "(I)V", "GetSetLabelFor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLabelFor", "(I)V", "GetSetLabelFor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="id">The labeled view id.</param>
        <summary>Gets the id of a view for which this view serves as a label for
            accessibility purposes. -or- Sets the id of a view for which this view serves as a label for
            accessibility purposes.</summary>
        <value>The labeled view id.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of a view for which this view serves as a label for
            accessibility purposes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLabelFor()" title="Reference documentation">Java documentation for <code>android.view.View.getLabelFor()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of a view for which this view serves as a label for
            accessibility purposes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLabelFor(int)" title="Reference documentation">Java documentation for <code>android.view.View.setLabelFor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayerType">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LayerType As LayerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::LayerType LayerType { Android::Views::LayerType get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayerType LayerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayerType LayerType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LayerType" />
      <MemberSignature Language="F#" Value="member this.LayerType : Android.Views.LayerType" Usage="Android.Views.View.LayerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayerType", "()I", "GetGetLayerTypeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayerType", "()I", "GetGetLayerTypeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates what type of layer is currently associated with this view.</summary>
        <value>
          <c>#LAYER_TYPE_NONE</c>, <c>#LAYER_TYPE_SOFTWARE</c> or
                    <c>#LAYER_TYPE_HARDWARE</c></value>
        <remarks>
          <para>Indicates what type of layer is currently associated with this view. By default
            a view does not have a layer, and the layer type is <c>#LAYER_TYPE_NONE</c>.
            Refer to the documentation of <c>#setLayerType(int, android.graphics.Paint)</c>
            for more information on the different types of layers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLayerType()" title="Reference documentation">Java documentation for <code>android.view.View.getLayerType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
        <altmember cref="M:Android.Views.View.BuildLayer" />
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Layout (l As Integer, t As Integer, r As Integer, b As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Layout(int l, int t, int r, int b);" />
      <MemberSignature Language="C#" Value="public virtual void Layout (int l, int t, int r, int b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Layout(int32 l, int32 t, int32 r, int32 b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Layout(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Layout : int * int * int * int -&gt; unit&#xA;override this.Layout : int * int * int * int -&gt; unit" Usage="view.Layout (l, t, r, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("layout", "(IIII)V", "GetLayout_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("layout", "(IIII)V", "GetLayout_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="r" Type="System.Int32" />
        <Parameter Name="b" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">Left position, relative to parent</param>
        <param name="t">Top position, relative to parent</param>
        <param name="r">Right position, relative to parent</param>
        <param name="b">Bottom position, relative to parent</param>
        <summary>Assign a size and position to a view and all of its
            descendants</summary>
        <remarks>
          <para>Assign a size and position to a view and all of its
            descendants</para>
          <para>This is the second phase of the layout mechanism.
            (The first is measuring). In this phase, each parent calls
            layout on all of its children to position them.
            This is typically done using the child measurements
            that were stored in the measure pass().</para>
          <para>Derived classes should not override this method.
            Derived classes with children should override
            onLayout. In that method, they should
            call layout on each of their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#layout(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.layout(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LayoutChange">
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutChange As EventHandler(Of View.LayoutChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::LayoutChangeEventArgs ^&gt; ^ LayoutChange;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.LayoutChangeEventArgs&gt; LayoutChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/LayoutChangeEventArgs&gt; LayoutChange" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.LayoutChange" />
      <MemberSignature Language="F#" Value="member this.LayoutChange : EventHandler&lt;Android.Views.View.LayoutChangeEventArgs&gt; " Usage="member this.LayoutChange : System.EventHandler&lt;Android.Views.View.LayoutChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+LayoutChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutDirection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutDirection As LayoutDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::LayoutDirection LayoutDirection { Android::Views::LayoutDirection get(); void set(Android::Views::LayoutDirection value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutDirection LayoutDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.LayoutDirection LayoutDirection" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LayoutDirection" />
      <MemberSignature Language="F#" Value="member this.LayoutDirection : Android.Views.LayoutDirection with get, set" Usage="Android.Views.View.LayoutDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLayoutDirection", "(I)V", "GetSetLayoutDirection_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLayoutDirection", "(I)V", "GetSetLayoutDirection_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="layoutDirection">the layout direction to set. Should be one of:
            
            <c>#LAYOUT_DIRECTION_LTR</c>,
            <c>#LAYOUT_DIRECTION_RTL</c>,
            <c>#LAYOUT_DIRECTION_INHERIT</c>,
            <c>#LAYOUT_DIRECTION_LOCALE</c>.
            
            Resolution will be done if the value is set to LAYOUT_DIRECTION_INHERIT. The resolution
            proceeds up the parent chain of the view to get the value. If there is no parent, then it
            will return the default <c>#LAYOUT_DIRECTION_LTR</c>.</param>
        <summary>Returns the resolved layout direction for this view. -or- Set the layout direction for this view.</summary>
        <value>
          <c>#LAYOUT_DIRECTION_RTL</c> if the layout direction is RTL or returns
            <c>#LAYOUT_DIRECTION_LTR</c> if the layout direction is not RTL.
            
            For compatibility, this will return <c>#LAYOUT_DIRECTION_LTR</c> if API version
            is lower than <c>android.os.Build.VERSION_CODES#JELLY_BEAN_MR1</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the resolved layout direction for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLayoutDirection()" title="Reference documentation">Java documentation for <code>android.view.View.getLayoutDirection()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the layout direction for this view. This will propagate a reset of layout direction
            resolution to the view's children and resolve layout direction for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLayoutDirection(int)" title="Reference documentation">Java documentation for <code>android.view.View.setLayoutDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionInherit">
      <MemberSignature Language="VB.NET" Value="Public Const LayoutDirectionInherit As LayoutDirection  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::LayoutDirection LayoutDirectionInherit = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionInherit = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionInherit = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.LayoutDirectionInherit" />
      <MemberSignature Language="F#" Value="val mutable LayoutDirectionInherit : Android.Views.LayoutDirection" Usage="Android.Views.View.LayoutDirectionInherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LAYOUT_DIRECTION_INHERIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LAYOUT_DIRECTION_INHERIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is inherited from its parent.</summary>
        <remarks>
          <para>Horizontal layout direction of this view is inherited from its parent.
            Use with <c>#setLayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#LAYOUT_DIRECTION_INHERIT" title="Reference documentation">Java documentation for <code>android.view.View.LAYOUT_DIRECTION_INHERIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLocale">
      <MemberSignature Language="VB.NET" Value="Public Const LayoutDirectionLocale As LayoutDirection  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::LayoutDirection LayoutDirectionLocale = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionLocale = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionLocale = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.LayoutDirectionLocale" />
      <MemberSignature Language="F#" Value="val mutable LayoutDirectionLocale : Android.Views.LayoutDirection" Usage="Android.Views.View.LayoutDirectionLocale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LAYOUT_DIRECTION_LOCALE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LAYOUT_DIRECTION_LOCALE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from deduced from the default language
            script for the locale.</summary>
        <remarks>
          <para>Horizontal layout direction of this view is from deduced from the default language
            script for the locale. Use with <c>#setLayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#LAYOUT_DIRECTION_LOCALE" title="Reference documentation">Java documentation for <code>android.view.View.LAYOUT_DIRECTION_LOCALE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionLtr">
      <MemberSignature Language="VB.NET" Value="Public Const LayoutDirectionLtr As LayoutDirection  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::LayoutDirection LayoutDirectionLtr = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionLtr = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionLtr = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.LayoutDirectionLtr" />
      <MemberSignature Language="F#" Value="val mutable LayoutDirectionLtr : Android.Views.LayoutDirection" Usage="Android.Views.View.LayoutDirectionLtr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LAYOUT_DIRECTION_LTR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LAYOUT_DIRECTION_LTR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Left to Right.</summary>
        <remarks>
          <para>Horizontal layout direction of this view is from Left to Right.
            Use with <c>#setLayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#LAYOUT_DIRECTION_LTR" title="Reference documentation">Java documentation for <code>android.view.View.LAYOUT_DIRECTION_LTR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutDirectionRtl">
      <MemberSignature Language="VB.NET" Value="Public Const LayoutDirectionRtl As LayoutDirection  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::LayoutDirection LayoutDirectionRtl = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.LayoutDirection LayoutDirectionRtl = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.LayoutDirection LayoutDirectionRtl = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.LayoutDirectionRtl" />
      <MemberSignature Language="F#" Value="val mutable LayoutDirectionRtl : Android.Views.LayoutDirection" Usage="Android.Views.View.LayoutDirectionRtl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LAYOUT_DIRECTION_RTL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LAYOUT_DIRECTION_RTL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.LayoutDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Horizontal layout direction of this view is from Right to Left.</summary>
        <remarks>
          <para>Horizontal layout direction of this view is from Right to Left.
            Use with <c>#setLayoutDirection</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#LAYOUT_DIRECTION_RTL" title="Reference documentation">Java documentation for <code>android.view.View.LAYOUT_DIRECTION_RTL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LayoutParameters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutParameters As ViewGroup.LayoutParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewGroup::LayoutParams ^ LayoutParameters { Android::Views::ViewGroup::LayoutParams ^ get(); void set(Android::Views::ViewGroup::LayoutParams ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewGroup.LayoutParams? LayoutParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewGroup/LayoutParams LayoutParameters" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LayoutParameters" />
      <MemberSignature Language="F#" Value="member this.LayoutParameters : Android.Views.ViewGroup.LayoutParams with get, set" Usage="Android.Views.View.LayoutParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutParams", "()Landroid/view/ViewGroup$LayoutParams;", "GetGetLayoutParametersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutParams", "()Landroid/view/ViewGroup$LayoutParams;", "GetGetLayoutParametersHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLayoutParams", "(Landroid/view/ViewGroup$LayoutParams;)V", "GetSetLayoutParameters_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLayoutParams", "(Landroid/view/ViewGroup$LayoutParams;)V", "GetSetLayoutParameters_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewGroup+LayoutParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the LayoutParams associated with this view. -or- Set the layout parameters associated with this view.</summary>
        <value>The LayoutParams associated with this view, or null if no
                    parameters have been set yet</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLayoutParams()" title="Reference documentation">Java documentation for <code>android.view.View.getLayoutParams()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLayoutParams(android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.view.View.setLayoutParams(android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="VB.NET" Value="Public Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Left" />
      <MemberSignature Language="F#" Value="member this.Left : int with get, set" Usage="Android.Views.View.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLeft", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLeft", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLeft", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLeft", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="left">The left of this view, in pixels.</param>
        <summary>Left position of this view relative to its parent. -or- Sets the left position of this view relative to its parent.</summary>
        <value>The left edge of this view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Left position of this view relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLeft()" title="Reference documentation">Java documentation for <code>android.view.View.getLeft()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the left position of this view relative to its parent. This method is meant to be called
            by the layout system and should not generally be called otherwise, because the property
            may be changed at any time by the layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLeft(int)" title="Reference documentation">Java documentation for <code>android.view.View.setLeft(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LeftFadingEdgeStrength">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property LeftFadingEdgeStrength As Single" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property float LeftFadingEdgeStrength { float get(); };" />
      <MemberSignature Language="C#" Value="protected virtual float LeftFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 LeftFadingEdgeStrength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LeftFadingEdgeStrength" />
      <MemberSignature Language="F#" Value="member this.LeftFadingEdgeStrength : single" Usage="Android.Views.View.LeftFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLeftFadingEdgeStrength", "()F", "GetGetLeftFadingEdgeStrengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLeftFadingEdgeStrength", "()F", "GetGetLeftFadingEdgeStrengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the left faded edge.</summary>
        <value>the intensity of the left fade as a float between 0.0f and 1.0f</value>
        <remarks>
          <para>Returns the strength, or intensity, of the left faded edge. The strength is
            a value between 0.0 (no fade) and 1.0 (full fade). The default implementation
            returns 0.0 or 1.0 but no value in between.</para>
          <para>Subclasses should override this method to provide a smoother fade transition
            when scrolling occurs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLeftFadingEdgeStrength()" title="Reference documentation">Java documentation for <code>android.view.View.getLeftFadingEdgeStrength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LeftPaddingOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property LeftPaddingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int LeftPaddingOffset { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int LeftPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LeftPaddingOffset" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LeftPaddingOffset" />
      <MemberSignature Language="F#" Value="member this.LeftPaddingOffset : int" Usage="Android.Views.View.LeftPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLeftPaddingOffset", "()I", "GetGetLeftPaddingOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLeftPaddingOffset", "()I", "GetGetLeftPaddingOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the left fading region.</summary>
        <value>The left padding offset in pixels.</value>
        <remarks>
          <para>Amount by which to extend the left fading region. Called only when
            <c>#isPaddingOffsetRequired()</c> returns true.</para>
          <para>Added in CURRENT.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getLeftPaddingOffset()" title="Reference documentation">Java documentation for <code>android.view.View.getLeftPaddingOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="LongClick">
      <MemberSignature Language="VB.NET" Value="Public Custom Event LongClick As EventHandler(Of View.LongClickEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::LongClickEventArgs ^&gt; ^ LongClick;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.LongClickEventArgs&gt; LongClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/LongClickEventArgs&gt; LongClick" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.LongClick" />
      <MemberSignature Language="F#" Value="member this.LongClick : EventHandler&lt;Android.Views.View.LongClickEventArgs&gt; " Usage="member this.LongClick : System.EventHandler&lt;Android.Views.View.LongClickEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+LongClickEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LongClickable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LongClickable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool LongClickable { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool LongClickable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LongClickable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.LongClickable" />
      <MemberSignature Language="F#" Value="member this.LongClickable : bool with get, set" Usage="Android.Views.View.LongClickable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLongClickable", "()Z", "GetIsLongClickableHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLongClickable", "()Z", "GetIsLongClickableHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLongClickable", "(Z)V", "GetSetLongClickable_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLongClickable", "(Z)V", "GetSetLongClickable_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="longClickable">true to make the view long clickable, false otherwise</param>
        <summary>Indicates whether this view reacts to long click events or not. -or- Enables or disables long click events for this view.</summary>
        <value>true if the view is long clickable, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether this view reacts to long click events or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isLongClickable()" title="Reference documentation">Java documentation for <code>android.view.View.isLongClickable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enables or disables long click events for this view. When a view is long
            clickable it reacts to the user holding down the button for a longer
            duration than a tap. This event can either launch the listener or a
            context menu.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLongClickable(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setLongClickable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.LongClickable" />
      </Docs>
    </Member>
    <Member MemberName="LongClickUseDefaultHapticFeedback">
      <MemberSignature Language="VB.NET" Value="Public Custom Event LongClickUseDefaultHapticFeedback As EventHandler(Of View.LongClickUseDefaultHapticFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::LongClickUseDefaultHapticFeedbackEventArgs ^&gt; ^ LongClickUseDefaultHapticFeedback;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.LongClickUseDefaultHapticFeedbackEventArgs&gt; LongClickUseDefaultHapticFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/LongClickUseDefaultHapticFeedbackEventArgs&gt; LongClickUseDefaultHapticFeedback" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.LongClickUseDefaultHapticFeedback" />
      <MemberSignature Language="F#" Value="member this.LongClickUseDefaultHapticFeedback : EventHandler&lt;Android.Views.View.LongClickUseDefaultHapticFeedbackEventArgs&gt; " Usage="member this.LongClickUseDefaultHapticFeedback : System.EventHandler&lt;Android.Views.View.LongClickUseDefaultHapticFeedbackEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+LongClickUseDefaultHapticFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Matrix">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Matrix As Matrix" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Matrix ^ Matrix { Android::Graphics::Matrix ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Matrix? Matrix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Matrix Matrix" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Matrix" />
      <MemberSignature Language="F#" Value="member this.Matrix : Android.Graphics.Matrix" Usage="Android.Views.View.Matrix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMatrix", "()Landroid/graphics/Matrix;", "GetGetMatrixHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMatrix", "()Landroid/graphics/Matrix;", "GetGetMatrixHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Matrix</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transform matrix of this view, which is calculated based on the current
            rotation, scale, and pivot properties.</summary>
        <value>The current transform matrix for the view</value>
        <remarks>
          <para>The transform matrix of this view, which is calculated based on the current
            rotation, scale, and pivot properties.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMatrix()" title="Reference documentation">Java documentation for <code>android.view.View.getMatrix()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (widthMeasureSpec As Integer, heightMeasureSpec As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="C#" Value="public void Measure (int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(int32 widthMeasureSpec, int32 heightMeasureSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Measure(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Measure : int * int -&gt; unit" Usage="view.Measure (widthMeasureSpec, heightMeasureSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("measure", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("measure", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthMeasureSpec" Type="System.Int32" />
        <Parameter Name="heightMeasureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="widthMeasureSpec">Horizontal space requirements as imposed by the
                   parent</param>
        <param name="heightMeasureSpec">Vertical space requirements as imposed by the
                   parent</param>
        <summary>This is called to find out how big a view should be.</summary>
        <remarks>
          <para>This is called to find out how big a view should be. The parent
            supplies constraint information in the width and height parameters.</para>
          <para>The actual measurement work of a view is performed in
            <c>#onMeasure(int, int)</c>, called by this method. Therefore, only
            <c>#onMeasure(int, int)</c> can and must be overridden by subclasses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#measure(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.measure(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnMeasure(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeight">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasuredHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasuredHeight { int get(); };" />
      <MemberSignature Language="C#" Value="public int MeasuredHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MeasuredHeight" />
      <MemberSignature Language="F#" Value="member this.MeasuredHeight : int" Usage="Android.Views.View.MeasuredHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMeasuredHeight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMeasuredHeight", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c>#getMeasuredHeightAndState()</c>, but only returns the
            raw height component (that is the result is masked by
            <c>#MEASURED_SIZE_MASK</c>).</summary>
        <value>The raw measured height of this view.</value>
        <remarks>
          <para>Like <c>#getMeasuredHeightAndState()</c>, but only returns the
            raw height component (that is the result is masked by
            <c>#MEASURED_SIZE_MASK</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMeasuredHeight()" title="Reference documentation">Java documentation for <code>android.view.View.getMeasuredHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeightAndState">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasuredHeightAndState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasuredHeightAndState { int get(); };" />
      <MemberSignature Language="C#" Value="public int MeasuredHeightAndState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredHeightAndState" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MeasuredHeightAndState" />
      <MemberSignature Language="F#" Value="member this.MeasuredHeightAndState : int" Usage="Android.Views.View.MeasuredHeightAndState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMeasuredHeightAndState", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMeasuredHeightAndState", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full height measurement information for this view as computed
            by the most recent call to <c>#measure(int, int)</c>.</summary>
        <value>The measured height of this view as a bit mask.</value>
        <remarks>
          <para>Return the full height measurement information for this view as computed
            by the most recent call to <c>#measure(int, int)</c>.  This result is a bit mask
            as defined by <c>#MEASURED_SIZE_MASK</c> and <c>#MEASURED_STATE_TOO_SMALL</c>.
            This should be used during measurement and layout calculations only. Use
            <c>#getHeight()</c> to see how high a view is after layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMeasuredHeightAndState()" title="Reference documentation">Java documentation for <code>android.view.View.getMeasuredHeightAndState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredHeightStateShift">
      <MemberSignature Language="VB.NET" Value="Public Const MeasuredHeightStateShift As Integer  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: int MeasuredHeightStateShift = 16;" />
      <MemberSignature Language="C#" Value="public const int MeasuredHeightStateShift = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredHeightStateShift = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.MeasuredHeightStateShift" />
      <MemberSignature Language="F#" Value="val mutable MeasuredHeightStateShift : int" Usage="Android.Views.View.MeasuredHeightStateShift" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEASURED_HEIGHT_STATE_SHIFT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEASURED_HEIGHT_STATE_SHIFT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Bit shift of <c>#MEASURED_STATE_MASK</c> to get to the height bits
            for functions that combine both width and height into a single int,
            such as <c>#getMeasuredState()</c> and the childState argument of
            <c>#resolveSizeAndState(int, int, int)</c>.</summary>
        <remarks>
          <para>Bit shift of <c>#MEASURED_STATE_MASK</c> to get to the height bits
            for functions that combine both width and height into a single int,
            such as <c>#getMeasuredState()</c> and the childState argument of
            <c>#resolveSizeAndState(int, int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#MEASURED_HEIGHT_STATE_SHIFT" title="Reference documentation">Java documentation for <code>android.view.View.MEASURED_HEIGHT_STATE_SHIFT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredSizeMask">
      <MemberSignature Language="VB.NET" Value="Public Const MeasuredSizeMask As Integer  = 16777215" />
      <MemberSignature Language="C++ CLI" Value="public: int MeasuredSizeMask = 16777215;" />
      <MemberSignature Language="C#" Value="public const int MeasuredSizeMask = 16777215;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredSizeMask = (16777215)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.MeasuredSizeMask" />
      <MemberSignature Language="F#" Value="val mutable MeasuredSizeMask : int" Usage="Android.Views.View.MeasuredSizeMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEASURED_SIZE_MASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEASURED_SIZE_MASK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16777215</MemberValue>
      <Docs>
        <summary>Bits of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that provide the actual measured size.</summary>
        <remarks>
          <para>Bits of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that provide the actual measured size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#MEASURED_SIZE_MASK" title="Reference documentation">Java documentation for <code>android.view.View.MEASURED_SIZE_MASK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredState">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasuredState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasuredState { int get(); };" />
      <MemberSignature Language="C#" Value="public int MeasuredState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredState" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MeasuredState" />
      <MemberSignature Language="F#" Value="member this.MeasuredState : int" Usage="Android.Views.View.MeasuredState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMeasuredState", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMeasuredState", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return only the state bits of <c>#getMeasuredWidthAndState()</c>
            and <c>#getMeasuredHeightAndState()</c>, combined into one integer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return only the state bits of <c>#getMeasuredWidthAndState()</c>
            and <c>#getMeasuredHeightAndState()</c>, combined into one integer.
            The width component is in the regular bits <c>#MEASURED_STATE_MASK</c>
            and the height component is at the shifted bits
            <c>#MEASURED_HEIGHT_STATE_SHIFT</c>&gt;&gt;<c>#MEASURED_STATE_MASK</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMeasuredState()" title="Reference documentation">Java documentation for <code>android.view.View.getMeasuredState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredStateMask">
      <MemberSignature Language="VB.NET" Value="Public Const MeasuredStateMask As Integer  = -16777216" />
      <MemberSignature Language="C++ CLI" Value="public: int MeasuredStateMask = -16777216;" />
      <MemberSignature Language="C#" Value="public const int MeasuredStateMask = -16777216;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredStateMask = (-16777216)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.MeasuredStateMask" />
      <MemberSignature Language="F#" Value="val mutable MeasuredStateMask : int" Usage="Android.Views.View.MeasuredStateMask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEASURED_STATE_MASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEASURED_STATE_MASK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-16777216</MemberValue>
      <Docs>
        <summary>Bits of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that provide the additional state bits.</summary>
        <remarks>
          <para>Bits of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that provide the additional state bits.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#MEASURED_STATE_MASK" title="Reference documentation">Java documentation for <code>android.view.View.MEASURED_STATE_MASK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredStateTooSmall">
      <MemberSignature Language="VB.NET" Value="Public Const MeasuredStateTooSmall As Integer  = 16777216" />
      <MemberSignature Language="C++ CLI" Value="public: int MeasuredStateTooSmall = 16777216;" />
      <MemberSignature Language="C#" Value="public const int MeasuredStateTooSmall = 16777216;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MeasuredStateTooSmall = (16777216)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.MeasuredStateTooSmall" />
      <MemberSignature Language="F#" Value="val mutable MeasuredStateTooSmall : int" Usage="Android.Views.View.MeasuredStateTooSmall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEASURED_STATE_TOO_SMALL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEASURED_STATE_TOO_SMALL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary>Bit of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that indicates the measured size
            is smaller that the space the view would like to have.</summary>
        <remarks>
          <para>Bit of <c>#getMeasuredWidthAndState()</c> and
            <c>#getMeasuredWidthAndState()</c> that indicates the measured size
            is smaller that the space the view would like to have.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#MEASURED_STATE_TOO_SMALL" title="Reference documentation">Java documentation for <code>android.view.View.MEASURED_STATE_TOO_SMALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredWidth">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasuredWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasuredWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public int MeasuredWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MeasuredWidth" />
      <MemberSignature Language="F#" Value="member this.MeasuredWidth : int" Usage="Android.Views.View.MeasuredWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMeasuredWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMeasuredWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Like <c>#getMeasuredWidthAndState()</c>, but only returns the
            raw width component (that is the result is masked by
            <c>#MEASURED_SIZE_MASK</c>).</summary>
        <value>The raw measured width of this view.</value>
        <remarks>
          <para>Like <c>#getMeasuredWidthAndState()</c>, but only returns the
            raw width component (that is the result is masked by
            <c>#MEASURED_SIZE_MASK</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMeasuredWidth()" title="Reference documentation">Java documentation for <code>android.view.View.getMeasuredWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MeasuredWidthAndState">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MeasuredWidthAndState As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MeasuredWidthAndState { int get(); };" />
      <MemberSignature Language="C#" Value="public int MeasuredWidthAndState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MeasuredWidthAndState" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MeasuredWidthAndState" />
      <MemberSignature Language="F#" Value="member this.MeasuredWidthAndState : int" Usage="Android.Views.View.MeasuredWidthAndState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMeasuredWidthAndState", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMeasuredWidthAndState", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the full width measurement information for this view as computed
            by the most recent call to <c>#measure(int, int)</c>.</summary>
        <value>The measured width of this view as a bit mask.</value>
        <remarks>
          <para>Return the full width measurement information for this view as computed
            by the most recent call to <c>#measure(int, int)</c>.  This result is a bit mask
            as defined by <c>#MEASURED_SIZE_MASK</c> and <c>#MEASURED_STATE_TOO_SMALL</c>.
            This should be used during measurement and layout calculations only. Use
            <c>#getWidth()</c> to see how wide a view is after layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMeasuredWidthAndState()" title="Reference documentation">Java documentation for <code>android.view.View.getMeasuredWidthAndState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="MergeDrawableStates">
      <MemberSignature Language="VB.NET" Value="Protected Shared Function MergeDrawableStates (baseState As Integer(), additionalState As Integer()) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;int&gt; ^ MergeDrawableStates(cli::array &lt;int&gt; ^ baseState, cli::array &lt;int&gt; ^ additionalState);" />
      <MemberSignature Language="C#" Value="protected static int[]? MergeDrawableStates (int[]? baseState, int[]? additionalState);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32[] MergeDrawableStates(int32[] baseState, int32[] additionalState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.MergeDrawableStates(System.Int32[],System.Int32[])" />
      <MemberSignature Language="F#" Value="static member MergeDrawableStates : int[] * int[] -&gt; int[]" Usage="Android.Views.View.MergeDrawableStates (baseState, additionalState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mergeDrawableStates", "([I[I)[I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mergeDrawableStates", "([I[I)[I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="baseState" Type="System.Int32[]" />
        <Parameter Name="additionalState" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="baseState">The base state values returned by
            <c>#onCreateDrawableState(int)</c>, which will be modified to also hold your
            own additional state values.</param>
        <param name="additionalState">The additional state values you would like
            added to &lt;var&gt;baseState&lt;/var&gt;; this array is not modified.</param>
        <summary>Merge your own state values in &lt;var&gt;additionalState&lt;/var&gt; into the base
            state values &lt;var&gt;baseState&lt;/var&gt; that were returned by
            <c>#onCreateDrawableState(int)</c>.</summary>
        <returns>As a convenience, the &lt;var&gt;baseState&lt;/var&gt; array you originally
            passed into the function is returned.</returns>
        <remarks>
          <para>Merge your own state values in &lt;var&gt;additionalState&lt;/var&gt; into the base
            state values &lt;var&gt;baseState&lt;/var&gt; that were returned by
            <c>#onCreateDrawableState(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#mergeDrawableStates(int[],%20int[])" title="Reference documentation">Java documentation for <code>android.view.View.mergeDrawableStates(int[], int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnCreateDrawableState(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumHeight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinimumHeight { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int MinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MinimumHeight" />
      <MemberSignature Language="F#" Value="member this.MinimumHeight : int" Usage="Android.Views.View.MinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum height of the view.</summary>
        <value>the minimum height the view will try to be, in pixels</value>
        <remarks>
          <para>Returns the minimum height of the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMinimumHeight()" title="Reference documentation">Java documentation for <code>android.view.View.getMinimumHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetMinimumHeight(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MinimumWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MinimumWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinimumWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int MinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.MinimumWidth" />
      <MemberSignature Language="F#" Value="member this.MinimumWidth : int" Usage="Android.Views.View.MinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum width of the view.</summary>
        <value>the minimum width the view will try to be, in pixels</value>
        <remarks>
          <para>Returns the minimum width of the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getMinimumWidth()" title="Reference documentation">Java documentation for <code>android.view.View.getMinimumWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetMinimumWidth(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NestedScrollingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NestedScrollingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool NestedScrollingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool NestedScrollingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NestedScrollingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NestedScrollingEnabled" />
      <MemberSignature Language="F#" Value="member this.NestedScrollingEnabled : bool with get, set" Usage="Android.Views.View.NestedScrollingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">true to enable nested scrolling, false to disable</param>
        <summary>Returns true if nested scrolling is enabled for this view. -or- Enable or disable nested scrolling for this view.</summary>
        <value>true if nested scrolling is enabled</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if nested scrolling is enabled for this view.</para>
          <para>If nested scrolling is enabled and this View class implementation supports it,
            this view will act as a nested scrolling child view when applicable, forwarding data
            about the scroll operation in progress to a compatible and cooperating nested scrolling
            parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isNestedScrollingEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isNestedScrollingEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Enable or disable nested scrolling for this view.</para>
          <para>If this property is set to true the view will be permitted to initiate nested
            scrolling operations with a compatible parent view in the current hierarchy. If this
            view does not implement nested scrolling this will have no effect. Disabling nested scrolling
            while a nested scroll is in progress has the effect of <c>#stopNestedScroll() stopping</c>
            the nested scroll.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNestedScrollingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setNestedScrollingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.NestedScrollingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="NextClusterForwardId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextClusterForwardId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextClusterForwardId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextClusterForwardId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextClusterForwardId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextClusterForwardId" />
      <MemberSignature Language="F#" Value="member this.NextClusterForwardId : int with get, set" Usage="Android.Views.View.NextClusterForwardId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextClusterForwardId", "()I", "GetGetNextClusterForwardIdHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextClusterForwardId", "()I", "GetGetNextClusterForwardIdHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextClusterForwardId", "(I)V", "GetSetNextClusterForwardId_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextClusterForwardId", "(I)V", "GetSetNextClusterForwardId_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextClusterForwardId">The next cluster ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the root of the next keyboard navigation cluster. -or- Sets the id of the view to use as the root of the next keyboard navigation cluster.</summary>
        <value>The next keyboard navigation cluster ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the root of the next keyboard navigation cluster.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextClusterForwardId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextClusterForwardId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use as the root of the next keyboard navigation cluster.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextClusterForwardId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextClusterForwardId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextFocusDownId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextFocusDownId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextFocusDownId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextFocusDownId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusDownId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextFocusDownId" />
      <MemberSignature Language="F#" Value="member this.NextFocusDownId : int with get, set" Usage="Android.Views.View.NextFocusDownId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextFocusDownId", "()I", "GetGetNextFocusDownIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextFocusDownId", "()I", "GetGetNextFocusDownIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextFocusDownId", "(I)V", "GetSetNextFocusDownId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextFocusDownId", "(I)V", "GetSetNextFocusDownId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextFocusDownId">The next focus ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the view to use when the next focus is <c>#FOCUS_DOWN</c>. -or- Sets the id of the view to use when the next focus is <c>#FOCUS_DOWN</c>.</summary>
        <value>The next focus ID, or <c>#NO_ID</c> if the framework should decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the view to use when the next focus is <c>#FOCUS_DOWN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextFocusDownId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextFocusDownId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use when the next focus is <c>#FOCUS_DOWN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextFocusDownId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextFocusDownId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusForwardId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextFocusForwardId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextFocusForwardId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextFocusForwardId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusForwardId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextFocusForwardId" />
      <MemberSignature Language="F#" Value="member this.NextFocusForwardId : int with get, set" Usage="Android.Views.View.NextFocusForwardId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextFocusForwardId", "()I", "GetGetNextFocusForwardIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextFocusForwardId", "()I", "GetGetNextFocusForwardIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextFocusForwardId", "(I)V", "GetSetNextFocusForwardId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextFocusForwardId", "(I)V", "GetSetNextFocusForwardId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextFocusForwardId">The next focus ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the view to use when the next focus is <c>#FOCUS_FORWARD</c>. -or- Sets the id of the view to use when the next focus is <c>#FOCUS_FORWARD</c>.</summary>
        <value>The next focus ID, or <c>#NO_ID</c> if the framework should decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the view to use when the next focus is <c>#FOCUS_FORWARD</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextFocusForwardId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextFocusForwardId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use when the next focus is <c>#FOCUS_FORWARD</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextFocusForwardId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextFocusForwardId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusLeftId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextFocusLeftId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextFocusLeftId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextFocusLeftId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusLeftId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextFocusLeftId" />
      <MemberSignature Language="F#" Value="member this.NextFocusLeftId : int with get, set" Usage="Android.Views.View.NextFocusLeftId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextFocusLeftId", "()I", "GetGetNextFocusLeftIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextFocusLeftId", "()I", "GetGetNextFocusLeftIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextFocusLeftId", "(I)V", "GetSetNextFocusLeftId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextFocusLeftId", "(I)V", "GetSetNextFocusLeftId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextFocusLeftId">The next focus ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the view to use when the next focus is <c>#FOCUS_LEFT</c>. -or- Sets the id of the view to use when the next focus is <c>#FOCUS_LEFT</c>.</summary>
        <value>The next focus ID, or <c>#NO_ID</c> if the framework should decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the view to use when the next focus is <c>#FOCUS_LEFT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextFocusLeftId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextFocusLeftId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use when the next focus is <c>#FOCUS_LEFT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextFocusLeftId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextFocusLeftId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusRightId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextFocusRightId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextFocusRightId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextFocusRightId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusRightId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextFocusRightId" />
      <MemberSignature Language="F#" Value="member this.NextFocusRightId : int with get, set" Usage="Android.Views.View.NextFocusRightId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextFocusRightId", "()I", "GetGetNextFocusRightIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextFocusRightId", "()I", "GetGetNextFocusRightIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextFocusRightId", "(I)V", "GetSetNextFocusRightId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextFocusRightId", "(I)V", "GetSetNextFocusRightId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextFocusRightId">The next focus ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the view to use when the next focus is <c>#FOCUS_RIGHT</c>. -or- Sets the id of the view to use when the next focus is <c>#FOCUS_RIGHT</c>.</summary>
        <value>The next focus ID, or <c>#NO_ID</c> if the framework should decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the view to use when the next focus is <c>#FOCUS_RIGHT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextFocusRightId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextFocusRightId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use when the next focus is <c>#FOCUS_RIGHT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextFocusRightId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextFocusRightId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextFocusUpId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NextFocusUpId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NextFocusUpId { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NextFocusUpId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NextFocusUpId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.NextFocusUpId" />
      <MemberSignature Language="F#" Value="member this.NextFocusUpId : int with get, set" Usage="Android.Views.View.NextFocusUpId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNextFocusUpId", "()I", "GetGetNextFocusUpIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNextFocusUpId", "()I", "GetGetNextFocusUpIdHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNextFocusUpId", "(I)V", "GetSetNextFocusUpId_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNextFocusUpId", "(I)V", "GetSetNextFocusUpId_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="nextFocusUpId">The next focus ID, or <c>#NO_ID</c> if the framework should
            decide automatically.</param>
        <summary>Gets the id of the view to use when the next focus is <c>#FOCUS_UP</c>. -or- Sets the id of the view to use when the next focus is <c>#FOCUS_UP</c>.</summary>
        <value>The next focus ID, or <c>#NO_ID</c> if the framework should decide automatically.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the id of the view to use when the next focus is <c>#FOCUS_UP</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getNextFocusUpId()" title="Reference documentation">Java documentation for <code>android.view.View.getNextFocusUpId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the id of the view to use when the next focus is <c>#FOCUS_UP</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setNextFocusUpId(int)" title="Reference documentation">Java documentation for <code>android.view.View.setNextFocusUpId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NoId">
      <MemberSignature Language="VB.NET" Value="Public Const NoId As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int NoId = -1;" />
      <MemberSignature Language="C#" Value="public const int NoId = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NoId = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.NoId" />
      <MemberSignature Language="F#" Value="val mutable NoId : int" Usage="Android.Views.View.NoId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NO_ID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NO_ID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used to mark a View that has no ID.</summary>
        <remarks>
          <para>Used to mark a View that has no ID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#NO_ID" title="Reference documentation">Java documentation for <code>android.view.View.NO_ID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NotFocusable">
      <MemberSignature Language="VB.NET" Value="Public Const NotFocusable As ViewFocusability  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ViewFocusability NotFocusable = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ViewFocusability NotFocusable = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ViewFocusability NotFocusable = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.NotFocusable" />
      <MemberSignature Language="F#" Value="val mutable NotFocusable : Android.Views.ViewFocusability" Usage="Android.Views.View.NotFocusable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NOT_FOCUSABLE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NOT_FOCUSABLE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewFocusability enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ViewFocusability enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewFocusability</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>This view does not want keystrokes.</summary>
        <remarks>
          <para>This view does not want keystrokes.</para>
          <para>Use with <c>#setFocusable(int)</c> and &lt;c&gt;android:focusable&lt;/c&gt;.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#NOT_FOCUSABLE" title="Reference documentation">Java documentation for <code>android.view.View.NOT_FOCUSABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffsetLeftAndRight">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OffsetLeftAndRight (offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OffsetLeftAndRight(int offset);" />
      <MemberSignature Language="C#" Value="public virtual void OffsetLeftAndRight (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OffsetLeftAndRight(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OffsetLeftAndRight(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OffsetLeftAndRight : int -&gt; unit&#xA;override this.OffsetLeftAndRight : int -&gt; unit" Usage="view.OffsetLeftAndRight offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetLeftAndRight", "(I)V", "GetOffsetLeftAndRight_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetLeftAndRight", "(I)V", "GetOffsetLeftAndRight_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the number of pixels to offset the view by</param>
        <summary>Offset this view's horizontal location by the specified amount of pixels.</summary>
        <remarks>
          <para>Offset this view's horizontal location by the specified amount of pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#offsetLeftAndRight(int)" title="Reference documentation">Java documentation for <code>android.view.View.offsetLeftAndRight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OffsetTopAndBottom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OffsetTopAndBottom (offset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OffsetTopAndBottom(int offset);" />
      <MemberSignature Language="C#" Value="public virtual void OffsetTopAndBottom (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OffsetTopAndBottom(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OffsetTopAndBottom(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OffsetTopAndBottom : int -&gt; unit&#xA;override this.OffsetTopAndBottom : int -&gt; unit" Usage="view.OffsetTopAndBottom offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("offsetTopAndBottom", "(I)V", "GetOffsetTopAndBottom_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("offsetTopAndBottom", "(I)V", "GetOffsetTopAndBottom_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the number of pixels to offset the view by</param>
        <summary>Offset this view's vertical location by the specified number of pixels.</summary>
        <remarks>
          <para>Offset this view's vertical location by the specified number of pixels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#offsetTopAndBottom(int)" title="Reference documentation">Java documentation for <code>android.view.View.offsetTopAndBottom(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationEnd">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAnimationEnd ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAnimationEnd();" />
      <MemberSignature Language="C#" Value="protected virtual void OnAnimationEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnimationEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnAnimationEnd" />
      <MemberSignature Language="F#" Value="abstract member OnAnimationEnd : unit -&gt; unit&#xA;override this.OnAnimationEnd : unit -&gt; unit" Usage="view.OnAnimationEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAnimationEnd", "()V", "GetOnAnimationEndHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAnimationEnd", "()V", "GetOnAnimationEndHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked by a parent ViewGroup to notify the end of the animation
            currently associated with this view.</summary>
        <remarks>
          <para>Invoked by a parent ViewGroup to notify the end of the animation
            currently associated with this view. If you override this method,
            always call super.onAnimationEnd();</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onAnimationEnd()" title="Reference documentation">Java documentation for <code>android.view.View.onAnimationEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Animation" />
      </Docs>
    </Member>
    <Member MemberName="OnAnimationStart">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAnimationStart ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAnimationStart();" />
      <MemberSignature Language="C#" Value="protected virtual void OnAnimationStart ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAnimationStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnAnimationStart" />
      <MemberSignature Language="F#" Value="abstract member OnAnimationStart : unit -&gt; unit&#xA;override this.OnAnimationStart : unit -&gt; unit" Usage="view.OnAnimationStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAnimationStart", "()V", "GetOnAnimationStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAnimationStart", "()V", "GetOnAnimationStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Invoked by a parent ViewGroup to notify the start of the animation
            currently associated with this view.</summary>
        <remarks>
          <para>Invoked by a parent ViewGroup to notify the start of the animation
            currently associated with this view. If you override this method,
            always call super.onAnimationStart();</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onAnimationStart()" title="Reference documentation">Java documentation for <code>android.view.View.onAnimationStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Animation" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyWindowInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnApplyWindowInsets (insets As WindowInsets) As WindowInsets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::WindowInsets ^ OnApplyWindowInsets(Android::Views::WindowInsets ^ insets);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets? OnApplyWindowInsets (Android.Views.WindowInsets? insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.WindowInsets OnApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets)" />
      <MemberSignature Language="F#" Value="abstract member OnApplyWindowInsets : Android.Views.WindowInsets -&gt; Android.Views.WindowInsets&#xA;override this.OnApplyWindowInsets : Android.Views.WindowInsets -&gt; Android.Views.WindowInsets" Usage="view.OnApplyWindowInsets insets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)Landroid/view/WindowInsets;", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">Insets to apply</param>
        <summary>Called when the view should apply <c>WindowInsets</c> according to its internal policy.</summary>
        <returns>The supplied insets with any applied insets consumed</returns>
        <remarks>
          <para>Called when the view should apply <c>WindowInsets</c> according to its internal policy.</para>
          <para>This method should be overridden by views that wish to apply a policy different from or
            in addition to the default behavior. Clients that wish to force a view subtree
            to apply insets should call <c>#dispatchApplyWindowInsets(WindowInsets)</c>.</para>
          <para>Clients may supply an <c>OnApplyWindowInsetsListener</c> to a view. If one is set
            it will be called during dispatch instead of this method. The listener may optionally
            call this method from its own implementation if it wishes to apply the view's default
            insets policy in addition to its own.</para>
          <para>Implementations of this method should either return the insets parameter unchanged
            or a new <c>WindowInsets</c> cloned from the supplied insets with any insets consumed
            that this view applied itself. This allows new inset types added in future platform
            versions to pass through existing implementations unchanged without being erroneously
            consumed.</para>
          <para>By default if a view's <c>#setFitsSystemWindows(boolean) fitsSystemWindows</c>
            property is set then the view will consume the system window insets and apply them
            as padding for the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onApplyWindowInsets(android.view.WindowInsets)" title="Reference documentation">Java documentation for <code>android.view.View.onApplyWindowInsets(android.view.WindowInsets)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAttachedToWindow">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAttachedToWindow ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAttachedToWindow();" />
      <MemberSignature Language="C#" Value="protected virtual void OnAttachedToWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAttachedToWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnAttachedToWindow" />
      <MemberSignature Language="F#" Value="abstract member OnAttachedToWindow : unit -&gt; unit&#xA;override this.OnAttachedToWindow : unit -&gt; unit" Usage="view.OnAttachedToWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the view is attached to a window.</summary>
        <remarks>
          <para>This is called when the view is attached to a window.  At this point it
            has a Surface and will start drawing.  Note that this function is
            guaranteed to be called before <c>#onDraw(android.graphics.Canvas)</c>,
            however it may be called any time before the first onDraw -- including
            before or after <c>#onMeasure(int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onAttachedToWindow()" title="Reference documentation">Java documentation for <code>android.view.View.onAttachedToWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnDetachedFromWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelPendingInputEvents">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnCancelPendingInputEvents ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnCancelPendingInputEvents();" />
      <MemberSignature Language="C#" Value="public virtual void OnCancelPendingInputEvents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCancelPendingInputEvents() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCancelPendingInputEvents" />
      <MemberSignature Language="F#" Value="abstract member OnCancelPendingInputEvents : unit -&gt; unit&#xA;override this.OnCancelPendingInputEvents : unit -&gt; unit" Usage="view.OnCancelPendingInputEvents " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCancelPendingInputEvents", "()V", "GetOnCancelPendingInputEventsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCancelPendingInputEvents", "()V", "GetOnCancelPendingInputEventsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called as the result of a call to <c>#cancelPendingInputEvents()</c> on this view or
            a parent view.</summary>
        <remarks>
          <para>Called as the result of a call to <c>#cancelPendingInputEvents()</c> on this view or
            a parent view.</para>
          <para>This method is responsible for removing any pending high-level input events that were
            posted to the event queue to run later. Custom view classes that post their own deferred
            high-level events via <c>#post(Runnable)</c>, <c>#postDelayed(Runnable, long)</c> or
            <c>android.os.Handler</c> should override this method, call
            <c>super.onCancelPendingInputEvents()</c> and remove those callbacks as appropriate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCancelPendingInputEvents()" title="Reference documentation">Java documentation for <code>android.view.View.onCancelPendingInputEvents()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapturedPointerEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCapturedPointerEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnCapturedPointerEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnCapturedPointerEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCapturedPointerEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCapturedPointerEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnCapturedPointerEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnCapturedPointerEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.OnCapturedPointerEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCapturedPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetOnCapturedPointerEvent_Landroid_view_MotionEvent_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCapturedPointerEvent", "(Landroid/view/MotionEvent;)Z", "GetOnCapturedPointerEvent_Landroid_view_MotionEvent_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="event">The captured pointer event.</param>
        <summary>Implement this method to handle captured pointer events</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Implement this method to handle captured pointer events</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCapturedPointerEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onCapturedPointerEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCheckIsTextEditor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCheckIsTextEditor () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnCheckIsTextEditor();" />
      <MemberSignature Language="C#" Value="public virtual bool OnCheckIsTextEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCheckIsTextEditor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCheckIsTextEditor" />
      <MemberSignature Language="F#" Value="abstract member OnCheckIsTextEditor : unit -&gt; bool&#xA;override this.OnCheckIsTextEditor : unit -&gt; bool" Usage="view.OnCheckIsTextEditor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCheckIsTextEditor", "()Z", "GetOnCheckIsTextEditorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCheckIsTextEditor", "()Z", "GetOnCheckIsTextEditorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check whether the called view is a text editor, in which case it
            would make sense to automatically display a soft input window for
            it.</summary>
        <returns>Returns true if this view is a text editor, else false.</returns>
        <remarks>
          <para>Check whether the called view is a text editor, in which case it
            would make sense to automatically display a soft input window for
            it.  Subclasses should override this if they implement
            <c>#onCreateInputConnection(EditorInfo)</c> to return true if
            a call on that method would return a non-null InputConnection, and
            they are really a first-class editor that the user would normally
            start typing on when the go into a window containing your view.</para>
          <para>The default implementation always returns false.  This does
            &lt;em&gt;not&lt;/em&gt; mean that its <c>#onCreateInputConnection(EditorInfo)</c>
            will not be called or the user can not otherwise perform edits on your
            view; it is just a hint to the system that this is not the primary
            purpose of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCheckIsTextEditor()" title="Reference documentation">Java documentation for <code>android.view.View.onCheckIsTextEditor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnConfigurationChanged (newConfig As Configuration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnConfigurationChanged(Android::Content::Res::Configuration ^ newConfig);" />
      <MemberSignature Language="C#" Value="protected virtual void OnConfigurationChanged (Android.Content.Res.Configuration? newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnConfigurationChanged(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member OnConfigurationChanged : Android.Content.Res.Configuration -&gt; unit&#xA;override this.OnConfigurationChanged : Android.Content.Res.Configuration -&gt; unit" Usage="view.OnConfigurationChanged newConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new resource configuration.</param>
        <summary>Called when the current configuration of the resources being used
            by the application have changed.</summary>
        <remarks>
          <para>Called when the current configuration of the resources being used
            by the application have changed.  You can use this to decide when
            to reload resources that can changed based on orientation and other
            configuration characteristics.  You only need to use this if you are
            not relying on the normal <c>android.app.Activity</c> mechanism of
            recreating the activity instance upon a configuration change.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onConfigurationChanged(android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.view.View.onConfigurationChanged(android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateContextMenu">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateContextMenu (menu As IContextMenu)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateContextMenu(Android::Views::IContextMenu ^ menu);" />
      <MemberSignature Language="C#" Value="protected virtual void OnCreateContextMenu (Android.Views.IContextMenu? menu);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateContextMenu(class Android.Views.IContextMenu menu) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCreateContextMenu(Android.Views.IContextMenu)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateContextMenu : Android.Views.IContextMenu -&gt; unit&#xA;override this.OnCreateContextMenu : Android.Views.IContextMenu -&gt; unit" Usage="view.OnCreateContextMenu menu" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateContextMenu", "(Landroid/view/ContextMenu;)V", "GetOnCreateContextMenu_Landroid_view_ContextMenu_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="menu" Type="Android.Views.IContextMenu" />
      </Parameters>
      <Docs>
        <param name="menu">the context menu to populate</param>
        <summary>Views should implement this if the view itself is going to add items to
            the context menu.</summary>
        <remarks>
          <para>Views should implement this if the view itself is going to add items to
            the context menu.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCreateContextMenu(android.view.ContextMenu)" title="Reference documentation">Java documentation for <code>android.view.View.onCreateContextMenu(android.view.ContextMenu)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateDrawableState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateDrawableState (extraSpace As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;int&gt; ^ OnCreateDrawableState(int extraSpace);" />
      <MemberSignature Language="C#" Value="protected virtual int[]? OnCreateDrawableState (int extraSpace);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32[] OnCreateDrawableState(int32 extraSpace) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCreateDrawableState(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateDrawableState : int -&gt; int[]&#xA;override this.OnCreateDrawableState : int -&gt; int[]" Usage="view.OnCreateDrawableState extraSpace" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateDrawableState", "(I)[I", "GetOnCreateDrawableState_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateDrawableState", "(I)[I", "GetOnCreateDrawableState_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraSpace" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="extraSpace">if non-zero, this is the number of extra entries you
            would like in the returned array in which you can place your own
            states.</param>
        <summary>Generate the new <c>android.graphics.drawable.Drawable</c> state for
            this view.</summary>
        <returns>Returns an array holding the current <c>Drawable</c> state of
            the view.</returns>
        <remarks>
          <para>Generate the new <c>android.graphics.drawable.Drawable</c> state for
            this view. This is called by the view
            system when the cached Drawable state is determined to be invalid.  To
            retrieve the current state, you should use <c>#getDrawableState</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCreateDrawableState(int)" title="Reference documentation">Java documentation for <code>android.view.View.onCreateDrawableState(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.MergeDrawableStates(System.Int32[], System.Int32[])" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateInputConnection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateInputConnection (outAttrs As EditorInfo) As IInputConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::InputMethods::IInputConnection ^ OnCreateInputConnection(Android::Views::InputMethods::EditorInfo ^ outAttrs);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.InputMethods.IInputConnection? OnCreateInputConnection (Android.Views.InputMethods.EditorInfo? outAttrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.InputMethods.IInputConnection OnCreateInputConnection(class Android.Views.InputMethods.EditorInfo outAttrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCreateInputConnection(Android.Views.InputMethods.EditorInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateInputConnection : Android.Views.InputMethods.EditorInfo -&gt; Android.Views.InputMethods.IInputConnection&#xA;override this.OnCreateInputConnection : Android.Views.InputMethods.EditorInfo -&gt; Android.Views.InputMethods.IInputConnection" Usage="view.OnCreateInputConnection outAttrs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateInputConnection", "(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "GetOnCreateInputConnection_Landroid_view_inputmethod_EditorInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateInputConnection", "(Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "GetOnCreateInputConnection_Landroid_view_inputmethod_EditorInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputMethods.IInputConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outAttrs" Type="Android.Views.InputMethods.EditorInfo" />
      </Parameters>
      <Docs>
        <param name="outAttrs">Fill in with attribute information about the connection.</param>
        <summary>Create a new InputConnection for an InputMethod to interact
            with the view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Create a new InputConnection for an InputMethod to interact
            with the view.  The default implementation returns null, since it doesn't
            support input methods.  You can override this to implement such support.
            This is only needed for views that take focus and text input.</para>
          <para>When implementing this, you probably also want to implement
            <c>#onCheckIsTextEditor()</c> to indicate you will return a
            non-null InputConnection.</para>
          <para>Also, take good care to fill in the <c>android.view.inputmethod.EditorInfo</c>
            object correctly and in its entirety, so that the connected IME can rely
            on its values. For example, <c>android.view.inputmethod.EditorInfo#initialSelStart</c>
            and  <c>android.view.inputmethod.EditorInfo#initialSelEnd</c> members
            must be filled in with the correct cursor position for IMEs to work correctly
            with your application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCreateInputConnection(android.view.inputmethod.EditorInfo)" title="Reference documentation">Java documentation for <code>android.view.View.onCreateInputConnection(android.view.inputmethod.EditorInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateViewTranslationRequest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnCreateViewTranslationRequest (supportedFormats As Integer(), requestsCollector As IConsumer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnCreateViewTranslationRequest(cli::array &lt;int&gt; ^ supportedFormats, Java::Util::Functions::IConsumer ^ requestsCollector);" />
      <MemberSignature Language="C#" Value="public virtual void OnCreateViewTranslationRequest (int[] supportedFormats, Java.Util.Functions.IConsumer requestsCollector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateViewTranslationRequest(int32[] supportedFormats, class Java.Util.Functions.IConsumer requestsCollector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCreateViewTranslationRequest(System.Int32[],Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateViewTranslationRequest : int[] * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.OnCreateViewTranslationRequest : int[] * Java.Util.Functions.IConsumer -&gt; unit" Usage="view.OnCreateViewTranslationRequest (supportedFormats, requestsCollector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateViewTranslationRequest", "([ILjava/util/function/Consumer;)V", "GetOnCreateViewTranslationRequest_arrayILjava_util_function_Consumer_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateViewTranslationRequest", "([ILjava/util/function/Consumer;)V", "GetOnCreateViewTranslationRequest_arrayILjava_util_function_Consumer_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supportedFormats" Type="System.Int32[]" />
        <Parameter Name="requestsCollector" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="supportedFormats">the supported translation formats. For now, the only possible value
            is the <c>android.view.translation.TranslationSpec#DATA_FORMAT_TEXT</c>.</param>
        <param name="requestsCollector">a <c>ViewTranslationRequest</c> collector that can be used to
            collect the information to be translated in the view. The <c>requestsCollector</c> only
            accepts one request; an IllegalStateException is thrown if more than one
            <c>ViewTranslationRequest</c> is submitted to it. The <c>AutofillId</c> must be set on the
            <c>ViewTranslationRequest</c>.</param>
        <summary>Collects a <c>ViewTranslationRequest</c> which represents the content to be translated in
            the view.</summary>
        <remarks>
          <para>Collects a <c>ViewTranslationRequest</c> which represents the content to be translated in
            the view.</para>
          <para>The default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCreateViewTranslationRequest(int[],%20java.util.function.Consumer%3Candroid.view.translation.ViewTranslationRequest%3E)" title="Reference documentation">Java documentation for <code>android.view.View.onCreateViewTranslationRequest(int[], java.util.function.Consumer&lt;android.view.translation.ViewTranslationRequest&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateVirtualViewTranslationRequests">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnCreateVirtualViewTranslationRequests (virtualIds As Long(), supportedFormats As Integer(), requestsCollector As IConsumer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnCreateVirtualViewTranslationRequests(cli::array &lt;long&gt; ^ virtualIds, cli::array &lt;int&gt; ^ supportedFormats, Java::Util::Functions::IConsumer ^ requestsCollector);" />
      <MemberSignature Language="C#" Value="public virtual void OnCreateVirtualViewTranslationRequests (long[] virtualIds, int[] supportedFormats, Java.Util.Functions.IConsumer requestsCollector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateVirtualViewTranslationRequests(int64[] virtualIds, int32[] supportedFormats, class Java.Util.Functions.IConsumer requestsCollector) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnCreateVirtualViewTranslationRequests(System.Int64[],System.Int32[],Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateVirtualViewTranslationRequests : int64[] * int[] * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.OnCreateVirtualViewTranslationRequests : int64[] * int[] * Java.Util.Functions.IConsumer -&gt; unit" Usage="view.OnCreateVirtualViewTranslationRequests (virtualIds, supportedFormats, requestsCollector)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateVirtualViewTranslationRequests", "([J[ILjava/util/function/Consumer;)V", "GetOnCreateVirtualViewTranslationRequests_arrayJarrayILjava_util_function_Consumer_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateVirtualViewTranslationRequests", "([J[ILjava/util/function/Consumer;)V", "GetOnCreateVirtualViewTranslationRequests_arrayJarrayILjava_util_function_Consumer_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualIds" Type="System.Int64[]" />
        <Parameter Name="supportedFormats" Type="System.Int32[]" />
        <Parameter Name="requestsCollector" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="virtualIds">the virtual view ids which represents the virtual views in the host
            view.</param>
        <param name="supportedFormats">the supported translation formats. For now, the only possible value
            is the <c>android.view.translation.TranslationSpec#DATA_FORMAT_TEXT</c>.</param>
        <param name="requestsCollector">a <c>ViewTranslationRequest</c> collector that can be called
            multiple times to collect the information to be translated in the host view. One
            <c>ViewTranslationRequest</c> per virtual child. The <c>ViewTranslationRequest</c> must
            contains the <c>AutofillId</c> corresponding to the virtualChildIds. Do not keep this
            Consumer after the method returns.</param>
        <summary>Collects <c>ViewTranslationRequest</c>s which represents the content to be translated
            for the virtual views in the host view.</summary>
        <remarks>
          <para>Collects <c>ViewTranslationRequest</c>s which represents the content to be translated
            for the virtual views in the host view. This is called if this view returned a virtual
            view structure from <c>#onProvideContentCaptureStructure</c> and the system determined that
            those virtual views were relevant for translation.</para>
          <para>The default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onCreateVirtualViewTranslationRequests(long[],%20int[],%20java.util.function.Consumer%3Candroid.view.translation.ViewTranslationRequest%3E)" title="Reference documentation">Java documentation for <code>android.view.View.onCreateVirtualViewTranslationRequests(long[], int[], java.util.function.Consumer&lt;android.view.translation.ViewTranslationRequest&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDetachedFromWindow">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDetachedFromWindow ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDetachedFromWindow();" />
      <MemberSignature Language="C#" Value="protected virtual void OnDetachedFromWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDetachedFromWindow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDetachedFromWindow" />
      <MemberSignature Language="F#" Value="abstract member OnDetachedFromWindow : unit -&gt; unit&#xA;override this.OnDetachedFromWindow : unit -&gt; unit" Usage="view.OnDetachedFromWindow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when the view is detached from a window.</summary>
        <remarks>
          <para>This is called when the view is detached from a window.  At this point it
            no longer has a surface for drawing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDetachedFromWindow()" title="Reference documentation">Java documentation for <code>android.view.View.onDetachedFromWindow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnAttachedToWindow" />
      </Docs>
    </Member>
    <Member MemberName="OnDisplayHint">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDisplayHint (hint As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDisplayHint(int hint);" />
      <MemberSignature Language="C#" Value="protected virtual void OnDisplayHint (int hint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDisplayHint(int32 hint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDisplayHint(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnDisplayHint : int -&gt; unit&#xA;override this.OnDisplayHint : int -&gt; unit" Usage="view.OnDisplayHint hint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDisplayHint", "(I)V", "GetOnDisplayHint_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDisplayHint", "(I)V", "GetOnDisplayHint_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hint" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="hint">A hint about whether or not this view is displayed:
            <c>#VISIBLE</c> or <c>#INVISIBLE</c>.</param>
        <summary>Gives this view a hint about whether is displayed or not.</summary>
        <remarks>
          <para>Gives this view a hint about whether is displayed or not. For instance, when
            a View moves out of the screen, it might receives a display hint indicating
            the view is not displayed. Applications should not &lt;em&gt;rely&lt;/em&gt; on this hint
            as there is no guarantee that they will receive one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDisplayHint(int)" title="Reference documentation">Java documentation for <code>android.view.View.onDisplayHint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnDragEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDragEvent (e As DragEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnDragEvent(Android::Views::DragEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnDragEvent (Android.Views.DragEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnDragEvent(class Android.Views.DragEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDragEvent(Android.Views.DragEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnDragEvent : Android.Views.DragEvent -&gt; bool&#xA;override this.OnDragEvent : Android.Views.DragEvent -&gt; bool" Usage="view.OnDragEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDragEvent", "(Landroid/view/DragEvent;)Z", "GetOnDragEvent_Landroid_view_DragEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDragEvent", "(Landroid/view/DragEvent;)Z", "GetOnDragEvent_Landroid_view_DragEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.DragEvent" />
      </Parameters>
      <Docs>
        <param name="e">The <see cref="T:Android.Views.DragEvent" /> sent by the system.
 The <see cref="P:Android.Views.DragEvent.Action" /> method returns an action type constant defined
 in DragEvent, indicating the type of drag event represented by this object.</param>
        <param name="event">The <c>DragEvent</c> object sent by the system. The
              <c>DragEvent#getAction()</c> method returns an action type constant that indicates the
              type of drag event represented by this object.</param>
        <summary>Handles drag events sent by the system following a call to
            <c>android.view.View#startDragAndDrop(ClipData,DragShadowBuilder,Object,int)
            startDragAndDrop()</c>.</summary>
        <returns>
          <c>true</c> if the method successfully handled the drag event, otherwise
              <c>false</c>.
              &lt;p&gt;
                The method must return <c>true</c> in response to an
                <c>DragEvent#ACTION_DRAG_STARTED ACTION_DRAG_STARTED</c> action type to continue to
                receive drag events for the current drag and drop operation.
              &lt;p&gt;
                The method should return <c>true</c> in response to an
                <c>DragEvent#ACTION_DROP ACTION_DROP</c> action type if the dropped data was consumed
                (at least partially); <c>false</c>, if none of the data was consumed.
              &lt;p&gt;
                For all other events, the return value is <c>false</c>.</returns>
        <remarks>
          <para>Handles drag events sent by the system following a call to
            <c>android.view.View#startDragAndDrop(ClipData,DragShadowBuilder,Object,int)
            startDragAndDrop()</c>.</para>
          <para>The system calls this method and passes a <c>DragEvent</c> object in response to drag and
            drop events. This method can then call <c>DragEvent#getAction()</c> to determine the state
            of the drag and drop operation.</para>
          <para>The default implementation returns <c>false</c> unless an <c>OnReceiveContentListener</c>
            has been set for this view (see <c>#setOnReceiveContentListener</c>), in which case
            the default implementation does the following:
            &lt;ul&gt;
              &lt;li&gt;Returns <c>true</c> for an
                <c>DragEvent#ACTION_DRAG_STARTED ACTION_DRAG_STARTED</c> event
              &lt;li&gt;Calls <c>#performReceiveContent</c> for an
                <c>DragEvent#ACTION_DROP ACTION_DROP</c> event
              &lt;li&gt;Returns <c>true</c> for an <c>DragEvent#ACTION_DROP ACTION_DROP</c> event if the
                <c>OnReceiveContentListener</c> consumed some or all of the content
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDragEvent(android.view.DragEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onDragEvent(android.view.DragEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDraw (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDraw(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="protected virtual void OnDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDraw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member OnDraw : Android.Graphics.Canvas -&gt; unit&#xA;override this.OnDraw : Android.Graphics.Canvas -&gt; unit" Usage="view.OnDraw canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which the background will be drawn</param>
        <summary>Implement this to do your drawing.</summary>
        <remarks>
          <para>Implement this to do your drawing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDraw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.view.View.onDraw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnDrawForeground">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDrawForeground (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDrawForeground(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="public virtual void OnDrawForeground (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDrawForeground(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDrawForeground(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member OnDrawForeground : Android.Graphics.Canvas -&gt; unit&#xA;override this.OnDrawForeground : Android.Graphics.Canvas -&gt; unit" Usage="view.OnDrawForeground canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDrawForeground", "(Landroid/graphics/Canvas;)V", "GetOnDrawForeground_Landroid_graphics_Canvas_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDrawForeground", "(Landroid/graphics/Canvas;)V", "GetOnDrawForeground_Landroid_graphics_Canvas_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">canvas to draw into</param>
        <summary>Draw any foreground content for this view.</summary>
        <remarks>
          <para>Draw any foreground content for this view.</para>
          <para>Foreground content may consist of scroll bars, a <c>#setForeground foreground</c>
            drawable or other view-specific decorations. The foreground is drawn on top of the
            primary view content.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDrawForeground(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.view.View.onDrawForeground(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDrawScrollBars">
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDrawScrollBars (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDrawScrollBars(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="protected void OnDrawScrollBars (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDrawScrollBars(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnDrawScrollBars(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="member this.OnDrawScrollBars : Android.Graphics.Canvas -&gt; unit" Usage="view.OnDrawScrollBars canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDrawScrollBars", "(Landroid/graphics/Canvas;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDrawScrollBars", "(Landroid/graphics/Canvas;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas on which to draw the scrollbars</param>
        <summary>Request the drawing of the horizontal and the vertical scrollbar.</summary>
        <remarks>
          <para>Request the drawing of the horizontal and the vertical scrollbar. The
            scrollbars are painted only if they have been awakened first.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onDrawScrollBars(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.view.View.onDrawScrollBars(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
        <altmember cref="M:Android.Views.View.AwakenScrollBars(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnFilterTouchEventForSecurity">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnFilterTouchEventForSecurity (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnFilterTouchEventForSecurity(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnFilterTouchEventForSecurity (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnFilterTouchEventForSecurity(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnFilterTouchEventForSecurity(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnFilterTouchEventForSecurity : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnFilterTouchEventForSecurity : Android.Views.MotionEvent -&gt; bool" Usage="view.OnFilterTouchEventForSecurity e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFilterTouchEventForSecurity", "(Landroid/view/MotionEvent;)Z", "GetOnFilterTouchEventForSecurity_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFilterTouchEventForSecurity", "(Landroid/view/MotionEvent;)Z", "GetOnFilterTouchEventForSecurity_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event to be filtered.</param>
        <param name="event">The motion event to be filtered.</param>
        <summary>Filter the touch event to apply security policies.</summary>
        <returns>True if the event should be dispatched, false if the event should be dropped.</returns>
        <remarks>
          <para>Filter the touch event to apply security policies.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onFilterTouchEventForSecurity(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onFilterTouchEventForSecurity(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.FilterTouchesWhenObscured" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishInflate">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinishInflate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinishInflate();" />
      <MemberSignature Language="C#" Value="protected virtual void OnFinishInflate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishInflate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnFinishInflate" />
      <MemberSignature Language="F#" Value="abstract member OnFinishInflate : unit -&gt; unit&#xA;override this.OnFinishInflate : unit -&gt; unit" Usage="view.OnFinishInflate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishInflate", "()V", "GetOnFinishInflateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishInflate", "()V", "GetOnFinishInflateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finalize inflating a view from XML.</summary>
        <remarks>
          <para>Finalize inflating a view from XML.  This is called as the last phase
            of inflation, after all child views have been added.</para>
          <para>Even if the subclass overrides onFinishInflate, they should always be
            sure to call the super method, so that we get called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onFinishInflate()" title="Reference documentation">Java documentation for <code>android.view.View.onFinishInflate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishTemporaryDetach">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnFinishTemporaryDetach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnFinishTemporaryDetach();" />
      <MemberSignature Language="C#" Value="public virtual void OnFinishTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFinishTemporaryDetach() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnFinishTemporaryDetach" />
      <MemberSignature Language="F#" Value="abstract member OnFinishTemporaryDetach : unit -&gt; unit&#xA;override this.OnFinishTemporaryDetach : unit -&gt; unit" Usage="view.OnFinishTemporaryDetach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFinishTemporaryDetach", "()V", "GetOnFinishTemporaryDetachHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFinishTemporaryDetach", "()V", "GetOnFinishTemporaryDetachHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called after <c>#onStartTemporaryDetach</c> when the container is done
            changing the view.</summary>
        <remarks>
          <para>Called after <c>#onStartTemporaryDetach</c> when the container is done
            changing the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onFinishTemporaryDetach()" title="Reference documentation">Java documentation for <code>android.view.View.onFinishTemporaryDetach()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFocusChanged (gainFocus As Boolean, direction As FocusSearchDirection, previouslyFocusedRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFocusChanged(bool gainFocus, Android::Views::FocusSearchDirection direction, Android::Graphics::Rect ^ previouslyFocusedRect);" />
      <MemberSignature Language="C#" Value="protected virtual void OnFocusChanged (bool gainFocus, Android.Views.FocusSearchDirection direction, Android.Graphics.Rect? previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFocusChanged(bool gainFocus, valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnFocusChanged(System.Boolean,Android.Views.FocusSearchDirection,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member OnFocusChanged : bool * Android.Views.FocusSearchDirection * Android.Graphics.Rect -&gt; unit&#xA;override this.OnFocusChanged : bool * Android.Views.FocusSearchDirection * Android.Graphics.Rect -&gt; unit" Usage="view.OnFocusChanged (gainFocus, direction, previouslyFocusedRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFocusChanged", "(ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_ZILandroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFocusChanged", "(ZILandroid/graphics/Rect;)V", "GetOnFocusChanged_ZILandroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gainFocus" Type="System.Boolean" />
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="gainFocus">True if the View has focus; false otherwise.</param>
        <param name="direction">The direction focus has moved when requestFocus()
                             is called to give this view focus. Values are
                             <c>#FOCUS_UP</c>, <c>#FOCUS_DOWN</c>, <c>#FOCUS_LEFT</c>,
                             <c>#FOCUS_RIGHT</c>, <c>#FOCUS_FORWARD</c>, or <c>#FOCUS_BACKWARD</c>.
                             It may not always apply, in which case use the default.</param>
        <param name="previouslyFocusedRect">The rectangle, in this view's coordinate
                   system, of the previously focused view.  If applicable, this will be
                   passed in as finer grained information about where the focus is coming
                   from (in addition to direction).  Will be <c>null</c> otherwise.</param>
        <summary>Called by the view system when the focus state of this view changes.</summary>
        <remarks>
          <para>Called by the view system when the focus state of this view changes.
            When the focus change event is caused by directional navigation, direction
            and previouslyFocusedRect provide insight into where the focus is coming from.
            When overriding, be sure to call up through to the super class so that
            the standard focus handling will occur.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onFocusChanged(boolean,%20int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.onFocusChanged(boolean, int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnFocusChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnFocusChangeListener As View.IOnFocusChangeListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::View::IOnFocusChangeListener ^ OnFocusChangeListener { Android::Views::View::IOnFocusChangeListener ^ get(); void set(Android::Views::View::IOnFocusChangeListener ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View.IOnFocusChangeListener? OnFocusChangeListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View/IOnFocusChangeListener OnFocusChangeListener" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.OnFocusChangeListener" />
      <MemberSignature Language="F#" Value="member this.OnFocusChangeListener : Android.Views.View.IOnFocusChangeListener with get, set" Usage="Android.Views.View.OnFocusChangeListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOnFocusChangeListener", "()Landroid/view/View$OnFocusChangeListener;", "GetGetOnFocusChangeListenerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOnFocusChangeListener", "()Landroid/view/View$OnFocusChangeListener;", "GetGetOnFocusChangeListenerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOnFocusChangeListener", "(Landroid/view/View$OnFocusChangeListener;)V", "GetSetOnFocusChangeListener_Landroid_view_View_OnFocusChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOnFocusChangeListener", "(Landroid/view/View$OnFocusChangeListener;)V", "GetSetOnFocusChangeListener_Landroid_view_View_OnFocusChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View+IOnFocusChangeListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the focus-change callback registered for this view. -or- Register a callback to be invoked when focus of this view changed.</summary>
        <value>The callback, or null if one is not registered.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOnFocusChangeListener()" title="Reference documentation">Java documentation for <code>android.view.View.getOnFocusChangeListener()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnFocusChangeListener(android.view.OnFocusChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnFocusChangeListener(android.view.OnFocusChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnGenericMotionEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnGenericMotionEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnGenericMotionEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnGenericMotionEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnGenericMotionEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.OnGenericMotionEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetOnGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetOnGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The generic motion event being processed.</param>
        <param name="event">The generic motion event being processed.</param>
        <summary>Implement this method to handle generic motion events.</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Implement this method to handle generic motion events.</para>
          <para>Generic motion events describe joystick movements, hover events from mouse or stylus
            devices, trackpad touches, scroll wheel movements and other motion events not handled
            by <c>#onTouchEvent(MotionEvent)</c> or <c>#onTrackballEvent(MotionEvent)</c>.
            The <c>MotionEvent#getSource() source</c> of the motion event specifies
            the class of input that was received.  Implementations of this method
            must examine the bits in the source before processing the event.
            The following code example shows how this is done.</para>
          <para>Generic motion events with source class <c>InputDevice#SOURCE_CLASS_POINTER</c>
            are delivered to the view under the pointer.  All other generic motion events are
            delivered to the focused view.</para>
          <code lang="text/java">public boolean onGenericMotionEvent(MotionEvent event) {
                if (event.isFromSource(InputDevice.SOURCE_CLASS_JOYSTICK)) {
                    if (event.getAction() == MotionEvent.ACTION_MOVE) {
                        // process the joystick movement...
                        return true;
                    }
                }
                if (event.isFromSource(InputDevice.SOURCE_CLASS_POINTER)) {
                    switch (event.getAction()) {
                        case MotionEvent.ACTION_HOVER_MOVE:
                            // process the hover movement...
                            return true;
                        case MotionEvent.ACTION_SCROLL:
                            // process the scroll wheel movement...
                            return true;
                    }
                }
                return super.onGenericMotionEvent(event);
            }</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="OnHoverChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnHoverChanged (hovered As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnHoverChanged(bool hovered);" />
      <MemberSignature Language="C#" Value="public virtual void OnHoverChanged (bool hovered);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHoverChanged(bool hovered) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnHoverChanged : bool -&gt; unit&#xA;override this.OnHoverChanged : bool -&gt; unit" Usage="view.OnHoverChanged hovered" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onHoverChanged", "(Z)V", "GetOnHoverChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onHoverChanged", "(Z)V", "GetOnHoverChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hovered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hovered">The current hover state, as returned by <c>#isHovered</c>.</param>
        <summary>Implement this method to handle hover state changes.</summary>
        <remarks>
          <para>Implement this method to handle hover state changes.</para>
          <para>This method is called whenever the hover state changes as a result of a
            call to <c>#setHovered</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onHoverChanged(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.onHoverChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
      </Docs>
    </Member>
    <Member MemberName="OnHoverEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnHoverEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnHoverEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnHoverEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnHoverEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnHoverEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnHoverEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnHoverEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.OnHoverEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetOnHoverEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onHoverEvent", "(Landroid/view/MotionEvent;)Z", "GetOnHoverEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event that describes the hover.</param>
        <param name="event">The motion event that describes the hover.</param>
        <summary>Implement this method to handle hover events.</summary>
        <returns>True if the view handled the hover event.</returns>
        <remarks>
          <para>Implement this method to handle hover events.</para>
          <para>This method is called whenever a pointer is hovering into, over, or out of the
            bounds of a view and the view is not currently being touched.
            Hover events are represented as pointer events with action
            <c>MotionEvent#ACTION_HOVER_ENTER</c>, <c>MotionEvent#ACTION_HOVER_MOVE</c>,
            or <c>MotionEvent#ACTION_HOVER_EXIT</c>.</para>
          <para>&lt;ul&gt;
            &lt;li&gt;The view receives a hover event with action <c>MotionEvent#ACTION_HOVER_ENTER</c>
            when the pointer enters the bounds of the view.&lt;/li&gt;
            &lt;li&gt;The view receives a hover event with action <c>MotionEvent#ACTION_HOVER_MOVE</c>
            when the pointer has already entered the bounds of the view and has moved.&lt;/li&gt;
            &lt;li&gt;The view receives a hover event with action <c>MotionEvent#ACTION_HOVER_EXIT</c>
            when the pointer has exited the bounds of the view or when the pointer is
            about to go down due to a button click, tap, or similar user action that
            causes the view to be touched.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The view should implement this method to return true to indicate that it is
            handling the hover event, such as by changing its drawable state.</para>
          <para>The default implementation calls <c>#setHovered</c> to update the hovered state
            of the view when a hover enter or hover exit event is received, if the view
            is enabled and is clickable.  The default implementation also sends hover
            accessibility events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onHoverEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onHoverEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.Hovered" />
        <altmember cref="M:Android.Views.View.OnHoverChanged(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnInitializeAccessibilityEvent (e As AccessibilityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnInitializeAccessibilityEvent(Android::Views::Accessibility::AccessibilityEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnInitializeAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; unit&#xA;override this.OnInitializeAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; unit" Usage="view.OnInitializeAccessibilityEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInitializeAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event to initialize.</param>
        <param name="event">The event to initialize.</param>
        <summary>Initializes an <c>AccessibilityEvent</c> with information about
            this View which is the event source.</summary>
        <remarks>
          <para>Initializes an <c>AccessibilityEvent</c> with information about
            this View which is the event source. In other words, the source of
            an accessibility event is the view whose state change triggered firing
            the event.</para>
          <para>Example: Setting the password property of an event in addition
                     to properties set by the super implementation:</para>
          <code lang="text/java">public void onInitializeAccessibilityEvent(AccessibilityEvent event) {
                super.onInitializeAccessibilityEvent(event);
                event.setPassword(true);
            }</code>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#onInitializeAccessibilityEvent(View, AccessibilityEvent)</c>
            is responsible for handling this call.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Always call the super implementation before adding
            information to the event, in case the default implementation has basic information to add.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnInitializeAccessibilityNodeInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnInitializeAccessibilityNodeInfo (info As AccessibilityNodeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnInitializeAccessibilityNodeInfo(Android::Views::Accessibility::AccessibilityNodeInfo ^ info);" />
      <MemberSignature Language="C#" Value="public virtual void OnInitializeAccessibilityNodeInfo (Android.Views.Accessibility.AccessibilityNodeInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnInitializeAccessibilityNodeInfo(class Android.Views.Accessibility.AccessibilityNodeInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnInitializeAccessibilityNodeInfo(Android.Views.Accessibility.AccessibilityNodeInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnInitializeAccessibilityNodeInfo : Android.Views.Accessibility.AccessibilityNodeInfo -&gt; unit&#xA;override this.OnInitializeAccessibilityNodeInfo : Android.Views.Accessibility.AccessibilityNodeInfo -&gt; unit" Usage="view.OnInitializeAccessibilityNodeInfo info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_accessibility_AccessibilityNodeInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onInitializeAccessibilityNodeInfo", "(Landroid/view/accessibility/AccessibilityNodeInfo;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_accessibility_AccessibilityNodeInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Views.Accessibility.AccessibilityNodeInfo" />
      </Parameters>
      <Docs>
        <param name="info">The instance to initialize.</param>
        <summary>Initializes an <c>AccessibilityNodeInfo</c> with information about this view.</summary>
        <remarks>
          <para>Initializes an <c>AccessibilityNodeInfo</c> with information about this view.
            The base implementation sets:
            &lt;ul&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setParent(View)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setBoundsInParent(Rect)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setBoundsInScreen(Rect)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setPackageName(CharSequence)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setClassName(CharSequence)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setContentDescription(CharSequence)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setEnabled(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setClickable(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setFocusable(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setFocused(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setLongClickable(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setSelected(boolean)</c>,&lt;/li&gt;
              &lt;li&gt;<c>AccessibilityNodeInfo#setContextClickable(boolean)</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Subclasses should override this method, call the super implementation,
            and set additional attributes.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#onInitializeAccessibilityNodeInfo(View, AccessibilityNodeInfo)</c>
            is responsible for handling this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)" title="Reference documentation">Java documentation for <code>android.view.View.onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyDown (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyDown(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyDown (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyDown(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyDown(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyDown : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyDown (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyDown(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyDown", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyDown_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <param name="keyCode">a key code that represents the button pressed, from
                           <c>android.view.KeyEvent</c></param>
        <param name="event">the KeyEvent object that defines the button action</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyDown(int, KeyEvent)
            KeyEvent.Callback.onKeyDown()</c>: perform press of the view
            when <c>KeyEvent#KEYCODE_DPAD_CENTER</c> or <c>KeyEvent#KEYCODE_ENTER</c>
            is released, if the view is enabled and clickable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation of <c>KeyEvent.Callback#onKeyDown(int, KeyEvent)
            KeyEvent.Callback.onKeyDown()</c>: perform press of the view
            when <c>KeyEvent#KEYCODE_DPAD_CENTER</c> or <c>KeyEvent#KEYCODE_ENTER</c>
            is released, if the view is enabled and clickable.</para>
          <para>Key presses in software keyboards will generally NOT trigger this
            listener, although some may elect to do so in some situations. Do not
            rely on this to catch software key presses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyDown(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyDown(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyLongPress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyLongPress (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyLongPress(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyLongPress (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyLongPress(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyLongPress(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyLongPress : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyLongPress : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyLongPress (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyLongPress(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyLongPress", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyLongPress_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="e">Description of the key event.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyLongPress(int, KeyEvent)
            KeyEvent.Callback.onKeyLongPress()</c>: always returns false (doesn't handle
            the event).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation of <c>KeyEvent.Callback#onKeyLongPress(int, KeyEvent)
            KeyEvent.Callback.onKeyLongPress()</c>: always returns false (doesn't handle
            the event).</para>
          <para>Key presses in software keyboards will generally NOT trigger this listener,
            although some may elect to do so in some situations. Do not rely on this to
            catch software key presses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyLongPress(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyLongPress(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyMultiple">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyMultiple (keyCode As Keycode, repeatCount As Integer, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyMultiple(Android::Views::Keycode keyCode, int repeatCount, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyMultiple (Android.Views.Keycode keyCode, int repeatCount, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyMultiple(valuetype Android.Views.Keycode keyCode, int32 repeatCount, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyMultiple(Android.Views.Keycode,System.Int32,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyMultiple : Android.Views.Keycode * int * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyMultiple : Android.Views.Keycode * int * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyMultiple (keyCode, repeatCount, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyMultiple(Android.Views.Keycode,System.Int32,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyMultiple", "(IILandroid/view/KeyEvent;)Z", "GetOnKeyMultiple_IILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeatCount" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <param name="keyCode">A key code that represents the button pressed, from
                               <c>android.view.KeyEvent</c>.</param>
        <param name="repeatCount">The number of times the action was made.</param>
        <param name="event">The KeyEvent object that defines the button action.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent)
            KeyEvent.Callback.onKeyMultiple()</c>: always returns false (doesn't handle
            the event).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation of <c>KeyEvent.Callback#onKeyMultiple(int, int, KeyEvent)
            KeyEvent.Callback.onKeyMultiple()</c>: always returns false (doesn't handle
            the event).</para>
          <para>Key presses in software keyboards will generally NOT trigger this listener,
            although some may elect to do so in some situations. Do not rely on this to
            catch software key presses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyMultiple(int,%20int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyMultiple(int, int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyPreIme">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyPreIme (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyPreIme(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyPreIme (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyPreIme(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyPreIme(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyPreIme : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyPreIme : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyPreIme (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyPreIme", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyPreIme_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyPreIme", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyPreIme_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">Description of the key event.</param>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="event">Description of the key event.</param>
        <summary>Handle a key event before it is processed by any input method
            associated with the view hierarchy.</summary>
        <returns>If you handled the event, return true. If you want to allow the
                    event to be handled by the next receiver, return false.</returns>
        <remarks>
          <para>Handle a key event before it is processed by any input method
            associated with the view hierarchy.  This can be used to intercept
            key events in special situations before the IME consumes them; a
            typical example would be handling the BACK key to update the application's
            UI instead of allowing the IME to see it and close itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyPreIme(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyPreIme(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyShortcut">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyShortcut (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyShortcut(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyShortcut (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyShortcut(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyShortcut(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyShortcut : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyShortcut : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyShortcut (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyShortcut", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyShortcut_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyShortcut", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyShortcut_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">Description of the key event.</param>
        <param name="keyCode">The value in event.getKeyCode().</param>
        <param name="event">Description of the key event.</param>
        <summary>Called on the focused view when a key shortcut event is not handled.</summary>
        <returns>If you handled the event, return true. If you want to allow the
                    event to be handled by the next receiver, return false.</returns>
        <remarks>
          <para>Called on the focused view when a key shortcut event is not handled.
            Override this method to implement local key shortcuts for the View.
            Key shortcuts can also be implemented by setting the
            <c>MenuItem#setShortcut(char, char) shortcut</c> property of menu items.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyShortcut(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyShortcut(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnKeyUp (keyCode As Keycode, e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnKeyUp(Android::Views::Keycode keyCode, Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnKeyUp (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnKeyUp(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnKeyUp(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool&#xA;override this.OnKeyUp : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="view.OnKeyUp (keyCode, e)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.KeyEvent.ICallback.OnKeyUp(Android.Views.Keycode,Android.Views.KeyEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onKeyUp", "(ILandroid/view/KeyEvent;)Z", "GetOnKeyUp_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">The KeyEvent object that defines the button action.
</param>
        <param name="keyCode">A key code that represents the button pressed, from
                           <c>android.view.KeyEvent</c>.</param>
        <param name="event">The KeyEvent object that defines the button action.</param>
        <summary>Default implementation of <c>KeyEvent.Callback#onKeyUp(int, KeyEvent)
            KeyEvent.Callback.onKeyUp()</c>: perform clicking of the view
            when <c>KeyEvent#KEYCODE_DPAD_CENTER</c>, <c>KeyEvent#KEYCODE_ENTER</c>
            or <c>KeyEvent#KEYCODE_SPACE</c> is released.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation of <c>KeyEvent.Callback#onKeyUp(int, KeyEvent)
            KeyEvent.Callback.onKeyUp()</c>: perform clicking of the view
            when <c>KeyEvent#KEYCODE_DPAD_CENTER</c>, <c>KeyEvent#KEYCODE_ENTER</c>
            or <c>KeyEvent#KEYCODE_SPACE</c> is released.</para>
          <para>Key presses in software keyboards will generally NOT trigger this listener,
            although some may elect to do so in some situations. Do not rely on this to
            catch software key presses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onKeyUp(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onKeyUp(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnLayout">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLayout (changed As Boolean, left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLayout(bool changed, int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="protected virtual void OnLayout (bool changed, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLayout(bool changed, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnLayout(System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnLayout : bool * int * int * int * int -&gt; unit&#xA;override this.OnLayout : bool * int * int * int * int -&gt; unit" Usage="view.OnLayout (changed, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changed" Type="System.Boolean" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changed">This is a new size or position for this view</param>
        <param name="left">Left position, relative to parent</param>
        <param name="top">Top position, relative to parent</param>
        <param name="right">Right position, relative to parent</param>
        <param name="bottom">Bottom position, relative to parent</param>
        <summary>Called from layout when this view should
            assign a size and position to each of its children.</summary>
        <remarks>
          <para>Called from layout when this view should
            assign a size and position to each of its children.</para>
          <para>Derived classes with children should override
            this method and call layout on each of
            their children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onLayout(boolean,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onLayout(boolean, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMeasure">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMeasure (widthMeasureSpec As Integer, heightMeasureSpec As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMeasure(int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="C#" Value="protected virtual void OnMeasure (int widthMeasureSpec, int heightMeasureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMeasure(int32 widthMeasureSpec, int32 heightMeasureSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnMeasure(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnMeasure : int * int -&gt; unit&#xA;override this.OnMeasure : int * int -&gt; unit" Usage="view.OnMeasure (widthMeasureSpec, heightMeasureSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMeasure", "(II)V", "GetOnMeasure_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMeasure", "(II)V", "GetOnMeasure_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="widthMeasureSpec" Type="System.Int32" />
        <Parameter Name="heightMeasureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="widthMeasureSpec">horizontal space requirements as imposed by the parent.
                                    The requirements are encoded with
                                    <c>android.view.View.MeasureSpec</c>.</param>
        <param name="heightMeasureSpec">vertical space requirements as imposed by the parent.
                                    The requirements are encoded with
                                    <c>android.view.View.MeasureSpec</c>.</param>
        <summary>Measure the view and its content to determine the measured width and the
            measured height.</summary>
        <remarks>
          <para>Measure the view and its content to determine the measured width and the
            measured height. This method is invoked by <c>#measure(int, int)</c> and
            should be overridden by subclasses to provide accurate and efficient
            measurement of their contents.</para>
          <para>&lt;strong&gt;CONTRACT:&lt;/strong&gt; When overriding this method, you
            &lt;em&gt;must&lt;/em&gt; call <c>#setMeasuredDimension(int, int)</c> to store the
            measured width and height of this view. Failure to do so will trigger an
            <c>IllegalStateException</c>, thrown by
            <c>#measure(int, int)</c>. Calling the superclass'
            <c>#onMeasure(int, int)</c> is a valid use.</para>
          <para>The base class implementation of measure defaults to the background size,
            unless a larger size is allowed by the MeasureSpec. Subclasses should
            override <c>#onMeasure(int, int)</c> to provide better measurements of
            their content.</para>
          <para>If this method is overridden, it is the subclass's responsibility to make
            sure the measured height and width are at least the view's minimum height
            and width (<c>#getSuggestedMinimumHeight()</c> and
            <c>#getSuggestedMinimumWidth()</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onMeasure(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onMeasure(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MeasuredWidth" />
        <altmember cref="P:Android.Views.View.MeasuredHeight" />
        <altmember cref="M:Android.Views.View.SetMeasuredDimension(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.View.SuggestedMinimumHeight" />
        <altmember cref="P:Android.Views.View.SuggestedMinimumWidth" />
      </Docs>
    </Member>
    <Member MemberName="OnOverScrolled">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnOverScrolled (scrollX As Integer, scrollY As Integer, clampedX As Boolean, clampedY As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnOverScrolled(int scrollX, int scrollY, bool clampedX, bool clampedY);" />
      <MemberSignature Language="C#" Value="protected virtual void OnOverScrolled (int scrollX, int scrollY, bool clampedX, bool clampedY);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnOverScrolled(int32 scrollX, int32 scrollY, bool clampedX, bool clampedY) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnOverScrolled(System.Int32,System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnOverScrolled : int * int * bool * bool -&gt; unit&#xA;override this.OnOverScrolled : int * int * bool * bool -&gt; unit" Usage="view.OnOverScrolled (scrollX, scrollY, clampedX, clampedY)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onOverScrolled", "(IIZZ)V", "GetOnOverScrolled_IIZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onOverScrolled", "(IIZZ)V", "GetOnOverScrolled_IIZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scrollX" Type="System.Int32" />
        <Parameter Name="scrollY" Type="System.Int32" />
        <Parameter Name="clampedX" Type="System.Boolean" />
        <Parameter Name="clampedY" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="scrollX">New X scroll value in pixels</param>
        <param name="scrollY">New Y scroll value in pixels</param>
        <param name="clampedX">True if scrollX was clamped to an over-scroll boundary</param>
        <param name="clampedY">True if scrollY was clamped to an over-scroll boundary</param>
        <summary>Called by <c>#overScrollBy(int, int, int, int, int, int, int, int, boolean)</c> to
            respond to the results of an over-scroll operation.</summary>
        <remarks>
          <para>Called by <c>#overScrollBy(int, int, int, int, int, int, int, int, boolean)</c> to
            respond to the results of an over-scroll operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onOverScrolled(int,%20int,%20boolean,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.View.onOverScrolled(int, int, boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnPointerCaptureChange">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPointerCaptureChange (hasCapture As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPointerCaptureChange(bool hasCapture);" />
      <MemberSignature Language="C#" Value="public virtual void OnPointerCaptureChange (bool hasCapture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPointerCaptureChange(bool hasCapture) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnPointerCaptureChange(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnPointerCaptureChange : bool -&gt; unit&#xA;override this.OnPointerCaptureChange : bool -&gt; unit" Usage="view.OnPointerCaptureChange hasCapture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPointerCaptureChange", "(Z)V", "GetOnPointerCaptureChange_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPointerCaptureChange", "(Z)V", "GetOnPointerCaptureChange_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasCapture" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasCapture">True if the view now has pointerCapture, false otherwise.</param>
        <summary>Called when the window has just acquired or lost pointer capture.</summary>
        <remarks>
          <para>Called when the window has just acquired or lost pointer capture.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onPointerCaptureChange(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.onPointerCaptureChange(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopulateAccessibilityEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPopulateAccessibilityEvent (e As AccessibilityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPopulateAccessibilityEvent(Android::Views::Accessibility::AccessibilityEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual void OnPopulateAccessibilityEvent (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPopulateAccessibilityEvent(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; unit&#xA;override this.OnPopulateAccessibilityEvent : Android.Views.Accessibility.AccessibilityEvent -&gt; unit" Usage="view.OnPopulateAccessibilityEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPopulateAccessibilityEvent", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The accessibility event which to populate.</param>
        <param name="event">The accessibility event which to populate.</param>
        <summary>Called from <c>#dispatchPopulateAccessibilityEvent(AccessibilityEvent)</c>
            giving a chance to this View to populate the accessibility event with its
            text content.</summary>
        <remarks>
          <para>Called from <c>#dispatchPopulateAccessibilityEvent(AccessibilityEvent)</c>
            giving a chance to this View to populate the accessibility event with its
            text content. While this method is free to modify event
            attributes other than text content, doing so should normally be performed in
            <c>#onInitializeAccessibilityEvent(AccessibilityEvent)</c>.</para>
          <para>Example: Adding formatted date string to an accessibility event in addition
                     to the text added by the super implementation:</para>
          <code lang="text/java">public void onPopulateAccessibilityEvent(AccessibilityEvent event) {
                super.onPopulateAccessibilityEvent(event);
                final int flags = DateUtils.FORMAT_SHOW_DATE | DateUtils.FORMAT_SHOW_WEEKDAY;
                String selectedDateUtterance = DateUtils.formatDateTime(mContext,
                    mCurrentDate.getTimeInMillis(), flags);
                event.getText().add(selectedDateUtterance);
            }</code>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#onPopulateAccessibilityEvent(View, AccessibilityEvent)</c>
            is responsible for handling this call.</para>
          <para>&lt;p class="note"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Always call the super implementation before adding
            information to the event, in case the default implementation has basic information to add.
            &lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="OnProvideAutofillStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProvideAutofillStructure (structure As ViewStructure, flags As AutofillFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvideAutofillStructure(Android::Views::ViewStructure ^ structure, Android::Views::AutofillFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void OnProvideAutofillStructure (Android.Views.ViewStructure? structure, Android.Views.AutofillFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideAutofillStructure(class Android.Views.ViewStructure structure, valuetype Android.Views.AutofillFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnProvideAutofillStructure(Android.Views.ViewStructure,Android.Views.AutofillFlags)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideAutofillStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit&#xA;override this.OnProvideAutofillStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit" Usage="view.OnProvideAutofillStructure (structure, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideAutofillStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideAutofillStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideAutofillStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideAutofillStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
        <Parameter Name="flags" Type="Android.Views.AutofillFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="structure">fill in with structured view data for autofill purposes.</param>
        <param name="flags">optional flags.</param>
        <summary>Populates a <c>ViewStructure</c> to fullfil an autofill request.</summary>
        <remarks>
          <para>Populates a <c>ViewStructure</c> to fullfil an autofill request.</para>
          <para>The structure should contain at least the following properties:
            &lt;ul&gt;
              &lt;li&gt;Autofill id (<c>ViewStructure#setAutofillId(AutofillId, int)</c>).
              &lt;li&gt;Autofill type (<c>ViewStructure#setAutofillType(int)</c>).
              &lt;li&gt;Autofill value (<c>ViewStructure#setAutofillValue(AutofillValue)</c>).
              &lt;li&gt;Whether the data is sensitive (<c>ViewStructure#setDataIsSensitive(boolean)</c>).
            &lt;/ul&gt;</para>
          <para>It's also recommended to set the following properties - the more properties the structure
            has, the higher the chances of an <c>android.service.autofill.AutofillService</c> properly
            using the structure:
            
            &lt;ul&gt;
              &lt;li&gt;Autofill hints (<c>ViewStructure#setAutofillHints(String[])</c>).
              &lt;li&gt;Autofill options (<c>ViewStructure#setAutofillOptions(CharSequence[])</c>) when the
                  view can only be filled with predefined values (typically used when the autofill type
                  is <c>#AUTOFILL_TYPE_LIST</c>).
              &lt;li&gt;Resource id (<c>ViewStructure#setId(int, String, String, String)</c>).
              &lt;li&gt;Class name (<c>ViewStructure#setClassName(String)</c>).
              &lt;li&gt;Content description (<c>ViewStructure#setContentDescription(CharSequence)</c>).
              &lt;li&gt;Visual properties such as visibility (<c>ViewStructure#setVisibility(int)</c>),
                  dimensions (<c>ViewStructure#setDimens(int, int, int, int, int, int)</c>), and
                  opacity (<c>ViewStructure#setOpaque(boolean)</c>).
              &lt;li&gt;For views representing text fields, text properties such as the text itself
                  (<c>ViewStructure#setText(CharSequence)</c>), text hints
                  (<c>ViewStructure#setHint(CharSequence)</c>, input type
                  (<c>ViewStructure#setInputType(int)</c>),
              &lt;li&gt;For views representing HTML nodes, its web domain
                  (<c>ViewStructure#setWebDomain(String)</c>) and HTML properties
                  ((<c>ViewStructure#setHtmlInfo(android.view.ViewStructure.HtmlInfo)</c>).
            &lt;/ul&gt;</para>
          <para>The default implementation of this method already sets most of these properties based on
            related <c>View</c> methods (for example, the autofill id is set using
            <c>#getAutofillId()</c>, the autofill type set using <c>#getAutofillType()</c>, etc.),
            and views in the standard Android widgets library also override it to set their
            relevant properties (for example, <c>android.widget.TextView</c> already sets the text
            properties), so it's recommended to only override this method
            (and call <c>super.onProvideAutofillStructure()</c>) when:
            
            &lt;ul&gt;
              &lt;li&gt;The view contents does not include PII (Personally Identifiable Information), so it
                  can call <c>ViewStructure#setDataIsSensitive(boolean)</c> passing <c>false</c>.
              &lt;li&gt;The view can only be autofilled with predefined options, so it can call
                  <c>ViewStructure#setAutofillOptions(CharSequence[])</c>.
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; The <c>left</c> and <c>top</c> values set in
            <c>ViewStructure#setDimens(int, int, int, int, int, int)</c> must be relative to the next
            <c>ViewGroup#isImportantForAutofill()</c> predecessor view included in the structure.</para>
          <para>Views support the Autofill Framework mainly by:
            &lt;ul&gt;
              &lt;li&gt;Providing the metadata defining what the view means and how it can be autofilled.
              &lt;li&gt;Notifying the Android System when the view value changed by calling
                  <c>AutofillManager#notifyValueChanged(View)</c>.
              &lt;li&gt;Implementing the methods that autofill the view.
            &lt;/ul&gt;</para>
          <para>This method is responsible for the former; <c>#autofill(AutofillValue)</c> is responsible
            for the latter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onProvideAutofillStructure(android.view.ViewStructure,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onProvideAutofillStructure(android.view.ViewStructure, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideAutofillVirtualStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProvideAutofillVirtualStructure (structure As ViewStructure, flags As AutofillFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvideAutofillVirtualStructure(Android::Views::ViewStructure ^ structure, Android::Views::AutofillFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void OnProvideAutofillVirtualStructure (Android.Views.ViewStructure? structure, Android.Views.AutofillFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideAutofillVirtualStructure(class Android.Views.ViewStructure structure, valuetype Android.Views.AutofillFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnProvideAutofillVirtualStructure(Android.Views.ViewStructure,Android.Views.AutofillFlags)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideAutofillVirtualStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit&#xA;override this.OnProvideAutofillVirtualStructure : Android.Views.ViewStructure * Android.Views.AutofillFlags -&gt; unit" Usage="view.OnProvideAutofillVirtualStructure (structure, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideAutofillVirtualStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideAutofillVirtualStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideAutofillVirtualStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideAutofillVirtualStructure_Landroid_view_ViewStructure_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
        <Parameter Name="flags" Type="Android.Views.AutofillFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="structure">fill in with virtual children data for autofill purposes.</param>
        <param name="flags">optional flags.</param>
        <summary>Populates a <c>ViewStructure</c> containing virtual children to fullfil an autofill
            request.</summary>
        <remarks>
          <para>Populates a <c>ViewStructure</c> containing virtual children to fullfil an autofill
            request.</para>
          <para>This method should be used when the view manages a virtual structure under this view. For
            example, a view that draws input fields using <c>#draw(Canvas)</c>.</para>
          <para>When implementing this method, subclasses must follow the rules below:
            
            &lt;ul&gt;
              &lt;li&gt;Add virtual children by calling the <c>ViewStructure#newChild(int)</c> or
                  <c>ViewStructure#asyncNewChild(int)</c> methods, where the <c>id</c> is an unique id
                  identifying the children in the virtual structure.
              &lt;li&gt;The children hierarchy can have multiple levels if necessary, but ideally it should
                  exclude intermediate levels that are irrelevant for autofill; that would improve the
                  autofill performance.
              &lt;li&gt;Also implement <c>#autofill(SparseArray)</c> to autofill the virtual
                  children.
              &lt;li&gt;Set the autofill properties of the child structure as defined by
                  <c>#onProvideAutofillStructure(ViewStructure, int)</c>, using
                  <c>ViewStructure#setAutofillId(AutofillId, int)</c> to set its autofill id.
              &lt;li&gt;Call <c>android.view.autofill.AutofillManager#notifyViewEntered(View, int, Rect)</c>
                  and/or <c>android.view.autofill.AutofillManager#notifyViewExited(View, int)</c>
                  when the focused virtual child changed.
              &lt;li&gt;Override <c>#isVisibleToUserForAutofill(int)</c> to allow the platform to query
                  whether a given virtual view is visible to the user in order to support triggering
                  save when all views of interest go away.
              &lt;li&gt;Call
               <c>android.view.autofill.AutofillManager#notifyValueChanged(View, int, AutofillValue)</c>
                  when the value of a virtual child changed.
              &lt;li&gt;Call <c>android.view.autofill.AutofillManager#notifyViewVisibilityChanged(View, int, boolean)</c>
                  when the visibility of a virtual child changed.
              &lt;li&gt;Call
               <c>android.view.autofill.AutofillManager#notifyViewClicked(View, int)</c> when a virtual
                  child is clicked.
              &lt;li&gt;Call <c>AutofillManager#commit()</c> when the autofill context of the view structure
                  changed and the current context should be committed (for example, when the user tapped
                  a <c>SUBMIT</c> button in an HTML page).
              &lt;li&gt;Call <c>AutofillManager#cancel()</c> when the autofill context of the view structure
                  changed and the current context should be canceled (for example, when the user tapped
                  a <c>CANCEL</c> button in an HTML page).
              &lt;li&gt;Provide ways for users to manually request autofill by calling
                  <c>AutofillManager#requestAutofill(View, int, Rect)</c>.
              &lt;li&gt;The <c>left</c> and <c>top</c> values set in
                  <c>ViewStructure#setDimens(int, int, int, int, int, int)</c> must be relative to the
                  next <c>ViewGroup#isImportantForAutofill()</c> predecessor view included in the
                  structure.
            &lt;/ul&gt;</para>
          <para>Views with virtual children support the Autofill Framework mainly by:
            &lt;ul&gt;
              &lt;li&gt;Providing the metadata defining what the virtual children mean and how they can be
                  autofilled.
              &lt;li&gt;Implementing the methods that autofill the virtual children.
            &lt;/ul&gt;</para>
          <para>This method is responsible for the former; <c>#autofill(SparseArray)</c> is responsible
            for the latter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onProvideAutofillVirtualStructure(android.view.ViewStructure,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onProvideAutofillVirtualStructure(android.view.ViewStructure, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideContentCaptureStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProvideContentCaptureStructure (structure As ViewStructure, flags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvideContentCaptureStructure(Android::Views::ViewStructure ^ structure, int flags);" />
      <MemberSignature Language="C#" Value="public virtual void OnProvideContentCaptureStructure (Android.Views.ViewStructure structure, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideContentCaptureStructure(class Android.Views.ViewStructure structure, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnProvideContentCaptureStructure(Android.Views.ViewStructure,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideContentCaptureStructure : Android.Views.ViewStructure * int -&gt; unit&#xA;override this.OnProvideContentCaptureStructure : Android.Views.ViewStructure * int -&gt; unit" Usage="view.OnProvideContentCaptureStructure (structure, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideContentCaptureStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideContentCaptureStructure_Landroid_view_ViewStructure_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideContentCaptureStructure", "(Landroid/view/ViewStructure;I)V", "GetOnProvideContentCaptureStructure_Landroid_view_ViewStructure_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="structure">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Populates a <c>ViewStructure</c> for content capture.</summary>
        <remarks>
          <para>Populates a <c>ViewStructure</c> for content capture.</para>
          <para>This method is called after a view that is eligible for content capture
            (for example, if it <c>#isImportantForContentCapture()</c>, an intelligence service is
            enabled for the user, and the activity rendering the view is enabled for content capture)
            is laid out and is visible. The populated structure is then passed to the service through
            <c>ContentCaptureSession#notifyViewAppeared(ViewStructure)</c>.</para>
          <para>The default implementation of this method sets the most relevant properties based on
            related <c>View</c> methods, and views in the standard Android widgets library also
            override it to set their relevant properties. Therefore, if overriding this method, it
            is recommended to call <c>super.onProvideContentCaptureStructure()</c>.</para>
          <para>&lt;b&gt;Note: &lt;/b&gt;views that manage a virtual structure under this view must populate just
            the node representing this view and return right away, then asynchronously report (not
            necessarily in the UI thread) when the children nodes appear, disappear or have their text
            changed by calling
            <c>ContentCaptureSession#notifyViewAppeared(ViewStructure)</c>,
            <c>ContentCaptureSession#notifyViewDisappeared(AutofillId)</c>, and
            <c>ContentCaptureSession#notifyViewTextChanged(AutofillId, CharSequence)</c>
            respectively. The structure for a child must be created using
            <c>ContentCaptureSession#newVirtualViewStructure(AutofillId, long)</c>, and the
            <c>autofillId</c> for a child can be obtained either through
            <c>childStructure.getAutofillId()</c> or
            <c>ContentCaptureSession#newAutofillId(AutofillId, long)</c>.</para>
          <para>When the virtual view hierarchy represents a web page, you should also:
            
            &lt;ul&gt;
              &lt;li&gt;Call <c>ContentCaptureManager#getContentCaptureConditions()</c> to infer content
              capture events should be generate for that URL.
              &lt;li&gt;Create a new <c>ContentCaptureSession</c> child for every HTML element that
              renders a new URL (like an <c>IFRAME</c>) and use that session to notify events from
              that subtree.
            &lt;/ul&gt;</para>
          <para>&lt;b&gt;Note: &lt;/b&gt;the following methods of the <c>structure</c> will be ignored:
            &lt;ul&gt;
              &lt;li&gt;<c>ViewStructure#setChildCount(int)</c>&lt;li&gt;<c>ViewStructure#addChildCount(int)</c>&lt;li&gt;<c>ViewStructure#getChildCount()</c>&lt;li&gt;<c>ViewStructure#newChild(int)</c>&lt;li&gt;<c>ViewStructure#asyncNewChild(int)</c>&lt;li&gt;<c>ViewStructure#asyncCommit()</c>&lt;li&gt;<c>ViewStructure#setWebDomain(String)</c>&lt;li&gt;<c>ViewStructure#newHtmlInfoBuilder(String)</c>&lt;li&gt;<c>ViewStructure#setHtmlInfo(android.view.ViewStructure.HtmlInfo)</c>&lt;li&gt;<c>ViewStructure#setDataIsSensitive(boolean)</c>&lt;li&gt;<c>ViewStructure#setAlpha(float)</c>&lt;li&gt;<c>ViewStructure#setElevation(float)</c>&lt;li&gt;<c>ViewStructure#setTransformation(Matrix)</c>&lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onProvideContentCaptureStructure(android.view.ViewStructure,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onProvideContentCaptureStructure(android.view.ViewStructure, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProvideStructure (structure As ViewStructure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvideStructure(Android::Views::ViewStructure ^ structure);" />
      <MemberSignature Language="C#" Value="public virtual void OnProvideStructure (Android.Views.ViewStructure? structure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideStructure(class Android.Views.ViewStructure structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnProvideStructure(Android.Views.ViewStructure)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideStructure : Android.Views.ViewStructure -&gt; unit&#xA;override this.OnProvideStructure : Android.Views.ViewStructure -&gt; unit" Usage="view.OnProvideStructure structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideStructure", "(Landroid/view/ViewStructure;)V", "GetOnProvideStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideStructure", "(Landroid/view/ViewStructure;)V", "GetOnProvideStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
      </Parameters>
      <Docs>
        <param name="structure">Fill in with structured view data.  The default implementation
            fills in all data that can be inferred from the view itself.</param>
        <summary>Called when assist structure is being retrieved from a view as part of
            <c>android.app.Activity#onProvideAssistData Activity.onProvideAssistData</c>.</summary>
        <remarks>
          <para>Called when assist structure is being retrieved from a view as part of
            <c>android.app.Activity#onProvideAssistData Activity.onProvideAssistData</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onProvideStructure(android.view.ViewStructure)" title="Reference documentation">Java documentation for <code>android.view.View.onProvideStructure(android.view.ViewStructure)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProvideVirtualStructure">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProvideVirtualStructure (structure As ViewStructure)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProvideVirtualStructure(Android::Views::ViewStructure ^ structure);" />
      <MemberSignature Language="C#" Value="public virtual void OnProvideVirtualStructure (Android.Views.ViewStructure? structure);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProvideVirtualStructure(class Android.Views.ViewStructure structure) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnProvideVirtualStructure(Android.Views.ViewStructure)" />
      <MemberSignature Language="F#" Value="abstract member OnProvideVirtualStructure : Android.Views.ViewStructure -&gt; unit&#xA;override this.OnProvideVirtualStructure : Android.Views.ViewStructure -&gt; unit" Usage="view.OnProvideVirtualStructure structure" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProvideVirtualStructure", "(Landroid/view/ViewStructure;)V", "GetOnProvideVirtualStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProvideVirtualStructure", "(Landroid/view/ViewStructure;)V", "GetOnProvideVirtualStructure_Landroid_view_ViewStructure_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="structure" Type="Android.Views.ViewStructure" />
      </Parameters>
      <Docs>
        <param name="structure">To be added.</param>
        <summary>Called when assist structure is being retrieved from a view as part of
            <c>android.app.Activity#onProvideAssistData Activity.onProvideAssistData</c> to
            generate additional virtual structure under this view.</summary>
        <remarks>
          <para>Called when assist structure is being retrieved from a view as part of
            <c>android.app.Activity#onProvideAssistData Activity.onProvideAssistData</c> to
            generate additional virtual structure under this view.  The default implementation
            uses <c>#getAccessibilityNodeProvider()</c> to try to generate this from the
            view's virtual accessibility nodes, if any.  You can override this for a more
            optimal implementation providing this data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onProvideVirtualStructure(android.view.ViewStructure)" title="Reference documentation">Java documentation for <code>android.view.View.onProvideVirtualStructure(android.view.ViewStructure)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceiveContent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnReceiveContent (payload As ContentInfo) As ContentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ContentInfo ^ OnReceiveContent(Android::Views::ContentInfo ^ payload);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ContentInfo? OnReceiveContent (Android.Views.ContentInfo payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ContentInfo OnReceiveContent(class Android.Views.ContentInfo payload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnReceiveContent(Android.Views.ContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnReceiveContent : Android.Views.ContentInfo -&gt; Android.Views.ContentInfo&#xA;override this.OnReceiveContent : Android.Views.ContentInfo -&gt; Android.Views.ContentInfo" Usage="view.OnReceiveContent payload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceiveContent", "(Landroid/view/ContentInfo;)Landroid/view/ContentInfo;", "GetOnReceiveContent_Landroid_view_ContentInfo_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onReceiveContent", "(Landroid/view/ContentInfo;)Landroid/view/ContentInfo;", "GetOnReceiveContent_Landroid_view_ContentInfo_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ContentInfo</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Android.Views.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="payload">The content to insert and related metadata.</param>
        <summary>Implements the default behavior for receiving content for this type of view.</summary>
        <returns>The portion of the passed-in content that was not handled (may be all, some, or none
            of the passed-in content).</returns>
        <remarks>
          <para>Implements the default behavior for receiving content for this type of view. The default
            view implementation is a no-op (returns the passed-in content without acting on it).</para>
          <para>Widgets should override this method to define their default behavior for receiving
            content. Apps should <c>#setOnReceiveContentListener set a listener</c> to provide
            app-specific handling for receiving content.</para>
          <para>See <c>#setOnReceiveContentListener</c> and <c>#performReceiveContent</c> for more info.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onReceiveContent(android.view.ContentInfo)" title="Reference documentation">Java documentation for <code>android.view.View.onReceiveContent(android.view.ContentInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnResolvePointerIcon">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnResolvePointerIcon (e As MotionEvent, pointerIndex As Integer) As PointerIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::PointerIcon ^ OnResolvePointerIcon(Android::Views::MotionEvent ^ e, int pointerIndex);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.PointerIcon? OnResolvePointerIcon (Android.Views.MotionEvent? e, int pointerIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.PointerIcon OnResolvePointerIcon(class Android.Views.MotionEvent e, int32 pointerIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnResolvePointerIcon(Android.Views.MotionEvent,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnResolvePointerIcon : Android.Views.MotionEvent * int -&gt; Android.Views.PointerIcon&#xA;override this.OnResolvePointerIcon : Android.Views.MotionEvent * int -&gt; Android.Views.PointerIcon" Usage="view.OnResolvePointerIcon (e, pointerIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onResolvePointerIcon", "(Landroid/view/MotionEvent;I)Landroid/view/PointerIcon;", "GetOnResolvePointerIcon_Landroid_view_MotionEvent_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onResolvePointerIcon", "(Landroid/view/MotionEvent;I)Landroid/view/PointerIcon;", "GetOnResolvePointerIcon_Landroid_view_MotionEvent_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.PointerIcon</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
        <Parameter Name="pointerIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="event">The <c>MotionEvent</c> that requires a pointer icon to be resolved for one of
                         pointers.</param>
        <param name="pointerIndex">The index of the pointer in <c>event</c> for which to retrieve the
                <c>PointerIcon</c>. This will be between 0 and <c>MotionEvent#getPointerCount()</c>.</param>
        <summary>Resolve the pointer icon that should be used for specified pointer in the motion event.</summary>
        <returns>the pointer icon to use for specified pointer, or <c>null</c> if a pointer icon
                is not specified and the default icon should be used.</returns>
        <remarks>
          <para>Resolve the pointer icon that should be used for specified pointer in the motion event.
            
            The default implementation will resolve the pointer icon to one set using
            <c>#setPointerIcon(PointerIcon)</c> for mouse devices. Subclasses may override this to
            customize the icon for the given pointer.
            
            For example, the pointer icon for a stylus pointer can be resolved in the following way:
            <c>&lt;pre&gt;
            &amp;#64;Override
            public PointerIcon onResolvePointerIcon(MotionEvent event, int pointerIndex) {
                final int toolType = event.getToolType(pointerIndex);
                if (!event.isFromSource(InputDevice.SOURCE_MOUSE)
                        &amp;&amp; event.isFromSource(InputDevice.SOURCE_STYLUS)
                        &amp;&amp; (toolType == MotionEvent.TOOL_TYPE_STYLUS
                                || toolType == MotionEvent.TOOL_TYPE_ERASER)) {
                    // Show this pointer icon only if this pointer is a stylus.
                    return PointerIcon.getSystemIcon(mContext, PointerIcon.TYPE_WAIT);
                }
                // Use the default logic for determining the pointer icon for other non-stylus pointers,
                // like for the mouse cursor.
                return super.onResolvePointerIcon(event, pointerIndex);
            }
            &lt;/pre&gt;</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onResolvePointerIcon(android.view.MotionEvent,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onResolvePointerIcon(android.view.MotionEvent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRestoreInstanceState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRestoreInstanceState (state As IParcelable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRestoreInstanceState(Android::OS::IParcelable ^ state);" />
      <MemberSignature Language="C#" Value="protected virtual void OnRestoreInstanceState (Android.OS.IParcelable? state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRestoreInstanceState(class Android.OS.IParcelable state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnRestoreInstanceState(Android.OS.IParcelable)" />
      <MemberSignature Language="F#" Value="abstract member OnRestoreInstanceState : Android.OS.IParcelable -&gt; unit&#xA;override this.OnRestoreInstanceState : Android.OS.IParcelable -&gt; unit" Usage="view.OnRestoreInstanceState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="Android.OS.IParcelable" />
      </Parameters>
      <Docs>
        <param name="state">The frozen state that had previously been returned by
                   <c>#onSaveInstanceState</c>.</param>
        <summary>Hook allowing a view to re-apply a representation of its internal state that had previously
            been generated by <c>#onSaveInstanceState</c>.</summary>
        <remarks>
          <para>Hook allowing a view to re-apply a representation of its internal state that had previously
            been generated by <c>#onSaveInstanceState</c>. This function will never be called with a
            null state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onRestoreInstanceState(android.os.Parcelable)" title="Reference documentation">Java documentation for <code>android.view.View.onRestoreInstanceState(android.os.Parcelable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="OnRtlPropertiesChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnRtlPropertiesChanged (layoutDirection As LayoutDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnRtlPropertiesChanged(Android::Views::LayoutDirection layoutDirection);" />
      <MemberSignature Language="C#" Value="public virtual void OnRtlPropertiesChanged (Android.Views.LayoutDirection layoutDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRtlPropertiesChanged(valuetype Android.Views.LayoutDirection layoutDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnRtlPropertiesChanged(Android.Views.LayoutDirection)" />
      <MemberSignature Language="F#" Value="abstract member OnRtlPropertiesChanged : Android.Views.LayoutDirection -&gt; unit&#xA;override this.OnRtlPropertiesChanged : Android.Views.LayoutDirection -&gt; unit" Usage="view.OnRtlPropertiesChanged layoutDirection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRtlPropertiesChanged", "(I)V", "GetOnRtlPropertiesChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRtlPropertiesChanged", "(I)V", "GetOnRtlPropertiesChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutDirection" Type="Android.Views.LayoutDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="layoutDirection">the direction of the layout</param>
        <summary>Called when any RTL property (layout direction or text direction or text alignment) has
            been changed.</summary>
        <remarks>
          <para>Called when any RTL property (layout direction or text direction or text alignment) has
            been changed.</para>
          <para>Subclasses need to override this method to take care of cached information that depends on the
            resolved layout direction, or to inform child views that inherit their layout direction.</para>
          <para>The default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onRtlPropertiesChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.onRtlPropertiesChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Views.View.LayoutDirectionLtr" />
        <altmember cref="F:Android.Views.View.LayoutDirectionRtl" />
      </Docs>
    </Member>
    <Member MemberName="OnSaveInstanceState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSaveInstanceState () As IParcelable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Android::OS::IParcelable ^ OnSaveInstanceState();" />
      <MemberSignature Language="C#" Value="protected virtual Android.OS.IParcelable? OnSaveInstanceState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.OS.IParcelable OnSaveInstanceState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnSaveInstanceState" />
      <MemberSignature Language="F#" Value="abstract member OnSaveInstanceState : unit -&gt; Android.OS.IParcelable&#xA;override this.OnSaveInstanceState : unit -&gt; Android.OS.IParcelable" Usage="view.OnSaveInstanceState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hook allowing a view to generate a representation of its internal state
            that can later be used to create a new instance with that same state.</summary>
        <returns>Returns a Parcelable object containing the view's current dynamic
                    state, or null if there is nothing interesting to save.</returns>
        <remarks>
          <para>Hook allowing a view to generate a representation of its internal state
            that can later be used to create a new instance with that same state.
            This state should only contain information that is not persistent or can
            not be reconstructed later. For example, you will never store your
            current position on screen because that will be computed again when a
            new instance of the view is placed in its view hierarchy.</para>
          <para>Some examples of things you may store here: the current cursor position
            in a text view (but usually not the text itself since that is stored in a
            content provider or other persistent storage), the currently selected
            item in a list view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onSaveInstanceState()" title="Reference documentation">Java documentation for <code>android.view.View.onSaveInstanceState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.OnRestoreInstanceState(Android.OS.IParcelable)" />
        <altmember cref="P:Android.Views.View.SaveEnabled" />
      </Docs>
    </Member>
    <Member MemberName="OnScreenStateChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnScreenStateChanged (screenState As ScreenState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnScreenStateChanged(Android::Views::ScreenState screenState);" />
      <MemberSignature Language="C#" Value="public virtual void OnScreenStateChanged (Android.Views.ScreenState screenState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScreenStateChanged(valuetype Android.Views.ScreenState screenState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState)" />
      <MemberSignature Language="F#" Value="abstract member OnScreenStateChanged : Android.Views.ScreenState -&gt; unit&#xA;override this.OnScreenStateChanged : Android.Views.ScreenState -&gt; unit" Usage="view.OnScreenStateChanged screenState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScreenStateChanged", "(I)V", "GetOnScreenStateChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScreenStateChanged", "(I)V", "GetOnScreenStateChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenState" Type="Android.Views.ScreenState">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="screenState">The new state of the screen. Can be either
                               <c>#SCREEN_STATE_ON</c> or <c>#SCREEN_STATE_OFF</c></param>
        <summary>This method is called whenever the state of the screen this view is
            attached to changes.</summary>
        <remarks>
          <para>This method is called whenever the state of the screen this view is
            attached to changes. A state change will usually occurs when the screen
            turns on or off (whether it happens automatically or the user does it
            manually.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onScreenStateChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.onScreenStateChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnScrollCaptureSearch">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnScrollCaptureSearch (localVisibleRect As Rect, windowOffset As Point, targets As IConsumer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnScrollCaptureSearch(Android::Graphics::Rect ^ localVisibleRect, Android::Graphics::Point ^ windowOffset, Java::Util::Functions::IConsumer ^ targets);" />
      <MemberSignature Language="C#" Value="public virtual void OnScrollCaptureSearch (Android.Graphics.Rect localVisibleRect, Android.Graphics.Point windowOffset, Java.Util.Functions.IConsumer targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScrollCaptureSearch(class Android.Graphics.Rect localVisibleRect, class Android.Graphics.Point windowOffset, class Java.Util.Functions.IConsumer targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnScrollCaptureSearch(Android.Graphics.Rect,Android.Graphics.Point,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollCaptureSearch : Android.Graphics.Rect * Android.Graphics.Point * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.OnScrollCaptureSearch : Android.Graphics.Rect * Android.Graphics.Point * Java.Util.Functions.IConsumer -&gt; unit" Usage="view.OnScrollCaptureSearch (localVisibleRect, windowOffset, targets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollCaptureSearch", "(Landroid/graphics/Rect;Landroid/graphics/Point;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureSearch_Landroid_graphics_Rect_Landroid_graphics_Point_Ljava_util_function_Consumer_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollCaptureSearch", "(Landroid/graphics/Rect;Landroid/graphics/Point;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureSearch_Landroid_graphics_Rect_Landroid_graphics_Point_Ljava_util_function_Consumer_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="localVisibleRect" Type="Android.Graphics.Rect" />
        <Parameter Name="windowOffset" Type="Android.Graphics.Point" />
        <Parameter Name="targets" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="localVisibleRect">the local visible rect of this view</param>
        <param name="windowOffset">the offset of localVisibleRect within the window</param>
        <param name="targets">accepts potential scroll capture targets; <c>Consumer#accept
                                    results.accept</c> may be called zero or more times on the calling
                                    thread before onScrollCaptureSearch returns</param>
        <summary>Called when scroll capture is requested, to search for appropriate content to scroll.</summary>
        <remarks>
          <para>Called when scroll capture is requested, to search for appropriate content to scroll. If
            applicable, this view adds itself to the provided list for consideration, subject to the
            flags set by <c>#setScrollCaptureHint</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onScrollCaptureSearch(android.graphics.Rect,%20android.graphics.Point,%20java.util.function.Consumer%3Candroid.view.ScrollCaptureTarget%3E)" title="Reference documentation">Java documentation for <code>android.view.View.onScrollCaptureSearch(android.graphics.Rect, android.graphics.Point, java.util.function.Consumer&lt;android.view.ScrollCaptureTarget&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScrollChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnScrollChanged (l As Integer, t As Integer, oldl As Integer, oldt As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnScrollChanged(int l, int t, int oldl, int oldt);" />
      <MemberSignature Language="C#" Value="protected virtual void OnScrollChanged (int l, int t, int oldl, int oldt);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnScrollChanged(int32 l, int32 t, int32 oldl, int32 oldt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnScrollChanged(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollChanged : int * int * int * int -&gt; unit&#xA;override this.OnScrollChanged : int * int * int * int -&gt; unit" Usage="view.OnScrollChanged (l, t, oldl, oldt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollChanged", "(IIII)V", "GetOnScrollChanged_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollChanged", "(IIII)V", "GetOnScrollChanged_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="System.Int32" />
        <Parameter Name="t" Type="System.Int32" />
        <Parameter Name="oldl" Type="System.Int32" />
        <Parameter Name="oldt" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="l">Current horizontal scroll origin.</param>
        <param name="t">Current vertical scroll origin.</param>
        <param name="oldl">Previous horizontal scroll origin.</param>
        <param name="oldt">Previous vertical scroll origin.</param>
        <summary>This is called in response to an internal scroll in this view (i.</summary>
        <remarks>
          <para>This is called in response to an internal scroll in this view (i.e., the
            view scrolled its own contents). This is typically as a result of
            <c>#scrollBy(int, int)</c> or <c>#scrollTo(int, int)</c> having been
            called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onScrollChanged(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onScrollChanged(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSetAlpha">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSetAlpha (alpha As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnSetAlpha(int alpha);" />
      <MemberSignature Language="C#" Value="protected virtual bool OnSetAlpha (int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnSetAlpha(int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnSetAlpha(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnSetAlpha : int -&gt; bool&#xA;override this.OnSetAlpha : int -&gt; bool" Usage="view.OnSetAlpha alpha" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSetAlpha", "(I)Z", "GetOnSetAlpha_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSetAlpha", "(I)Z", "GetOnSetAlpha_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="alpha">The alpha (0..255) to apply to the view's drawing</param>
        <summary>Invoked if there is a Transform that involves alpha.</summary>
        <returns>true if the view can draw with the specified alpha.</returns>
        <remarks>
          <para>Invoked if there is a Transform that involves alpha. Subclass that can
            draw themselves with the specified alpha should return true, and then
            respect that alpha when their onDraw() is called. If this returns false
            then the view may be redirected to draw into an offscreen buffer to
            fulfill the request, which will look fine, but may be slower than if the
            subclass handles it internally. The default implementation returns false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onSetAlpha(int)" title="Reference documentation">Java documentation for <code>android.view.View.onSetAlpha(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSizeChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSizeChanged (w As Integer, h As Integer, oldw As Integer, oldh As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSizeChanged(int w, int h, int oldw, int oldh);" />
      <MemberSignature Language="C#" Value="protected virtual void OnSizeChanged (int w, int h, int oldw, int oldh);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSizeChanged(int32 w, int32 h, int32 oldw, int32 oldh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnSizeChanged(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnSizeChanged : int * int * int * int -&gt; unit&#xA;override this.OnSizeChanged : int * int * int * int -&gt; unit" Usage="view.OnSizeChanged (w, h, oldw, oldh)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSizeChanged", "(IIII)V", "GetOnSizeChanged_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSizeChanged", "(IIII)V", "GetOnSizeChanged_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="oldw" Type="System.Int32" />
        <Parameter Name="oldh" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="w">Current width of this view.</param>
        <param name="h">Current height of this view.</param>
        <param name="oldw">Old width of this view.</param>
        <param name="oldh">Old height of this view.</param>
        <summary>This is called during layout when the size of this view has changed.</summary>
        <remarks>
          <para>This is called during layout when the size of this view has changed. If
            you were just added to the view hierarchy, you're called with the old
            values of 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onSizeChanged(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onSizeChanged(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnStartTemporaryDetach">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnStartTemporaryDetach ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnStartTemporaryDetach();" />
      <MemberSignature Language="C#" Value="public virtual void OnStartTemporaryDetach ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStartTemporaryDetach() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnStartTemporaryDetach" />
      <MemberSignature Language="F#" Value="abstract member OnStartTemporaryDetach : unit -&gt; unit&#xA;override this.OnStartTemporaryDetach : unit -&gt; unit" Usage="view.OnStartTemporaryDetach " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onStartTemporaryDetach", "()V", "GetOnStartTemporaryDetachHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onStartTemporaryDetach", "()V", "GetOnStartTemporaryDetachHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This is called when a container is going to temporarily detach a child, with
            <c>ViewGroup#detachViewFromParent(View) ViewGroup.detachViewFromParent</c>.</summary>
        <remarks>
          <para>This is called when a container is going to temporarily detach a child, with
            <c>ViewGroup#detachViewFromParent(View) ViewGroup.detachViewFromParent</c>.
            It will either be followed by <c>#onFinishTemporaryDetach()</c> or
            <c>#onDetachedFromWindow()</c> when the container is done.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onStartTemporaryDetach()" title="Reference documentation">Java documentation for <code>android.view.View.onStartTemporaryDetach()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnTouchEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnTouchEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.OnTouchEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event.</param>
        <param name="event">The motion event.</param>
        <summary>Implement this method to handle touch screen motion events.</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Implement this method to handle touch screen motion events.</para>
          <para>If this method is used to detect click actions, it is recommended that
            the actions be performed by implementing and calling
            <c>#performClick()</c>. This will ensure consistent system behavior,
            including:
            &lt;ul&gt;
            &lt;li&gt;obeying click sound preferences
            &lt;li&gt;dispatching OnClickListener calls
            &lt;li&gt;handling <c>AccessibilityNodeInfo#ACTION_CLICK ACTION_CLICK</c> when
            accessibility features are enabled
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTrackballEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnTrackballEvent (e As MotionEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool OnTrackballEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool OnTrackballEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnTrackballEvent : Android.Views.MotionEvent -&gt; bool&#xA;override this.OnTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="view.OnTrackballEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetOnTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The motion event.</param>
        <param name="event">The motion event.</param>
        <summary>Implement this method to handle trackball motion events.</summary>
        <returns>True if the event was handled, false otherwise.</returns>
        <remarks>
          <para>Implement this method to handle trackball motion events.</para>
          <para>The &lt;em&gt;relative&lt;/em&gt; movement of the trackball since the last event
            can be retrieve with <c>MotionEvent#getX MotionEvent.getX()</c> and
            <c>MotionEvent#getY MotionEvent.getY()</c>.  These are normalized so
            that a movement of 1 corresponds to the user pressing one DPAD key (so
            they will often be fractional values, representing the more fine-grained
            movement information available from a trackball).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.onTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnViewTranslationResponse">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnViewTranslationResponse (response As ViewTranslationResponse)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnViewTranslationResponse(Android::Views::Translation::ViewTranslationResponse ^ response);" />
      <MemberSignature Language="C#" Value="public virtual void OnViewTranslationResponse (Android.Views.Translation.ViewTranslationResponse response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnViewTranslationResponse(class Android.Views.Translation.ViewTranslationResponse response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnViewTranslationResponse(Android.Views.Translation.ViewTranslationResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnViewTranslationResponse : Android.Views.Translation.ViewTranslationResponse -&gt; unit&#xA;override this.OnViewTranslationResponse : Android.Views.Translation.ViewTranslationResponse -&gt; unit" Usage="view.OnViewTranslationResponse response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onViewTranslationResponse", "(Landroid/view/translation/ViewTranslationResponse;)V", "GetOnViewTranslationResponse_Landroid_view_translation_ViewTranslationResponse_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onViewTranslationResponse", "(Landroid/view/translation/ViewTranslationResponse;)V", "GetOnViewTranslationResponse_Landroid_view_translation_ViewTranslationResponse_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Views.Translation.ViewTranslationResponse" />
      </Parameters>
      <Docs>
        <param name="response">a <c>ViewTranslationResponse</c> that contains the translated information
            which can be shown in the view.</param>
        <summary>Called when the content from <c>View#onCreateViewTranslationRequest</c> had been translated
            by the TranslationService.</summary>
        <remarks>
          <para>Called when the content from <c>View#onCreateViewTranslationRequest</c> had been translated
            by the TranslationService. The <c>ViewTranslationResponse</c> should be saved here so that
            the <c>ViewTranslationResponse</c> can be used to display the translation when the system
            calls <c>ViewTranslationCallback#onShowTranslation</c>.</para>
          <para>The default implementation will set the ViewTranslationResponse that can be get from
            <c>View#getViewTranslationResponse</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onViewTranslationResponse(android.view.translation.ViewTranslationResponse)" title="Reference documentation">Java documentation for <code>android.view.View.onViewTranslationResponse(android.view.translation.ViewTranslationResponse)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVirtualViewTranslationResponses">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnVirtualViewTranslationResponses (response As LongSparseArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnVirtualViewTranslationResponses(Android::Util::LongSparseArray ^ response);" />
      <MemberSignature Language="C#" Value="public virtual void OnVirtualViewTranslationResponses (Android.Util.LongSparseArray response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVirtualViewTranslationResponses(class Android.Util.LongSparseArray response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnVirtualViewTranslationResponses(Android.Util.LongSparseArray)" />
      <MemberSignature Language="F#" Value="abstract member OnVirtualViewTranslationResponses : Android.Util.LongSparseArray -&gt; unit&#xA;override this.OnVirtualViewTranslationResponses : Android.Util.LongSparseArray -&gt; unit" Usage="view.OnVirtualViewTranslationResponses response" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onVirtualViewTranslationResponses", "(Landroid/util/LongSparseArray;)V", "GetOnVirtualViewTranslationResponses_Landroid_util_LongSparseArray_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onVirtualViewTranslationResponses", "(Landroid/util/LongSparseArray;)V", "GetOnVirtualViewTranslationResponses_Landroid_util_LongSparseArray_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Util.LongSparseArray" />
      </Parameters>
      <Docs>
        <param name="response">a <c>ViewTranslationResponse</c> SparseArray for the request that send by
            <c>View#onCreateVirtualViewTranslationRequests</c> that contains the translated information
            which can be shown in the view. The key of SparseArray is the virtual child ids.</param>
        <summary>Called when the content from <c>View#onCreateVirtualViewTranslationRequests</c> had been
            translated by the TranslationService.</summary>
        <remarks>
          <para>Called when the content from <c>View#onCreateVirtualViewTranslationRequests</c> had been
            translated by the TranslationService.</para>
          <para>The default implementation does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onVirtualViewTranslationResponses(android.util.LongSparseArray%3Candroid.view.translation.ViewTranslationResponse%3E)" title="Reference documentation">Java documentation for <code>android.view.View.onVirtualViewTranslationResponses(android.util.LongSparseArray&lt;android.view.translation.ViewTranslationResponse&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisibilityAggregated">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnVisibilityAggregated (isVisible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnVisibilityAggregated(bool isVisible);" />
      <MemberSignature Language="C#" Value="public virtual void OnVisibilityAggregated (bool isVisible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVisibilityAggregated(bool isVisible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnVisibilityAggregated(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnVisibilityAggregated : bool -&gt; unit&#xA;override this.OnVisibilityAggregated : bool -&gt; unit" Usage="view.OnVisibilityAggregated isVisible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onVisibilityAggregated", "(Z)V", "GetOnVisibilityAggregated_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onVisibilityAggregated", "(Z)V", "GetOnVisibilityAggregated_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isVisible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isVisible">true if this view and all of its ancestors are <c>#VISIBLE</c>
                             and this view's window is also visible</param>
        <summary>Called when the user-visibility of this View is potentially affected by a change
            to this view itself, an ancestor view or the window this view is attached to.</summary>
        <remarks>
          <para>Called when the user-visibility of this View is potentially affected by a change
            to this view itself, an ancestor view or the window this view is attached to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onVisibilityAggregated(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.onVisibilityAggregated(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVisibilityChanged (changedView As View, visibility As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVisibilityChanged(Android::Views::View ^ changedView, Android::Views::ViewStates visibility);" />
      <MemberSignature Language="C#" Value="protected virtual void OnVisibilityChanged (Android.Views.View changedView, Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVisibilityChanged(class Android.Views.View changedView, valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnVisibilityChanged(Android.Views.View,Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member OnVisibilityChanged : Android.Views.View * Android.Views.ViewStates -&gt; unit&#xA;override this.OnVisibilityChanged : Android.Views.View * Android.Views.ViewStates -&gt; unit" Usage="view.OnVisibilityChanged (changedView, visibility)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onVisibilityChanged", "(Landroid/view/View;I)V", "GetOnVisibilityChanged_Landroid_view_View_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onVisibilityChanged", "(Landroid/view/View;I)V", "GetOnVisibilityChanged_Landroid_view_View_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changedView" Type="Android.Views.View" />
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="changedView">The view whose visibility changed. May be
                               <c>this</c> or an ancestor view.</param>
        <param name="visibility">The new visibility, one of <c>#VISIBLE</c>,
                              <c>#INVISIBLE</c> or <c>#GONE</c>.</param>
        <summary>Called when the visibility of the view or an ancestor of the view has
            changed.</summary>
        <remarks>
          <para>Called when the visibility of the view or an ancestor of the view has
            changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onVisibilityChanged(android.view.View,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.onVisibilityChanged(android.view.View, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowFocusChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWindowFocusChanged (hasWindowFocus As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWindowFocusChanged(bool hasWindowFocus);" />
      <MemberSignature Language="C#" Value="public virtual void OnWindowFocusChanged (bool hasWindowFocus);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowFocusChanged(bool hasWindowFocus) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnWindowFocusChanged(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowFocusChanged : bool -&gt; unit&#xA;override this.OnWindowFocusChanged : bool -&gt; unit" Usage="view.OnWindowFocusChanged hasWindowFocus" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowFocusChanged", "(Z)V", "GetOnWindowFocusChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasWindowFocus" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasWindowFocus">True if the window containing this view now has
                   focus, false otherwise.</param>
        <summary>Called when the window containing this view gains or loses focus.</summary>
        <remarks>
          <para>Called when the window containing this view gains or loses focus.  Note
            that this is separate from view focus: to receive key events, both
            your view and its window must have focus.  If a window is displayed
            on top of yours that takes input focus, then your own window will lose
            focus but the view focus will remain unchanged.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onWindowFocusChanged(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.onWindowFocusChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowSystemUiVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWindowSystemUiVisibilityChanged (visible As SystemUiFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWindowSystemUiVisibilityChanged(Android::Views::SystemUiFlags visible);" />
      <MemberSignature Language="C#" Value="public virtual void OnWindowSystemUiVisibilityChanged (Android.Views.SystemUiFlags visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWindowSystemUiVisibilityChanged(valuetype Android.Views.SystemUiFlags visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnWindowSystemUiVisibilityChanged(Android.Views.SystemUiFlags)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowSystemUiVisibilityChanged : Android.Views.SystemUiFlags -&gt; unit&#xA;override this.OnWindowSystemUiVisibilityChanged : Android.Views.SystemUiFlags -&gt; unit" Usage="view.OnWindowSystemUiVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowSystemUiVisibilityChanged", "(I)V", "GetOnWindowSystemUiVisibilityChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowSystemUiVisibilityChanged", "(I)V", "GetOnWindowSystemUiVisibilityChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="Android.Views.SystemUiFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Override to find out when the window's requested system UI visibility
            has changed, that is the value returned by <c>#getWindowSystemUiVisibility()</c>.</summary>
        <remarks>
          <para>Override to find out when the window's requested system UI visibility
            has changed, that is the value returned by <c>#getWindowSystemUiVisibility()</c>.
            This is different from the callbacks received through
            <c>#setOnSystemUiVisibilityChangeListener(OnSystemUiVisibilityChangeListener)</c>
            in that this is only telling you about the local request of the window,
            not the actual values applied by the system.</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onWindowSystemUiVisibilityChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.onWindowSystemUiVisibilityChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowVisibilityChanged">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWindowVisibilityChanged (visibility As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWindowVisibilityChanged(Android::Views::ViewStates visibility);" />
      <MemberSignature Language="C#" Value="protected virtual void OnWindowVisibilityChanged (Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWindowVisibilityChanged(valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OnWindowVisibilityChanged(Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member OnWindowVisibilityChanged : Android.Views.ViewStates -&gt; unit&#xA;override this.OnWindowVisibilityChanged : Android.Views.ViewStates -&gt; unit" Usage="view.OnWindowVisibilityChanged visibility" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWindowVisibilityChanged", "(I)V", "GetOnWindowVisibilityChanged_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWindowVisibilityChanged", "(I)V", "GetOnWindowVisibilityChanged_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">The new visibility of the window.</param>
        <summary>Called when the window containing has change its visibility
            (between <c>#GONE</c>, <c>#INVISIBLE</c>, and <c>#VISIBLE</c>).</summary>
        <remarks>
          <para>Called when the window containing has change its visibility
            (between <c>#GONE</c>, <c>#INVISIBLE</c>, and <c>#VISIBLE</c>).  Note
            that this tells you whether or not your window is being made visible
            to the window manager; this does &lt;em&gt;not&lt;/em&gt; tell you whether or not
            your window is obscured by other windows on the screen, even if it
            is itself visible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#onWindowVisibilityChanged(int)" title="Reference documentation">Java documentation for <code>android.view.View.onWindowVisibilityChanged(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OutlineAmbientShadowColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutlineAmbientShadowColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutlineAmbientShadowColor { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int OutlineAmbientShadowColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutlineAmbientShadowColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.OutlineAmbientShadowColor" />
      <MemberSignature Language="F#" Value="member this.OutlineAmbientShadowColor : int" Usage="Android.Views.View.OutlineAmbientShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutlineAmbientShadowColor", "()I", "GetGetOutlineAmbientShadowColorHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutlineAmbientShadowColor", "()I", "GetGetOutlineAmbientShadowColorHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>The shadow color set by <c>#setOutlineAmbientShadowColor(int)</c>, or black if
            nothing was set</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOutlineAmbientShadowColor()" title="Reference documentation">Java documentation for <code>android.view.View.getOutlineAmbientShadowColor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutlineProvider">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OutlineProvider As ViewOutlineProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewOutlineProvider ^ OutlineProvider { Android::Views::ViewOutlineProvider ^ get(); void set(Android::Views::ViewOutlineProvider ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewOutlineProvider? OutlineProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewOutlineProvider OutlineProvider" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.OutlineProvider" />
      <MemberSignature Language="F#" Value="member this.OutlineProvider : Android.Views.ViewOutlineProvider with get, set" Usage="Android.Views.View.OutlineProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutlineProvider", "()Landroid/view/ViewOutlineProvider;", "GetGetOutlineProviderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutlineProvider", "()Landroid/view/ViewOutlineProvider;", "GetGetOutlineProviderHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOutlineProvider", "(Landroid/view/ViewOutlineProvider;)V", "GetSetOutlineProvider_Landroid_view_ViewOutlineProvider_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOutlineProvider", "(Landroid/view/ViewOutlineProvider;)V", "GetSetOutlineProvider_Landroid_view_ViewOutlineProvider_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOutlineProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current <c>ViewOutlineProvider</c> of the view, which generates the Outline
            that defines the shape of the shadow it casts, and enables outline clipping. -or- Sets the <c>ViewOutlineProvider</c> of the view, which generates the Outline that defines
            the shape of the shadow it casts, and enables outline clipping.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current <c>ViewOutlineProvider</c> of the view, which generates the Outline
            that defines the shape of the shadow it casts, and enables outline clipping.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOutlineProvider()" title="Reference documentation">Java documentation for <code>android.view.View.getOutlineProvider()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>ViewOutlineProvider</c> of the view, which generates the Outline that defines
            the shape of the shadow it casts, and enables outline clipping.</para>
          <para>The default ViewOutlineProvider, <c>ViewOutlineProvider#BACKGROUND</c>, queries the Outline
            from the View's background drawable, via <c>Drawable#getOutline(Outline)</c>. Changing the
            outline provider with this method allows this behavior to be overridden.</para>
          <para>If the ViewOutlineProvider is null, if querying it for an outline returns false,
            or if the produced Outline is <c>Outline#isEmpty()</c>, shadows will not be cast.</para>
          <para>Only outlines that return true from <c>Outline#canClip()</c> may be used for clipping.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOutlineProvider(android.view.ViewOutlineProvider)" title="Reference documentation">Java documentation for <code>android.view.View.setOutlineProvider(android.view.ViewOutlineProvider)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.ClipToOutline" />
        <altmember cref="P:Android.Views.View.OutlineProvider" />
      </Docs>
    </Member>
    <Member MemberName="OutlineSpotShadowColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OutlineSpotShadowColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OutlineSpotShadowColor { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int OutlineSpotShadowColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutlineSpotShadowColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.OutlineSpotShadowColor" />
      <MemberSignature Language="F#" Value="member this.OutlineSpotShadowColor : int" Usage="Android.Views.View.OutlineSpotShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutlineSpotShadowColor", "()I", "GetGetOutlineSpotShadowColorHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutlineSpotShadowColor", "()I", "GetGetOutlineSpotShadowColorHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>The shadow color set by <c>#setOutlineSpotShadowColor(int)</c>, or black if nothing
            was set</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOutlineSpotShadowColor()" title="Reference documentation">Java documentation for <code>android.view.View.getOutlineSpotShadowColor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Overlay">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Overlay As ViewOverlay" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewOverlay ^ Overlay { Android::Views::ViewOverlay ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewOverlay? Overlay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewOverlay Overlay" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Overlay" />
      <MemberSignature Language="F#" Value="member this.Overlay : Android.Views.ViewOverlay" Usage="Android.Views.View.Overlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOverlay", "()Landroid/view/ViewOverlay;", "GetGetOverlayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOverlay", "()Landroid/view/ViewOverlay;", "GetGetOverlayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewOverlay</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the overlay for this view, creating it if it does not yet exist.</summary>
        <value>The ViewOverlay object for this view.</value>
        <remarks>
          <para>Returns the overlay for this view, creating it if it does not yet exist.
            Adding drawables to the overlay will cause them to be displayed whenever
            the view itself is redrawn. Objects in the overlay should be actively
            managed: remove them when they should not be displayed anymore. The
            overlay will always have the same size as its host view.</para>
          <para>Note: Overlays do not currently work correctly with <c>SurfaceView</c> or <c>TextureView</c>; contents in overlays for these
            types of views may not display correctly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOverlay()" title="Reference documentation">Java documentation for <code>android.view.View.getOverlay()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <altmember cref="T:Android.Views.ViewOverlay" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollAlways">
      <MemberSignature Language="VB.NET" Value="Public Const OverScrollAlways As OverScrollMode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::OverScrollMode OverScrollAlways = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollAlways = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollAlways = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.OverScrollAlways" />
      <MemberSignature Language="F#" Value="val mutable OverScrollAlways : Android.Views.OverScrollMode" Usage="Android.Views.View.OverScrollAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OVER_SCROLL_ALWAYS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OVER_SCROLL_ALWAYS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Always allow a user to over-scroll this view, provided it is a
            view that can scroll.</summary>
        <remarks>
          <para>Always allow a user to over-scroll this view, provided it is a
            view that can scroll.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#OVER_SCROLL_ALWAYS" title="Reference documentation">Java documentation for <code>android.view.View.OVER_SCROLL_ALWAYS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollBy">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OverScrollBy (deltaX As Integer, deltaY As Integer, scrollX As Integer, scrollY As Integer, scrollRangeX As Integer, scrollRangeY As Integer, maxOverScrollX As Integer, maxOverScrollY As Integer, isTouchEvent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OverScrollBy(int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX, int scrollRangeY, int maxOverScrollX, int maxOverScrollY, bool isTouchEvent);" />
      <MemberSignature Language="C#" Value="protected virtual bool OverScrollBy (int deltaX, int deltaY, int scrollX, int scrollY, int scrollRangeX, int scrollRangeY, int maxOverScrollX, int maxOverScrollY, bool isTouchEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OverScrollBy(int32 deltaX, int32 deltaY, int32 scrollX, int32 scrollY, int32 scrollRangeX, int32 scrollRangeY, int32 maxOverScrollX, int32 maxOverScrollY, bool isTouchEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.OverScrollBy(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OverScrollBy : int * int * int * int * int * int * int * int * bool -&gt; bool&#xA;override this.OverScrollBy : int * int * int * int * int * int * int * int * bool -&gt; bool" Usage="view.OverScrollBy (deltaX, deltaY, scrollX, scrollY, scrollRangeX, scrollRangeY, maxOverScrollX, maxOverScrollY, isTouchEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("overScrollBy", "(IIIIIIIIZ)Z", "GetOverScrollBy_IIIIIIIIZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("overScrollBy", "(IIIIIIIIZ)Z", "GetOverScrollBy_IIIIIIIIZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deltaX" Type="System.Int32" />
        <Parameter Name="deltaY" Type="System.Int32" />
        <Parameter Name="scrollX" Type="System.Int32" />
        <Parameter Name="scrollY" Type="System.Int32" />
        <Parameter Name="scrollRangeX" Type="System.Int32" />
        <Parameter Name="scrollRangeY" Type="System.Int32" />
        <Parameter Name="maxOverScrollX" Type="System.Int32" />
        <Parameter Name="maxOverScrollY" Type="System.Int32" />
        <Parameter Name="isTouchEvent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deltaX">Change in X in pixels</param>
        <param name="deltaY">Change in Y in pixels</param>
        <param name="scrollX">Current X scroll value in pixels before applying deltaX</param>
        <param name="scrollY">Current Y scroll value in pixels before applying deltaY</param>
        <param name="scrollRangeX">Maximum content scroll range along the X axis</param>
        <param name="scrollRangeY">Maximum content scroll range along the Y axis</param>
        <param name="maxOverScrollX">Number of pixels to overscroll by in either direction
                     along the X axis.</param>
        <param name="maxOverScrollY">Number of pixels to overscroll by in either direction
                     along the Y axis.</param>
        <param name="isTouchEvent">true if this scroll operation is the result of a touch event.</param>
        <summary>Scroll the view with standard behavior for scrolling beyond the normal
            content boundaries.</summary>
        <returns>true if scrolling was clamped to an over-scroll boundary along either
                     axis, false otherwise.</returns>
        <remarks>
          <para>Scroll the view with standard behavior for scrolling beyond the normal
            content boundaries. Views that call this method should override
            <c>#onOverScrolled(int, int, boolean, boolean)</c> to respond to the
            results of an over-scroll operation.
            
            Views can use this method to handle any touch or fling-based scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#overScrollBy(int,%20int,%20int,%20int,%20int,%20int,%20int,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.View.overScrollBy(int, int, int, int, int, int, int, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollIfContentScrolls">
      <MemberSignature Language="VB.NET" Value="Public Const OverScrollIfContentScrolls As OverScrollMode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::OverScrollMode OverScrollIfContentScrolls = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollIfContentScrolls = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollIfContentScrolls = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.OverScrollIfContentScrolls" />
      <MemberSignature Language="F#" Value="val mutable OverScrollIfContentScrolls : Android.Views.OverScrollMode" Usage="Android.Views.View.OverScrollIfContentScrolls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OVER_SCROLL_IF_CONTENT_SCROLLS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OVER_SCROLL_IF_CONTENT_SCROLLS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Allow a user to over-scroll this view only if the content is large
            enough to meaningfully scroll, provided it is a view that can scroll.</summary>
        <remarks>
          <para>Allow a user to over-scroll this view only if the content is large
            enough to meaningfully scroll, provided it is a view that can scroll.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#OVER_SCROLL_IF_CONTENT_SCROLLS" title="Reference documentation">Java documentation for <code>android.view.View.OVER_SCROLL_IF_CONTENT_SCROLLS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OverScrollMode As OverScrollMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::OverScrollMode OverScrollMode { Android::Views::OverScrollMode get(); void set(Android::Views::OverScrollMode value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.OverScrollMode OverScrollMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.OverScrollMode OverScrollMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.OverScrollMode" />
      <MemberSignature Language="F#" Value="member this.OverScrollMode : Android.Views.OverScrollMode with get, set" Usage="Android.Views.View.OverScrollMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOverScrollMode", "()I", "GetGetOverScrollModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOverScrollMode", "()I", "GetGetOverScrollModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOverScrollMode", "(I)V", "GetSetOverScrollMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOverScrollMode", "(I)V", "GetSetOverScrollMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="overScrollMode">The new over-scroll mode for this view.</param>
        <summary>Returns the over-scroll mode for this view. -or- Set the over-scroll mode for this view.</summary>
        <value>This view's over-scroll mode.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the over-scroll mode for this view. The result will be
            one of <c>#OVER_SCROLL_ALWAYS</c>, <c>#OVER_SCROLL_IF_CONTENT_SCROLLS</c>
            (allow over-scrolling only if the view content is larger than the container),
            or <c>#OVER_SCROLL_NEVER</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getOverScrollMode()" title="Reference documentation">Java documentation for <code>android.view.View.getOverScrollMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the over-scroll mode for this view. Valid over-scroll modes are
            <c>#OVER_SCROLL_ALWAYS</c>, <c>#OVER_SCROLL_IF_CONTENT_SCROLLS</c>
            (allow over-scrolling only if the view content is larger than the container),
            or <c>#OVER_SCROLL_NEVER</c>.
            
            Setting the over-scroll mode of a view will have an effect only if the
            view is capable of scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOverScrollMode(int)" title="Reference documentation">Java documentation for <code>android.view.View.setOverScrollMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OverScrollNever">
      <MemberSignature Language="VB.NET" Value="Public Const OverScrollNever As OverScrollMode  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::OverScrollMode OverScrollNever = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.OverScrollMode OverScrollNever = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.OverScrollMode OverScrollNever = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.OverScrollNever" />
      <MemberSignature Language="F#" Value="val mutable OverScrollNever : Android.Views.OverScrollMode" Usage="Android.Views.View.OverScrollNever" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OVER_SCROLL_NEVER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OVER_SCROLL_NEVER")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.OverScrollMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.OverScrollMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Never allow a user to over-scroll this view.</summary>
        <remarks>
          <para>Never allow a user to over-scroll this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#OVER_SCROLL_NEVER" title="Reference documentation">Java documentation for <code>android.view.View.OVER_SCROLL_NEVER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="P:Android.Views.View.OverScrollMode" />
      </Docs>
    </Member>
    <Member MemberName="PaddingBottom">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingBottom As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingBottom { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingBottom" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingBottom" />
      <MemberSignature Language="F#" Value="member this.PaddingBottom : int" Usage="Android.Views.View.PaddingBottom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingBottom", "()I", "GetGetPaddingBottomHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingBottom", "()I", "GetGetPaddingBottomHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the bottom padding of this view.</summary>
        <value>the bottom padding in pixels</value>
        <remarks>
          <para>Returns the bottom padding of this view. If there are inset and enabled
            scrollbars, this value may include the space required to display the
            scrollbars as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingBottom()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingBottom()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingEnd">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingEnd As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingEnd { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingEnd" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingEnd" />
      <MemberSignature Language="F#" Value="member this.PaddingEnd : int" Usage="Android.Views.View.PaddingEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingEnd", "()I", "GetGetPaddingEndHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingEnd", "()I", "GetGetPaddingEndHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the end padding of this view depending on its resolved layout direction.</summary>
        <value>the end padding in pixels</value>
        <remarks>
          <para>Returns the end padding of this view depending on its resolved layout direction.
            If there are inset and enabled scrollbars, this value may include the space
            required to display the scrollbars as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingEnd()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingEnd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PaddingLeft">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingLeft As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingLeft { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingLeft" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingLeft" />
      <MemberSignature Language="F#" Value="member this.PaddingLeft : int" Usage="Android.Views.View.PaddingLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingLeft", "()I", "GetGetPaddingLeftHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingLeft", "()I", "GetGetPaddingLeftHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the left padding of this view.</summary>
        <value>the left padding in pixels</value>
        <remarks>
          <para>Returns the left padding of this view. If there are inset and enabled
            scrollbars, this value may include the space required to display the
            scrollbars as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingLeft()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingLeft()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingRight">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingRight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingRight { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingRight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingRight" />
      <MemberSignature Language="F#" Value="member this.PaddingRight : int" Usage="Android.Views.View.PaddingRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingRight", "()I", "GetGetPaddingRightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingRight", "()I", "GetGetPaddingRightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the right padding of this view.</summary>
        <value>the right padding in pixels</value>
        <remarks>
          <para>Returns the right padding of this view. If there are inset and enabled
            scrollbars, this value may include the space required to display the
            scrollbars as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingRight()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingRight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PaddingStart">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingStart As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingStart { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingStart" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingStart" />
      <MemberSignature Language="F#" Value="member this.PaddingStart : int" Usage="Android.Views.View.PaddingStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingStart", "()I", "GetGetPaddingStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingStart", "()I", "GetGetPaddingStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the start padding of this view depending on its resolved layout direction.</summary>
        <value>the start padding in pixels</value>
        <remarks>
          <para>Returns the start padding of this view depending on its resolved layout direction.
            If there are inset and enabled scrollbars, this value may include the space
            required to display the scrollbars as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingStart()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PaddingTop">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PaddingTop As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PaddingTop { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PaddingTop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PaddingTop" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PaddingTop" />
      <MemberSignature Language="F#" Value="member this.PaddingTop : int" Usage="Android.Views.View.PaddingTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaddingTop", "()I", "GetGetPaddingTopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaddingTop", "()I", "GetGetPaddingTopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the top padding of this view.</summary>
        <value>the top padding in pixels</value>
        <remarks>
          <para>Returns the top padding of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPaddingTop()" title="Reference documentation">Java documentation for <code>android.view.View.getPaddingTop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As IViewParent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::IViewParent ^ Parent { Android::Views::IViewParent ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Views.IViewParent? Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IViewParent Parent" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Parent" />
      <MemberSignature Language="F#" Value="member this.Parent : Android.Views.IViewParent" Usage="Android.Views.View.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParent", "()Landroid/view/ViewParent;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParent", "()Landroid/view/ViewParent;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IViewParent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent of this view.</summary>
        <value>Parent of this view.</value>
        <remarks>
          <para>Gets the parent of this view. Note that the parent is a
            ViewParent and not necessarily a View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getParent()" title="Reference documentation">Java documentation for <code>android.view.View.getParent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParentForAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParentForAccessibility As IViewParent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::IViewParent ^ ParentForAccessibility { Android::Views::IViewParent ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.IViewParent? ParentForAccessibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IViewParent ParentForAccessibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ParentForAccessibility" />
      <MemberSignature Language="F#" Value="member this.ParentForAccessibility : Android.Views.IViewParent" Usage="Android.Views.View.ParentForAccessibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParentForAccessibility", "()Landroid/view/ViewParent;", "GetGetParentForAccessibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParentForAccessibility", "()Landroid/view/ViewParent;", "GetGetParentForAccessibilityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IViewParent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parent for accessibility purposes.</summary>
        <value>The parent for accessibility purposes.</value>
        <remarks>
          <para>Gets the parent for accessibility purposes. Note that the parent for
            accessibility is not necessary the immediate parent. It is the first
            predecessor that is important for accessibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getParentForAccessibility()" title="Reference documentation">Java documentation for <code>android.view.View.getParentForAccessibility()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="VB.NET" Value="Public Function PerformAccessibilityAction (action As GlobalAction, arguments As Bundle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PerformAccessibilityAction(Android::AccessibilityServices::GlobalAction action, Android::OS::Bundle ^ arguments);" />
      <MemberSignature Language="C#" Value="public bool PerformAccessibilityAction (Android.AccessibilityServices.GlobalAction action, Android.OS.Bundle arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PerformAccessibilityAction(valuetype Android.AccessibilityServices.GlobalAction action, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformAccessibilityAction(Android.AccessibilityServices.GlobalAction,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.PerformAccessibilityAction : Android.AccessibilityServices.GlobalAction * Android.OS.Bundle -&gt; bool" Usage="view.PerformAccessibilityAction (action, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method uses wrong enum type. Please use PerformAccessibilityAction(Action) instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method uses wrong enum type. Please use PerformAccessibilityAction(Action) instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.AccessibilityServices.GlobalAction" />
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PerformAccessibilityAction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformAccessibilityAction (action As Action, arguments As Bundle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformAccessibilityAction(Android::Views::Accessibility::Action action, Android::OS::Bundle ^ arguments);" />
      <MemberSignature Language="C#" Value="public virtual bool PerformAccessibilityAction (Android.Views.Accessibility.Action action, Android.OS.Bundle? arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformAccessibilityAction(valuetype Android.Views.Accessibility.Action action, class Android.OS.Bundle arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformAccessibilityAction(Android.Views.Accessibility.Action,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member PerformAccessibilityAction : Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool&#xA;override this.PerformAccessibilityAction : Android.Views.Accessibility.Action * Android.OS.Bundle -&gt; bool" Usage="view.PerformAccessibilityAction (action, arguments)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performAccessibilityAction", "(ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_ILandroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performAccessibilityAction", "(ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_ILandroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Android.Views.Accessibility.Action">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="arguments" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="action">The action to perform.</param>
        <param name="arguments">Optional action arguments.</param>
        <summary>Performs the specified accessibility action on the view.</summary>
        <returns>Whether the action was performed.</returns>
        <remarks>
          <para>Performs the specified accessibility action on the view. For
            possible accessibility actions look at <c>AccessibilityNodeInfo</c>.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#performAccessibilityAction(View, int, Bundle)</c>
            is responsible for handling this call.</para>
          <para>The default implementation will delegate
            <c>AccessibilityNodeInfo#ACTION_SCROLL_BACKWARD</c> and
            <c>AccessibilityNodeInfo#ACTION_SCROLL_FORWARD</c> to nested scrolling parents if
            <c>#isNestedScrollingEnabled() nested scrolling is enabled</c> on this view.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; Avoid setting accessibility focus with
            <c>AccessibilityNodeInfo#ACTION_ACCESSIBILITY_FOCUS</c>. This is intended to be controlled
            by screen readers. Apps changing focus can confuse screen readers, so the resulting behavior
            can vary by device and screen reader version.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performAccessibilityAction(int,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.view.View.performAccessibilityAction(int, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformClick () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformClick();" />
      <MemberSignature Language="C#" Value="public virtual bool PerformClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformClick" />
      <MemberSignature Language="F#" Value="abstract member PerformClick : unit -&gt; bool&#xA;override this.PerformClick : unit -&gt; bool" Usage="view.PerformClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performClick", "()Z", "GetPerformClickHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performClick", "()Z", "GetPerformClickHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this view's OnClickListener, if it is defined.</summary>
        <returns>True there was an assigned OnClickListener that was called, false
                    otherwise is returned.</returns>
        <remarks>
          <para>Call this view's OnClickListener, if it is defined.  Performs all normal
            actions associated with clicking: reporting accessibility event, playing
            a sound, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performClick()" title="Reference documentation">Java documentation for <code>android.view.View.performClick()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformContextClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformContextClick () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformContextClick();" />
      <MemberSignature Language="C#" Value="public virtual bool PerformContextClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformContextClick" />
      <MemberSignature Language="F#" Value="abstract member PerformContextClick : unit -&gt; bool&#xA;override this.PerformContextClick : unit -&gt; bool" Usage="view.PerformContextClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performContextClick", "()Z", "GetPerformContextClickHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performContextClick", "()Z", "GetPerformContextClickHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this view's OnContextClickListener, if it is defined.</summary>
        <returns>True if there was an assigned OnContextClickListener that consumed the event, false
                    otherwise.</returns>
        <remarks>
          <para>Call this view's OnContextClickListener, if it is defined.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performContextClick()" title="Reference documentation">Java documentation for <code>android.view.View.performContextClick()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformContextClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformContextClick (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformContextClick(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual bool PerformContextClick (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextClick(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformContextClick(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PerformContextClick : single * single -&gt; bool&#xA;override this.PerformContextClick : single * single -&gt; bool" Usage="view.PerformContextClick (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performContextClick", "(FF)Z", "GetPerformContextClick_FFHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performContextClick", "(FF)Z", "GetPerformContextClick_FFHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">the x coordinate of the context click</param>
        <param name="y">the y coordinate of the context click</param>
        <summary>Call this view's OnContextClickListener, if it is defined.</summary>
        <returns>True if there was an assigned OnContextClickListener that consumed the event, false
                    otherwise.</returns>
        <remarks>
          <para>Call this view's OnContextClickListener, if it is defined.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performContextClick(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.performContextClick(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformHapticFeedback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformHapticFeedback (feedbackConstant As FeedbackConstants) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformHapticFeedback(Android::Views::FeedbackConstants feedbackConstant);" />
      <MemberSignature Language="C#" Value="public virtual bool PerformHapticFeedback (Android.Views.FeedbackConstants feedbackConstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformHapticFeedback(valuetype Android.Views.FeedbackConstants feedbackConstant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants)" />
      <MemberSignature Language="F#" Value="abstract member PerformHapticFeedback : Android.Views.FeedbackConstants -&gt; bool&#xA;override this.PerformHapticFeedback : Android.Views.FeedbackConstants -&gt; bool" Usage="view.PerformHapticFeedback feedbackConstant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performHapticFeedback", "(I)Z", "GetPerformHapticFeedback_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performHapticFeedback", "(I)Z", "GetPerformHapticFeedback_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedbackConstant" Type="Android.Views.FeedbackConstants">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feedbackConstant">One of the constants defined in
            <c>HapticFeedbackConstants</c></param>
        <summary>BZZZTT!!1!</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>BZZZTT!!1!</para>
          <para>Provide haptic feedback to the user for this view.</para>
          <para>The framework will provide haptic feedback for some built in actions,
            such as long presses, but you may wish to provide feedback for your
            own widget.</para>
          <para>The feedback will only be performed if
            <c>#isHapticFeedbackEnabled()</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performHapticFeedback(int)" title="Reference documentation">Java documentation for <code>android.view.View.performHapticFeedback(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformHapticFeedback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformHapticFeedback (feedbackConstant As FeedbackConstants, flags As FeedbackFlags) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformHapticFeedback(Android::Views::FeedbackConstants feedbackConstant, Android::Views::FeedbackFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual bool PerformHapticFeedback (Android.Views.FeedbackConstants feedbackConstant, Android.Views.FeedbackFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformHapticFeedback(valuetype Android.Views.FeedbackConstants feedbackConstant, valuetype Android.Views.FeedbackFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformHapticFeedback(Android.Views.FeedbackConstants,Android.Views.FeedbackFlags)" />
      <MemberSignature Language="F#" Value="abstract member PerformHapticFeedback : Android.Views.FeedbackConstants * Android.Views.FeedbackFlags -&gt; bool&#xA;override this.PerformHapticFeedback : Android.Views.FeedbackConstants * Android.Views.FeedbackFlags -&gt; bool" Usage="view.PerformHapticFeedback (feedbackConstant, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performHapticFeedback", "(II)Z", "GetPerformHapticFeedback_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performHapticFeedback", "(II)Z", "GetPerformHapticFeedback_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feedbackConstant" Type="Android.Views.FeedbackConstants">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Views.FeedbackFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feedbackConstant">One of the constants defined in
            <c>HapticFeedbackConstants</c></param>
        <param name="flags">Additional flags as per <c>HapticFeedbackConstants</c>.</param>
        <summary>BZZZTT!!1!</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>BZZZTT!!1!</para>
          <para>Like <c>#performHapticFeedback(int)</c>, with additional options.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performHapticFeedback(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.performHapticFeedback(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PerformLongClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformLongClick () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformLongClick();" />
      <MemberSignature Language="C#" Value="public virtual bool PerformLongClick ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformLongClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformLongClick" />
      <MemberSignature Language="F#" Value="abstract member PerformLongClick : unit -&gt; bool&#xA;override this.PerformLongClick : unit -&gt; bool" Usage="view.PerformLongClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performLongClick", "()Z", "GetPerformLongClickHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performLongClick", "()Z", "GetPerformLongClickHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Calls this view's OnLongClickListener, if it is defined.</summary>
        <returns>
          <c>true</c> if one of the above receivers consumed the event,
                    <c>false</c> otherwise</returns>
        <remarks>
          <para>Calls this view's OnLongClickListener, if it is defined. Invokes the
            context menu if the OnLongClickListener did not consume the event.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performLongClick()" title="Reference documentation">Java documentation for <code>android.view.View.performLongClick()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformLongClick">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformLongClick (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PerformLongClick(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual bool PerformLongClick (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformLongClick(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformLongClick(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PerformLongClick : single * single -&gt; bool&#xA;override this.PerformLongClick : single * single -&gt; bool" Usage="view.PerformLongClick (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performLongClick", "(FF)Z", "GetPerformLongClick_FFHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performLongClick", "(FF)Z", "GetPerformLongClick_FFHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">x coordinate of the anchoring touch event, or <c>Float#NaN</c>
                     to disable anchoring</param>
        <param name="y">y coordinate of the anchoring touch event, or <c>Float#NaN</c>
                     to disable anchoring</param>
        <summary>Calls this view's OnLongClickListener, if it is defined.</summary>
        <returns>
          <c>true</c> if one of the above receivers consumed the event,
                    <c>false</c> otherwise</returns>
        <remarks>
          <para>Calls this view's OnLongClickListener, if it is defined. Invokes the
            context menu if the OnLongClickListener did not consume the event,
            anchoring it to an (x,y) coordinate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performLongClick(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.performLongClick(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformReceiveContent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PerformReceiveContent (payload As ContentInfo) As ContentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ContentInfo ^ PerformReceiveContent(Android::Views::ContentInfo ^ payload);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ContentInfo? PerformReceiveContent (Android.Views.ContentInfo payload);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ContentInfo PerformReceiveContent(class Android.Views.ContentInfo payload) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PerformReceiveContent(Android.Views.ContentInfo)" />
      <MemberSignature Language="F#" Value="abstract member PerformReceiveContent : Android.Views.ContentInfo -&gt; Android.Views.ContentInfo&#xA;override this.PerformReceiveContent : Android.Views.ContentInfo -&gt; Android.Views.ContentInfo" Usage="view.PerformReceiveContent payload" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performReceiveContent", "(Landroid/view/ContentInfo;)Landroid/view/ContentInfo;", "GetPerformReceiveContent_Landroid_view_ContentInfo_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performReceiveContent", "(Landroid/view/ContentInfo;)Landroid/view/ContentInfo;", "GetPerformReceiveContent_Landroid_view_ContentInfo_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ContentInfo</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="payload" Type="Android.Views.ContentInfo" />
      </Parameters>
      <Docs>
        <param name="payload">The content to insert and related metadata.</param>
        <summary>Receives the given content.</summary>
        <returns>The portion of the passed-in content that was not accepted (may be all, some, or none
            of the passed-in content).</returns>
        <remarks>
          <para>Receives the given content. If no listener is set, invokes <c>#onReceiveContent</c>. If a
            listener is <c>#setOnReceiveContentListener set</c>, invokes the listener instead; if the
            listener returns a non-null result, invokes <c>#onReceiveContent</c> to handle it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#performReceiveContent(android.view.ContentInfo)" title="Reference documentation">Java documentation for <code>android.view.View.performReceiveContent(android.view.ContentInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PivotX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PivotX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float PivotX { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float PivotX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PivotX" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PivotX" />
      <MemberSignature Language="F#" Value="member this.PivotX : single with get, set" Usage="Android.Views.View.PivotX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPivotX", "()F", "GetGetPivotXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPivotX", "()F", "GetGetPivotXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPivotX", "(F)V", "GetSetPivotX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPivotX", "(F)V", "GetSetPivotX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="pivotX">The x location of the pivot point.</param>
        <summary>The x location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleX(float) scaled</c>. -or- Sets the x location of the point around which the view is
            <c>#setRotation(float) rotated</c> and <c>#setScaleX(float) scaled</c>.</summary>
        <value>The x location of the pivot point.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The x location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleX(float) scaled</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPivotX()" title="Reference documentation">Java documentation for <code>android.view.View.getPivotX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the x location of the point around which the view is
            <c>#setRotation(float) rotated</c> and <c>#setScaleX(float) scaled</c>.
            By default, the pivot point is centered on the object.
            Setting this property disables this behavior and causes the view to use only the
            explicitly set pivotX and pivotY values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPivotX(float)" title="Reference documentation">Java documentation for <code>android.view.View.setPivotX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="PivotY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PivotY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float PivotY { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float PivotY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 PivotY" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PivotY" />
      <MemberSignature Language="F#" Value="member this.PivotY : single with get, set" Usage="Android.Views.View.PivotY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPivotY", "()F", "GetGetPivotYHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPivotY", "()F", "GetGetPivotYHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPivotY", "(F)V", "GetSetPivotY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPivotY", "(F)V", "GetSetPivotY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="pivotY">The y location of the pivot point.</param>
        <summary>The y location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleY(float) scaled</c>. -or- Sets the y location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleY(float) scaled</c>.</summary>
        <value>The y location of the pivot point.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The y location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleY(float) scaled</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPivotY()" title="Reference documentation">Java documentation for <code>android.view.View.getPivotY()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the y location of the point around which the view is <c>#setRotation(float) rotated</c>
            and <c>#setScaleY(float) scaled</c>. By default, the pivot point is centered on the object.
            Setting this property disables this behavior and causes the view to use only the
            explicitly set pivotX and pivotY values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPivotY(float)" title="Reference documentation">Java documentation for <code>android.view.View.setPivotY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.ScaleX" />
        <altmember cref="P:Android.Views.View.ScaleY" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PlaySoundEffect (soundConstant As SoundEffects)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PlaySoundEffect(Android::Views::SoundEffects soundConstant);" />
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Views.SoundEffects soundConstant);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Views.SoundEffects soundConstant) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects)" />
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Views.SoundEffects -&gt; unit&#xA;override this.PlaySoundEffect : Android.Views.SoundEffects -&gt; unit" Usage="view.PlaySoundEffect soundConstant" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundConstant" Type="Android.Views.SoundEffects">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="soundConstant">One of the constants defined in <c>SoundEffectConstants</c>.</param>
        <summary>Play a sound effect for this view.</summary>
        <remarks>
          <para>Play a sound effect for this view.</para>
          <para>The framework will play sound effects for some built in actions, such as
            clicking, but you may wish to play these effects in your widget,
            for instance, for internal navigation.</para>
          <para>The sound effect will only be played if sound effects are enabled by the user, and
            <c>#isSoundEffectsEnabled()</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#playSoundEffect(int)" title="Reference documentation">Java documentation for <code>android.view.View.playSoundEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PointerIcon">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PointerIcon As PointerIcon" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::PointerIcon ^ PointerIcon { Android::Views::PointerIcon ^ get(); void set(Android::Views::PointerIcon ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.PointerIcon? PointerIcon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.PointerIcon PointerIcon" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PointerIcon" />
      <MemberSignature Language="F#" Value="member this.PointerIcon : Android.Views.PointerIcon with get, set" Usage="Android.Views.View.PointerIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPointerIcon", "()Landroid/view/PointerIcon;", "GetGetPointerIconHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPointerIcon", "()Landroid/view/PointerIcon;", "GetGetPointerIconHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPointerIcon", "(Landroid/view/PointerIcon;)V", "GetSetPointerIcon_Landroid_view_PointerIcon_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPointerIcon", "(Landroid/view/PointerIcon;)V", "GetSetPointerIcon_Landroid_view_PointerIcon_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.PointerIcon</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="pointerIcon">A PointerIcon instance which will be shown when the mouse hovers.</param>
        <summary>Gets the mouse pointer icon for the current view. -or- Set the pointer icon to be used for a mouse pointer in the current view.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the mouse pointer icon for the current view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPointerIcon()" title="Reference documentation">Java documentation for <code>android.view.View.getPointerIcon()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the pointer icon to be used for a mouse pointer in the current view.
            
            Passing <c>null</c> will restore the pointer icon to its default value.
            Note that setting the pointer icon using this method will only set it for events coming from
            a mouse device (i.e. with source <c>InputDevice#SOURCE_MOUSE</c>). To resolve
            the pointer icon for other device types like styluses, override
            <c>#onResolvePointerIcon(MotionEvent, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPointerIcon(android.view.PointerIcon)" title="Reference documentation">Java documentation for <code>android.view.View.setPointerIcon(android.view.PointerIcon)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Post (action As IRunnable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Post(Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public virtual bool Post (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Post(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Post(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member Post : Java.Lang.IRunnable -&gt; bool&#xA;override this.Post : Java.Lang.IRunnable -&gt; bool" Usage="view.Post action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("post", "(Ljava/lang/Runnable;)Z", "GetPost_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("post", "(Ljava/lang/Runnable;)Z", "GetPost_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <summary>Causes the Runnable to be added to the message queue.</summary>
        <returns>Returns true if the Runnable was successfully placed in to the
                    message queue.  Returns false on failure, usually because the
                    looper processing the message queue is exiting.</returns>
        <remarks>
          <para>Causes the Runnable to be added to the message queue.
            The runnable will be run on the user interface thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#post(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.View.post(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="VB.NET" Value="Public Function Post (action As Action) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(Action ^ action);" />
      <MemberSignature Language="C#" Value="public bool Post (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.Post(System.Action)" />
      <MemberSignature Language="F#" Value="member this.Post : Action -&gt; bool" Usage="view.Post action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostDelayed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PostDelayed (action As IRunnable, delayMillis As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PostDelayed(Java::Lang::IRunnable ^ action, long delayMillis);" />
      <MemberSignature Language="C#" Value="public virtual bool PostDelayed (Java.Lang.IRunnable? action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PostDelayed(class Java.Lang.IRunnable action, int64 delayMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostDelayed(Java.Lang.IRunnable,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PostDelayed : Java.Lang.IRunnable * int64 -&gt; bool&#xA;override this.PostDelayed : Java.Lang.IRunnable * int64 -&gt; bool" Usage="view.PostDelayed (action, delayMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postDelayed", "(Ljava/lang/Runnable;J)Z", "GetPostDelayed_Ljava_lang_Runnable_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postDelayed", "(Ljava/lang/Runnable;J)Z", "GetPostDelayed_Ljava_lang_Runnable_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <param name="delayMillis">The delay (in milliseconds) until the Runnable
                   will be executed.</param>
        <summary>Causes the Runnable to be added to the message queue, to be run
            after the specified amount of time elapses.</summary>
        <returns>true if the Runnable was successfully placed in to the
                    message queue.  Returns false on failure, usually because the
                    looper processing the message queue is exiting.  Note that a
                    result of true does not mean the Runnable will be processed --
                    if the looper is quit before the delivery time of the message
                    occurs then the message will be dropped.</returns>
        <remarks>
          <para>Causes the Runnable to be added to the message queue, to be run
            after the specified amount of time elapses.
            The runnable will be run on the user interface thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postDelayed(java.lang.Runnable,%20long)" title="Reference documentation">Java documentation for <code>android.view.View.postDelayed(java.lang.Runnable, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Post(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="PostDelayed">
      <MemberSignature Language="VB.NET" Value="Public Function PostDelayed (action As Action, delayMillis As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool PostDelayed(Action ^ action, long delayMillis);" />
      <MemberSignature Language="C#" Value="public bool PostDelayed (Action action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool PostDelayed(class System.Action action, int64 delayMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostDelayed(System.Action,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.PostDelayed : Action * int64 -&gt; bool" Usage="view.PostDelayed (action, delayMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="delayMillis">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostInvalidate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidate();" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidate" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidate : unit -&gt; unit&#xA;override this.PostInvalidate : unit -&gt; unit" Usage="view.PostInvalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidate", "()V", "GetPostInvalidateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidate", "()V", "GetPostInvalidateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cause an invalidate to happen on a subsequent cycle through the event loop.</summary>
        <remarks>
          <para>Cause an invalidate to happen on a subsequent cycle through the event loop.
            Use this to invalidate the View from a non-UI thread.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidate()" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate" />
        <altmember cref="M:Android.Views.View.PostInvalidateDelayed(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidate (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidate(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidate (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidate(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidate(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidate : int * int * int * int -&gt; unit&#xA;override this.PostInvalidate : int * int * int * int -&gt; unit" Usage="view.PostInvalidate (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidate", "(IIII)V", "GetPostInvalidate_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidate", "(IIII)V", "GetPostInvalidate_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>Cause an invalidate of the specified area to happen on a subsequent cycle
            through the event loop.</summary>
        <remarks>
          <para>Cause an invalidate of the specified area to happen on a subsequent cycle
            through the event loop. Use this to invalidate the View from a non-UI thread.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidate(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidate(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
        <altmember cref="M:Android.Views.View.PostInvalidateDelayed(System.Int64, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateDelayed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidateDelayed (delayMilliseconds As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidateDelayed(long delayMilliseconds);" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateDelayed (long delayMilliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateDelayed(int64 delayMilliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidateDelayed(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidateDelayed : int64 -&gt; unit&#xA;override this.PostInvalidateDelayed : int64 -&gt; unit" Usage="view.PostInvalidateDelayed delayMilliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidateDelayed", "(J)V", "GetPostInvalidateDelayed_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidateDelayed", "(J)V", "GetPostInvalidateDelayed_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayMilliseconds" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="delayMilliseconds">the duration in milliseconds to delay the
                    invalidation by</param>
        <summary>Cause an invalidate to happen on a subsequent cycle through the event
            loop.</summary>
        <remarks>
          <para>Cause an invalidate to happen on a subsequent cycle through the event
            loop. Waits for the specified amount of time.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidateDelayed(long)" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidateDelayed(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate" />
        <altmember cref="M:Android.Views.View.PostInvalidate" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateDelayed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidateDelayed (delayMilliseconds As Long, left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidateDelayed(long delayMilliseconds, int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateDelayed (long delayMilliseconds, int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateDelayed(int64 delayMilliseconds, int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidateDelayed(System.Int64,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidateDelayed : int64 * int * int * int * int -&gt; unit&#xA;override this.PostInvalidateDelayed : int64 * int * int * int * int -&gt; unit" Usage="view.PostInvalidateDelayed (delayMilliseconds, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidateDelayed", "(JIIII)V", "GetPostInvalidateDelayed_JIIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidateDelayed", "(JIIII)V", "GetPostInvalidateDelayed_JIIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayMilliseconds" Type="System.Int64" />
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delayMilliseconds">the duration in milliseconds to delay the
                    invalidation by</param>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>Cause an invalidate of the specified area to happen on a subsequent cycle
            through the event loop.</summary>
        <remarks>
          <para>Cause an invalidate of the specified area to happen on a subsequent cycle
            through the event loop. Waits for the specified amount of time.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidateDelayed(long,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidateDelayed(long, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
        <altmember cref="M:Android.Views.View.PostInvalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidateOnAnimation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidateOnAnimation();" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateOnAnimation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateOnAnimation() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidateOnAnimation" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidateOnAnimation : unit -&gt; unit&#xA;override this.PostInvalidateOnAnimation : unit -&gt; unit" Usage="view.PostInvalidateOnAnimation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidateOnAnimation", "()V", "GetPostInvalidateOnAnimationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidateOnAnimation", "()V", "GetPostInvalidateOnAnimationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cause an invalidate to happen on the next animation time step, typically the
            next display frame.</summary>
        <remarks>
          <para>Cause an invalidate to happen on the next animation time step, typically the
            next display frame.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidateOnAnimation()" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidateOnAnimation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.Invalidate" />
      </Docs>
    </Member>
    <Member MemberName="PostInvalidateOnAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostInvalidateOnAnimation (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostInvalidateOnAnimation(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void PostInvalidateOnAnimation (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostInvalidateOnAnimation(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostInvalidateOnAnimation(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PostInvalidateOnAnimation : int * int * int * int -&gt; unit&#xA;override this.PostInvalidateOnAnimation : int * int * int * int -&gt; unit" Usage="view.PostInvalidateOnAnimation (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postInvalidateOnAnimation", "(IIII)V", "GetPostInvalidateOnAnimation_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postInvalidateOnAnimation", "(IIII)V", "GetPostInvalidateOnAnimation_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">The left coordinate of the rectangle to invalidate.</param>
        <param name="top">The top coordinate of the rectangle to invalidate.</param>
        <param name="right">The right coordinate of the rectangle to invalidate.</param>
        <param name="bottom">The bottom coordinate of the rectangle to invalidate.</param>
        <summary>Cause an invalidate of the specified area to happen on the next animation
            time step, typically the next display frame.</summary>
        <remarks>
          <para>Cause an invalidate of the specified area to happen on the next animation
            time step, typically the next display frame.</para>
          <para>This method can be invoked from outside of the UI thread
            only when this View is attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postInvalidateOnAnimation(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.postInvalidateOnAnimation(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.Invalidate(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.Invalidate(Android.Graphics.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostOnAnimation (action As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostOnAnimation(Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public virtual void PostOnAnimation (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostOnAnimation(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostOnAnimation(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member PostOnAnimation : Java.Lang.IRunnable -&gt; unit&#xA;override this.PostOnAnimation : Java.Lang.IRunnable -&gt; unit" Usage="view.PostOnAnimation action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postOnAnimation", "(Ljava/lang/Runnable;)V", "GetPostOnAnimation_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postOnAnimation", "(Ljava/lang/Runnable;)V", "GetPostOnAnimation_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <summary>Causes the Runnable to execute on the next animation time step.</summary>
        <remarks>
          <para>Causes the Runnable to execute on the next animation time step.
            The runnable will be run on the user interface thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postOnAnimation(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.View.postOnAnimation(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="PostOnAnimationDelayed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PostOnAnimationDelayed (action As IRunnable, delayMillis As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PostOnAnimationDelayed(Java::Lang::IRunnable ^ action, long delayMillis);" />
      <MemberSignature Language="C#" Value="public virtual void PostOnAnimationDelayed (Java.Lang.IRunnable? action, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostOnAnimationDelayed(class Java.Lang.IRunnable action, int64 delayMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PostOnAnimationDelayed : Java.Lang.IRunnable * int64 -&gt; unit&#xA;override this.PostOnAnimationDelayed : Java.Lang.IRunnable * int64 -&gt; unit" Usage="view.PostOnAnimationDelayed (action, delayMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postOnAnimationDelayed", "(Ljava/lang/Runnable;J)V", "GetPostOnAnimationDelayed_Ljava_lang_Runnable_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postOnAnimationDelayed", "(Ljava/lang/Runnable;J)V", "GetPostOnAnimationDelayed_Ljava_lang_Runnable_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable that will be executed.</param>
        <param name="delayMillis">The delay (in milliseconds) until the Runnable
                   will be executed.</param>
        <summary>Causes the Runnable to execute on the next animation time step,
            after the specified amount of time elapses.</summary>
        <remarks>
          <para>Causes the Runnable to execute on the next animation time step,
            after the specified amount of time elapses.
            The runnable will be run on the user interface thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#postOnAnimationDelayed(java.lang.Runnable,%20long)" title="Reference documentation">Java documentation for <code>android.view.View.postOnAnimationDelayed(java.lang.Runnable, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.PostOnAnimation(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      </Docs>
    </Member>
    <Member MemberName="PreferKeepClear">
      <MemberSignature Language="VB.NET" Value="Public Property PreferKeepClear As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreferKeepClear { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool PreferKeepClear { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferKeepClear" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PreferKeepClear" />
      <MemberSignature Language="F#" Value="member this.PreferKeepClear : bool with get, set" Usage="Android.Views.View.PreferKeepClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPreferKeepClear", "()Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPreferKeepClear", "()Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPreferKeepClear", "(Z)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPreferKeepClear", "(Z)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the preference for this view to be kept clear. -or- Set a preference to keep the bounds of this view clear from floating windows above this
            view's window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the preference for this view to be kept clear. This is set either by
            <c>#setPreferKeepClear</c> or via the attribute android.R.styleable#View_preferKeepClear.</para>
          <para>If this is <c>true</c>, the system will ignore the Rects set by
            <c>#setPreferKeepClearRects</c> and try to keep the whole view clear.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isPreferKeepClear()" title="Reference documentation">Java documentation for <code>android.view.View.isPreferKeepClear()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set a preference to keep the bounds of this view clear from floating windows above this
            view's window. This informs the system that the view is considered a vital area for the
            user and that ideally it should not be covered. Setting this is only appropriate for UI
            where the user would likely take action to uncover it.</para>
          <para>The system will try to respect this preference, but when not possible will ignore it.</para>
          <para>Note: This is independent from <c>#setPreferKeepClearRects</c>. If both are set, both will
            be taken into account.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPreferKeepClear(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setPreferKeepClear(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferKeepClearRects">
      <MemberSignature Language="VB.NET" Value="Public Property PreferKeepClearRects As IList(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ PreferKeepClearRects { System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; PreferKeepClearRects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Graphics.Rect&gt; PreferKeepClearRects" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PreferKeepClearRects" />
      <MemberSignature Language="F#" Value="member this.PreferKeepClearRects : System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; with get, set" Usage="Android.Views.View.PreferKeepClearRects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferKeepClearRects", "()Ljava/util/List;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferKeepClearRects", "()Ljava/util/List;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPreferKeepClearRects", "(Ljava/util/List;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPreferKeepClearRects", "(Ljava/util/List;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rects">A list of rects in this view's local coordinate system</param>
        <summary>Set a preference to keep the provided rects clear from floating windows above this
            view's window.</summary>
        <value>the list of rects, set by <c>#setPreferKeepClearRects</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getPreferKeepClearRects()" title="Reference documentation">Java documentation for <code>android.view.View.getPreferKeepClearRects()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set a preference to keep the provided rects clear from floating windows above this
            view's window. This informs the system that these rects are considered vital areas for the
            user and that ideally they should not be covered. Setting this is only appropriate for UI
            where the user would likely take action to uncover it.</para>
          <para>The system will try to respect this preference, but when not possible will ignore it.</para>
          <para>Note: This is independent from <c>#setPreferKeepClear</c>. If both are set, both will be
            taken into account.</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPreferKeepClearRects(java.util.List%3Candroid.graphics.Rect%3E)" title="Reference documentation">Java documentation for <code>android.view.View.setPreferKeepClearRects(java.util.List&lt;android.graphics.Rect&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pressed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Pressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Pressed { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Pressed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Pressed" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Pressed" />
      <MemberSignature Language="F#" Value="member this.Pressed : bool with get, set" Usage="Android.Views.View.Pressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPressed", "()Z", "GetIsPressedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPressed", "()Z", "GetIsPressedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPressed", "(Z)V", "GetSetPressed_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPressed", "(Z)V", "GetSetPressed_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="pressed">Pass true to set the View's internal state to "pressed", or false to reverts
                   the View's internal state from a previously set "pressed" state.</param>
        <summary>Indicates whether the view is currently in pressed state. -or- Sets the pressed state for this view.</summary>
        <value>true if the view is currently pressed, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether the view is currently in pressed state. Unless
            <c>#setPressed(boolean)</c> is explicitly called, only clickable views can enter
            the pressed state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isPressed()" title="Reference documentation">Java documentation for <code>android.view.View.isPressed()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the pressed state for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPressed(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setPressed(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Pressed" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledFocusedSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledFocusedSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledFocusedSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledFocusedSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled, focused and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_FOCUSED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledFocusedSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledFocusedSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledFocusedSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused, selected and its window
            has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled, focused, selected and its window
            has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and focused.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled and focused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledFocusedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledFocusedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledFocusedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledFocusedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledFocusedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledFocusedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, focused and its window has the
            focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled, focused and its window has the
            focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_FOCUSED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled, selected and its window has the
            focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled, selected and its window has the
            focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed and enabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedEnabledWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedEnabledWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedEnabledWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedEnabledWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedEnabledWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedEnabledWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedEnabledWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedEnabledWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, enabled and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, enabled and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_ENABLED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.EnabledStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedFocusedSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedFocusedSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedFocusedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedFocusedSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedFocusedSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedFocusedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, focused and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_FOCUSED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_FOCUSED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedFocusedSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedFocusedSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedFocusedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedFocusedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedFocusedSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedFocusedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, focused, selected and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_FOCUSED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and focused.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed and focused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedFocusedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedFocusedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedFocusedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedFocusedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedFocusedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedFocusedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedFocusedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedFocusedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, focused and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, focused and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_FOCUSED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.FocusedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedSelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedSelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedSelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedSelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedSelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedSelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedSelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedSelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed and selected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedSelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedSelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedSelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedSelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedSelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedSelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedSelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed, selected and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed, selected and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="PressedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="PressedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property PressedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ PressedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? PressedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; PressedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.PressedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.PressedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.PressedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRESSED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRESSED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is pressed and its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is pressed and its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#PRESSED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.PRESSED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.PressedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="RefreshDrawableState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RefreshDrawableState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RefreshDrawableState();" />
      <MemberSignature Language="C#" Value="public virtual void RefreshDrawableState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RefreshDrawableState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RefreshDrawableState" />
      <MemberSignature Language="F#" Value="abstract member RefreshDrawableState : unit -&gt; unit&#xA;override this.RefreshDrawableState : unit -&gt; unit" Usage="view.RefreshDrawableState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("refreshDrawableState", "()V", "GetRefreshDrawableStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("refreshDrawableState", "()V", "GetRefreshDrawableStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to force a view to update its drawable state.</summary>
        <remarks>
          <para>Call this to force a view to update its drawable state. This will cause
            drawableStateChanged to be called on this view. Views that are interested
            in the new state should call getDrawableState.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#refreshDrawableState()" title="Reference documentation">Java documentation for <code>android.view.View.refreshDrawableState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="ReleasePointerCapture">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleasePointerCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleasePointerCapture();" />
      <MemberSignature Language="C#" Value="public virtual void ReleasePointerCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleasePointerCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ReleasePointerCapture" />
      <MemberSignature Language="F#" Value="abstract member ReleasePointerCapture : unit -&gt; unit&#xA;override this.ReleasePointerCapture : unit -&gt; unit" Usage="view.ReleasePointerCapture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releasePointerCapture", "()V", "GetReleasePointerCaptureHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releasePointerCapture", "()V", "GetReleasePointerCaptureHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the pointer capture.</summary>
        <remarks>
          <para>Releases the pointer capture.</para>
          <para>If the window does not have pointer capture, this call will do nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#releasePointerCapture()" title="Reference documentation">Java documentation for <code>android.view.View.releasePointerCapture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCallbacks">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveCallbacks (action As IRunnable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoveCallbacks(Java::Lang::IRunnable ^ action);" />
      <MemberSignature Language="C#" Value="public virtual bool RemoveCallbacks (Java.Lang.IRunnable? action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveCallbacks(class Java.Lang.IRunnable action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RemoveCallbacks(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member RemoveCallbacks : Java.Lang.IRunnable -&gt; bool&#xA;override this.RemoveCallbacks : Java.Lang.IRunnable -&gt; bool" Usage="view.RemoveCallbacks action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeCallbacks", "(Ljava/lang/Runnable;)Z", "GetRemoveCallbacks_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeCallbacks", "(Ljava/lang/Runnable;)Z", "GetRemoveCallbacks_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="action">The Runnable to remove from the message handling queue</param>
        <summary>Removes the specified Runnable from the message queue.</summary>
        <returns>true if this view could ask the Handler to remove the Runnable,
                    false otherwise. When the returned value is true, the Runnable
                    may or may not have been actually removed from the message queue
                    (for instance, if the Runnable was not in the queue already.)</returns>
        <remarks>
          <para>Removes the specified Runnable from the message queue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#removeCallbacks(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.View.removeCallbacks(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.Post(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.PostDelayed(Java.Lang.IRunnable, System.Int64)" />
        <altmember cref="M:Android.Views.View.PostOnAnimation(Java.Lang.IRunnable)" />
        <altmember cref="M:Android.Views.View.PostOnAnimationDelayed(Java.Lang.IRunnable, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCallbacks">
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCallbacks (action As Action) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveCallbacks(Action ^ action);" />
      <MemberSignature Language="C#" Value="public bool RemoveCallbacks (Action action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveCallbacks(class System.Action action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RemoveCallbacks(System.Action)" />
      <MemberSignature Language="F#" Value="member this.RemoveCallbacks : Action -&gt; bool" Usage="view.RemoveCallbacks action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnAttachStateChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnAttachStateChangeListener (listener As View.IOnAttachStateChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnAttachStateChangeListener(Android::Views::View::IOnAttachStateChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnAttachStateChangeListener (Android.Views.View.IOnAttachStateChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnAttachStateChangeListener(class Android.Views.View/IOnAttachStateChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RemoveOnAttachStateChangeListener(Android.Views.View.IOnAttachStateChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnAttachStateChangeListener : Android.Views.View.IOnAttachStateChangeListener -&gt; unit&#xA;override this.RemoveOnAttachStateChangeListener : Android.Views.View.IOnAttachStateChangeListener -&gt; unit" Usage="view.RemoveOnAttachStateChangeListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetRemoveOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnAttachStateChangeListener", "(Landroid/view/View$OnAttachStateChangeListener;)V", "GetRemoveOnAttachStateChangeListener_Landroid_view_View_OnAttachStateChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnAttachStateChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to remove</param>
        <summary>Remove a listener for attach state changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#removeOnAttachStateChangeListener(android.view.OnAttachStateChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.removeOnAttachStateChangeListener(android.view.OnAttachStateChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.AddOnAttachStateChangeListener(.IOnAttachStateChangeListener)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnLayoutChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnLayoutChangeListener (listener As View.IOnLayoutChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnLayoutChangeListener(Android::Views::View::IOnLayoutChangeListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnLayoutChangeListener (Android.Views.View.IOnLayoutChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnLayoutChangeListener(class Android.Views.View/IOnLayoutChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RemoveOnLayoutChangeListener(Android.Views.View.IOnLayoutChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnLayoutChangeListener : Android.Views.View.IOnLayoutChangeListener -&gt; unit&#xA;override this.RemoveOnLayoutChangeListener : Android.Views.View.IOnLayoutChangeListener -&gt; unit" Usage="view.RemoveOnLayoutChangeListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetRemoveOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnLayoutChangeListener", "(Landroid/view/View$OnLayoutChangeListener;)V", "GetRemoveOnLayoutChangeListener_Landroid_view_View_OnLayoutChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnLayoutChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener for layout bounds change.</param>
        <summary>Remove a listener for layout changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#removeOnLayoutChangeListener(android.view.OnLayoutChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.removeOnLayoutChangeListener(android.view.OnLayoutChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnUnhandledKeyEventListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnUnhandledKeyEventListener (listener As View.IOnUnhandledKeyEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnUnhandledKeyEventListener(Android::Views::View::IOnUnhandledKeyEventListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnUnhandledKeyEventListener (Android.Views.View.IOnUnhandledKeyEventListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnUnhandledKeyEventListener(class Android.Views.View/IOnUnhandledKeyEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RemoveOnUnhandledKeyEventListener(Android.Views.View.IOnUnhandledKeyEventListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnUnhandledKeyEventListener : Android.Views.View.IOnUnhandledKeyEventListener -&gt; unit&#xA;override this.RemoveOnUnhandledKeyEventListener : Android.Views.View.IOnUnhandledKeyEventListener -&gt; unit" Usage="view.RemoveOnUnhandledKeyEventListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnUnhandledKeyEventListener", "(Landroid/view/View$OnUnhandledKeyEventListener;)V", "GetRemoveOnUnhandledKeyEventListener_Landroid_view_View_OnUnhandledKeyEventListener_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnUnhandledKeyEventListener", "(Landroid/view/View$OnUnhandledKeyEventListener;)V", "GetRemoveOnUnhandledKeyEventListener_Landroid_view_View_OnUnhandledKeyEventListener_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnUnhandledKeyEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">a receiver of unhandled <c>KeyEvent</c>s.</param>
        <summary>Removes a listener which will receive unhandled <c>KeyEvent</c>s.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#removeOnUnhandledKeyEventListener(android.view.OnUnhandledKeyEventListener)" title="Reference documentation">Java documentation for <code>android.view.View.removeOnUnhandledKeyEventListener(android.view.OnUnhandledKeyEventListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestApplyInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestApplyInsets ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestApplyInsets();" />
      <MemberSignature Language="C#" Value="public virtual void RequestApplyInsets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestApplyInsets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestApplyInsets" />
      <MemberSignature Language="F#" Value="abstract member RequestApplyInsets : unit -&gt; unit&#xA;override this.RequestApplyInsets : unit -&gt; unit" Usage="view.RequestApplyInsets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestApplyInsets", "()V", "GetRequestApplyInsetsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestApplyInsets", "()V", "GetRequestApplyInsetsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ask that a new dispatch of <c>#onApplyWindowInsets(WindowInsets)</c> be performed.</summary>
        <remarks>
          <para>Ask that a new dispatch of <c>#onApplyWindowInsets(WindowInsets)</c> be performed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestApplyInsets()" title="Reference documentation">Java documentation for <code>android.view.View.requestApplyInsets()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFitSystemWindows">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestFitSystemWindows ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestFitSystemWindows();" />
      <MemberSignature Language="C#" Value="public virtual void RequestFitSystemWindows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestFitSystemWindows() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestFitSystemWindows" />
      <MemberSignature Language="F#" Value="abstract member RequestFitSystemWindows : unit -&gt; unit&#xA;override this.RequestFitSystemWindows : unit -&gt; unit" Usage="view.RequestFitSystemWindows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFitSystemWindows", "()V", "GetRequestFitSystemWindowsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFitSystemWindows", "()V", "GetRequestFitSystemWindowsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ask that a new dispatch of <c>#fitSystemWindows(Rect)</c> be performed.</summary>
        <remarks>
          <para>Ask that a new dispatch of <c>#fitSystemWindows(Rect)</c> be performed.</para>
          <para>This member is deprecated. Use <c>#requestApplyInsets()</c> for newer platform versions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestFitSystemWindows()" title="Reference documentation">Java documentation for <code>android.view.View.requestFitSystemWindows()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="VB.NET" Value="Public Function RequestFocus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequestFocus();" />
      <MemberSignature Language="C#" Value="public bool RequestFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestFocus" />
      <MemberSignature Language="F#" Value="member this.RequestFocus : unit -&gt; bool" Usage="view.RequestFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFocus", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFocus", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to try to give focus to a specific view or to one of its
            descendants.</summary>
        <returns>Whether this view or one of its descendants actually took focus.</returns>
        <remarks>
          <para>Call this to try to give focus to a specific view or to one of its
            descendants.
            
            A view will not actually take focus if it is not focusable (<c>#isFocusable</c> returns
            false), or if it can't be focused due to other conditions (not focusable in touch mode
            (<c>#isFocusableInTouchMode</c>) while the device is in touch mode, not visible, not
            enabled, or has no size).
            
            See also <c>#focusSearch(int)</c>, which is what you call to say that you
            have focus, and you want your parent to look for the next one.
            
            This is equivalent to calling <c>#requestFocus(int, Rect)</c> with arguments
            <c>#FOCUS_DOWN</c> and <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestFocus()" title="Reference documentation">Java documentation for <code>android.view.View.requestFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="VB.NET" Value="Public Function RequestFocus (direction As FocusSearchDirection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequestFocus(Android::Views::FocusSearchDirection direction);" />
      <MemberSignature Language="C#" Value="public bool RequestFocus (Android.Views.FocusSearchDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocus(valuetype Android.Views.FocusSearchDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection)" />
      <MemberSignature Language="F#" Value="member this.RequestFocus : Android.Views.FocusSearchDirection -&gt; bool" Usage="view.RequestFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFocus", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFocus", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <summary>Call this to try to give focus to a specific view or to one of its
            descendants and give it a hint about what direction focus is heading.</summary>
        <returns>Whether this view or one of its descendants actually took focus.</returns>
        <remarks>
          <para>Call this to try to give focus to a specific view or to one of its
            descendants and give it a hint about what direction focus is heading.
            
            A view will not actually take focus if it is not focusable (<c>#isFocusable</c> returns
            false), or if it is focusable and it is not focusable in touch mode
            (<c>#isFocusableInTouchMode</c>) while the device is in touch mode.
            
            See also <c>#focusSearch(int)</c>, which is what you call to say that you
            have focus, and you want your parent to look for the next one.
            
            This is equivalent to calling <c>#requestFocus(int, Rect)</c> with
            <c>null</c> set for the previously focused rectangle.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestFocus(int)" title="Reference documentation">Java documentation for <code>android.view.View.requestFocus(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestFocus (direction As FocusSearchDirection, previouslyFocusedRect As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RequestFocus(Android::Views::FocusSearchDirection direction, Android::Graphics::Rect ^ previouslyFocusedRect);" />
      <MemberSignature Language="C#" Value="public virtual bool RequestFocus (Android.Views.FocusSearchDirection direction, Android.Graphics.Rect? previouslyFocusedRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestFocus(valuetype Android.Views.FocusSearchDirection direction, class Android.Graphics.Rect previouslyFocusedRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestFocus(Android.Views.FocusSearchDirection,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member RequestFocus : Android.Views.FocusSearchDirection * Android.Graphics.Rect -&gt; bool&#xA;override this.RequestFocus : Android.Views.FocusSearchDirection * Android.Graphics.Rect -&gt; bool" Usage="view.RequestFocus (direction, previouslyFocusedRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFocus", "(ILandroid/graphics/Rect;)Z", "GetRequestFocus_ILandroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFocus", "(ILandroid/graphics/Rect;)Z", "GetRequestFocus_ILandroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Views.FocusSearchDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="previouslyFocusedRect" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="direction">One of FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, and FOCUS_RIGHT</param>
        <param name="previouslyFocusedRect">The rectangle (in this View's coordinate system)
                   to give a finer grained hint about where focus is coming from.  May be null
                   if there is no hint.</param>
        <summary>Call this to try to give focus to a specific view or to one of its descendants
            and give it hints about the direction and a specific rectangle that the focus
            is coming from.</summary>
        <returns>Whether this view or one of its descendants actually took focus.</returns>
        <remarks>
          <para>Call this to try to give focus to a specific view or to one of its descendants
            and give it hints about the direction and a specific rectangle that the focus
            is coming from.  The rectangle can help give larger views a finer grained hint
            about where focus is coming from, and therefore, where to show selection, or
            forward focus change internally.
            
            A view will not actually take focus if it is not focusable (<c>#isFocusable</c> returns
            false), or if it is focusable and it is not focusable in touch mode
            (<c>#isFocusableInTouchMode</c>) while the device is in touch mode.
            
            A View will not take focus if it is not visible.
            
            A View will not take focus if one of its parents has
            <c>android.view.ViewGroup#getDescendantFocusability()</c> equal to
            <c>ViewGroup#FOCUS_BLOCK_DESCENDANTS</c>.
            
            See also <c>#focusSearch(int)</c>, which is what you call to say that you
            have focus, and you want your parent to look for the next one.
            
            You may wish to override this method if your custom <c>View</c> has an internal
            <c>View</c> that it wishes to forward the request to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestFocus(int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.requestFocus(int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestFocusFromTouch">
      <MemberSignature Language="VB.NET" Value="Public Function RequestFocusFromTouch () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RequestFocusFromTouch();" />
      <MemberSignature Language="C#" Value="public bool RequestFocusFromTouch ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RequestFocusFromTouch() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestFocusFromTouch" />
      <MemberSignature Language="F#" Value="member this.RequestFocusFromTouch : unit -&gt; bool" Usage="view.RequestFocusFromTouch " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFocusFromTouch", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFocusFromTouch", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this to try to give focus to a specific view or to one of its descendants.</summary>
        <returns>Whether this view or one of its descendants actually took focus.</returns>
        <remarks>
          <para>Call this to try to give focus to a specific view or to one of its descendants. This is a
            special variant of <c>#requestFocus() </c> that will allow views that are not focusable in
            touch mode to request focus when they are touched.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestFocusFromTouch()" title="Reference documentation">Java documentation for <code>android.view.View.requestFocusFromTouch()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.IsInTouchMode" />
      </Docs>
    </Member>
    <Member MemberName="RequestLayout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestLayout();" />
      <MemberSignature Language="C#" Value="public virtual void RequestLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestLayout" />
      <MemberSignature Language="F#" Value="abstract member RequestLayout : unit -&gt; unit&#xA;override this.RequestLayout : unit -&gt; unit" Usage="view.RequestLayout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestLayout", "()V", "GetRequestLayoutHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestLayout", "()V", "GetRequestLayoutHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this when something has changed which has invalidated the
            layout of this view.</summary>
        <remarks>
          <para>Call this when something has changed which has invalidated the
            layout of this view. This will schedule a layout pass of the view
            tree. This should not be called while the view hierarchy is currently in a layout
            pass (<c>#isInLayout()</c>. If layout is happening, the request may be honored at the
            end of the current layout pass (and then layout will run again) or after the current
            frame is drawn and the next layout occurs.</para>
          <para>Subclasses which override this method should call the superclass method to
            handle possible request-during-layout errors correctly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestLayout()" title="Reference documentation">Java documentation for <code>android.view.View.requestLayout()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestPointerCapture">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RequestPointerCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RequestPointerCapture();" />
      <MemberSignature Language="C#" Value="public virtual void RequestPointerCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RequestPointerCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestPointerCapture" />
      <MemberSignature Language="F#" Value="abstract member RequestPointerCapture : unit -&gt; unit&#xA;override this.RequestPointerCapture : unit -&gt; unit" Usage="view.RequestPointerCapture " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestPointerCapture", "()V", "GetRequestPointerCaptureHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestPointerCapture", "()V", "GetRequestPointerCaptureHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Requests pointer capture mode.</summary>
        <remarks>
          <para>Requests pointer capture mode.</para>
          <para>When the window has pointer capture, the mouse pointer icon will disappear and will not
            change its position. Enabling pointer capture will change the behavior of input devices in
            the following ways:
            &lt;ul&gt;
                &lt;li&gt;Events from a mouse will be delivered with the source
                <c>InputDevice#SOURCE_MOUSE_RELATIVE</c>, and relative position changes will be
                available through <c>MotionEvent#getX</c> and <c>MotionEvent#getY</c>.&lt;/li&gt;
            
                &lt;li&gt;Events from a touchpad or trackpad will be delivered with the source
                <c>InputDevice#SOURCE_TOUCHPAD</c>, where the absolute position of each of the pointers
                on the touchpad will be available through <c>MotionEvent#getX(int)</c> and
                <c>MotionEvent#getY(int)</c>, and their relative movements are stored in
                <c>MotionEvent#AXIS_RELATIVE_X</c> and <c>MotionEvent#AXIS_RELATIVE_Y</c>.&lt;/li&gt;
            
                &lt;li&gt;Events from other types of devices, such as touchscreens, will not be affected.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>When pointer capture changes, connected mouse and trackpad devices may be reconfigured,
            and their properties (such as their sources or motion ranges) may change. Use an
            <c>android.hardware.input.InputManager.InputDeviceListener</c> to be notified when a device
            changes (which may happen after enabling or disabling pointer capture), and use
            <c>InputDevice#getDevice(int)</c> to get the updated <c>InputDevice</c>.</para>
          <para>Events captured through pointer capture will be dispatched to
            <c>OnCapturedPointerListener#onCapturedPointer(View, MotionEvent)</c> if an
            <c>OnCapturedPointerListener</c> is set, and otherwise to
            <c>#onCapturedPointerEvent(MotionEvent)</c>.</para>
          <para>If the window already has pointer capture, this call does nothing.</para>
          <para>The capture may be released through <c>#releasePointerCapture()</c>, or will be lost
            automatically when the window loses focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestPointerCapture()" title="Reference documentation">Java documentation for <code>android.view.View.requestPointerCapture()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestRectangleOnScreen">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestRectangleOnScreen (rectangle As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RequestRectangleOnScreen(Android::Graphics::Rect ^ rectangle);" />
      <MemberSignature Language="C#" Value="public virtual bool RequestRectangleOnScreen (Android.Graphics.Rect? rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestRectangleOnScreen(class Android.Graphics.Rect rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member RequestRectangleOnScreen : Android.Graphics.Rect -&gt; bool&#xA;override this.RequestRectangleOnScreen : Android.Graphics.Rect -&gt; bool" Usage="view.RequestRectangleOnScreen rectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="rectangle">The rectangle in the View's content coordinate space</param>
        <summary>Request that a rectangle of this view be visible on the screen,
            scrolling if necessary just enough.</summary>
        <returns>Whether any parent scrolled.</returns>
        <remarks>
          <para>Request that a rectangle of this view be visible on the screen,
            scrolling if necessary just enough.</para>
          <para>A View should call this if it maintains some notion of which part
            of its content is interesting.  For example, a text editing view
            should call this when its cursor moves.</para>
          <para>The Rectangle passed into this method should be in the View's content coordinate space.
            It should not be affected by which part of the View is currently visible or its scroll
            position.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestRectangleOnScreen(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.View.requestRectangleOnScreen(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestRectangleOnScreen">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestRectangleOnScreen (rectangle As Rect, immediate As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RequestRectangleOnScreen(Android::Graphics::Rect ^ rectangle, bool immediate);" />
      <MemberSignature Language="C#" Value="public virtual bool RequestRectangleOnScreen (Android.Graphics.Rect? rectangle, bool immediate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestRectangleOnScreen(class Android.Graphics.Rect rectangle, bool immediate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestRectangleOnScreen(Android.Graphics.Rect,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member RequestRectangleOnScreen : Android.Graphics.Rect * bool -&gt; bool&#xA;override this.RequestRectangleOnScreen : Android.Graphics.Rect * bool -&gt; bool" Usage="view.RequestRectangleOnScreen (rectangle, immediate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;Z)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestRectangleOnScreen", "(Landroid/graphics/Rect;Z)Z", "GetRequestRectangleOnScreen_Landroid_graphics_Rect_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="Android.Graphics.Rect" />
        <Parameter Name="immediate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rectangle">The rectangle in the View's content coordinate space</param>
        <param name="immediate">True to forbid animated scrolling, false otherwise</param>
        <summary>Request that a rectangle of this view be visible on the screen,
            scrolling if necessary just enough.</summary>
        <returns>Whether any parent scrolled.</returns>
        <remarks>
          <para>Request that a rectangle of this view be visible on the screen,
            scrolling if necessary just enough.</para>
          <para>A View should call this if it maintains some notion of which part
            of its content is interesting.  For example, a text editing view
            should call this when its cursor moves.</para>
          <para>The Rectangle passed into this method should be in the View's content coordinate space.
            It should not be affected by which part of the View is currently visible or its scroll
            position.</para>
          <para>When <c>immediate</c> is set to true, scrolling will not be
            animated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestRectangleOnScreen(android.graphics.Rect,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.View.requestRectangleOnScreen(android.graphics.Rect, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequestUnbufferedDispatch">
      <MemberSignature Language="VB.NET" Value="Public Sub RequestUnbufferedDispatch (e As MotionEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestUnbufferedDispatch(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="C#" Value="public void RequestUnbufferedDispatch (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestUnbufferedDispatch(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestUnbufferedDispatch(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="member this.RequestUnbufferedDispatch : Android.Views.MotionEvent -&gt; unit" Usage="view.RequestUnbufferedDispatch e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestUnbufferedDispatch", "(Landroid/view/MotionEvent;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestUnbufferedDispatch", "(Landroid/view/MotionEvent;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Request unbuffered dispatch of the given stream of MotionEvents to this View.</summary>
        <remarks>
          <para>Request unbuffered dispatch of the given stream of MotionEvents to this View.
            
            Until this View receives a corresponding <c>MotionEvent#ACTION_UP</c>, ask that the input
            system not batch <c>MotionEvent</c>s but instead deliver them as soon as they're
            available. This method should only be called for touch events.
            
            &lt;p class="note"&gt;This API is not intended for most applications. Buffered dispatch
            provides many of benefits, and just requesting unbuffered dispatch on most MotionEvent
            streams will not improve your input latency. Side effects include: increased latency,
            jittery scrolls and inability to take advantage of system resampling. Talk to your input
            professional to see if <c>#requestUnbufferedDispatch(MotionEvent)</c> is right for
            you.&lt;/p&gt;
            
            To receive unbuffered events for arbitrary input device source classes, use
            <c>#requestUnbufferedDispatch(int)</c>,</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestUnbufferedDispatch(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.View.requestUnbufferedDispatch(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestUnbufferedDispatch">
      <MemberSignature Language="VB.NET" Value="Public Sub RequestUnbufferedDispatch (source As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestUnbufferedDispatch(int source);" />
      <MemberSignature Language="C#" Value="public void RequestUnbufferedDispatch (int source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestUnbufferedDispatch(int32 source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequestUnbufferedDispatch(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequestUnbufferedDispatch : int -&gt; unit" Usage="view.RequestUnbufferedDispatch source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestUnbufferedDispatch", "(I)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestUnbufferedDispatch", "(I)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "SourceClassNone", "SourceClassButton", "SourceClassPointer", "SourceClassTrackball", "SourceClassPosition", "SourceClassJoystick" }, Flag=true, Type="Android.Views.InputDevice")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "SourceClassNone", "SourceClassButton", "SourceClassPointer", "SourceClassTrackball", "SourceClassPosition", "SourceClassJoystick" }, Flag=true, Type="Android.Views.InputDevice")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source">The combined input source class to request unbuffered dispatch for. All
                          events coming from these source classes will not be buffered. Set to
                          <c>InputDevice#SOURCE_CLASS_NONE</c> in order to return to default behaviour.</param>
        <summary>Request unbuffered dispatch of the given event source class to this view.</summary>
        <remarks>
          <para>Request unbuffered dispatch of the given event source class to this view.
            This is similar to <c>View#requestUnbufferedDispatch(MotionEvent)</c>, but does not
            automatically terminate, and allows the specification of arbitrary input source classes.</para>
          <para>Prior to <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, calling this method
            will not result in any behavioral changes when this View is not attached to a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requestUnbufferedDispatch(int)" title="Reference documentation">Java documentation for <code>android.view.View.requestUnbufferedDispatch(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireViewById">
      <MemberSignature Language="VB.NET" Value="Public Function RequireViewById (id As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ RequireViewById(int id);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object RequireViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object RequireViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequireViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequireViewById : int -&gt; Java.Lang.Object" Usage="view.RequireViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds the first descendant view with the given ID, the view itself if the ID matches
            <c>#getId()</c>, or throws an IllegalArgumentException if the ID is invalid or there is no
            matching view in the hierarchy.</summary>
        <returns>a view with given ID</returns>
        <remarks>
          <para>Finds the first descendant view with the given ID, the view itself if the ID matches
            <c>#getId()</c>, or throws an IllegalArgumentException if the ID is invalid or there is no
            matching view in the hierarchy.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#requireViewById(int)" title="Reference documentation">Java documentation for <code>android.view.View.requireViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireViewById&lt;T&gt;">
      <MemberSignature Language="VB.NET" Value="Public Function RequireViewById(Of T As View) (id As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Android::Views::View T RequireViewById(int id);" />
      <MemberSignature Language="C#" Value="public T RequireViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T RequireViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RequireViewById``1(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequireViewById : int -&gt; 'T (requires 'T :&gt; Android.Views.View)" Usage="view.RequireViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPivot">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ResetPivot ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ResetPivot();" />
      <MemberSignature Language="C#" Value="public virtual void ResetPivot ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ResetPivot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ResetPivot" />
      <MemberSignature Language="F#" Value="abstract member ResetPivot : unit -&gt; unit&#xA;override this.ResetPivot : unit -&gt; unit" Usage="view.ResetPivot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resetPivot", "()V", "GetResetPivotHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resetPivot", "()V", "GetResetPivotHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears any pivot previously set by a call to  <c>#setPivotX(float)</c> or
            <c>#setPivotY(float)</c>.</summary>
        <remarks>
          <para>Clears any pivot previously set by a call to  <c>#setPivotX(float)</c> or
            <c>#setPivotY(float)</c>. After calling this <c>#isPivotSet()</c> will be false
            and the pivot used for rotation will return to default of being centered on the view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#resetPivot()" title="Reference documentation">Java documentation for <code>android.view.View.resetPivot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveSize">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolveSize (size As Integer, measureSpec As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ResolveSize(int size, int measureSpec);" />
      <MemberSignature Language="C#" Value="public static int ResolveSize (int size, int measureSpec);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveSize(int32 size, int32 measureSpec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ResolveSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ResolveSize : int * int -&gt; int" Usage="Android.Views.View.ResolveSize (size, measureSpec)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveSize", "(II)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveSize", "(II)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">To be added.</param>
        <param name="measureSpec">To be added.</param>
        <summary>Version of <c>#resolveSizeAndState(int, int, int)</c>
            returning only the <c>#MEASURED_SIZE_MASK</c> bits of the result.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Version of <c>#resolveSizeAndState(int, int, int)</c>
            returning only the <c>#MEASURED_SIZE_MASK</c> bits of the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#resolveSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.resolveSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveSizeAndState">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ResolveSizeAndState (size As Integer, measureSpec As Integer, childMeasuredState As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int ResolveSizeAndState(int size, int measureSpec, int childMeasuredState);" />
      <MemberSignature Language="C#" Value="public static int ResolveSizeAndState (int size, int measureSpec, int childMeasuredState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 ResolveSizeAndState(int32 size, int32 measureSpec, int32 childMeasuredState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ResolveSizeAndState(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ResolveSizeAndState : int * int * int -&gt; int" Usage="Android.Views.View.ResolveSizeAndState (size, measureSpec, childMeasuredState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveSizeAndState", "(III)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveSizeAndState", "(III)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="measureSpec" Type="System.Int32" />
        <Parameter Name="childMeasuredState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">How big the view wants to be.</param>
        <param name="measureSpec">Constraints imposed by the parent.</param>
        <param name="childMeasuredState">Size information bit mask for the view's
                                      children.</param>
        <summary>Utility to reconcile a desired size and state, with constraints imposed
            by a MeasureSpec.</summary>
        <returns>Size information bit mask as defined by
                    <c>#MEASURED_SIZE_MASK</c> and
                    <c>#MEASURED_STATE_TOO_SMALL</c>.</returns>
        <remarks>
          <para>Utility to reconcile a desired size and state, with constraints imposed
            by a MeasureSpec. Will take the desired size, unless a different size
            is imposed by the constraints. The returned value is a compound integer,
            with the resolved size in the <c>#MEASURED_SIZE_MASK</c> bits and
            optionally the bit <c>#MEASURED_STATE_TOO_SMALL</c> set if the
            resulting size is smaller than the size the view wants to be.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#resolveSizeAndState(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.resolveSizeAndState(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resources As Resources" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::Res::Resources ^ Resources { Android::Content::Res::Resources ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Res.Resources? Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.Resources Resources" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Resources" />
      <MemberSignature Language="F#" Value="member this.Resources : Android.Content.Res.Resources" Usage="Android.Views.View.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResources", "()Landroid/content/res/Resources;", "GetGetResourcesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the resources associated with this view.</summary>
        <value>Resources object.</value>
        <remarks>
          <para>Returns the resources associated with this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getResources()" title="Reference documentation">Java documentation for <code>android.view.View.getResources()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestoreDefaultFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RestoreDefaultFocus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RestoreDefaultFocus();" />
      <MemberSignature Language="C#" Value="public virtual bool RestoreDefaultFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RestoreDefaultFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RestoreDefaultFocus" />
      <MemberSignature Language="F#" Value="abstract member RestoreDefaultFocus : unit -&gt; bool&#xA;override this.RestoreDefaultFocus : unit -&gt; bool" Usage="view.RestoreDefaultFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restoreDefaultFocus", "()Z", "GetRestoreDefaultFocusHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restoreDefaultFocus", "()Z", "GetRestoreDefaultFocusHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gives focus to the default-focus view in the view hierarchy that has this view as a root.</summary>
        <returns>Whether this view or one of its descendants actually took focus</returns>
        <remarks>
          <para>Gives focus to the default-focus view in the view hierarchy that has this view as a root.
            If the default-focus view cannot be found, falls back to calling <c>#requestFocus(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#restoreDefaultFocus()" title="Reference documentation">Java documentation for <code>android.view.View.restoreDefaultFocus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreHierarchyState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RestoreHierarchyState (container As SparseArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RestoreHierarchyState(Android::Util::SparseArray ^ container);" />
      <MemberSignature Language="C#" Value="public virtual void RestoreHierarchyState (Android.Util.SparseArray? container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreHierarchyState(class Android.Util.SparseArray container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.RestoreHierarchyState(Android.Util.SparseArray)" />
      <MemberSignature Language="F#" Value="abstract member RestoreHierarchyState : Android.Util.SparseArray -&gt; unit&#xA;override this.RestoreHierarchyState : Android.Util.SparseArray -&gt; unit" Usage="view.RestoreHierarchyState container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restoreHierarchyState", "(Landroid/util/SparseArray;)V", "GetRestoreHierarchyState_Landroid_util_SparseArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restoreHierarchyState", "(Landroid/util/SparseArray;)V", "GetRestoreHierarchyState_Landroid_util_SparseArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">The SparseArray which holds previously frozen states.</param>
        <summary>Restore this view hierarchy's frozen state from the given container.</summary>
        <remarks>
          <para>Restore this view hierarchy's frozen state from the given container.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#restoreHierarchyState(android.util.SparseArray%3Candroid.os.Parcelable%3E)" title="Reference documentation">Java documentation for <code>android.view.View.restoreHierarchyState(android.util.SparseArray&lt;android.os.Parcelable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevealOnFocusHint">
      <MemberSignature Language="VB.NET" Value="Public Property RevealOnFocusHint As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RevealOnFocusHint { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public bool RevealOnFocusHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RevealOnFocusHint" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RevealOnFocusHint" />
      <MemberSignature Language="F#" Value="member this.RevealOnFocusHint : bool with get, set" Usage="Android.Views.View.RevealOnFocusHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android25.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android25.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRevealOnFocusHint", "()Z", "", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRevealOnFocusHint", "()Z", "", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRevealOnFocusHint", "(Z)V", "", ApiSince=25)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRevealOnFocusHint", "(Z)V", "", ApiSince=25)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android25.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android25.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="revealOnFocus">true to request reveal on focus in ancestors, false otherwise</param>
        <summary>Returns this view's preference for reveal behavior when it gains focus. -or- Sets this view's preference for reveal behavior when it gains focus.</summary>
        <value>true if this view would prefer to become fully visible when it gains focus,
                    false if it would prefer not to disrupt scroll positioning</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns this view's preference for reveal behavior when it gains focus.</para>
          <para>When this method returns true for a child view requesting focus, ancestor
            views responding to a focus change in <c>ViewParent#requestChildFocus(View, View)</c>
            should make a best effort to make the newly focused child fully visible to the user.
            When it returns false, ancestor views should preferably not disrupt scroll positioning or
            other properties affecting visibility to the user as part of the focus change.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRevealOnFocusHint()" title="Reference documentation">Java documentation for <code>android.view.View.getRevealOnFocusHint()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets this view's preference for reveal behavior when it gains focus.</para>
          <para>When set to true, this is a signal to ancestor views in the hierarchy that
            this view would prefer to be brought fully into view when it gains focus.
            For example, a text field that a user is meant to type into. Other views such
            as scrolling containers may prefer to opt-out of this behavior.</para>
          <para>The default value for views is true, though subclasses may change this
            based on their preferred behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRevealOnFocusHint(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setRevealOnFocusHint(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="VB.NET" Value="Public Property Right As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Right { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Right { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Right" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Right" />
      <MemberSignature Language="F#" Value="member this.Right : int with get, set" Usage="Android.Views.View.Right" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRight", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRight", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRight", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRight", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="right">The right of this view, in pixels.</param>
        <summary>Right position of this view relative to its parent. -or- Sets the right position of this view relative to its parent.</summary>
        <value>The right edge of this view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Right position of this view relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRight()" title="Reference documentation">Java documentation for <code>android.view.View.getRight()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the right position of this view relative to its parent. This method is meant to be called
            by the layout system and should not generally be called otherwise, because the property
            may be changed at any time by the layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRight(int)" title="Reference documentation">Java documentation for <code>android.view.View.setRight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RightFadingEdgeStrength">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RightFadingEdgeStrength As Single" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property float RightFadingEdgeStrength { float get(); };" />
      <MemberSignature Language="C#" Value="protected virtual float RightFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RightFadingEdgeStrength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RightFadingEdgeStrength" />
      <MemberSignature Language="F#" Value="member this.RightFadingEdgeStrength : single" Usage="Android.Views.View.RightFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRightFadingEdgeStrength", "()F", "GetGetRightFadingEdgeStrengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRightFadingEdgeStrength", "()F", "GetGetRightFadingEdgeStrengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the right faded edge.</summary>
        <value>the intensity of the right fade as a float between 0.0f and 1.0f</value>
        <remarks>
          <para>Returns the strength, or intensity, of the right faded edge. The strength is
            a value between 0.0 (no fade) and 1.0 (full fade). The default implementation
            returns 0.0 or 1.0 but no value in between.</para>
          <para>Subclasses should override this method to provide a smoother fade transition
            when scrolling occurs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRightFadingEdgeStrength()" title="Reference documentation">Java documentation for <code>android.view.View.getRightFadingEdgeStrength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RightPaddingOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property RightPaddingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int RightPaddingOffset { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int RightPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RightPaddingOffset" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RightPaddingOffset" />
      <MemberSignature Language="F#" Value="member this.RightPaddingOffset : int" Usage="Android.Views.View.RightPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRightPaddingOffset", "()I", "GetGetRightPaddingOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRightPaddingOffset", "()I", "GetGetRightPaddingOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the right fading region.</summary>
        <value>The right padding offset in pixels.</value>
        <remarks>
          <para>Amount by which to extend the right fading region. Called only when
            <c>#isPaddingOffsetRequired()</c> returns true.</para>
          <para>Added in CURRENT.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRightPaddingOffset()" title="Reference documentation">Java documentation for <code>android.view.View.getRightPaddingOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="RootSurfaceControl">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootSurfaceControl As IAttachedSurfaceControl" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::IAttachedSurfaceControl ^ RootSurfaceControl { Android::Views::IAttachedSurfaceControl ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.IAttachedSurfaceControl? RootSurfaceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IAttachedSurfaceControl RootSurfaceControl" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RootSurfaceControl" />
      <MemberSignature Language="F#" Value="member this.RootSurfaceControl : Android.Views.IAttachedSurfaceControl" Usage="Android.Views.View.RootSurfaceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRootSurfaceControl", "()Landroid/view/AttachedSurfaceControl;", "GetGetRootSurfaceControlHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRootSurfaceControl", "()Landroid/view/AttachedSurfaceControl;", "GetGetRootSurfaceControlHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IAttachedSurfaceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The AttachedSurfaceControl itself is not a View, it is just the interface to the
            windowing-system object that contains the entire view hierarchy.</summary>
        <value>The <c>android.view.AttachedSurfaceControl</c> interface for this View.
            This will only return a non-null value when called between <c>#onAttachedToWindow</c>
            and <c>#onDetachedFromWindow</c>.</value>
        <remarks>
          <para>The AttachedSurfaceControl itself is not a View, it is just the interface to the
            windowing-system object that contains the entire view hierarchy.
            For the root View of a given hierarchy see <c>#getRootView</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRootSurfaceControl()" title="Reference documentation">Java documentation for <code>android.view.View.getRootSurfaceControl()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootView">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootView As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::View ^ RootView { Android::Views::View ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? RootView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View RootView" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RootView" />
      <MemberSignature Language="F#" Value="member this.RootView : Android.Views.View" Usage="Android.Views.View.RootView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRootView", "()Landroid/view/View;", "GetGetRootViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRootView", "()Landroid/view/View;", "GetGetRootViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Finds the topmost view in the current view hierarchy.</summary>
        <value>the topmost view containing this view</value>
        <remarks>
          <para>Finds the topmost view in the current view hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRootView()" title="Reference documentation">Java documentation for <code>android.view.View.getRootView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RootWindowInsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootWindowInsets As WindowInsets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::WindowInsets ^ RootWindowInsets { Android::Views::WindowInsets ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowInsets? RootWindowInsets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.WindowInsets RootWindowInsets" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RootWindowInsets" />
      <MemberSignature Language="F#" Value="member this.RootWindowInsets : Android.Views.WindowInsets" Usage="Android.Views.View.RootWindowInsets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRootWindowInsets", "()Landroid/view/WindowInsets;", "GetGetRootWindowInsetsHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRootWindowInsets", "()Landroid/view/WindowInsets;", "GetGetRootWindowInsetsHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowInsets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provide original WindowInsets that are dispatched to the view hierarchy.</summary>
        <value>WindowInsets from the top of the view hierarchy or null if View is detached</value>
        <remarks>
          <para>Provide original WindowInsets that are dispatched to the view hierarchy. The insets are
            only available if the view is attached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRootWindowInsets()" title="Reference documentation">Java documentation for <code>android.view.View.getRootWindowInsets()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Rotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float Rotation { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float Rotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Rotation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Rotation" />
      <MemberSignature Language="F#" Value="member this.Rotation : single with get, set" Usage="Android.Views.View.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRotation", "()F", "GetGetRotationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRotation", "()F", "GetGetRotationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRotation", "(F)V", "GetSetRotation_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRotation", "(F)V", "GetSetRotation_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rotation">The degrees of rotation.</param>
        <summary>The degrees that the view is rotated around the pivot point. -or- Sets the degrees that the view is rotated around the pivot point.</summary>
        <value>The degrees of rotation.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The degrees that the view is rotated around the pivot point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRotation()" title="Reference documentation">Java documentation for <code>android.view.View.getRotation()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the degrees that the view is rotated around the pivot point. Increasing values
            result in clockwise rotation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRotation(float)" title="Reference documentation">Java documentation for <code>android.view.View.setRotation(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RotationX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float RotationX { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float RotationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationX" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RotationX" />
      <MemberSignature Language="F#" Value="member this.RotationX : single with get, set" Usage="Android.Views.View.RotationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRotationX", "()F", "GetGetRotationXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRotationX", "()F", "GetGetRotationXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRotationX", "(F)V", "GetSetRotationX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRotationX", "(F)V", "GetSetRotationX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rotationX">The degrees of X rotation.</param>
        <summary>The degrees that the view is rotated around the horizontal axis through the pivot point. -or- Sets the degrees that the view is rotated around the horizontal axis through the pivot point.</summary>
        <value>The degrees of X rotation.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The degrees that the view is rotated around the horizontal axis through the pivot point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRotationX()" title="Reference documentation">Java documentation for <code>android.view.View.getRotationX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the degrees that the view is rotated around the horizontal axis through the pivot point.
            Increasing values result in clockwise rotation from the viewpoint of looking down the
            x axis.
            
            When rotating large views, it is recommended to adjust the camera distance
            accordingly. Refer to <c>#setCameraDistance(float)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRotationX(float)" title="Reference documentation">Java documentation for <code>android.view.View.setRotationX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.RotationY" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RotationY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float RotationY { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float RotationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RotationY" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.RotationY" />
      <MemberSignature Language="F#" Value="member this.RotationY : single with get, set" Usage="Android.Views.View.RotationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRotationY", "()F", "GetGetRotationYHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRotationY", "()F", "GetGetRotationYHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRotationY", "(F)V", "GetSetRotationY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRotationY", "(F)V", "GetSetRotationY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rotationY">The degrees of Y rotation.</param>
        <summary>The degrees that the view is rotated around the vertical axis through the pivot point. -or- Sets the degrees that the view is rotated around the vertical axis through the pivot point.</summary>
        <value>The degrees of Y rotation.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The degrees that the view is rotated around the vertical axis through the pivot point.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getRotationY()" title="Reference documentation">Java documentation for <code>android.view.View.getRotationY()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the degrees that the view is rotated around the vertical axis through the pivot point.
            Increasing values result in counter-clockwise rotation from the viewpoint of looking
            down the y axis.
            
            When rotating large views, it is recommended to adjust the camera distance
            accordingly. Refer to <c>#setCameraDistance(float)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRotationY(float)" title="Reference documentation">Java documentation for <code>android.view.View.setRotationY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.RotationY" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
        <altmember cref="P:Android.Views.View.Rotation" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="M:Android.Views.View.SetCameraDistance(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="SaveAttributeDataForStyleable">
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAttributeDataForStyleable (context As Context, styleable As Integer(), attrs As IAttributeSet, t As TypedArray, defStyleAttr As Integer, defStyleRes As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAttributeDataForStyleable(Android::Content::Context ^ context, cli::array &lt;int&gt; ^ styleable, Android::Util::IAttributeSet ^ attrs, Android::Content::Res::TypedArray ^ t, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="C#" Value="public void SaveAttributeDataForStyleable (Android.Content.Context context, int[] styleable, Android.Util.IAttributeSet? attrs, Android.Content.Res.TypedArray t, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAttributeDataForStyleable(class Android.Content.Context context, int32[] styleable, class Android.Util.IAttributeSet attrs, class Android.Content.Res.TypedArray t, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SaveAttributeDataForStyleable(Android.Content.Context,System.Int32[],Android.Util.IAttributeSet,Android.Content.Res.TypedArray,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SaveAttributeDataForStyleable : Android.Content.Context * int[] * Android.Util.IAttributeSet * Android.Content.Res.TypedArray * int * int -&gt; unit" Usage="view.SaveAttributeDataForStyleable (context, styleable, attrs, t, defStyleAttr, defStyleRes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("saveAttributeDataForStyleable", "(Landroid/content/Context;[ILandroid/util/AttributeSet;Landroid/content/res/TypedArray;II)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("saveAttributeDataForStyleable", "(Landroid/content/Context;[ILandroid/util/AttributeSet;Landroid/content/res/TypedArray;II)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="styleable" Type="System.Int32[]" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="t" Type="Android.Content.Res.TypedArray" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">Context under which this view is created.</param>
        <param name="styleable">A reference to styleable array R.styleable.Foo</param>
        <param name="attrs">AttributeSet used to construct this view.</param>
        <param name="t">Resolved <c>TypedArray</c> returned by a call to
                   <c>Resources#obtainAttributes(AttributeSet, int[])</c>.</param>
        <param name="defStyleAttr">Default style attribute passed into the view constructor.</param>
        <param name="defStyleRes">Default style resource passed into the view constructor.</param>
        <summary>Stores debugging information about attributes.</summary>
        <remarks>
          <para>Stores debugging information about attributes. This should be called in a constructor by
            every custom <c>View</c> that uses a custom styleable. If the custom view does not call it,
            then the custom attributes used by this view will not be visible in layout inspection tools.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#saveAttributeDataForStyleable(android.content.Context,%20int[],%20android.util.AttributeSet,%20android.content.res.TypedArray,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.saveAttributeDataForStyleable(android.content.Context, int[], android.util.AttributeSet, android.content.res.TypedArray, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SaveEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SaveEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool SaveEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SaveEnabled" />
      <MemberSignature Language="F#" Value="member this.SaveEnabled : bool with get, set" Usage="Android.Views.View.SaveEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSaveEnabled", "()Z", "GetIsSaveEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSaveEnabled", "()Z", "GetIsSaveEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSaveEnabled", "(Z)V", "GetSetSaveEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSaveEnabled", "(Z)V", "GetSetSaveEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">Set to false to &lt;em&gt;disable&lt;/em&gt; state saving, or true
            (the default) to allow it.</param>
        <summary>Indicates whether this view will save its state (that is,
            whether its <c>#onSaveInstanceState</c> method will be called). -or- Controls whether the saving of this view's state is
            enabled (that is, whether its <c>#onSaveInstanceState</c> method
            will be called).</summary>
        <value>Returns true if the view state saving is enabled, else false.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether this view will save its state (that is,
            whether its <c>#onSaveInstanceState</c> method will be called).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isSaveEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isSaveEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls whether the saving of this view's state is
            enabled (that is, whether its <c>#onSaveInstanceState</c> method
            will be called).  Note that even if freezing is enabled, the
            view still must have an id assigned to it (via <c>#setId(int)</c>)
            for its state to be saved.  This flag can only disable the
            saving of this view; any child views may still have their state saved.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSaveEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setSaveEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SaveEnabled" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="SaveFromParentEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SaveFromParentEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SaveFromParentEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool SaveFromParentEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveFromParentEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SaveFromParentEnabled" />
      <MemberSignature Language="F#" Value="member this.SaveFromParentEnabled : bool with get, set" Usage="Android.Views.View.SaveFromParentEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSaveFromParentEnabled", "()Z", "GetIsSaveFromParentEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSaveFromParentEnabled", "()Z", "GetIsSaveFromParentEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSaveFromParentEnabled", "(Z)V", "GetSetSaveFromParentEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSaveFromParentEnabled", "(Z)V", "GetSetSaveFromParentEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">Set to false to &lt;em&gt;disable&lt;/em&gt; state saving, or true
            (the default) to allow it.</param>
        <summary>Indicates whether the entire hierarchy under this view will save its
            state when a state saving traversal occurs from its parent. -or- Controls whether the entire hierarchy under this view will save its
            state when a state saving traversal occurs from its parent.</summary>
        <value>Returns true if the view state saving from parent is enabled, else false.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether the entire hierarchy under this view will save its
            state when a state saving traversal occurs from its parent.  The default
            is true; if false, these views will not be saved unless
            <c>#saveHierarchyState(SparseArray)</c> is called directly on this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isSaveFromParentEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isSaveFromParentEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls whether the entire hierarchy under this view will save its
            state when a state saving traversal occurs from its parent.  The default
            is true; if false, these views will not be saved unless
            <c>#saveHierarchyState(SparseArray)</c> is called directly on this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSaveFromParentEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setSaveFromParentEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.SaveFromParentEnabled" />
        <altmember cref="P:Android.Views.View.Id" />
        <altmember cref="M:Android.Views.View.OnSaveInstanceState" />
      </Docs>
    </Member>
    <Member MemberName="SaveHierarchyState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SaveHierarchyState (container As SparseArray)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SaveHierarchyState(Android::Util::SparseArray ^ container);" />
      <MemberSignature Language="C#" Value="public virtual void SaveHierarchyState (Android.Util.SparseArray? container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SaveHierarchyState(class Android.Util.SparseArray container) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SaveHierarchyState(Android.Util.SparseArray)" />
      <MemberSignature Language="F#" Value="abstract member SaveHierarchyState : Android.Util.SparseArray -&gt; unit&#xA;override this.SaveHierarchyState : Android.Util.SparseArray -&gt; unit" Usage="view.SaveHierarchyState container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("saveHierarchyState", "(Landroid/util/SparseArray;)V", "GetSaveHierarchyState_Landroid_util_SparseArray_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("saveHierarchyState", "(Landroid/util/SparseArray;)V", "GetSaveHierarchyState_Landroid_util_SparseArray_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="Android.Util.SparseArray" />
      </Parameters>
      <Docs>
        <param name="container">The SparseArray in which to save the view's state.</param>
        <summary>Store this view hierarchy's frozen state into the given container.</summary>
        <remarks>
          <para>Store this view hierarchy's frozen state into the given container.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#saveHierarchyState(android.util.SparseArray%3Candroid.os.Parcelable%3E)" title="Reference documentation">Java documentation for <code>android.view.View.saveHierarchyState(android.util.SparseArray&lt;android.os.Parcelable&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScaleX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float ScaleX { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float ScaleX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScaleX" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScaleX" />
      <MemberSignature Language="F#" Value="member this.ScaleX : single with get, set" Usage="Android.Views.View.ScaleX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScaleX", "()F", "GetGetScaleXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScaleX", "()F", "GetGetScaleXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScaleX", "(F)V", "GetSetScaleX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScaleX", "(F)V", "GetSetScaleX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="scaleX">The scaling factor.</param>
        <summary>The amount that the view is scaled in x around the pivot point, as a proportion of
            the view's unscaled width. -or- Sets the amount that the view is scaled in x around the pivot point, as a proportion of
            the view's unscaled width.</summary>
        <value>The scaling factor.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The amount that the view is scaled in x around the pivot point, as a proportion of
            the view's unscaled width. A value of 1, the default, means that no scaling is applied.</para>
          <para>By default, this is 1.0f.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScaleX()" title="Reference documentation">Java documentation for <code>android.view.View.getScaleX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the amount that the view is scaled in x around the pivot point, as a proportion of
            the view's unscaled width. A value of 1 means that no scaling is applied.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScaleX(float)" title="Reference documentation">Java documentation for <code>android.view.View.setScaleX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleXs">
      <MemberSignature Language="VB.NET" Value="Public Shared Property ScaleXs As Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Property ^ ScaleXs { Android::Util::Property ^ get(); void set(Android::Util::Property ^ value); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Property? ScaleXs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property ScaleXs" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScaleXs" />
      <MemberSignature Language="F#" Value="member this.ScaleXs : Android.Util.Property with get, set" Usage="Android.Views.View.ScaleXs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCALE_X")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCALE_X")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>scaleX</c> functionality handled by the
            <c>View#setScaleX(float)</c> and <c>View#getScaleX()</c> methods.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A Property wrapper around the <c>scaleX</c> functionality handled by the
            <c>View#setScaleX(float)</c> and <c>View#getScaleX()</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCALE_X" title="Reference documentation">Java documentation for <code>android.view.View.SCALE_X</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScaleY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float ScaleY { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float ScaleY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 ScaleY" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScaleY" />
      <MemberSignature Language="F#" Value="member this.ScaleY : single with get, set" Usage="Android.Views.View.ScaleY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScaleY", "()F", "GetGetScaleYHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScaleY", "()F", "GetGetScaleYHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScaleY", "(F)V", "GetSetScaleY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScaleY", "(F)V", "GetSetScaleY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="scaleY">The scaling factor.</param>
        <summary>The amount that the view is scaled in y around the pivot point, as a proportion of
            the view's unscaled height. -or- Sets the amount that the view is scaled in Y around the pivot point, as a proportion of
            the view's unscaled width.</summary>
        <value>The scaling factor.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The amount that the view is scaled in y around the pivot point, as a proportion of
            the view's unscaled height. A value of 1, the default, means that no scaling is applied.</para>
          <para>By default, this is 1.0f.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScaleY()" title="Reference documentation">Java documentation for <code>android.view.View.getScaleY()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the amount that the view is scaled in Y around the pivot point, as a proportion of
            the view's unscaled width. A value of 1 means that no scaling is applied.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScaleY(float)" title="Reference documentation">Java documentation for <code>android.view.View.setScaleY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.PivotX" />
        <altmember cref="P:Android.Views.View.PivotY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleYs">
      <MemberSignature Language="VB.NET" Value="Public Shared Property ScaleYs As Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Property ^ ScaleYs { Android::Util::Property ^ get(); void set(Android::Util::Property ^ value); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Property? ScaleYs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property ScaleYs" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScaleYs" />
      <MemberSignature Language="F#" Value="member this.ScaleYs : Android.Util.Property with get, set" Usage="Android.Views.View.ScaleYs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCALE_Y")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCALE_Y")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>scaleY</c> functionality handled by the
            <c>View#setScaleY(float)</c> and <c>View#getScaleY()</c> methods.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A Property wrapper around the <c>scaleY</c> functionality handled by the
            <c>View#setScaleY(float)</c> and <c>View#getScaleY()</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCALE_Y" title="Reference documentation">Java documentation for <code>android.view.View.SCALE_Y</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScheduleDrawable (who As Drawable, what As IRunnable, when As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ScheduleDrawable(Android::Graphics::Drawables::Drawable ^ who, Java::Lang::IRunnable ^ what, long when);" />
      <MemberSignature Language="C#" Value="public virtual void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member ScheduleDrawable : Android.Graphics.Drawables.Drawable * Java.Lang.IRunnable * int64 -&gt; unit&#xA;override this.ScheduleDrawable : Android.Graphics.Drawables.Drawable * Java.Lang.IRunnable * int64 -&gt; unit" Usage="view.ScheduleDrawable (who, what, when)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.Drawable.ICallback.ScheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable,System.Int64)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">the recipient of the action</param>
        <param name="what">the action to run on the drawable</param>
        <param name="when">the time at which the action must occur. Uses the
                   <c>SystemClock#uptimeMillis</c> timebase.</param>
        <summary>Schedules an action on a drawable to occur at a specified time.</summary>
        <remarks>
          <para>Schedules an action on a drawable to occur at a specified time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#scheduleDrawable(android.graphics.drawable.Drawable,%20java.lang.Runnable,%20long)" title="Reference documentation">Java documentation for <code>android.view.View.scheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScheduleDrawable">
      <MemberSignature Language="VB.NET" Value="Public Sub ScheduleDrawable (who As Drawable, what As Action, when As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScheduleDrawable(Android::Graphics::Drawables::Drawable ^ who, Action ^ what, long when);" />
      <MemberSignature Language="C#" Value="public void ScheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what, long when);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what, int64 when) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ScheduleDrawable(Android.Graphics.Drawables.Drawable,System.Action,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.ScheduleDrawable : Android.Graphics.Drawables.Drawable * Action * int64 -&gt; unit" Usage="view.ScheduleDrawable (who, what, when)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
        <Parameter Name="when" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <param name="when">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenReaderFocusable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScreenReaderFocusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ScreenReaderFocusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ScreenReaderFocusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScreenReaderFocusable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScreenReaderFocusable" />
      <MemberSignature Language="F#" Value="member this.ScreenReaderFocusable : bool with get, set" Usage="Android.Views.View.ScreenReaderFocusable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isScreenReaderFocusable", "()Z", "GetIsScreenReaderFocusableHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isScreenReaderFocusable", "()Z", "GetIsScreenReaderFocusableHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScreenReaderFocusable", "(Z)V", "GetSetScreenReaderFocusable_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScreenReaderFocusable", "(Z)V", "GetSetScreenReaderFocusable_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="screenReaderFocusable">Whether the view should be treated as a unit by screen reader
                                         accessibility tools.</param>
        <summary>Returns whether the view should be treated as a focusable unit by screen reader
            accessibility tools. -or- Sets whether this View should be a focusable element for screen readers
            and include non-focusable Views from its subtree when providing feedback.</summary>
        <value>Whether the view should be treated as a focusable unit by screen reader.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether the view should be treated as a focusable unit by screen reader
            accessibility tools.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isScreenReaderFocusable()" title="Reference documentation">Java documentation for <code>android.view.View.isScreenReaderFocusable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether this View should be a focusable element for screen readers
            and include non-focusable Views from its subtree when providing feedback.</para>
          <para>Note: this is similar to using &lt;c&gt;android:focusable&lt;/c&gt;,
            but does not impact input focus behavior.
            
            </para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScreenReaderFocusable(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setScreenReaderFocusable(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScreenStateOff">
      <MemberSignature Language="VB.NET" Value="Public Const ScreenStateOff As ScreenState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScreenState ScreenStateOff = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScreenState ScreenStateOff = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScreenState ScreenStateOff = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScreenStateOff" />
      <MemberSignature Language="F#" Value="val mutable ScreenStateOff : Android.Views.ScreenState" Usage="Android.Views.View.ScreenStateOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCREEN_STATE_OFF")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCREEN_STATE_OFF")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScreenState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the screen has changed state and is now off.</summary>
        <remarks>
          <para>Indicates that the screen has changed state and is now off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCREEN_STATE_OFF" title="Reference documentation">Java documentation for <code>android.view.View.SCREEN_STATE_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState)" />
      </Docs>
    </Member>
    <Member MemberName="ScreenStateOn">
      <MemberSignature Language="VB.NET" Value="Public Const ScreenStateOn As ScreenState  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScreenState ScreenStateOn = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScreenState ScreenStateOn = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScreenState ScreenStateOn = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScreenStateOn" />
      <MemberSignature Language="F#" Value="val mutable ScreenStateOn : Android.Views.ScreenState" Usage="Android.Views.View.ScreenStateOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCREEN_STATE_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCREEN_STATE_ON")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScreenState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScreenState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that the screen has changed state and is now on.</summary>
        <remarks>
          <para>Indicates that the screen has changed state and is now on.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCREEN_STATE_ON" title="Reference documentation">Java documentation for <code>android.view.View.SCREEN_STATE_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.OnScreenStateChanged(Android.Views.ScreenState)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisHorizontal">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollAxisHorizontal As ScrollAxis  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollAxis ScrollAxisHorizontal = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisHorizontal = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisHorizontal = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollAxisHorizontal" />
      <MemberSignature Language="F#" Value="val mutable ScrollAxisHorizontal : Android.Views.ScrollAxis" Usage="Android.Views.View.ScrollAxisHorizontal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_AXIS_HORIZONTAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_AXIS_HORIZONTAL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates scrolling along the horizontal axis.</summary>
        <remarks>
          <para>Indicates scrolling along the horizontal axis.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_AXIS_HORIZONTAL" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_AXIS_HORIZONTAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisNone">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollAxisNone As ScrollAxis  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollAxis ScrollAxisNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollAxisNone" />
      <MemberSignature Language="F#" Value="val mutable ScrollAxisNone : Android.Views.ScrollAxis" Usage="Android.Views.View.ScrollAxisNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_AXIS_NONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_AXIS_NONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates no axis of view scrolling.</summary>
        <remarks>
          <para>Indicates no axis of view scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_AXIS_NONE" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_AXIS_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollAxisVertical">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollAxisVertical As ScrollAxis  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollAxis ScrollAxisVertical = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollAxis ScrollAxisVertical = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollAxis ScrollAxisVertical = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollAxisVertical" />
      <MemberSignature Language="F#" Value="val mutable ScrollAxisVertical : Android.Views.ScrollAxis" Usage="Android.Views.View.ScrollAxisVertical" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_AXIS_VERTICAL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_AXIS_VERTICAL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollAxis enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollAxis</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates scrolling along the vertical axis.</summary>
        <remarks>
          <para>Indicates scrolling along the vertical axis.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_AXIS_VERTICAL" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_AXIS_VERTICAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBarDefaultDelayBeforeFade">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollBarDefaultDelayBeforeFade As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScrollBarDefaultDelayBeforeFade { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ScrollBarDefaultDelayBeforeFade { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarDefaultDelayBeforeFade" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollBarDefaultDelayBeforeFade" />
      <MemberSignature Language="F#" Value="member this.ScrollBarDefaultDelayBeforeFade : int with get, set" Usage="Android.Views.View.ScrollBarDefaultDelayBeforeFade" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollBarDefaultDelayBeforeFade", "()I", "GetGetScrollBarDefaultDelayBeforeFadeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollBarDefaultDelayBeforeFade", "()I", "GetGetScrollBarDefaultDelayBeforeFadeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollBarDefaultDelayBeforeFade", "(I)V", "GetSetScrollBarDefaultDelayBeforeFade_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollBarDefaultDelayBeforeFade", "(I)V", "GetSetScrollBarDefaultDelayBeforeFade_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="scrollBarDefaultDelayBeforeFade">- the delay before scrollbars fade</param>
        <summary>Returns the delay before scrollbars fade. -or- Define the delay before scrollbars fade.</summary>
        <value>the delay before scrollbars fade</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the delay before scrollbars fade.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollBarDefaultDelayBeforeFade()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollBarDefaultDelayBeforeFade()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define the delay before scrollbars fade.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollBarDefaultDelayBeforeFade(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollBarDefaultDelayBeforeFade(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarFadeDuration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollBarFadeDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScrollBarFadeDuration { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ScrollBarFadeDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarFadeDuration" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollBarFadeDuration" />
      <MemberSignature Language="F#" Value="member this.ScrollBarFadeDuration : int with get, set" Usage="Android.Views.View.ScrollBarFadeDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollBarFadeDuration", "()I", "GetGetScrollBarFadeDurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollBarFadeDuration", "()I", "GetGetScrollBarFadeDurationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollBarFadeDuration", "(I)V", "GetSetScrollBarFadeDuration_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollBarFadeDuration", "(I)V", "GetSetScrollBarFadeDuration_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="scrollBarFadeDuration">- the scrollbar fade duration, in milliseconds</param>
        <summary>Returns the scrollbar fade duration. -or- Define the scrollbar fade duration.</summary>
        <value>the scrollbar fade duration, in milliseconds</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the scrollbar fade duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollBarFadeDuration()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollBarFadeDuration()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define the scrollbar fade duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollBarFadeDuration(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollBarFadeDuration(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollbarFadingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollbarFadingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ScrollbarFadingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ScrollbarFadingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScrollbarFadingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollbarFadingEnabled" />
      <MemberSignature Language="F#" Value="member this.ScrollbarFadingEnabled : bool with get, set" Usage="Android.Views.View.ScrollbarFadingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isScrollbarFadingEnabled", "()Z", "GetIsScrollbarFadingEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isScrollbarFadingEnabled", "()Z", "GetIsScrollbarFadingEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollbarFadingEnabled", "(Z)V", "GetSetScrollbarFadingEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollbarFadingEnabled", "(Z)V", "GetSetScrollbarFadingEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="fadeScrollbars">whether to enable fading</param>
        <summary>Returns true if scrollbars will fade when this view is not scrolling -or- Define whether scrollbars will fade when the view is not scrolling.</summary>
        <value>true if scrollbar fading is enabled</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if scrollbars will fade when this view is not scrolling</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isScrollbarFadingEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isScrollbarFadingEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define whether scrollbars will fade when the view is not scrolling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollbarFadingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollbarFadingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarSize">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollBarSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScrollBarSize { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ScrollBarSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollBarSize" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollBarSize" />
      <MemberSignature Language="F#" Value="member this.ScrollBarSize : int with get, set" Usage="Android.Views.View.ScrollBarSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollBarSize", "()I", "GetGetScrollBarSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollBarSize", "()I", "GetGetScrollBarSizeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollBarSize", "(I)V", "GetSetScrollBarSize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollBarSize", "(I)V", "GetSetScrollBarSize_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="scrollBarSize">- the scrollbar size</param>
        <summary>Returns the scrollbar size. -or- Define the scrollbar size.</summary>
        <value>the scrollbar size</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the scrollbar size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollBarSize()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollBarSize()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define the scrollbar size.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollBarSize(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollBarSize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBarStyle">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollBarStyle As ScrollbarStyles" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ScrollbarStyles ScrollBarStyle { Android::Views::ScrollbarStyles get(); void set(Android::Views::ScrollbarStyles value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ScrollbarStyles ScrollBarStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ScrollbarStyles ScrollBarStyle" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollBarStyle" />
      <MemberSignature Language="F#" Value="member this.ScrollBarStyle : Android.Views.ScrollbarStyles with get, set" Usage="Android.Views.View.ScrollBarStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollBarStyle", "()I", "GetGetScrollBarStyleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollBarStyle", "()I", "GetGetScrollBarStyleHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollBarStyle", "(I)V", "GetSetScrollBarStyle_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollBarStyle", "(I)V", "GetSetScrollBarStyle_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollbarStyles</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="style">the style of the scrollbars. Should be one of
            SCROLLBARS_INSIDE_OVERLAY, SCROLLBARS_INSIDE_INSET,
            SCROLLBARS_OUTSIDE_OVERLAY or SCROLLBARS_OUTSIDE_INSET.</param>
        <summary>Returns the current scrollbar style. -or- Specify the style of the scrollbars.</summary>
        <value>the current scrollbar style</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current scrollbar style.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollBarStyle()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollBarStyle()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specify the style of the scrollbars. The scrollbars can be overlaid or
            inset. When inset, they add to the padding of the view. And the scrollbars
            can be drawn inside the padding area or on the edge of the view. For example,
            if a view has a background drawable and you want to draw the scrollbars
            inside the padding specified by the drawable, you can use
            SCROLLBARS_INSIDE_OVERLAY or SCROLLBARS_INSIDE_INSET. If you want them to
            appear at the edge of the view, ignoring the padding, then you can use
            SCROLLBARS_OUTSIDE_OVERLAY or SCROLLBARS_OUTSIDE_INSET.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollBarStyle(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollBarStyle(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollBy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScrollBy (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ScrollBy(int x, int y);" />
      <MemberSignature Language="C#" Value="public virtual void ScrollBy (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollBy(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ScrollBy(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ScrollBy : int * int -&gt; unit&#xA;override this.ScrollBy : int * int -&gt; unit" Usage="view.ScrollBy (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scrollBy", "(II)V", "GetScrollBy_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scrollBy", "(II)V", "GetScrollBy_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">the amount of pixels to scroll by horizontally</param>
        <param name="y">the amount of pixels to scroll by vertically</param>
        <summary>Move the scrolled position of your view.</summary>
        <remarks>
          <para>Move the scrolled position of your view. This will cause a call to
            <c>#onScrollChanged(int, int, int, int)</c> and the view will be
            invalidated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#scrollBy(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.scrollBy(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollCaptureHint">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ScrollCaptureHint As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ScrollCaptureHint { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int ScrollCaptureHint { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollCaptureHint" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollCaptureHint" />
      <MemberSignature Language="F#" Value="member this.ScrollCaptureHint : int with get, set" Usage="Android.Views.View.ScrollCaptureHint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollCaptureHint", "()I", "GetGetScrollCaptureHintHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollCaptureHint", "()I", "GetGetScrollCaptureHintHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollCaptureHint", "(I)V", "GetSetScrollCaptureHint_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollCaptureHint", "(I)V", "GetSetScrollCaptureHint_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="hint">the scrollCaptureHint flags value to set</param>
        <summary>Returns the current scroll capture hint for this view. -or- Sets the scroll capture hint for this View.</summary>
        <value>the current scroll capture hint</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current scroll capture hint for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollCaptureHint()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollCaptureHint()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the scroll capture hint for this View. These flags affect the search for a potential
            scroll capture targets.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollCaptureHint(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollCaptureHint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollCaptureHintAuto">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollCaptureHintAuto As ScrollCaptureHint  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollCaptureHint ScrollCaptureHintAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollCaptureHint ScrollCaptureHintAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollCaptureHint ScrollCaptureHintAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollCaptureHintAuto" />
      <MemberSignature Language="F#" Value="val mutable ScrollCaptureHintAuto : Android.Views.ScrollCaptureHint" Usage="Android.Views.View.ScrollCaptureHintAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_CAPTURE_HINT_AUTO", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_CAPTURE_HINT_AUTO", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollCaptureHint</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The content of this view will be considered for scroll capture if scrolling is possible.</summary>
        <remarks>
          <para>The content of this view will be considered for scroll capture if scrolling is possible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_CAPTURE_HINT_AUTO" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_CAPTURE_HINT_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollCaptureHintExclude">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollCaptureHintExclude As ScrollCaptureHint  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollCaptureHint ScrollCaptureHintExclude = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollCaptureHint ScrollCaptureHintExclude = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollCaptureHint ScrollCaptureHintExclude = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollCaptureHintExclude" />
      <MemberSignature Language="F#" Value="val mutable ScrollCaptureHintExclude : Android.Views.ScrollCaptureHint" Usage="Android.Views.View.ScrollCaptureHintExclude" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_CAPTURE_HINT_EXCLUDE", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_CAPTURE_HINT_EXCLUDE", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollCaptureHint</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Explicitly exclude this view as a potential scroll capture target.</summary>
        <remarks>
          <para>Explicitly exclude this view as a potential scroll capture target. The system will not
            consider it. Mutually exclusive with <c>#SCROLL_CAPTURE_HINT_INCLUDE</c>, which this flag
            takes precedence over.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_CAPTURE_HINT_EXCLUDE" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_CAPTURE_HINT_EXCLUDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollCaptureHintExcludeDescendants">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollCaptureHintExcludeDescendants As ScrollCaptureHint  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollCaptureHint ScrollCaptureHintExcludeDescendants = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollCaptureHint ScrollCaptureHintExcludeDescendants = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollCaptureHint ScrollCaptureHintExcludeDescendants = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollCaptureHintExcludeDescendants" />
      <MemberSignature Language="F#" Value="val mutable ScrollCaptureHintExcludeDescendants : Android.Views.ScrollCaptureHint" Usage="Android.Views.View.ScrollCaptureHintExcludeDescendants" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_CAPTURE_HINT_EXCLUDE_DESCENDANTS", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_CAPTURE_HINT_EXCLUDE_DESCENDANTS", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollCaptureHint</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Explicitly exclude all children of this view as potential scroll capture targets.</summary>
        <remarks>
          <para>Explicitly exclude all children of this view as potential scroll capture targets. This view
            is unaffected. Note: Excluded children are not considered, regardless of <c>#SCROLL_CAPTURE_HINT_INCLUDE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_CAPTURE_HINT_EXCLUDE_DESCENDANTS" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_CAPTURE_HINT_EXCLUDE_DESCENDANTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollCaptureHintInclude">
      <MemberSignature Language="VB.NET" Value="Public Const ScrollCaptureHintInclude As ScrollCaptureHint  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::ScrollCaptureHint ScrollCaptureHintInclude = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.ScrollCaptureHint ScrollCaptureHintInclude = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.ScrollCaptureHint ScrollCaptureHintInclude = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ScrollCaptureHintInclude" />
      <MemberSignature Language="F#" Value="val mutable ScrollCaptureHintInclude : Android.Views.ScrollCaptureHint" Usage="Android.Views.View.ScrollCaptureHintInclude" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCROLL_CAPTURE_HINT_INCLUDE", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCROLL_CAPTURE_HINT_INCLUDE", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.ScrollCaptureHint enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollCaptureHint</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Explicitly include this view as a potential scroll capture target.</summary>
        <remarks>
          <para>Explicitly include this view as a potential scroll capture target. When locating a scroll
            capture target, this view will be prioritized before others without this flag. Mutually
            exclusive with <c>#SCROLL_CAPTURE_HINT_EXCLUDE</c>, which takes precedence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SCROLL_CAPTURE_HINT_INCLUDE" title="Reference documentation">Java documentation for <code>android.view.View.SCROLL_CAPTURE_HINT_INCLUDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollChange">
      <MemberSignature Language="VB.NET" Value="Public Custom Event ScrollChange As EventHandler(Of View.ScrollChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::ScrollChangeEventArgs ^&gt; ^ ScrollChange;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ScrollChangeEventArgs&gt; ScrollChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ScrollChangeEventArgs&gt; ScrollChange" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.ScrollChange" />
      <MemberSignature Language="F#" Value="member this.ScrollChange : EventHandler&lt;Android.Views.View.ScrollChangeEventArgs&gt; " Usage="member this.ScrollChange : System.EventHandler&lt;Android.Views.View.ScrollChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ScrollChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollIndicators">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ScrollIndicators As ScrollIndicatorPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ScrollIndicatorPosition ScrollIndicators { Android::Views::ScrollIndicatorPosition get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ScrollIndicatorPosition ScrollIndicators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ScrollIndicatorPosition ScrollIndicators" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollIndicators" />
      <MemberSignature Language="F#" Value="member this.ScrollIndicators : Android.Views.ScrollIndicatorPosition" Usage="Android.Views.View.ScrollIndicators" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollIndicators", "()I", "GetGetScrollIndicatorsHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollIndicators", "()I", "GetGetScrollIndicatorsHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollIndicatorPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a bitmask representing the enabled scroll indicators.</summary>
        <value>a bitmask representing the enabled scroll indicators</value>
        <remarks>
          <para>Returns a bitmask representing the enabled scroll indicators.</para>
          <para>For example, if the top and left scroll indicators are enabled and all
            other indicators are disabled, the return value will be
            <c>View.SCROLL_INDICATOR_TOP | View.SCROLL_INDICATOR_LEFT</c>.</para>
          <para>To check whether the bottom scroll indicator is enabled, use the value
            of <c>(getScrollIndicators() &amp; View.SCROLL_INDICATOR_BOTTOM) != 0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollIndicators()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollIndicators()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScrollTo (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ScrollTo(int x, int y);" />
      <MemberSignature Language="C#" Value="public virtual void ScrollTo (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollTo(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ScrollTo(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ScrollTo : int * int -&gt; unit&#xA;override this.ScrollTo : int * int -&gt; unit" Usage="view.ScrollTo (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scrollTo", "(II)V", "GetScrollTo_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scrollTo", "(II)V", "GetScrollTo_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">the x position to scroll to</param>
        <param name="y">the y position to scroll to</param>
        <summary>Set the scrolled position of your view.</summary>
        <remarks>
          <para>Set the scrolled position of your view. This will cause a call to
            <c>#onScrollChanged(int, int, int, int)</c> and the view will be
            invalidated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#scrollTo(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.scrollTo(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollX">
      <MemberSignature Language="VB.NET" Value="Public Property ScrollX As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollX { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int ScrollX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollX" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollX" />
      <MemberSignature Language="F#" Value="member this.ScrollX : int with get, set" Usage="Android.Views.View.ScrollX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollX", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollX", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollX", "(I)V", "GetSetScrollX_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollX", "(I)V", "GetSetScrollX_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="value">the x position to scroll to</param>
        <summary>Return the scrolled left position of this view. -or- Set the horizontal scrolled position of your view.</summary>
        <value>The left edge of the displayed part of your view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the scrolled left position of this view. This is the left edge of
            the displayed part of your view. You do not need to draw any pixels
            farther left, since those are outside of the frame of your view on
            screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollX()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the horizontal scrolled position of your view. This will cause a call to
            <c>#onScrollChanged(int, int, int, int)</c> and the view will be
            invalidated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollX(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollX(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScrollY">
      <MemberSignature Language="VB.NET" Value="Public Property ScrollY As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ScrollY { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int ScrollY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScrollY" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ScrollY" />
      <MemberSignature Language="F#" Value="member this.ScrollY : int with get, set" Usage="Android.Views.View.ScrollY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getScrollY", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getScrollY", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setScrollY", "(I)V", "GetSetScrollY_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setScrollY", "(I)V", "GetSetScrollY_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="value">the y position to scroll to</param>
        <summary>Return the scrolled top position of this view. -or- Set the vertical scrolled position of your view.</summary>
        <value>The top edge of the displayed part of your view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the scrolled top position of this view. This is the top edge of
            the displayed part of your view. You do not need to draw any pixels above
            it, since those are outside of the frame of your view on screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getScrollY()" title="Reference documentation">Java documentation for <code>android.view.View.getScrollY()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the vertical scrolled position of your view. This will cause a call to
            <c>#onScrollChanged(int, int, int, int)</c> and the view will be
            invalidated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollY(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollY(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Selected" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="Android.Views.View.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSelected", "()Z", "GetIsSelectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSelected", "()Z", "GetIsSelectedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSelected", "(Z)V", "GetSetSelected_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSelected", "(Z)V", "GetSetSelected_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="selected">true if the view must be selected, false otherwise</param>
        <summary>Indicates the selection state of this view. -or- Changes the selection state of this view.</summary>
        <value>true if the view is selected, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates the selection state of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isSelected()" title="Reference documentation">Java documentation for <code>android.view.View.isSelected()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Changes the selection state of this view. A view can be selected or not.
            Note that selection is not the same as focus. Views are typically
            selected in the context of an AdapterView like ListView or GridView;
            the selected view is the view that is highlighted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSelected(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setSelected(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SelectedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property SelectedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ SelectedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? SelectedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; SelectedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SelectedStateSet" />
      <MemberSignature Language="F#" Value="member this.SelectedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.SelectedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SELECTED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SELECTED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is selected.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is selected. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SELECTED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.SELECTED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedWindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property SelectedWindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ SelectedWindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? SelectedWindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; SelectedWindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SelectedWindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.SelectedWindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.SelectedWindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SELECTED_WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SELECTED_WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view is selected and that its window has the focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view is selected and that its window has the focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SELECTED_WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.SELECTED_WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SelectedStateSet" />
        <altmember cref="P:Android.Views.View.WindowFocusedStateSet" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendAccessibilityEvent (eventType As EventTypes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendAccessibilityEvent(Android::Views::Accessibility::EventTypes eventType);" />
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEvent (Android.Views.Accessibility.EventTypes eventType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEvent(valuetype Android.Views.Accessibility.EventTypes eventType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
      <MemberSignature Language="F#" Value="abstract member SendAccessibilityEvent : Android.Views.Accessibility.EventTypes -&gt; unit&#xA;override this.SendAccessibilityEvent : Android.Views.Accessibility.EventTypes -&gt; unit" Usage="view.SendAccessibilityEvent eventType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Accessibility.IAccessibilityEventSource.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendAccessibilityEvent", "(I)V", "GetSendAccessibilityEvent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendAccessibilityEvent", "(I)V", "GetSendAccessibilityEvent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventType" Type="Android.Views.Accessibility.EventTypes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventType">The type of the event to send, as defined by several types from
            <c>AccessibilityEvent</c>, such as
            <c>AccessibilityEvent#TYPE_VIEW_CLICKED</c> or
            <c>AccessibilityEvent#TYPE_VIEW_HOVER_ENTER</c>.</param>
        <summary>Sends an accessibility event of the given type.</summary>
        <remarks>
          <para>Sends an accessibility event of the given type. If accessibility is
            not enabled this method has no effect. The default implementation calls
            <c>#onInitializeAccessibilityEvent(AccessibilityEvent)</c> first
            to populate information about the event source (this View), then calls
            <c>#dispatchPopulateAccessibilityEvent(AccessibilityEvent)</c> to
            populate the text content of the event source including its descendants,
            then for events type <c>AccessibilityEvent#TYPE_VIEW_SCROLLED</c>
            and <c>AccessibilityEvent#TYPE_WINDOW_CONTENT_CHANGED</c> with
            subtype <c>AccessibilityEvent#CONTENT_CHANGE_TYPE_STATE_DESCRIPTION</c>,
            throttle the events, and last calls
            <c>ViewParent#requestSendAccessibilityEvent(View, AccessibilityEvent)</c>
            on its parent to request sending of the event to interested parties.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#sendAccessibilityEvent(View, int)</c> is
            responsible for handling this call.</para>
          <para>If this view uses <c>AccessibilityNodeProvider</c> to provide virtual view hierarchy rooted
            at this view, this method should not be called to send events from virtual children because
            it will populate the events with wrong information and the events should be throttled per
            child instead at the virtual root level. To send events from virtual children, call
            <c>ViewParent#requestSendAccessibilityEvent(View, AccessibilityEvent)</c> on the view's
            parent to request sending of the event to interested parties.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#sendAccessibilityEvent(int)" title="Reference documentation">Java documentation for <code>android.view.View.sendAccessibilityEvent(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.OnInitializeAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
        <altmember cref="M:Android.Views.View.DispatchPopulateAccessibilityEvent(Android.Views.Accessibility.AccessibilityEvent)" />
        <altmember cref="M:Android.Views.IViewParent.RequestSendAccessibilityEvent(Android.Views.View, Android.Views.Accessibility.AccessibilityEvent)" />
      </Docs>
    </Member>
    <Member MemberName="SendAccessibilityEventUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SendAccessibilityEventUnchecked (e As AccessibilityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SendAccessibilityEventUnchecked(Android::Views::Accessibility::AccessibilityEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual void SendAccessibilityEventUnchecked (Android.Views.Accessibility.AccessibilityEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SendAccessibilityEventUnchecked(class Android.Views.Accessibility.AccessibilityEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent)" />
      <MemberSignature Language="F#" Value="abstract member SendAccessibilityEventUnchecked : Android.Views.Accessibility.AccessibilityEvent -&gt; unit&#xA;override this.SendAccessibilityEventUnchecked : Android.Views.Accessibility.AccessibilityEvent -&gt; unit" Usage="view.SendAccessibilityEventUnchecked e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Views.Accessibility.IAccessibilityEventSource.SendAccessibilityEventUnchecked(Android.Views.Accessibility.AccessibilityEvent)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendAccessibilityEventUnchecked", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_accessibility_AccessibilityEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendAccessibilityEventUnchecked", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_accessibility_AccessibilityEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.Accessibility.AccessibilityEvent" />
      </Parameters>
      <Docs>
        <param name="e">The event to send.</param>
        <param name="event">The event to send.</param>
        <summary>This method behaves exactly as <c>#sendAccessibilityEvent(int)</c> but
            takes as an argument an empty <c>AccessibilityEvent</c> and does not
            perform a check whether accessibility is enabled.</summary>
        <remarks>
          <para>This method behaves exactly as <c>#sendAccessibilityEvent(int)</c> but
            takes as an argument an empty <c>AccessibilityEvent</c> and does not
            perform a check whether accessibility is enabled.</para>
          <para>If an <c>AccessibilityDelegate</c> has been specified via calling
            <c>#setAccessibilityDelegate(AccessibilityDelegate)</c> its
            <c>AccessibilityDelegate#sendAccessibilityEventUnchecked(View, AccessibilityEvent)</c>
            is responsible for handling this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)" title="Reference documentation">Java documentation for <code>android.view.View.sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.View.SendAccessibilityEvent(Android.Views.Accessibility.EventTypes)" />
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityDataSensitive">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAccessibilityDataSensitive (accessibilityDataSensitive As AccessibilityDataSensitive)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAccessibilityDataSensitive(Android::Views::AccessibilityDataSensitive accessibilityDataSensitive);" />
      <MemberSignature Language="C#" Value="public virtual void SetAccessibilityDataSensitive (Android.Views.AccessibilityDataSensitive accessibilityDataSensitive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessibilityDataSensitive(valuetype Android.Views.AccessibilityDataSensitive accessibilityDataSensitive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAccessibilityDataSensitive(Android.Views.AccessibilityDataSensitive)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessibilityDataSensitive : Android.Views.AccessibilityDataSensitive -&gt; unit&#xA;override this.SetAccessibilityDataSensitive : Android.Views.AccessibilityDataSensitive -&gt; unit" Usage="view.SetAccessibilityDataSensitive accessibilityDataSensitive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAccessibilityDataSensitive", "(I)V", "GetSetAccessibilityDataSensitive_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAccessibilityDataSensitive", "(I)V", "GetSetAccessibilityDataSensitive_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessibilityDataSensitive" Type="Android.Views.AccessibilityDataSensitive">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="accessibilityDataSensitive">To be added.</param>
        <summary>Specifies whether this view should only allow interactions from
            <c>android.accessibilityservice.AccessibilityService</c>s with the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</summary>
        <remarks>
          <para>Specifies whether this view should only allow interactions from
            <c>android.accessibilityservice.AccessibilityService</c>s with the
            <c>android.accessibilityservice.AccessibilityServiceInfo#isAccessibilityTool</c> property
            set to true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityDataSensitive(int)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityDataSensitive(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessibilityDelegate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAccessibilityDelegate (delegate As View.AccessibilityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAccessibilityDelegate(Android::Views::View::AccessibilityDelegate ^ delegate);" />
      <MemberSignature Language="C#" Value="public virtual void SetAccessibilityDelegate (Android.Views.View.AccessibilityDelegate? delegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccessibilityDelegate(class Android.Views.View/AccessibilityDelegate delegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAccessibilityDelegate(Android.Views.View.AccessibilityDelegate)" />
      <MemberSignature Language="F#" Value="abstract member SetAccessibilityDelegate : Android.Views.View.AccessibilityDelegate -&gt; unit&#xA;override this.SetAccessibilityDelegate : Android.Views.View.AccessibilityDelegate -&gt; unit" Usage="view.SetAccessibilityDelegate delegate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAccessibilityDelegate", "(Landroid/view/View$AccessibilityDelegate;)V", "GetSetAccessibilityDelegate_Landroid_view_View_AccessibilityDelegate_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAccessibilityDelegate", "(Landroid/view/View$AccessibilityDelegate;)V", "GetSetAccessibilityDelegate_Landroid_view_View_AccessibilityDelegate_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegate" Type="Android.Views.View+AccessibilityDelegate" />
      </Parameters>
      <Docs>
        <param name="delegate">the object to which accessibility method calls should be
                            delegated</param>
        <summary>Sets a delegate for implementing accessibility support via composition
            (as opposed to inheritance).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAccessibilityDelegate(android.view.AccessibilityDelegate)" title="Reference documentation">Java documentation for <code>android.view.View.setAccessibilityDelegate(android.view.AccessibilityDelegate)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetAllowClickWhenDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAllowClickWhenDisabled (clickableWhenDisabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAllowClickWhenDisabled(bool clickableWhenDisabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetAllowClickWhenDisabled (bool clickableWhenDisabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllowClickWhenDisabled(bool clickableWhenDisabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAllowClickWhenDisabled(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAllowClickWhenDisabled : bool -&gt; unit&#xA;override this.SetAllowClickWhenDisabled : bool -&gt; unit" Usage="view.SetAllowClickWhenDisabled clickableWhenDisabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAllowClickWhenDisabled", "(Z)V", "GetSetAllowClickWhenDisabled_ZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAllowClickWhenDisabled", "(Z)V", "GetSetAllowClickWhenDisabled_ZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clickableWhenDisabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clickableWhenDisabled">true to make the view clickable, false otherwise</param>
        <summary>Enables or disables click events for this view when disabled.</summary>
        <remarks>
          <para>Enables or disables click events for this view when disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAllowClickWhenDisabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setAllowClickWhenDisabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowedHandwritingDelegatePackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAllowedHandwritingDelegatePackage (allowedPackageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAllowedHandwritingDelegatePackage(System::String ^ allowedPackageName);" />
      <MemberSignature Language="C#" Value="public virtual void SetAllowedHandwritingDelegatePackage (string? allowedPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllowedHandwritingDelegatePackage(string allowedPackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAllowedHandwritingDelegatePackage(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetAllowedHandwritingDelegatePackage : string -&gt; unit&#xA;override this.SetAllowedHandwritingDelegatePackage : string -&gt; unit" Usage="view.SetAllowedHandwritingDelegatePackage allowedPackageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAllowedHandwritingDelegatePackage", "(Ljava/lang/String;)V", "GetSetAllowedHandwritingDelegatePackage_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAllowedHandwritingDelegatePackage", "(Ljava/lang/String;)V", "GetSetAllowedHandwritingDelegatePackage_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowedPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="allowedPackageName">the package name of a delegate editor view linked to this delegator
                view, or <c>null</c> to restore the default behavior of only allowing delegate editor
                views from the same package as this delegator view</param>
        <summary>Specifies that this view may act as a handwriting initiation delegator for a delegate editor
            view from the specified package.</summary>
        <remarks>
          <para>Specifies that this view may act as a handwriting initiation delegator for a delegate editor
            view from the specified package. If this method is not called, delegators may only be used to
            initiate handwriting mode for a delegate editor view from the same package as the delegator
            view. This method allows specifying a different trusted package which may contain a delegate
            editor view linked to this delegator view.</para>
          <para>This method has no effect unless <c>#setHandwritingDelegatorCallback</c> is also called
            to configure this view to act as a handwriting delegator.</para>
          <para>If this method is called on the delegator view, then <c>#setAllowedHandwritingDelegatorPackage</c> should also be called on the delegate editor view.</para>
          <para>For example, to configure a delegator view in package 1:</para>
          <code lang="text/java">delegatorView.setHandwritingDelegatorCallback(callback);
            delegatorView.setAllowedHandwritingDelegatePackage(package2);</code>
          <para>Then to configure the corresponding delegate editor view in package 2:</para>
          <code lang="text/java">delegateEditorView.setIsHandwritingDelegate(true);
            delegateEditorView.setAllowedHandwritingDelegatorPackage(package1);</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAllowedHandwritingDelegatePackage(java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.View.setAllowedHandwritingDelegatePackage(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAllowedHandwritingDelegatorPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAllowedHandwritingDelegatorPackage (allowedPackageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAllowedHandwritingDelegatorPackage(System::String ^ allowedPackageName);" />
      <MemberSignature Language="C#" Value="public virtual void SetAllowedHandwritingDelegatorPackage (string? allowedPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAllowedHandwritingDelegatorPackage(string allowedPackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAllowedHandwritingDelegatorPackage(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetAllowedHandwritingDelegatorPackage : string -&gt; unit&#xA;override this.SetAllowedHandwritingDelegatorPackage : string -&gt; unit" Usage="view.SetAllowedHandwritingDelegatorPackage allowedPackageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAllowedHandwritingDelegatorPackage", "(Ljava/lang/String;)V", "GetSetAllowedHandwritingDelegatorPackage_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAllowedHandwritingDelegatorPackage", "(Ljava/lang/String;)V", "GetSetAllowedHandwritingDelegatorPackage_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowedPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="allowedPackageName">the package name of a delegator view linked to this delegate editor
                view, or <c>null</c> to restore the default behavior of only allowing delegator views
                from the same package as this delegate editor view</param>
        <summary>Specifies that a view from the specified package may act as a handwriting delegator for this
            delegate editor view.</summary>
        <remarks>
          <para>Specifies that a view from the specified package may act as a handwriting delegator for this
            delegate editor view. If this method is not called, only views from the same package as this
            delegate editor view may act as a handwriting delegator. This method allows specifying a
            different trusted package which may contain a delegator view linked to this delegate editor
            view.</para>
          <para>This method has no effect unless <c>#setIsHandwritingDelegate</c> is also called to
            configure this view to act as a handwriting delegate.</para>
          <para>If this method is called on the delegate editor view, then <c>#setAllowedHandwritingDelegatePackage</c> should also be called on the delegator view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAllowedHandwritingDelegatorPackage(java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.View.setAllowedHandwritingDelegatorPackage(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAutofillHints">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAutofillHints (ParamArray autofillHints As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAutofillHints(... cli::array &lt;System::String ^&gt; ^ autofillHints);" />
      <MemberSignature Language="C#" Value="public virtual void SetAutofillHints (params string[]? autofillHints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutofillHints(string[] autofillHints) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetAutofillHints(System.String[])" />
      <MemberSignature Language="F#" Value="abstract member SetAutofillHints : string[] -&gt; unit&#xA;override this.SetAutofillHints : string[] -&gt; unit" Usage="view.SetAutofillHints autofillHints" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutofillHints", "([Ljava/lang/String;)V", "GetSetAutofillHints_arrayLjava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutofillHints", "([Ljava/lang/String;)V", "GetSetAutofillHints_arrayLjava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autofillHints" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="autofillHints">The autofill hints to set. If the array is emtpy, <c>null</c> is set.</param>
        <summary>Sets the hints that help an <c>android.service.autofill.AutofillService</c> determine how
            to autofill the view with the user's data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setAutofillHints(java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.View.setAutofillHints(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBackgroundColor (color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBackgroundColor(Android::Graphics::Color color);" />
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetBackgroundColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundColor : Android.Graphics.Color -&gt; unit&#xA;override this.SetBackgroundColor : Android.Graphics.Color -&gt; unit" Usage="view.SetBackgroundColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">the color of the background</param>
        <summary>Sets the background color for this view.</summary>
        <remarks>
          <para>Sets the background color for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackgroundColor(int)" title="Reference documentation">Java documentation for <code>android.view.View.setBackgroundColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBackgroundDrawable (background As Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBackgroundDrawable(Android::Graphics::Drawables::Drawable ^ background);" />
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable? background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable background) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundDrawable : Android.Graphics.Drawables.Drawable -&gt; unit&#xA;override this.SetBackgroundDrawable : Android.Graphics.Drawables.Drawable -&gt; unit" Usage="view.SetBackgroundDrawable background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="background">To be added.</param>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. use <c>#setBackground(Drawable)</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackgroundDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundResource">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBackgroundResource (resid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBackgroundResource(int resid);" />
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundResource (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundResource(int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetBackgroundResource(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundResource : int -&gt; unit&#xA;override this.SetBackgroundResource : int -&gt; unit" Usage="view.SetBackgroundResource resid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundResource", "(I)V", "GetSetBackgroundResource_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundResource", "(I)V", "GetSetBackgroundResource_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The identifier of the resource.</param>
        <summary>Set the background to a given resource.</summary>
        <remarks>
          <para>Set the background to a given resource. The resource should refer to
            a Drawable object or 0 to remove the background.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setBackgroundResource(int)" title="Reference documentation">Java documentation for <code>android.view.View.setBackgroundResource(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetCameraDistance">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCameraDistance (distance As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCameraDistance(float distance);" />
      <MemberSignature Language="C#" Value="public virtual void SetCameraDistance (float distance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCameraDistance(float32 distance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetCameraDistance(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetCameraDistance : single -&gt; unit&#xA;override this.SetCameraDistance : single -&gt; unit" Usage="view.SetCameraDistance distance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCameraDistance", "(F)V", "GetSetCameraDistance_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCameraDistance", "(F)V", "GetSetCameraDistance_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distance" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="distance">The distance in "depth pixels", if negative the opposite
                   value is used</param>
        <summary>Sets the distance along the Z axis (orthogonal to the X/Y plane on which
            views are drawn) from the camera to this view.</summary>
        <remarks>
          <para>Sets the distance along the Z axis (orthogonal to the X/Y plane on which
            views are drawn) from the camera to this view. The camera's distance
            affects 3D transformations, for instance rotations around the X and Y
            axis. If the rotationX or rotationY properties are changed and this view is
            large (more than half the size of the screen), it is recommended to always
            use a camera distance that's greater than the height (X axis rotation) or
            the width (Y axis rotation) of this view.</para>
          <para>The distance of the camera from the view plane can have an affect on the
            perspective distortion of the view when it is rotated around the x or y axis.
            For example, a large distance will result in a large viewing angle, and there
            will not be much perspective distortion of the view as it rotates. A short
            distance may cause much more perspective distortion upon rotation, and can
            also result in some drawing artifacts if the rotated view ends up partially
            behind the camera (which is why the recommendation is to use a distance at
            least as far as the size of the view, if the view is to be rotated.)</para>
          <para>The distance is expressed in "depth pixels." The default distance depends
            on the screen density. For instance, on a medium density display, the
            default distance is 1280. On a high density display, the default distance
            is 1920.</para>
          <para>If you want to specify a distance that leads to visually consistent
            results across various densities, use the following formula:</para>
          <code lang="text/java">float scale = context.getResources().getDisplayMetrics().density;
            view.setCameraDistance(distance * scale);
            </code>
          <para>The density scale factor of a high density display is 1.5,
            and 1920 = 1280 * 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setCameraDistance(float)" title="Reference documentation">Java documentation for <code>android.view.View.setCameraDistance(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="SetFadingEdgeLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFadingEdgeLength (length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFadingEdgeLength(int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetFadingEdgeLength (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFadingEdgeLength(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetFadingEdgeLength(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetFadingEdgeLength : int -&gt; unit&#xA;override this.SetFadingEdgeLength : int -&gt; unit" Usage="view.SetFadingEdgeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFadingEdgeLength", "(I)V", "GetSetFadingEdgeLength_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFadingEdgeLength", "(I)V", "GetSetFadingEdgeLength_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">The size in pixels of the faded edge used to indicate that more
                   content in this view is visible.</param>
        <summary>Set the size of the faded edge used to indicate that more content in this
            view is available.</summary>
        <remarks>
          <para>Set the size of the faded edge used to indicate that more content in this
            view is available.  Will not change whether the fading edge is enabled; use
            <c>#setVerticalFadingEdgeEnabled(boolean)</c> or
            <c>#setHorizontalFadingEdgeEnabled(boolean)</c> to enable the fading edge
            for the vertical or horizontal fading edges.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFadingEdgeLength(int)" title="Reference documentation">Java documentation for <code>android.view.View.setFadingEdgeLength(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFitsSystemWindows">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFitsSystemWindows (fitSystemWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFitsSystemWindows(bool fitSystemWindows);" />
      <MemberSignature Language="C#" Value="public virtual void SetFitsSystemWindows (bool fitSystemWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFitsSystemWindows(bool fitSystemWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetFitsSystemWindows(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFitsSystemWindows : bool -&gt; unit&#xA;override this.SetFitsSystemWindows : bool -&gt; unit" Usage="view.SetFitsSystemWindows fitSystemWindows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFitsSystemWindows", "(Z)V", "GetSetFitsSystemWindows_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFitsSystemWindows", "(Z)V", "GetSetFitsSystemWindows_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fitSystemWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fitSystemWindows">If true, then the default implementation of
            <c>#fitSystemWindows(Rect)</c> will be executed.</param>
        <summary>Sets whether or not this view should account for system screen decorations
            such as the status bar and inset its content; that is, controlling whether
            the default implementation of <c>#fitSystemWindows(Rect)</c> will be
            executed.</summary>
        <remarks>
          <para>Sets whether or not this view should account for system screen decorations
            such as the status bar and inset its content; that is, controlling whether
            the default implementation of <c>#fitSystemWindows(Rect)</c> will be
            executed.  See that method for more details.</para>
          <para>Note that if you are providing your own implementation of
            <c>#fitSystemWindows(Rect)</c>, then there is no need to set this
            flag to true -- your implementation will be overriding the default
            implementation that checks this flag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFitsSystemWindows(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setFitsSystemWindows(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.FitsSystemWindows" />
        <altmember cref="M:Android.Views.View.FitSystemWindows(Android.Graphics.Rect)" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SetFocusable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFocusable (focusable As ViewFocusability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFocusable(Android::Views::ViewFocusability focusable);" />
      <MemberSignature Language="C#" Value="public virtual void SetFocusable (Android.Views.ViewFocusability focusable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFocusable(valuetype Android.Views.ViewFocusability focusable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetFocusable(Android.Views.ViewFocusability)" />
      <MemberSignature Language="F#" Value="abstract member SetFocusable : Android.Views.ViewFocusability -&gt; unit&#xA;override this.SetFocusable : Android.Views.ViewFocusability -&gt; unit" Usage="view.SetFocusable focusable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFocusable", "(I)V", "GetSetFocusable_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFocusable", "(I)V", "GetSetFocusable_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusable" Type="Android.Views.ViewFocusability">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="focusable">One of <c>#NOT_FOCUSABLE</c>, <c>#FOCUSABLE</c>,
                             or <c>#FOCUSABLE_AUTO</c>.</param>
        <summary>Sets whether this view can receive focus.</summary>
        <remarks>
          <para>Sets whether this view can receive focus.</para>
          <para>Setting this to <c>#FOCUSABLE_AUTO</c> tells the framework to determine focusability
            automatically based on the view's interactivity. This is the default.</para>
          <para>Setting this to NOT_FOCUSABLE will ensure that this view is also not focusable
            in touch mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setFocusable(int)" title="Reference documentation">Java documentation for <code>android.view.View.setFocusable(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetForegroundGravity">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetForegroundGravity (gravity As GravityFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetForegroundGravity(Android::Views::GravityFlags gravity);" />
      <MemberSignature Language="C#" Value="public virtual void SetForegroundGravity (Android.Views.GravityFlags gravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetForegroundGravity(valuetype Android.Views.GravityFlags gravity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetForegroundGravity(Android.Views.GravityFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetForegroundGravity : Android.Views.GravityFlags -&gt; unit&#xA;override this.SetForegroundGravity : Android.Views.GravityFlags -&gt; unit" Usage="view.SetForegroundGravity gravity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setForegroundGravity", "(I)V", "GetSetForegroundGravity_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setForegroundGravity", "(I)V", "GetSetForegroundGravity_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="gravity">see <c>android.view.Gravity</c></param>
        <summary>Describes how the foreground is positioned.</summary>
        <remarks>
          <para>Describes how the foreground is positioned. Defaults to START and TOP.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setForegroundGravity(int)" title="Reference documentation">Java documentation for <code>android.view.View.setForegroundGravity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetHandwritingBoundsOffsets">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetHandwritingBoundsOffsets (offsetLeft As Single, offsetTop As Single, offsetRight As Single, offsetBottom As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetHandwritingBoundsOffsets(float offsetLeft, float offsetTop, float offsetRight, float offsetBottom);" />
      <MemberSignature Language="C#" Value="public virtual void SetHandwritingBoundsOffsets (float offsetLeft, float offsetTop, float offsetRight, float offsetBottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetHandwritingBoundsOffsets(float32 offsetLeft, float32 offsetTop, float32 offsetRight, float32 offsetBottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetHandwritingBoundsOffsets(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetHandwritingBoundsOffsets : single * single * single * single -&gt; unit&#xA;override this.SetHandwritingBoundsOffsets : single * single * single * single -&gt; unit" Usage="view.SetHandwritingBoundsOffsets (offsetLeft, offsetTop, offsetRight, offsetBottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHandwritingBoundsOffsets", "(FFFF)V", "GetSetHandwritingBoundsOffsets_FFFFHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHandwritingBoundsOffsets", "(FFFF)V", "GetSetHandwritingBoundsOffsets_FFFFHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetLeft" Type="System.Single" />
        <Parameter Name="offsetTop" Type="System.Single" />
        <Parameter Name="offsetRight" Type="System.Single" />
        <Parameter Name="offsetBottom" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="offsetLeft">the amount of pixel offset applied to the left edge outwards of the view's
                              handwriting bounds.</param>
        <param name="offsetTop">the amount of pixel offset applied to the top edge outwards of the view's
                             handwriting bounds.</param>
        <param name="offsetRight">the amount of pixel offset applied to the right edge outwards of the
                               view's handwriting bounds.</param>
        <param name="offsetBottom">the amount of pixel offset applied to the bottom edge outwards of the
                                view's handwriting bounds.</param>
        <summary>Set the amount of offset applied to this view's stylus handwriting bounds.</summary>
        <remarks>
          <para>Set the amount of offset applied to this view's stylus handwriting bounds. A positive offset
            will offset the edge outwards.The base handwriting bounds of a view is its visible bounds.
            The handwriting bounds offsets are applied to the base handwriting bounds to determine the
            final handwriting bounds.</para>
          <para>This method is mainly used to enlarge the view's handwriting bounds for a better user
            experience.</para>
          <para>Note that when the view is clipped (e.g. the view is in a
            <c>android.widget.ScrollView</c>), the offsets are applied after the view's handwriting
            bounds is clipped.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setHandwritingBoundsOffsets(float,%20float,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.setHandwritingBoundsOffsets(float, float, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayerPaint">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLayerPaint (paint As Paint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLayerPaint(Android::Graphics::Paint ^ paint);" />
      <MemberSignature Language="C#" Value="public virtual void SetLayerPaint (Android.Graphics.Paint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayerPaint(class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetLayerPaint(Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member SetLayerPaint : Android.Graphics.Paint -&gt; unit&#xA;override this.SetLayerPaint : Android.Graphics.Paint -&gt; unit" Usage="view.SetLayerPaint paint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLayerPaint", "(Landroid/graphics/Paint;)V", "GetSetLayerPaint_Landroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLayerPaint", "(Landroid/graphics/Paint;)V", "GetSetLayerPaint_Landroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="paint">The paint used to compose the layer. This argument is optional
                   and can be null. It is ignored when the layer type is
                   <c>#LAYER_TYPE_NONE</c></param>
        <summary>Updates the <c>Paint</c> object used with the current layer (used only if the current
            layer type is not set to <c>#LAYER_TYPE_NONE</c>).</summary>
        <remarks>
          <para>Updates the <c>Paint</c> object used with the current layer (used only if the current
            layer type is not set to <c>#LAYER_TYPE_NONE</c>). Changed properties of the Paint
            provided to <c>#setLayerType(int, android.graphics.Paint)</c> will be used the next time
            the View is redrawn, but <c>#setLayerPaint(android.graphics.Paint)</c> must be called to
            ensure that the view gets redrawn immediately.</para>
          <para>A layer is associated with an optional <c>android.graphics.Paint</c>
            instance that controls how the layer is composed on screen. The following
            properties of the paint are taken into account when composing the layer:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;<c>android.graphics.Paint#getAlpha() Translucency (alpha)</c>&lt;/li&gt;
            &lt;li&gt;<c>android.graphics.Paint#getXfermode() Blending mode</c>&lt;/li&gt;
            &lt;li&gt;<c>android.graphics.Paint#getColorFilter() Color filter</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>If this view has an alpha value set to &lt; 1.0 by calling <c>#setAlpha(float)</c>, the
            alpha value of the layer's paint is superseded by this view's alpha value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLayerPaint(android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.view.View.setLayerPaint(android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="SetLayerType">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLayerType (layerType As LayerType, paint As Paint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLayerType(Android::Views::LayerType layerType, Android::Graphics::Paint ^ paint);" />
      <MemberSignature Language="C#" Value="public virtual void SetLayerType (Android.Views.LayerType layerType, Android.Graphics.Paint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayerType(valuetype Android.Views.LayerType layerType, class Android.Graphics.Paint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetLayerType(Android.Views.LayerType,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member SetLayerType : Android.Views.LayerType * Android.Graphics.Paint -&gt; unit&#xA;override this.SetLayerType : Android.Views.LayerType * Android.Graphics.Paint -&gt; unit" Usage="view.SetLayerType (layerType, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLayerType", "(ILandroid/graphics/Paint;)V", "GetSetLayerType_ILandroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLayerType", "(ILandroid/graphics/Paint;)V", "GetSetLayerType_ILandroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layerType" Type="Android.Views.LayerType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="paint" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="layerType">The type of layer to use with this view, must be one of
                   <c>#LAYER_TYPE_NONE</c>, <c>#LAYER_TYPE_SOFTWARE</c> or
                   <c>#LAYER_TYPE_HARDWARE</c></param>
        <param name="paint">The paint used to compose the layer. This argument is optional
                   and can be null. It is ignored when the layer type is
                   <c>#LAYER_TYPE_NONE</c></param>
        <summary>Specifies the type of layer backing this view.</summary>
        <remarks>
          <para>Specifies the type of layer backing this view. The layer can be
            <c>#LAYER_TYPE_NONE</c>, <c>#LAYER_TYPE_SOFTWARE</c> or
            <c>#LAYER_TYPE_HARDWARE</c>.</para>
          <para>A layer is associated with an optional <c>android.graphics.Paint</c>
            instance that controls how the layer is composed on screen. The following
            properties of the paint are taken into account when composing the layer:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;<c>android.graphics.Paint#getAlpha() Translucency (alpha)</c>&lt;/li&gt;
            &lt;li&gt;<c>android.graphics.Paint#getXfermode() Blending mode</c>&lt;/li&gt;
            &lt;li&gt;<c>android.graphics.Paint#getColorFilter() Color filter</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>If this view has an alpha value set to &lt; 1.0 by calling
            <c>#setAlpha(float)</c>, the alpha value of the layer's paint is superseded
            by this view's alpha value.</para>
          <para>Refer to the documentation of <c>#LAYER_TYPE_NONE</c>,
            <c>#LAYER_TYPE_SOFTWARE</c> and <c>#LAYER_TYPE_HARDWARE</c>
            for more information on when and how to use layers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLayerType(int,%20android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.view.View.setLayerType(int, android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.LayerType" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="SetLeftTopRightBottom">
      <MemberSignature Language="VB.NET" Value="Public Sub SetLeftTopRightBottom (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLeftTopRightBottom(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public void SetLeftTopRightBottom (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLeftTopRightBottom(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetLeftTopRightBottom(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetLeftTopRightBottom : int * int * int * int -&gt; unit" Usage="view.SetLeftTopRightBottom (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLeftTopRightBottom", "(IIII)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLeftTopRightBottom", "(IIII)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">Left position, relative to parent</param>
        <param name="top">Top position, relative to parent</param>
        <param name="right">Right position, relative to parent</param>
        <param name="bottom">Bottom position, relative to parent</param>
        <summary>Assign a size and position to this view.</summary>
        <remarks>
          <para>Assign a size and position to this view.</para>
          <para>This method is meant to be used in animations only as it applies this position and size
            for the view only temporary and it can be changed back at any time by the layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setLeftTopRightBottom(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.setLeftTopRightBottom(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMeasuredDimension">
      <MemberSignature Language="VB.NET" Value="Protected Sub SetMeasuredDimension (measuredWidth As Integer, measuredHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetMeasuredDimension(int measuredWidth, int measuredHeight);" />
      <MemberSignature Language="C#" Value="protected void SetMeasuredDimension (int measuredWidth, int measuredHeight);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetMeasuredDimension(int32 measuredWidth, int32 measuredHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetMeasuredDimension(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetMeasuredDimension : int * int -&gt; unit" Usage="view.SetMeasuredDimension (measuredWidth, measuredHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMeasuredDimension", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMeasuredDimension", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="measuredWidth" Type="System.Int32" />
        <Parameter Name="measuredHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="measuredWidth">The measured width of this view.  May be a complex
            bit mask as defined by <c>#MEASURED_SIZE_MASK</c> and
            <c>#MEASURED_STATE_TOO_SMALL</c>.</param>
        <param name="measuredHeight">The measured height of this view.  May be a complex
            bit mask as defined by <c>#MEASURED_SIZE_MASK</c> and
            <c>#MEASURED_STATE_TOO_SMALL</c>.</param>
        <summary>This method must be called by <c>#onMeasure(int, int)</c> to store the
            measured width and measured height.</summary>
        <remarks>
          <para>This method must be called by <c>#onMeasure(int, int)</c> to store the
            measured width and measured height. Failing to do so will trigger an
            exception at measurement time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setMeasuredDimension(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.setMeasuredDimension(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetMinimumHeight">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMinimumHeight (minHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMinimumHeight(int minHeight);" />
      <MemberSignature Language="C#" Value="public virtual void SetMinimumHeight (int minHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinimumHeight(int32 minHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetMinimumHeight(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMinimumHeight : int -&gt; unit&#xA;override this.SetMinimumHeight : int -&gt; unit" Usage="view.SetMinimumHeight minHeight" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMinimumHeight", "(I)V", "GetSetMinimumHeight_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMinimumHeight", "(I)V", "GetSetMinimumHeight_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minHeight">The minimum height the view will try to be, in pixels</param>
        <summary>Sets the minimum height of the view.</summary>
        <remarks>
          <para>Sets the minimum height of the view. It is not guaranteed the view will
            be able to achieve this minimum height (for example, if its parent layout
            constrains it with less available height).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setMinimumHeight(int)" title="Reference documentation">Java documentation for <code>android.view.View.setMinimumHeight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MinimumHeight" />
      </Docs>
    </Member>
    <Member MemberName="SetMinimumWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMinimumWidth (minWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMinimumWidth(int minWidth);" />
      <MemberSignature Language="C#" Value="public virtual void SetMinimumWidth (int minWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMinimumWidth(int32 minWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetMinimumWidth(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMinimumWidth : int -&gt; unit&#xA;override this.SetMinimumWidth : int -&gt; unit" Usage="view.SetMinimumWidth minWidth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMinimumWidth", "(I)V", "GetSetMinimumWidth_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMinimumWidth", "(I)V", "GetSetMinimumWidth_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="minWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="minWidth">The minimum width the view will try to be, in pixels</param>
        <summary>Sets the minimum width of the view.</summary>
        <remarks>
          <para>Sets the minimum width of the view. It is not guaranteed the view will
            be able to achieve this minimum width (for example, if its parent layout
            constrains it with less available width).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setMinimumWidth(int)" title="Reference documentation">Java documentation for <code>android.view.View.setMinimumWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.MinimumWidth" />
      </Docs>
    </Member>
    <Member MemberName="SetOnApplyWindowInsetsListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnApplyWindowInsetsListener (listener As View.IOnApplyWindowInsetsListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnApplyWindowInsetsListener(Android::Views::View::IOnApplyWindowInsetsListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnApplyWindowInsetsListener (Android.Views.View.IOnApplyWindowInsetsListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnApplyWindowInsetsListener(class Android.Views.View/IOnApplyWindowInsetsListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnApplyWindowInsetsListener(Android.Views.View.IOnApplyWindowInsetsListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnApplyWindowInsetsListener : Android.Views.View.IOnApplyWindowInsetsListener -&gt; unit&#xA;override this.SetOnApplyWindowInsetsListener : Android.Views.View.IOnApplyWindowInsetsListener -&gt; unit" Usage="view.SetOnApplyWindowInsetsListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnApplyWindowInsetsListener", "(Landroid/view/View$OnApplyWindowInsetsListener;)V", "GetSetOnApplyWindowInsetsListener_Landroid_view_View_OnApplyWindowInsetsListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnApplyWindowInsetsListener", "(Landroid/view/View$OnApplyWindowInsetsListener;)V", "GetSetOnApplyWindowInsetsListener_Landroid_view_View_OnApplyWindowInsetsListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.View+IOnApplyWindowInsetsListener" />
      </Parameters>
      <Docs>
        <param name="listener">Listener to set</param>
        <summary>Set an <c>OnApplyWindowInsetsListener</c> to take over the policy for applying
            window insets to this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnApplyWindowInsetsListener(android.view.OnApplyWindowInsetsListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnApplyWindowInsetsListener(android.view.OnApplyWindowInsetsListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.OnApplyWindowInsets(Android.Views.WindowInsets)" />
      </Docs>
    </Member>
    <Member MemberName="SetOnCapturedPointerListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnCapturedPointerListener (l As View.IOnCapturedPointerListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnCapturedPointerListener(Android::Views::View::IOnCapturedPointerListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnCapturedPointerListener (Android.Views.View.IOnCapturedPointerListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnCapturedPointerListener(class Android.Views.View/IOnCapturedPointerListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnCapturedPointerListener(Android.Views.View.IOnCapturedPointerListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnCapturedPointerListener : Android.Views.View.IOnCapturedPointerListener -&gt; unit&#xA;override this.SetOnCapturedPointerListener : Android.Views.View.IOnCapturedPointerListener -&gt; unit" Usage="view.SetOnCapturedPointerListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnCapturedPointerListener", "(Landroid/view/View$OnCapturedPointerListener;)V", "GetSetOnCapturedPointerListener_Landroid_view_View_OnCapturedPointerListener_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnCapturedPointerListener", "(Landroid/view/View$OnCapturedPointerListener;)V", "GetSetOnCapturedPointerListener_Landroid_view_View_OnCapturedPointerListener_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnCapturedPointerListener" />
      </Parameters>
      <Docs>
        <param name="l">The <c>OnCapturedPointerListener</c> to receive callbacks.</param>
        <summary>Set a listener to receive callbacks when the pointer capture state of a view changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnCapturedPointerListener(android.view.OnCapturedPointerListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnCapturedPointerListener(android.view.OnCapturedPointerListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnClickListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnClickListener (l As View.IOnClickListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnClickListener(Android::Views::View::IOnClickListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnClickListener (Android.Views.View.IOnClickListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnClickListener(class Android.Views.View/IOnClickListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnClickListener(Android.Views.View.IOnClickListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnClickListener : Android.Views.View.IOnClickListener -&gt; unit&#xA;override this.SetOnClickListener : Android.Views.View.IOnClickListener -&gt; unit" Usage="view.SetOnClickListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetOnClickListener_Landroid_view_View_OnClickListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetOnClickListener_Landroid_view_View_OnClickListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnClickListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when this view is clicked.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnClickListener(android.view.OnClickListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnClickListener(android.view.OnClickListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.Clickable" />
      </Docs>
    </Member>
    <Member MemberName="SetOnContextClickListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnContextClickListener (l As View.IOnContextClickListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnContextClickListener(Android::Views::View::IOnContextClickListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnContextClickListener (Android.Views.View.IOnContextClickListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnContextClickListener(class Android.Views.View/IOnContextClickListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnContextClickListener(Android.Views.View.IOnContextClickListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnContextClickListener : Android.Views.View.IOnContextClickListener -&gt; unit&#xA;override this.SetOnContextClickListener : Android.Views.View.IOnContextClickListener -&gt; unit" Usage="view.SetOnContextClickListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnContextClickListener", "(Landroid/view/View$OnContextClickListener;)V", "GetSetOnContextClickListener_Landroid_view_View_OnContextClickListener_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnContextClickListener", "(Landroid/view/View$OnContextClickListener;)V", "GetSetOnContextClickListener_Landroid_view_View_OnContextClickListener_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnContextClickListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when this view is context clicked.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnContextClickListener(android.view.OnContextClickListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnContextClickListener(android.view.OnContextClickListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnCreateContextMenuListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnCreateContextMenuListener (l As View.IOnCreateContextMenuListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnCreateContextMenuListener(Android::Views::View::IOnCreateContextMenuListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnCreateContextMenuListener (Android.Views.View.IOnCreateContextMenuListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnCreateContextMenuListener(class Android.Views.View/IOnCreateContextMenuListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnCreateContextMenuListener(Android.Views.View.IOnCreateContextMenuListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnCreateContextMenuListener : Android.Views.View.IOnCreateContextMenuListener -&gt; unit&#xA;override this.SetOnCreateContextMenuListener : Android.Views.View.IOnCreateContextMenuListener -&gt; unit" Usage="view.SetOnCreateContextMenuListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnCreateContextMenuListener", "(Landroid/view/View$OnCreateContextMenuListener;)V", "GetSetOnCreateContextMenuListener_Landroid_view_View_OnCreateContextMenuListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnCreateContextMenuListener", "(Landroid/view/View$OnCreateContextMenuListener;)V", "GetSetOnCreateContextMenuListener_Landroid_view_View_OnCreateContextMenuListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnCreateContextMenuListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when the context menu for this view is
            being built.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnCreateContextMenuListener(android.view.OnCreateContextMenuListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnCreateContextMenuListener(android.view.OnCreateContextMenuListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnDragListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnDragListener (l As View.IOnDragListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnDragListener(Android::Views::View::IOnDragListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnDragListener (Android.Views.View.IOnDragListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDragListener(class Android.Views.View/IOnDragListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnDragListener(Android.Views.View.IOnDragListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDragListener : Android.Views.View.IOnDragListener -&gt; unit&#xA;override this.SetOnDragListener : Android.Views.View.IOnDragListener -&gt; unit" Usage="view.SetOnDragListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnDragListener", "(Landroid/view/View$OnDragListener;)V", "GetSetOnDragListener_Landroid_view_View_OnDragListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnDragListener", "(Landroid/view/View$OnDragListener;)V", "GetSetOnDragListener_Landroid_view_View_OnDragListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnDragListener" />
      </Parameters>
      <Docs>
        <param name="l">An implementation of <c>android.view.View.OnDragListener</c>.</param>
        <summary>Register a drag event listener callback object for this View.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnDragListener(android.view.OnDragListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnDragListener(android.view.OnDragListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnGenericMotionListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnGenericMotionListener (l As View.IOnGenericMotionListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnGenericMotionListener(Android::Views::View::IOnGenericMotionListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnGenericMotionListener (Android.Views.View.IOnGenericMotionListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnGenericMotionListener(class Android.Views.View/IOnGenericMotionListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnGenericMotionListener(Android.Views.View.IOnGenericMotionListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnGenericMotionListener : Android.Views.View.IOnGenericMotionListener -&gt; unit&#xA;override this.SetOnGenericMotionListener : Android.Views.View.IOnGenericMotionListener -&gt; unit" Usage="view.SetOnGenericMotionListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnGenericMotionListener", "(Landroid/view/View$OnGenericMotionListener;)V", "GetSetOnGenericMotionListener_Landroid_view_View_OnGenericMotionListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnGenericMotionListener", "(Landroid/view/View$OnGenericMotionListener;)V", "GetSetOnGenericMotionListener_Landroid_view_View_OnGenericMotionListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnGenericMotionListener" />
      </Parameters>
      <Docs>
        <param name="l">the generic motion listener to attach to this view</param>
        <summary>Register a callback to be invoked when a generic motion event is sent to this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnGenericMotionListener(android.view.OnGenericMotionListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnGenericMotionListener(android.view.OnGenericMotionListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetOnHoverListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnHoverListener (l As View.IOnHoverListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnHoverListener(Android::Views::View::IOnHoverListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnHoverListener (Android.Views.View.IOnHoverListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnHoverListener(class Android.Views.View/IOnHoverListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnHoverListener(Android.Views.View.IOnHoverListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnHoverListener : Android.Views.View.IOnHoverListener -&gt; unit&#xA;override this.SetOnHoverListener : Android.Views.View.IOnHoverListener -&gt; unit" Usage="view.SetOnHoverListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnHoverListener", "(Landroid/view/View$OnHoverListener;)V", "GetSetOnHoverListener_Landroid_view_View_OnHoverListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnHoverListener", "(Landroid/view/View$OnHoverListener;)V", "GetSetOnHoverListener_Landroid_view_View_OnHoverListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnHoverListener" />
      </Parameters>
      <Docs>
        <param name="l">the hover listener to attach to this view</param>
        <summary>Register a callback to be invoked when a hover event is sent to this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnHoverListener(android.view.OnHoverListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnHoverListener(android.view.OnHoverListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetOnKeyListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnKeyListener (l As View.IOnKeyListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnKeyListener(Android::Views::View::IOnKeyListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnKeyListener (Android.Views.View.IOnKeyListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnKeyListener(class Android.Views.View/IOnKeyListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnKeyListener(Android.Views.View.IOnKeyListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnKeyListener : Android.Views.View.IOnKeyListener -&gt; unit&#xA;override this.SetOnKeyListener : Android.Views.View.IOnKeyListener -&gt; unit" Usage="view.SetOnKeyListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnKeyListener", "(Landroid/view/View$OnKeyListener;)V", "GetSetOnKeyListener_Landroid_view_View_OnKeyListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnKeyListener", "(Landroid/view/View$OnKeyListener;)V", "GetSetOnKeyListener_Landroid_view_View_OnKeyListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnKeyListener" />
      </Parameters>
      <Docs>
        <param name="l">the key listener to attach to this view</param>
        <summary>Register a callback to be invoked when a hardware key is pressed in this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnKeyListener(android.view.OnKeyListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnKeyListener(android.view.OnKeyListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnLongClickListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnLongClickListener (l As View.IOnLongClickListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnLongClickListener(Android::Views::View::IOnLongClickListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnLongClickListener (Android.Views.View.IOnLongClickListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnLongClickListener(class Android.Views.View/IOnLongClickListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnLongClickListener(Android.Views.View.IOnLongClickListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnLongClickListener : Android.Views.View.IOnLongClickListener -&gt; unit&#xA;override this.SetOnLongClickListener : Android.Views.View.IOnLongClickListener -&gt; unit" Usage="view.SetOnLongClickListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnLongClickListener", "(Landroid/view/View$OnLongClickListener;)V", "GetSetOnLongClickListener_Landroid_view_View_OnLongClickListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnLongClickListener", "(Landroid/view/View$OnLongClickListener;)V", "GetSetOnLongClickListener_Landroid_view_View_OnLongClickListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnLongClickListener" />
      </Parameters>
      <Docs>
        <param name="l">The callback that will run</param>
        <summary>Register a callback to be invoked when this view is clicked and held.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnLongClickListener(android.view.OnLongClickListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnLongClickListener(android.view.OnLongClickListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.LongClickable" />
      </Docs>
    </Member>
    <Member MemberName="SetOnReceiveContentListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnReceiveContentListener (mimeTypes As String(), listener As IOnReceiveContentListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnReceiveContentListener(cli::array &lt;System::String ^&gt; ^ mimeTypes, Android::Views::IOnReceiveContentListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnReceiveContentListener (string[]? mimeTypes, Android.Views.IOnReceiveContentListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnReceiveContentListener(string[] mimeTypes, class Android.Views.IOnReceiveContentListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnReceiveContentListener(System.String[],Android.Views.IOnReceiveContentListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnReceiveContentListener : string[] * Android.Views.IOnReceiveContentListener -&gt; unit&#xA;override this.SetOnReceiveContentListener : string[] * Android.Views.IOnReceiveContentListener -&gt; unit" Usage="view.SetOnReceiveContentListener (mimeTypes, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnReceiveContentListener", "([Ljava/lang/String;Landroid/view/OnReceiveContentListener;)V", "GetSetOnReceiveContentListener_arrayLjava_lang_String_Landroid_view_OnReceiveContentListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnReceiveContentListener", "([Ljava/lang/String;Landroid/view/OnReceiveContentListener;)V", "GetSetOnReceiveContentListener_arrayLjava_lang_String_Landroid_view_OnReceiveContentListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mimeTypes" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="listener" Type="Android.Views.IOnReceiveContentListener" />
      </Parameters>
      <Docs>
        <param name="mimeTypes">The MIME types accepted by the given listener. These may use patterns
                             such as "image/*", but may not start with a wildcard. This argument must
                             not be null or empty if a non-null listener is passed in.</param>
        <param name="listener">The listener to use. This can be null to reset to the default behavior.</param>
        <summary>Sets the listener to be <c>#performReceiveContent used</c> to handle insertion of
            content into this view.</summary>
        <remarks>
          <para>Sets the listener to be <c>#performReceiveContent used</c> to handle insertion of
            content into this view.</para>
          <para>Depending on the type of view, this listener may be invoked for different scenarios. For
            example, for an editable <c>android.widget.TextView</c>, this listener will be invoked for
            the following scenarios:
            &lt;ol&gt;
                &lt;li&gt;Paste from the clipboard (e.g. "Paste" or "Paste as plain text" action in the
                insertion/selection menu)
                &lt;li&gt;Content insertion from the keyboard (from <c>InputConnection#commitContent</c>)
                &lt;li&gt;Drag and drop (drop events from <c>#onDragEvent</c>)
                &lt;li&gt;Autofill
                &lt;li&gt;Selection replacement via <c>Intent#ACTION_PROCESS_TEXT</c>&lt;/ol&gt;</para>
          <para>When setting a listener, clients must also declare the accepted MIME types.
            The listener will still be invoked even if the MIME type of the content is not one of the
            declared MIME types (e.g. if the user pastes content whose type is not one of the declared
            MIME types).
            In that case, the listener may reject the content (defer to the default platform behavior)
            or execute some other fallback logic (e.g. show an appropriate message to the user).
            The declared MIME types serve as a hint to allow different features to optionally alter
            their behavior. For example, a soft keyboard may optionally choose to hide its UI for
            inserting GIFs for a particular input field if the MIME types set here for that field
            don't include "image/gif" or "image/*".</para>
          <para>Note: MIME type matching in the Android framework is case-sensitive, unlike formal RFC
            MIME types. As a result, you should always write your MIME types with lowercase letters,
            or use <c>android.content.Intent#normalizeMimeType</c> to ensure that it is converted to
            lowercase.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnReceiveContentListener(java.lang.String[],%20android.view.OnReceiveContentListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnReceiveContentListener(java.lang.String[], android.view.OnReceiveContentListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnScrollChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnScrollChangeListener (l As View.IOnScrollChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnScrollChangeListener(Android::Views::View::IOnScrollChangeListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnScrollChangeListener (Android.Views.View.IOnScrollChangeListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnScrollChangeListener(class Android.Views.View/IOnScrollChangeListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnScrollChangeListener(Android.Views.View.IOnScrollChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnScrollChangeListener : Android.Views.View.IOnScrollChangeListener -&gt; unit&#xA;override this.SetOnScrollChangeListener : Android.Views.View.IOnScrollChangeListener -&gt; unit" Usage="view.SetOnScrollChangeListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnScrollChangeListener", "(Landroid/view/View$OnScrollChangeListener;)V", "GetSetOnScrollChangeListener_Landroid_view_View_OnScrollChangeListener_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnScrollChangeListener", "(Landroid/view/View$OnScrollChangeListener;)V", "GetSetOnScrollChangeListener_Landroid_view_View_OnScrollChangeListener_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnScrollChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">The listener to notify when the scroll X or Y position changes.</param>
        <summary>Register a callback to be invoked when the scroll X or Y positions of
            this view change.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnScrollChangeListener(android.view.OnScrollChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnScrollChangeListener(android.view.OnScrollChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnSystemUiVisibilityChangeListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnSystemUiVisibilityChangeListener (l As View.IOnSystemUiVisibilityChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnSystemUiVisibilityChangeListener(Android::Views::View::IOnSystemUiVisibilityChangeListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnSystemUiVisibilityChangeListener (Android.Views.View.IOnSystemUiVisibilityChangeListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnSystemUiVisibilityChangeListener(class Android.Views.View/IOnSystemUiVisibilityChangeListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnSystemUiVisibilityChangeListener(Android.Views.View.IOnSystemUiVisibilityChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnSystemUiVisibilityChangeListener : Android.Views.View.IOnSystemUiVisibilityChangeListener -&gt; unit&#xA;override this.SetOnSystemUiVisibilityChangeListener : Android.Views.View.IOnSystemUiVisibilityChangeListener -&gt; unit" Usage="view.SetOnSystemUiVisibilityChangeListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnSystemUiVisibilityChangeListener", "(Landroid/view/View$OnSystemUiVisibilityChangeListener;)V", "GetSetOnSystemUiVisibilityChangeListener_Landroid_view_View_OnSystemUiVisibilityChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnSystemUiVisibilityChangeListener", "(Landroid/view/View$OnSystemUiVisibilityChangeListener;)V", "GetSetOnSystemUiVisibilityChangeListener_Landroid_view_View_OnSystemUiVisibilityChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnSystemUiVisibilityChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">The <c>OnSystemUiVisibilityChangeListener</c> to receive callbacks.</param>
        <summary>Set a listener to receive callbacks when the visibility of the system bar changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnSystemUiVisibilityChangeListener(android.view.OnSystemUiVisibilityChangeListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnSystemUiVisibilityChangeListener(android.view.OnSystemUiVisibilityChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetOnTouchListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnTouchListener (l As View.IOnTouchListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnTouchListener(Android::Views::View::IOnTouchListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnTouchListener (Android.Views.View.IOnTouchListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnTouchListener(class Android.Views.View/IOnTouchListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOnTouchListener(Android.Views.View.IOnTouchListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnTouchListener : Android.Views.View.IOnTouchListener -&gt; unit&#xA;override this.SetOnTouchListener : Android.Views.View.IOnTouchListener -&gt; unit" Usage="view.SetOnTouchListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnTouchListener", "(Landroid/view/View$OnTouchListener;)V", "GetSetOnTouchListener_Landroid_view_View_OnTouchListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnTouchListener", "(Landroid/view/View$OnTouchListener;)V", "GetSetOnTouchListener_Landroid_view_View_OnTouchListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Views.View+IOnTouchListener" />
      </Parameters>
      <Docs>
        <param name="l">the touch listener to attach to this view</param>
        <summary>Register a callback to be invoked when a touch event is sent to this view.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOnTouchListener(android.view.OnTouchListener)" title="Reference documentation">Java documentation for <code>android.view.View.setOnTouchListener(android.view.OnTouchListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOutlineAmbientShadowColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOutlineAmbientShadowColor (color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOutlineAmbientShadowColor(Android::Graphics::Color color);" />
      <MemberSignature Language="C#" Value="public virtual void SetOutlineAmbientShadowColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutlineAmbientShadowColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOutlineAmbientShadowColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetOutlineAmbientShadowColor : Android.Graphics.Color -&gt; unit&#xA;override this.SetOutlineAmbientShadowColor : Android.Graphics.Color -&gt; unit" Usage="view.SetOutlineAmbientShadowColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutlineAmbientShadowColor", "(I)V", "GetSetOutlineAmbientShadowColor_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutlineAmbientShadowColor", "(I)V", "GetSetOutlineAmbientShadowColor_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">The color this View will cast for its elevation shadow.</param>
        <summary>Sets the color of the ambient shadow that is drawn when the view has a positive Z or
            elevation value.</summary>
        <remarks>
          <para>Sets the color of the ambient shadow that is drawn when the view has a positive Z or
            elevation value.</para>
          <para>By default the shadow color is black. Generally, this color will be opaque so the intensity
            of the shadow is consistent between different views with different colors.</para>
          <para>The opacity of the final ambient shadow is a function of the shadow caster height, the
            alpha channel of the outlineAmbientShadowColor (typically opaque), and the
            <c>android.R.attr#ambientShadowAlpha</c> theme attribute.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOutlineAmbientShadowColor(int)" title="Reference documentation">Java documentation for <code>android.view.View.setOutlineAmbientShadowColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutlineSpotShadowColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOutlineSpotShadowColor (color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOutlineSpotShadowColor(Android::Graphics::Color color);" />
      <MemberSignature Language="C#" Value="public virtual void SetOutlineSpotShadowColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutlineSpotShadowColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetOutlineSpotShadowColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetOutlineSpotShadowColor : Android.Graphics.Color -&gt; unit&#xA;override this.SetOutlineSpotShadowColor : Android.Graphics.Color -&gt; unit" Usage="view.SetOutlineSpotShadowColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutlineSpotShadowColor", "(I)V", "GetSetOutlineSpotShadowColor_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutlineSpotShadowColor", "(I)V", "GetSetOutlineSpotShadowColor_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">The color this View will cast for its elevation spot shadow.</param>
        <summary>Sets the color of the spot shadow that is drawn when the view has a positive Z or
            elevation value.</summary>
        <remarks>
          <para>Sets the color of the spot shadow that is drawn when the view has a positive Z or
            elevation value.</para>
          <para>By default the shadow color is black. Generally, this color will be opaque so the intensity
            of the shadow is consistent between different views with different colors.</para>
          <para>The opacity of the final spot shadow is a function of the shadow caster height, the
            alpha channel of the outlineSpotShadowColor (typically opaque), and the
            <c>android.R.attr#spotShadowAlpha</c> theme attribute.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setOutlineSpotShadowColor(int)" title="Reference documentation">Java documentation for <code>android.view.View.setOutlineSpotShadowColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPadding">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPadding (left As Integer, top As Integer, right As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPadding(int left, int top, int right, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void SetPadding (int left, int top, int right, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPadding(int32 left, int32 top, int32 right, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetPadding(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPadding : int * int * int * int -&gt; unit&#xA;override this.SetPadding : int * int * int * int -&gt; unit" Usage="view.SetPadding (left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPadding", "(IIII)V", "GetSetPadding_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPadding", "(IIII)V", "GetSetPadding_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="right" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">the left padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="right">the right padding in pixels</param>
        <param name="bottom">the bottom padding in pixels</param>
        <summary>Sets the padding.</summary>
        <remarks>
          <para>Sets the padding. The view may add on the space required to display
            the scrollbars, depending on the style and visibility of the scrollbars.
            So the values returned from <c>#getPaddingLeft</c>, <c>#getPaddingTop</c>,
            <c>#getPaddingRight</c> and <c>#getPaddingBottom</c> may be different
            from the values set in this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPadding(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.setPadding(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetPaddingRelative">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPaddingRelative (start As Integer, top As Integer, end As Integer, bottom As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPaddingRelative(int start, int top, int end, int bottom);" />
      <MemberSignature Language="C#" Value="public virtual void SetPaddingRelative (int start, int top, int end, int bottom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPaddingRelative(int32 start, int32 top, int32 end, int32 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetPaddingRelative(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPaddingRelative : int * int * int * int -&gt; unit&#xA;override this.SetPaddingRelative : int * int * int * int -&gt; unit" Usage="view.SetPaddingRelative (start, top, end, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPaddingRelative", "(IIII)V", "GetSetPaddingRelative_IIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPaddingRelative", "(IIII)V", "GetSetPaddingRelative_IIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bottom" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start padding in pixels</param>
        <param name="top">the top padding in pixels</param>
        <param name="end">the end padding in pixels</param>
        <param name="bottom">the bottom padding in pixels</param>
        <summary>Sets the relative padding.</summary>
        <remarks>
          <para>Sets the relative padding. The view may add on the space required to display
            the scrollbars, depending on the style and visibility of the scrollbars.
            So the values returned from <c>#getPaddingStart</c>, <c>#getPaddingTop</c>,
            <c>#getPaddingEnd</c> and <c>#getPaddingBottom</c> may be different
            from the values set in this call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setPaddingRelative(int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.setPaddingRelative(int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetRenderEffect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRenderEffect (renderEffect As RenderEffect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRenderEffect(Android::Graphics::RenderEffect ^ renderEffect);" />
      <MemberSignature Language="C#" Value="public virtual void SetRenderEffect (Android.Graphics.RenderEffect? renderEffect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRenderEffect(class Android.Graphics.RenderEffect renderEffect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetRenderEffect(Android.Graphics.RenderEffect)" />
      <MemberSignature Language="F#" Value="abstract member SetRenderEffect : Android.Graphics.RenderEffect -&gt; unit&#xA;override this.SetRenderEffect : Android.Graphics.RenderEffect -&gt; unit" Usage="view.SetRenderEffect renderEffect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRenderEffect", "(Landroid/graphics/RenderEffect;)V", "GetSetRenderEffect_Landroid_graphics_RenderEffect_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRenderEffect", "(Landroid/graphics/RenderEffect;)V", "GetSetRenderEffect_Landroid_graphics_RenderEffect_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="renderEffect" Type="Android.Graphics.RenderEffect" />
      </Parameters>
      <Docs>
        <param name="renderEffect">to be applied to the View. Passing null clears the previously configured
                                <c>RenderEffect</c></param>
        <summary>Configure the <c>android.graphics.RenderEffect</c> to apply to this View.</summary>
        <remarks>
          <para>Configure the <c>android.graphics.RenderEffect</c> to apply to this View.
            This will apply a visual effect to the results of the View before it is drawn. For example if
            <c>RenderEffect#createBlurEffect(float, float, RenderEffect, Shader.TileMode)</c>
            is provided, the contents will be drawn in a separate layer, then this layer will be blurred
            when this View is drawn.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setRenderEffect(android.graphics.RenderEffect)" title="Reference documentation">Java documentation for <code>android.view.View.setRenderEffect(android.graphics.RenderEffect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScrollCaptureCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub SetScrollCaptureCallback (callback As IScrollCaptureCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetScrollCaptureCallback(Android::Views::IScrollCaptureCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void SetScrollCaptureCallback (Android.Views.IScrollCaptureCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetScrollCaptureCallback(class Android.Views.IScrollCaptureCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetScrollCaptureCallback(Android.Views.IScrollCaptureCallback)" />
      <MemberSignature Language="F#" Value="member this.SetScrollCaptureCallback : Android.Views.IScrollCaptureCallback -&gt; unit" Usage="view.SetScrollCaptureCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.IScrollCaptureCallback" />
      </Parameters>
      <Docs>
        <param name="callback">the new callback to assign</param>
        <summary>Sets the callback to receive scroll capture requests.</summary>
        <remarks>
          <para>Sets the callback to receive scroll capture requests. This component is the adapter between
            the scroll capture API and application UI code. If no callback is set, the system may provide
            an implementation. Any value provided here will take precedence over a system version.</para>
          <para>This view will be ignored when <c>#SCROLL_CAPTURE_HINT_EXCLUDE</c> is set in its <c>#setScrollCaptureHint(int) scrollCaptureHint</c>, regardless whether a callback has been set.</para>
          <para>It is recommended to set the scroll capture hint <c>#SCROLL_CAPTURE_HINT_INCLUDE</c> when
            setting a custom callback to help ensure it is selected as the target.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollCaptureCallback(android.view.ScrollCaptureCallback)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollCaptureCallback(android.view.ScrollCaptureCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScrollContainer">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScrollContainer (isScrollContainer As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScrollContainer(bool isScrollContainer);" />
      <MemberSignature Language="C#" Value="public virtual void SetScrollContainer (bool isScrollContainer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScrollContainer(bool isScrollContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetScrollContainer(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetScrollContainer : bool -&gt; unit&#xA;override this.SetScrollContainer : bool -&gt; unit" Usage="view.SetScrollContainer isScrollContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScrollContainer", "(Z)V", "GetSetScrollContainer_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScrollContainer", "(Z)V", "GetSetScrollContainer_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isScrollContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isScrollContainer">To be added.</param>
        <summary>Change whether this view is one of the set of scrollable containers in
            its window.</summary>
        <remarks>
          <para>Change whether this view is one of the set of scrollable containers in
            its window.  This will be used to determine whether the window can
            resize or must pan when a soft input area is open -- scrollable
            containers allow the window to use resize mode since the container
            will appropriately shrink.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollContainer(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollContainer(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetScrollIndicators">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScrollIndicators (indicators As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScrollIndicators(int indicators);" />
      <MemberSignature Language="C#" Value="public virtual void SetScrollIndicators (int indicators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScrollIndicators(int32 indicators) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetScrollIndicators(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetScrollIndicators : int -&gt; unit&#xA;override this.SetScrollIndicators : int -&gt; unit" Usage="view.SetScrollIndicators indicators" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScrollIndicators", "(I)V", "GetSetScrollIndicators_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScrollIndicators", "(I)V", "GetSetScrollIndicators_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indicators" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indicators">a bitmask of indicators that should be enabled, or
                              <c>0</c> to disable all indicators</param>
        <summary>Sets the state of all scroll indicators.</summary>
        <remarks>
          <para>Sets the state of all scroll indicators.</para>
          <para>See <c>#setScrollIndicators(int, int)</c> for usage information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollIndicators(int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollIndicators(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScrollIndicators">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScrollIndicators (indicators As Integer, mask As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScrollIndicators(int indicators, int mask);" />
      <MemberSignature Language="C#" Value="public virtual void SetScrollIndicators (int indicators, int mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScrollIndicators(int32 indicators, int32 mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetScrollIndicators(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetScrollIndicators : int * int -&gt; unit&#xA;override this.SetScrollIndicators : int * int -&gt; unit" Usage="view.SetScrollIndicators (indicators, mask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScrollIndicators", "(II)V", "GetSetScrollIndicators_IIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScrollIndicators", "(II)V", "GetSetScrollIndicators_IIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indicators" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indicators">a bitmask of indicators that should be enabled, or
                              <c>0</c> to disable all indicators</param>
        <param name="mask">To be added.</param>
        <summary>Sets the state of the scroll indicators specified by the mask.</summary>
        <remarks>
          <para>Sets the state of the scroll indicators specified by the mask. To change
            all scroll indicators at once, see <c>#setScrollIndicators(int)</c>.</para>
          <para>When a scroll indicator is enabled, it will be displayed if the view
            can scroll in the direction of the indicator.</para>
          <para>Multiple indicator types may be enabled or disabled by passing the
            logical OR of the desired types. If multiple types are specified, they
            will all be set to the same enabled state.</para>
          <para>For example, to enable the top scroll indicatorExample: <c>setScrollIndicators
            
            @param indicators the indicator direction, or the logical OR of multiple
                        indicator directions. One or more of:
                        &lt;ul&gt;
                          &lt;li&gt;{@link #SCROLL_INDICATOR_TOP</c>&lt;/li&gt;
                          &lt;li&gt;<c>#SCROLL_INDICATOR_BOTTOM</c>&lt;/li&gt;
                          &lt;li&gt;<c>#SCROLL_INDICATOR_LEFT</c>&lt;/li&gt;
                          &lt;li&gt;<c>#SCROLL_INDICATOR_RIGHT</c>&lt;/li&gt;
                          &lt;li&gt;<c>#SCROLL_INDICATOR_START</c>&lt;/li&gt;
                          &lt;li&gt;<c>#SCROLL_INDICATOR_END</c>&lt;/li&gt;
                        &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setScrollIndicators(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.setScrollIndicators(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTag">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTag (key As Integer, tag As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTag(int key, Java::Lang::Object ^ tag);" />
      <MemberSignature Language="C#" Value="public virtual void SetTag (int key, Java.Lang.Object? tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTag(int32 key, class Java.Lang.Object tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetTag(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetTag : int * Java.Lang.Object -&gt; unit&#xA;override this.SetTag : int * Java.Lang.Object -&gt; unit" Usage="view.SetTag (key, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTag", "(ILjava/lang/Object;)V", "GetSetTag_ILjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTag", "(ILjava/lang/Object;)V", "GetSetTag_ILjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Int32" />
        <Parameter Name="tag" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="key">The key identifying the tag</param>
        <param name="tag">An Object to tag the view with</param>
        <summary>Sets a tag associated with this view and a key.</summary>
        <remarks>
          <para>Sets a tag associated with this view and a key. A tag can be used
            to mark a view in its hierarchy and does not have to be unique within
            the hierarchy. Tags can also be used to store data within a view
            without resorting to another data structure.
            
            The specified key should be an id declared in the resources of the
            application to ensure it is unique (see the <see href="https://developer.android.com/guide/topics/resources/more-resources.html#Id">ID resource type</see>).
            Keys identified as belonging to
            the Android framework or not associated with any package will cause
            an <c>IllegalArgumentException</c> to be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTag(int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.view.View.setTag(int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If they specified key is not valid</exception>
        <altmember cref="P:Android.Views.View.Tag" />
        <altmember cref="M:Android.Views.View.GetTag(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetTransitionVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTransitionVisibility (visibility As ViewStates)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTransitionVisibility(Android::Views::ViewStates visibility);" />
      <MemberSignature Language="C#" Value="public virtual void SetTransitionVisibility (Android.Views.ViewStates visibility);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTransitionVisibility(valuetype Android.Views.ViewStates visibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetTransitionVisibility(Android.Views.ViewStates)" />
      <MemberSignature Language="F#" Value="abstract member SetTransitionVisibility : Android.Views.ViewStates -&gt; unit&#xA;override this.SetTransitionVisibility : Android.Views.ViewStates -&gt; unit" Usage="view.SetTransitionVisibility visibility" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTransitionVisibility", "(I)V", "GetSetTransitionVisibility_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTransitionVisibility", "(I)V", "GetSetTransitionVisibility_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visibility" Type="Android.Views.ViewStates">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="visibility">One of <c>#VISIBLE</c>, <c>#INVISIBLE</c>, or <c>#GONE</c>.</param>
        <summary>Changes the visibility of this View without triggering any other changes.</summary>
        <remarks>
          <para>Changes the visibility of this View without triggering any other changes. This should only
            be used by animation frameworks, such as <c>android.transition.Transition</c>, where
            visibility changes should not adjust focus or trigger a new layout. Application developers
            should use <c>#setVisibility</c> instead to ensure that the hierarchy is correctly updated.</para>
          <para>Only call this method when a temporary visibility must be applied during an
            animation and the original visibility value is guaranteed to be reset after the
            animation completes. Use <c>#setVisibility</c> in all other cases.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTransitionVisibility(int)" title="Reference documentation">Java documentation for <code>android.view.View.setTransitionVisibility(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetViewTranslationCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetViewTranslationCallback (callback As IViewTranslationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetViewTranslationCallback(Android::Views::Translation::IViewTranslationCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void SetViewTranslationCallback (Android.Views.Translation.IViewTranslationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetViewTranslationCallback(class Android.Views.Translation.IViewTranslationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetViewTranslationCallback(Android.Views.Translation.IViewTranslationCallback)" />
      <MemberSignature Language="F#" Value="abstract member SetViewTranslationCallback : Android.Views.Translation.IViewTranslationCallback -&gt; unit&#xA;override this.SetViewTranslationCallback : Android.Views.Translation.IViewTranslationCallback -&gt; unit" Usage="view.SetViewTranslationCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setViewTranslationCallback", "(Landroid/view/translation/ViewTranslationCallback;)V", "GetSetViewTranslationCallback_Landroid_view_translation_ViewTranslationCallback_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setViewTranslationCallback", "(Landroid/view/translation/ViewTranslationCallback;)V", "GetSetViewTranslationCallback_Landroid_view_translation_ViewTranslationCallback_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Translation.IViewTranslationCallback" />
      </Parameters>
      <Docs>
        <param name="callback">a <c>ViewTranslationCallback</c> that is used to control how to display the
            translated information</param>
        <summary>Sets a <c>ViewTranslationCallback</c> that is used to display/hide the translated
            information.</summary>
        <remarks>
          <para>Sets a <c>ViewTranslationCallback</c> that is used to display/hide the translated
            information. Developers can provide the customized implementation for show/hide translated
            information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setViewTranslationCallback(android.view.translation.ViewTranslationCallback)" title="Reference documentation">Java documentation for <code>android.view.View.setViewTranslationCallback(android.view.translation.ViewTranslationCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWillNotCacheDrawing">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetWillNotCacheDrawing (willNotCacheDrawing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetWillNotCacheDrawing(bool willNotCacheDrawing);" />
      <MemberSignature Language="C#" Value="public virtual void SetWillNotCacheDrawing (bool willNotCacheDrawing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWillNotCacheDrawing(bool willNotCacheDrawing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetWillNotCacheDrawing(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetWillNotCacheDrawing : bool -&gt; unit&#xA;override this.SetWillNotCacheDrawing : bool -&gt; unit" Usage="view.SetWillNotCacheDrawing willNotCacheDrawing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWillNotCacheDrawing", "(Z)V", "GetSetWillNotCacheDrawing_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWillNotCacheDrawing", "(Z)V", "GetSetWillNotCacheDrawing_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="willNotCacheDrawing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="willNotCacheDrawing">true if this view does not cache its
                   drawing, false otherwise</param>
        <summary>When a View's drawing cache is enabled, drawing is redirected to an
            offscreen bitmap.</summary>
        <remarks>
          <para>When a View's drawing cache is enabled, drawing is redirected to an
            offscreen bitmap. Some views, like an ImageView, must be able to
            bypass this mechanism if they already draw a single bitmap, to avoid
            unnecessary usage of the memory.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setWillNotCacheDrawing(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setWillNotCacheDrawing(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWillNotDraw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetWillNotDraw (willNotDraw As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetWillNotDraw(bool willNotDraw);" />
      <MemberSignature Language="C#" Value="public virtual void SetWillNotDraw (bool willNotDraw);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWillNotDraw(bool willNotDraw) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetWillNotDraw(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetWillNotDraw : bool -&gt; unit&#xA;override this.SetWillNotDraw : bool -&gt; unit" Usage="view.SetWillNotDraw willNotDraw" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWillNotDraw", "(Z)V", "GetSetWillNotDraw_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWillNotDraw", "(Z)V", "GetSetWillNotDraw_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="willNotDraw" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="willNotDraw">whether or not this View draw on its own</param>
        <summary>If this view doesn't do any drawing on its own, set this flag to
            allow further optimizations.</summary>
        <remarks>
          <para>If this view doesn't do any drawing on its own, set this flag to
            allow further optimizations. By default, this flag is not set on
            View, but could be set on some View subclasses such as ViewGroup.
            
            Typically, if you override <c>#onDraw(android.graphics.Canvas)</c>
            you should clear this flag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setWillNotDraw(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setWillNotDraw(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowInsetsAnimationCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetWindowInsetsAnimationCallback (callback As WindowInsetsAnimation.Callback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetWindowInsetsAnimationCallback(Android::Views::WindowInsetsAnimation::Callback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void SetWindowInsetsAnimationCallback (Android.Views.WindowInsetsAnimation.Callback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowInsetsAnimationCallback(class Android.Views.WindowInsetsAnimation/Callback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetWindowInsetsAnimationCallback(Android.Views.WindowInsetsAnimation.Callback)" />
      <MemberSignature Language="F#" Value="abstract member SetWindowInsetsAnimationCallback : Android.Views.WindowInsetsAnimation.Callback -&gt; unit&#xA;override this.SetWindowInsetsAnimationCallback : Android.Views.WindowInsetsAnimation.Callback -&gt; unit" Usage="view.SetWindowInsetsAnimationCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWindowInsetsAnimationCallback", "(Landroid/view/WindowInsetsAnimation$Callback;)V", "GetSetWindowInsetsAnimationCallback_Landroid_view_WindowInsetsAnimation_Callback_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWindowInsetsAnimationCallback", "(Landroid/view/WindowInsetsAnimation$Callback;)V", "GetSetWindowInsetsAnimationCallback_Landroid_view_WindowInsetsAnimation_Callback_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.WindowInsetsAnimation+Callback" />
      </Parameters>
      <Docs>
        <param name="callback">The callback to set.</param>
        <summary>Sets a <c>WindowInsetsAnimation.Callback</c> to be notified about animations of windows that
            cause insets.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setWindowInsetsAnimationCallback(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.view.View.setWindowInsetsAnimationCallback(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetX (x As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetX(float x);" />
      <MemberSignature Language="C#" Value="public virtual void SetX (float x);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetX(float32 x) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetX(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetX : single -&gt; unit&#xA;override this.SetX : single -&gt; unit" Usage="view.SetX x" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setX", "(F)V", "GetSetX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setX", "(F)V", "GetSetX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">The visual x position of this view, in pixels.</param>
        <summary>Sets the visual x position of this view, in pixels.</summary>
        <remarks>
          <para>Sets the visual x position of this view, in pixels. This is equivalent to setting the
            <c>#setTranslationX(float) translationX</c> property to be the difference between
            the x value passed in and the current <c>#getLeft() left</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setX(float)" title="Reference documentation">Java documentation for <code>android.view.View.setX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetY (y As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetY(float y);" />
      <MemberSignature Language="C#" Value="public virtual void SetY (float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetY(float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetY(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetY : single -&gt; unit&#xA;override this.SetY : single -&gt; unit" Usage="view.SetY y" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setY", "(F)V", "GetSetY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setY", "(F)V", "GetSetY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="y">The visual y position of this view, in pixels.</param>
        <summary>Sets the visual y position of this view, in pixels.</summary>
        <remarks>
          <para>Sets the visual y position of this view, in pixels. This is equivalent to setting the
            <c>#setTranslationY(float) translationY</c> property to be the difference between
            the y value passed in and the current <c>#getTop() top</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setY(float)" title="Reference documentation">Java documentation for <code>android.view.View.setY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetZ">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetZ (z As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetZ(float z);" />
      <MemberSignature Language="C#" Value="public virtual void SetZ (float z);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetZ(float32 z) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.SetZ(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetZ : single -&gt; unit&#xA;override this.SetZ : single -&gt; unit" Usage="view.SetZ z" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setZ", "(F)V", "GetSetZ_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setZ", "(F)V", "GetSetZ_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="z" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="z">The visual z position of this view, in pixels.</param>
        <summary>Sets the visual z position of this view, in pixels.</summary>
        <remarks>
          <para>Sets the visual z position of this view, in pixels. This is equivalent to setting the
            <c>#setTranslationZ(float) translationZ</c> property to be the difference between
            the z value passed in and the current <c>#getElevation() elevation</c> property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setZ(float)" title="Reference documentation">Java documentation for <code>android.view.View.setZ(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShowContextMenu () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShowContextMenu();" />
      <MemberSignature Language="C#" Value="public virtual bool ShowContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowContextMenu() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ShowContextMenu" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : unit -&gt; bool&#xA;override this.ShowContextMenu : unit -&gt; bool" Usage="view.ShowContextMenu " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showContextMenu", "()Z", "GetShowContextMenuHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showContextMenu", "()Z", "GetShowContextMenuHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Shows the context menu for this view.</summary>
        <returns>
          <c>true</c> if the context menu was shown, <c>false</c>
                    otherwise</returns>
        <remarks>
          <para>Shows the context menu for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#showContextMenu()" title="Reference documentation">Java documentation for <code>android.view.View.showContextMenu()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowContextMenu">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShowContextMenu (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShowContextMenu(float x, float y);" />
      <MemberSignature Language="C#" Value="public virtual bool ShowContextMenu (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShowContextMenu(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.ShowContextMenu(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ShowContextMenu : single * single -&gt; bool&#xA;override this.ShowContextMenu : single * single -&gt; bool" Usage="view.ShowContextMenu (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("showContextMenu", "(FF)Z", "GetShowContextMenu_FFHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("showContextMenu", "(FF)Z", "GetShowContextMenu_FFHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">the X coordinate in pixels relative to the view to which the
                     menu should be anchored, or <c>Float#NaN</c> to disable anchoring</param>
        <param name="y">the Y coordinate in pixels relative to the view to which the
                     menu should be anchored, or <c>Float#NaN</c> to disable anchoring</param>
        <summary>Shows the context menu for this view anchored to the specified
            view-relative coordinate.</summary>
        <returns>
          <c>true</c> if the context menu was shown, <c>false</c>
                    otherwise</returns>
        <remarks>
          <para>Shows the context menu for this view anchored to the specified
            view-relative coordinate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#showContextMenu(float,%20float)" title="Reference documentation">Java documentation for <code>android.view.View.showContextMenu(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SolidColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SolidColor As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SolidColor { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int SolidColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SolidColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SolidColor" />
      <MemberSignature Language="F#" Value="member this.SolidColor : int" Usage="Android.Views.View.SolidColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSolidColor", "()I", "GetGetSolidColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSolidColor", "()I", "GetGetSolidColorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Override this if your view is known to always be drawn on top of a solid color background,
            and needs to draw fading edges.</summary>
        <value>The known solid color background for this view, or 0 if the color may vary</value>
        <remarks>
          <para>Override this if your view is known to always be drawn on top of a solid color background,
            and needs to draw fading edges. Returning a non-zero color enables the view system to
            optimize the drawing of the fading edges. If you do return a non-zero color, the alpha
            should be set to 0xFF.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSolidColor()" title="Reference documentation">Java documentation for <code>android.view.View.getSolidColor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalFadingEdgeEnabled" />
        <altmember cref="P:Android.Views.View.HorizontalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="SoundEffectsEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SoundEffectsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SoundEffectsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool SoundEffectsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SoundEffectsEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SoundEffectsEnabled" />
      <MemberSignature Language="F#" Value="member this.SoundEffectsEnabled : bool with get, set" Usage="Android.Views.View.SoundEffectsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSoundEffectsEnabled", "()Z", "GetIsSoundEffectsEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSoundEffectsEnabled", "()Z", "GetIsSoundEffectsEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSoundEffectsEnabled", "(Z)V", "GetSetSoundEffectsEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSoundEffectsEnabled", "(Z)V", "GetSetSoundEffectsEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="soundEffectsEnabled">whether sound effects are enabled for this view.</param>
        <summary>Set whether this view should have sound effects enabled for events such as
            clicking and touching.</summary>
        <value>whether this view should have sound effects enabled for events such as
                clicking and touching.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isSoundEffectsEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isSoundEffectsEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether this view should have sound effects enabled for events such as
            clicking and touching.</para>
          <para>You may wish to disable sound effects for a view if you already play sounds,
            for instance, a dial key that plays dtmf tones.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSoundEffectsEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setSoundEffectsEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.SoundEffectsEnabled" />
        <altmember cref="M:Android.Views.View.PlaySoundEffect(Android.Views.SoundEffects)" />
      </Docs>
    </Member>
    <Member MemberName="SourceLayoutResId">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SourceLayoutResId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SourceLayoutResId { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int SourceLayoutResId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SourceLayoutResId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SourceLayoutResId" />
      <MemberSignature Language="F#" Value="member this.SourceLayoutResId : int" Usage="Android.Views.View.SourceLayoutResId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSourceLayoutResId", "()I", "GetGetSourceLayoutResIdHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSourceLayoutResId", "()I", "GetGetSourceLayoutResIdHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>View</c> can be inflated from an XML layout.</summary>
        <value>The layout resource id if this view was inflated from XML, otherwise
            <c>Resources#ID_NULL</c>.</value>
        <remarks>
          <para>A <c>View</c> can be inflated from an XML layout. For such Views this method returns the
            resource ID of the source layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSourceLayoutResId()" title="Reference documentation">Java documentation for <code>android.view.View.getSourceLayoutResId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActionMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartActionMode (callback As ActionMode.ICallback) As ActionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ActionMode ^ StartActionMode(Android::Views::ActionMode::ICallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? StartActionMode (Android.Views.ActionMode.ICallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode StartActionMode(class Android.Views.ActionMode/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback)" />
      <MemberSignature Language="F#" Value="abstract member StartActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode&#xA;override this.StartActionMode : Android.Views.ActionMode.ICallback -&gt; Android.Views.ActionMode" Usage="view.StartActionMode callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">Callback that will control the lifecycle of the action mode</param>
        <summary>Start an action mode with the default type <c>ActionMode#TYPE_PRIMARY</c>.</summary>
        <returns>The new action mode if it is started, null otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.view.View.startActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="T:Android.Views.ActionMode" />
        <altmember cref="M:Android.Views.View.StartActionMode(.ICallback, Android.Views.ActionModeType)" />
      </Docs>
    </Member>
    <Member MemberName="StartActionMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartActionMode (callback As ActionMode.ICallback, type As ActionModeType) As ActionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::ActionMode ^ StartActionMode(Android::Views::ActionMode::ICallback ^ callback, Android::Views::ActionModeType type);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ActionMode? StartActionMode (Android.Views.ActionMode.ICallback? callback, Android.Views.ActionModeType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ActionMode StartActionMode(class Android.Views.ActionMode/ICallback callback, valuetype Android.Views.ActionModeType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartActionMode(Android.Views.ActionMode.ICallback,Android.Views.ActionModeType)" />
      <MemberSignature Language="F#" Value="abstract member StartActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode&#xA;override this.StartActionMode : Android.Views.ActionMode.ICallback * Android.Views.ActionModeType -&gt; Android.Views.ActionMode" Usage="view.StartActionMode (callback, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startActionMode", "(Landroid/view/ActionMode$Callback;I)Landroid/view/ActionMode;", "GetStartActionMode_Landroid_view_ActionMode_Callback_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ActionMode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ActionMode+ICallback" />
        <Parameter Name="type" Type="Android.Views.ActionModeType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="callback">Callback that will control the lifecycle of the action mode</param>
        <param name="type">To be added.</param>
        <summary>Start an action mode with the default type <c>ActionMode#TYPE_PRIMARY</c>.</summary>
        <returns>The new action mode if it is started, null otherwise</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startActionMode(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.view.View.startActionMode(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAnimation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartAnimation (animation As Animation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartAnimation(Android::Views::Animations::Animation ^ animation);" />
      <MemberSignature Language="C#" Value="public virtual void StartAnimation (Android.Views.Animations.Animation? animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartAnimation(class Android.Views.Animations.Animation animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartAnimation(Android.Views.Animations.Animation)" />
      <MemberSignature Language="F#" Value="abstract member StartAnimation : Android.Views.Animations.Animation -&gt; unit&#xA;override this.StartAnimation : Android.Views.Animations.Animation -&gt; unit" Usage="view.StartAnimation animation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startAnimation", "(Landroid/view/animation/Animation;)V", "GetStartAnimation_Landroid_view_animation_Animation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startAnimation", "(Landroid/view/animation/Animation;)V", "GetStartAnimation_Landroid_view_animation_Animation_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="animation" Type="Android.Views.Animations.Animation" />
      </Parameters>
      <Docs>
        <param name="animation">the animation to start now</param>
        <summary>Start the specified animation now.</summary>
        <remarks>
          <para>Start the specified animation now.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startAnimation(android.view.animation.Animation)" title="Reference documentation">Java documentation for <code>android.view.View.startAnimation(android.view.animation.Animation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartDrag">
      <MemberSignature Language="VB.NET" Value="Public Function StartDrag (data As ClipData, shadowBuilder As View.DragShadowBuilder, myLocalState As Object, flags As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartDrag(Android::Content::ClipData ^ data, Android::Views::View::DragShadowBuilder ^ shadowBuilder, Java::Lang::Object ^ myLocalState, int flags);" />
      <MemberSignature Language="C#" Value="public bool StartDrag (Android.Content.ClipData? data, Android.Views.View.DragShadowBuilder? shadowBuilder, Java.Lang.Object? myLocalState, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartDrag(class Android.Content.ClipData data, class Android.Views.View/DragShadowBuilder shadowBuilder, class Java.Lang.Object myLocalState, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartDrag(Android.Content.ClipData,Android.Views.View.DragShadowBuilder,Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.StartDrag : Android.Content.ClipData * Android.Views.View.DragShadowBuilder * Java.Lang.Object * int -&gt; bool" Usage="view.StartDrag (data, shadowBuilder, myLocalState, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDrag", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDrag", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.Content.ClipData" />
        <Parameter Name="shadowBuilder" Type="Android.Views.View+DragShadowBuilder" />
        <Parameter Name="myLocalState" Type="Java.Lang.Object" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <see cref="T:Android.Content.ClipData" /> object pointing to the data to be
 transferred by the drag and drop operation.</param>
        <param name="shadowBuilder">A <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=View DragShadowBuilder ;scope=Xamarin" title="View DragShadowBuilder ">View DragShadowBuilder </a></format> object for building the
 drag shadow.</param>
        <param name="myLocalState">An <see cref="T:Java.Lang.Object" /> containing local data about the drag and
 drop operation. This Object is put into every DragEvent object sent by the system during the
 current drag.
 <para tool="javadoc-to-mdoc">
 myLocalState is a lightweight mechanism for the sending information from the dragged View
 to the target Views. For example, it can contain flags that differentiate between a
 a copy operation and a move operation.
 </para></param>
        <param name="flags">Flags that control the drag and drop operation. No flags are currently defined,
 so the parameter should be set to 0.</param>
        <summary>Starts a drag and drop operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startDrag(android.content.ClipData,%20android.view.DragShadowBuilder,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.startDrag(android.content.ClipData, android.view.DragShadowBuilder, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="StartDragAndDrop">
      <MemberSignature Language="VB.NET" Value="Public Function StartDragAndDrop (data As ClipData, shadowBuilder As View.DragShadowBuilder, myLocalState As Object, flags As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartDragAndDrop(Android::Content::ClipData ^ data, Android::Views::View::DragShadowBuilder ^ shadowBuilder, Java::Lang::Object ^ myLocalState, int flags);" />
      <MemberSignature Language="C#" Value="public bool StartDragAndDrop (Android.Content.ClipData? data, Android.Views.View.DragShadowBuilder? shadowBuilder, Java.Lang.Object? myLocalState, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartDragAndDrop(class Android.Content.ClipData data, class Android.Views.View/DragShadowBuilder shadowBuilder, class Java.Lang.Object myLocalState, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartDragAndDrop(Android.Content.ClipData,Android.Views.View.DragShadowBuilder,Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.StartDragAndDrop : Android.Content.ClipData * Android.Views.View.DragShadowBuilder * Java.Lang.Object * int -&gt; bool" Usage="view.StartDragAndDrop (data, shadowBuilder, myLocalState, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDragAndDrop", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDragAndDrop", "(Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="Android.Content.ClipData" />
        <Parameter Name="shadowBuilder" Type="Android.Views.View+DragShadowBuilder" />
        <Parameter Name="myLocalState" Type="Java.Lang.Object" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data">A <c>android.content.ClipData</c> object pointing to the data to be
            transferred by the drag and drop operation.</param>
        <param name="shadowBuilder">A <c>android.view.View.DragShadowBuilder</c> object for building the
            drag shadow.</param>
        <param name="myLocalState">An <c>java.lang.Object</c> containing local data about the drag and
            drop operation. When dispatching drag events to views in the same activity this object
            will be available through <c>android.view.DragEvent#getLocalState()</c>. Views in other
            activities will not have access to this data (<c>android.view.DragEvent#getLocalState()</c>
            will return null).
            &lt;p&gt;
            myLocalState is a lightweight mechanism for the sending information from the dragged View
            to the target Views. For example, it can contain flags that differentiate between a
            a copy operation and a move operation.
            &lt;/p&gt;</param>
        <param name="flags">Flags that control the drag and drop operation. This can be set to 0 for no
            flags, or any combination of the following:
                &lt;ul&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_GLOBAL</c>&lt;/li&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_GLOBAL_PERSISTABLE_URI_PERMISSION</c>&lt;/li&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_GLOBAL_PREFIX_URI_PERMISSION</c>&lt;/li&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_GLOBAL_URI_READ</c>&lt;/li&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_GLOBAL_URI_WRITE</c>&lt;/li&gt;
                    &lt;li&gt;<c>#DRAG_FLAG_OPAQUE</c>&lt;/li&gt;
                &lt;/ul&gt;</param>
        <summary>Starts a drag and drop operation.</summary>
        <returns>
          <c>true</c> if the method completes successfully, or
            <c>false</c> if it fails anywhere. Returning <c>false</c> means the system was unable to
            do a drag because of another ongoing operation or some other reasons.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startDragAndDrop(android.content.ClipData,%20android.view.DragShadowBuilder,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.view.View.startDragAndDrop(android.content.ClipData, android.view.DragShadowBuilder, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNestedScroll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartNestedScroll (axes As ScrollAxis) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool StartNestedScroll(Android::Views::ScrollAxis axes);" />
      <MemberSignature Language="C#" Value="public virtual bool StartNestedScroll (Android.Views.ScrollAxis axes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartNestedScroll(valuetype Android.Views.ScrollAxis axes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StartNestedScroll(Android.Views.ScrollAxis)" />
      <MemberSignature Language="F#" Value="abstract member StartNestedScroll : Android.Views.ScrollAxis -&gt; bool&#xA;override this.StartNestedScroll : Android.Views.ScrollAxis -&gt; bool" Usage="view.StartNestedScroll axes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="axes" Type="Android.Views.ScrollAxis">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="axes">Flags consisting of a combination of <c>#SCROLL_AXIS_HORIZONTAL</c> and/or
                        <c>#SCROLL_AXIS_VERTICAL</c>.</param>
        <summary>Begin a nestable scroll operation along the given axes.</summary>
        <returns>true if a cooperative parent was found and nested scrolling has been enabled for
                    the current gesture.</returns>
        <remarks>
          <para>Begin a nestable scroll operation along the given axes.</para>
          <para>A view starting a nested scroll promises to abide by the following contract:</para>
          <para>The view will call startNestedScroll upon initiating a scroll operation. In the case
            of a touch scroll this corresponds to the initial <c>MotionEvent#ACTION_DOWN</c>.
            In the case of touch scrolling the nested scroll will be terminated automatically in
            the same manner as <c>ViewParent#requestDisallowInterceptTouchEvent(boolean)</c>.
            In the event of programmatic scrolling the caller must explicitly call
            <c>#stopNestedScroll()</c> to indicate the end of the nested scroll.</para>
          <para>If <c>startNestedScroll</c> returns true, a cooperative parent was found.
            If it returns false the caller may ignore the rest of this contract until the next scroll.
            Calling startNestedScroll while a nested scroll is already in progress will return true.</para>
          <para>At each incremental step of the scroll the caller should invoke
            <c>#dispatchNestedPreScroll(int, int, int[], int[]) dispatchNestedPreScroll</c>
            once it has calculated the requested scrolling delta. If it returns true the nested scrolling
            parent at least partially consumed the scroll and the caller should adjust the amount it
            scrolls by.</para>
          <para>After applying the remainder of the scroll delta the caller should invoke
            <c>#dispatchNestedScroll(int, int, int, int, int[]) dispatchNestedScroll</c>, passing
            both the delta consumed and the delta unconsumed. A nested scrolling parent may treat
            these values differently. See <c>ViewParent#onNestedScroll(View, int, int, int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#startNestedScroll(int)" title="Reference documentation">Java documentation for <code>android.view.View.startNestedScroll(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.StopNestedScroll" />
        <altmember cref="M:Android.Views.View.DispatchNestedPreScroll(System.Int32, System.Int32, System.Int32, System.Int32)" />
        <altmember cref="M:Android.Views.View.DispatchNestedScroll(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="StateDescription">
      <MemberSignature Language="VB.NET" Value="Public Property StateDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StateDescription { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? StateDescription { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StateDescription" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.StateDescription" />
      <MemberSignature Language="F#" Value="member this.StateDescription : string with get, set" Usage="Android.Views.View.StateDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateDescriptionFormatted">
      <MemberSignature Language="VB.NET" Value="Public Property StateDescriptionFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Lang::ICharSequence ^ StateDescriptionFormatted { Java::Lang::ICharSequence ^ get(); void set(Java::Lang::ICharSequence ^ value); };" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? StateDescriptionFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence StateDescriptionFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.StateDescriptionFormatted" />
      <MemberSignature Language="F#" Value="member this.StateDescriptionFormatted : Java.Lang.ICharSequence with get, set" Usage="Android.Views.View.StateDescriptionFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStateDescription", "()Ljava/lang/CharSequence;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStateDescription", "()Ljava/lang/CharSequence;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStateDescription", "(Ljava/lang/CharSequence;)V", "GetSetStateDescription_Ljava_lang_CharSequence_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStateDescription", "(Ljava/lang/CharSequence;)V", "GetSetStateDescription_Ljava_lang_CharSequence_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="stateDescription">The state description.</param>
        <summary>Returns the <c>View</c>'s state description. -or- Sets the <c>View</c>'s state description.</summary>
        <value>the state description</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the <c>View</c>'s state description.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Do not override this method, as it will have no
            effect on the state description presented to accessibility services.
            You must call <c>#setStateDescription(CharSequence)</c> to modify the
            state description.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getStateDescription()" title="Reference documentation">Java documentation for <code>android.view.View.getStateDescription()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>View</c>'s state description.</para>
          <para>A state description briefly describes the states of the view and is primarily used
            for accessibility support to determine how the states of a view should be presented to
            the user. It is a supplement to the boolean states (for example, checked/unchecked) and
            it is used for customized state description (for example, "wifi, connected, three bars").
            State description changes frequently while content description should change less often.
            State description should be localized. For android widgets which have default state
            descriptions, app developers can call this method to override the state descriptions.
            Setting state description to null restores the default behavior.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setStateDescription(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.setStateDescription(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StateListAnimator">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StateListAnimator As StateListAnimator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Animation::StateListAnimator ^ StateListAnimator { Android::Animation::StateListAnimator ^ get(); void set(Android::Animation::StateListAnimator ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Animation.StateListAnimator? StateListAnimator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.StateListAnimator StateListAnimator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.StateListAnimator" />
      <MemberSignature Language="F#" Value="member this.StateListAnimator : Android.Animation.StateListAnimator with get, set" Usage="Android.Views.View.StateListAnimator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStateListAnimator", "()Landroid/animation/StateListAnimator;", "GetGetStateListAnimatorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStateListAnimator", "()Landroid/animation/StateListAnimator;", "GetGetStateListAnimatorHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStateListAnimator", "(Landroid/animation/StateListAnimator;)V", "GetSetStateListAnimator_Landroid_animation_StateListAnimator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStateListAnimator", "(Landroid/animation/StateListAnimator;)V", "GetSetStateListAnimator_Landroid_animation_StateListAnimator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.StateListAnimator</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="stateListAnimator">The StateListAnimator to update the view</param>
        <summary>Returns the current StateListAnimator if exists. -or- Attaches the provided StateListAnimator to this View.</summary>
        <value>StateListAnimator or null if it does not exists</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current StateListAnimator if exists.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getStateListAnimator()" title="Reference documentation">Java documentation for <code>android.view.View.getStateListAnimator()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Attaches the provided StateListAnimator to this View.</para>
          <para>Any previously attached StateListAnimator will be detached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setStateListAnimator(android.animation.StateListAnimator)" title="Reference documentation">Java documentation for <code>android.view.View.setStateListAnimator(android.animation.StateListAnimator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.StateListAnimator" />
      </Docs>
    </Member>
    <Member MemberName="StopNestedScroll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StopNestedScroll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopNestedScroll();" />
      <MemberSignature Language="C#" Value="public virtual void StopNestedScroll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopNestedScroll() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.StopNestedScroll" />
      <MemberSignature Language="F#" Value="abstract member StopNestedScroll : unit -&gt; unit&#xA;override this.StopNestedScroll : unit -&gt; unit" Usage="view.StopNestedScroll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopNestedScroll", "()V", "GetStopNestedScrollHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopNestedScroll", "()V", "GetStopNestedScrollHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop a nested scroll in progress.</summary>
        <remarks>
          <para>Stop a nested scroll in progress.</para>
          <para>Calling this method when a nested scroll is not currently in progress is harmless.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#stopNestedScroll()" title="Reference documentation">Java documentation for <code>android.view.View.stopNestedScroll()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.StartNestedScroll(Android.Views.ScrollAxis)" />
      </Docs>
    </Member>
    <Member MemberName="SuggestedMinimumHeight">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SuggestedMinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int SuggestedMinimumHeight { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int SuggestedMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SuggestedMinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SuggestedMinimumHeight" />
      <MemberSignature Language="F#" Value="member this.SuggestedMinimumHeight : int" Usage="Android.Views.View.SuggestedMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSuggestedMinimumHeight", "()I", "GetGetSuggestedMinimumHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSuggestedMinimumHeight", "()I", "GetGetSuggestedMinimumHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the suggested minimum height that the view should use.</summary>
        <value>The suggested minimum height of the view.</value>
        <remarks>
          <para>Returns the suggested minimum height that the view should use. This
            returns the maximum of the view's minimum height
            and the background's minimum height
            (<c>android.graphics.drawable.Drawable#getMinimumHeight()</c>).</para>
          <para>When being used in <c>#onMeasure(int, int)</c>, the caller should still
            ensure the returned height is within the requirements of the parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSuggestedMinimumHeight()" title="Reference documentation">Java documentation for <code>android.view.View.getSuggestedMinimumHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuggestedMinimumWidth">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SuggestedMinimumWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int SuggestedMinimumWidth { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int SuggestedMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SuggestedMinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SuggestedMinimumWidth" />
      <MemberSignature Language="F#" Value="member this.SuggestedMinimumWidth : int" Usage="Android.Views.View.SuggestedMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSuggestedMinimumWidth", "()I", "GetGetSuggestedMinimumWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSuggestedMinimumWidth", "()I", "GetGetSuggestedMinimumWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the suggested minimum width that the view should use.</summary>
        <value>The suggested minimum width of the view.</value>
        <remarks>
          <para>Returns the suggested minimum width that the view should use. This
            returns the maximum of the view's minimum width
            and the background's minimum width
             (<c>android.graphics.drawable.Drawable#getMinimumWidth()</c>).</para>
          <para>When being used in <c>#onMeasure(int, int)</c>, the caller should still
            ensure the returned width is within the requirements of the parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSuggestedMinimumWidth()" title="Reference documentation">Java documentation for <code>android.view.View.getSuggestedMinimumWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SystemGestureExclusionRects">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SystemGestureExclusionRects As IList(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ SystemGestureExclusionRects { System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Android::Graphics::Rect ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; SystemGestureExclusionRects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Graphics.Rect&gt; SystemGestureExclusionRects" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SystemGestureExclusionRects" />
      <MemberSignature Language="F#" Value="member this.SystemGestureExclusionRects : System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; with get, set" Usage="Android.Views.View.SystemGestureExclusionRects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemGestureExclusionRects", "()Ljava/util/List;", "GetGetSystemGestureExclusionRectsHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemGestureExclusionRects", "()Ljava/util/List;", "GetGetSystemGestureExclusionRectsHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSystemGestureExclusionRects", "(Ljava/util/List;)V", "GetSetSystemGestureExclusionRects_Ljava_util_List_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSystemGestureExclusionRects", "(Ljava/util/List;)V", "GetSetSystemGestureExclusionRects_Ljava_util_List_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rects">A list of precision gesture regions that this view needs to function correctly</param>
        <summary>Retrieve the list of areas within this view's post-layout coordinate space where the system
            should not intercept touch or other pointing device gestures. -or- Sets a list of areas within this view's post-layout coordinate space where the system
            should not intercept touch or other pointing device gestures.</summary>
        <value>the list set by <c>#setSystemGestureExclusionRects(List)</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the list of areas within this view's post-layout coordinate space where the system
            should not intercept touch or other pointing device gestures.</para>
          <para>Do not modify the returned list.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSystemGestureExclusionRects()" title="Reference documentation">Java documentation for <code>android.view.View.getSystemGestureExclusionRects()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a list of areas within this view's post-layout coordinate space where the system
            should not intercept touch or other pointing device gestures. &lt;em&gt;This method should
            be called by <c>#onLayout(boolean, int, int, int, int)</c> or <c>#onDraw(Canvas)</c>.&lt;/em&gt;</para>
          <para>Use this to tell the system which specific sub-areas of a view need to receive gesture
            input in order to function correctly in the presence of global system gestures that may
            conflict. For example, if the system wishes to capture swipe-in-from-screen-edge gestures
            to provide system-level navigation functionality, a view such as a navigation drawer
            container can mark the left (or starting) edge of itself as requiring gesture capture
            priority using this API. The system may then choose to relax its own gesture recognition
            to allow the app to consume the user's gesture. It is not necessary for an app to register
            exclusion rects for broadly spanning regions such as the entirety of a
            <c>ScrollView</c> or for simple press and release click targets such as
            <c>Button</c>. Mark an exclusion rect when interacting with a view requires
            a precision touch gesture in a small area in either the X or Y dimension, such as
            an edge swipe or dragging a <c>SeekBar</c> thumb.</para>
          <para>Note: the system will put a limit of <c>200dp</c> on the vertical extent of the
            exclusions it takes into account. The limit does not apply while the navigation
            bar is <c>#SYSTEM_UI_FLAG_IMMERSIVE_STICKY stickily</c> hidden, nor to the
            <c>android.inputmethodservice.InputMethodService input method</c> and
            <c>Intent#CATEGORY_HOME home activity</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSystemGestureExclusionRects(java.util.List%3Candroid.graphics.Rect%3E)" title="Reference documentation">Java documentation for <code>android.view.View.setSystemGestureExclusionRects(java.util.List&lt;android.graphics.Rect&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagFullscreen">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagFullscreen As SystemUiFlags  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagFullscreen = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagFullscreen = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagFullscreen = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagFullscreen" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagFullscreen : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagFullscreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_FULLSCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_FULLSCREEN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested to go
            into the normal fullscreen mode so that its content can take over the screen
            while still allowing the user to interact with the application.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested to go
            into the normal fullscreen mode so that its content can take over the screen
            while still allowing the user to interact with the application.</para>
          <para>This has the same visual effect as
            <c>android.view.WindowManager.LayoutParams#FLAG_FULLSCREEN
            WindowManager.LayoutParams.FLAG_FULLSCREEN</c>,
            meaning that non-critical screen decorations (such as the status bar) will be
            hidden while the user is in the View's window, focusing the experience on
            that content.  Unlike the window flag, if you are using ActionBar in
            overlay mode with <c>Window#FEATURE_ACTION_BAR_OVERLAY
            Window.FEATURE_ACTION_BAR_OVERLAY</c>, then enabling this flag will also
            hide the action bar.</para>
          <para>This approach to going fullscreen is best used over the window flag when
            it is a transient state -- that is, the application does this at certain
            points in its user interaction where it wants to allow the user to focus
            on content, but not as a continuous state.  For situations where the application
            would like to simply stay full screen the entire time (such as a game that
            wants to take over the screen), the
            <c>android.view.WindowManager.LayoutParams#FLAG_FULLSCREEN window flag</c>
            is usually a better approach.  The state set here will be removed by the system
            in various situations (such as the user moving to another application) like
            the other system UI states.</para>
          <para>When using this flag, the application should provide some easy facility
            for the user to go out of it.  A common example would be in an e-book
            reader, where tapping on the screen brings back whatever screen and UI
            decorations that had been hidden while the user was immersed in reading
            the book.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#hide(int)</c> with <c>Type#statusBars()</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_FULLSCREEN" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_FULLSCREEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagHideNavigation">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagHideNavigation As SystemUiFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagHideNavigation = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagHideNavigation = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagHideNavigation = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagHideNavigation" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagHideNavigation : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagHideNavigation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_HIDE_NAVIGATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_HIDE_NAVIGATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested that the
            system navigation be temporarily hidden.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested that the
            system navigation be temporarily hidden.</para>
          <para>This is an even less obtrusive state than that called for by
            <c>#SYSTEM_UI_FLAG_LOW_PROFILE</c>; on devices that draw essential navigation controls
            (Home, Back, and the like) on screen, <c>SYSTEM_UI_FLAG_HIDE_NAVIGATION</c> will cause
            those to disappear. This is useful (in conjunction with the
            <c>android.view.WindowManager.LayoutParams#FLAG_FULLSCREEN FLAG_FULLSCREEN</c> and
            <c>android.view.WindowManager.LayoutParams#FLAG_LAYOUT_IN_SCREEN FLAG_LAYOUT_IN_SCREEN</c>
            window flags) for displaying content using every last pixel on the display.</para>
          <para>There is a limitation: because navigation controls are so important, the least user
            interaction will cause them to reappear immediately.  When this happens, both
            this flag and <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> will be cleared automatically,
            so that both elements reappear at the same time.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#hide(int)</c> with <c>Type#navigationBars()</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_HIDE_NAVIGATION" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_HIDE_NAVIGATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagImmersive">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagImmersive As SystemUiFlags  = 2048" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagImmersive = 2048;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagImmersive = 2048;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagImmersive = (2048)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagImmersive" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagImmersive : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagImmersive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View would like to remain interactive when
            hiding the navigation bar with <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View would like to remain interactive when
            hiding the navigation bar with <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>.  If this flag is
            not set, <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c> will be force cleared by the system on any
            user interaction.</para>
          <para>Since this flag is a modifier for <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, it only
            has an effect when used in combination with that flag.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#BEHAVIOR_DEFAULT</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_IMMERSIVE" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_IMMERSIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagImmersiveSticky">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagImmersiveSticky As SystemUiFlags  = 4096" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagImmersiveSticky = 4096;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagImmersiveSticky = 4096;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagImmersiveSticky = (4096)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagImmersiveSticky" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagImmersiveSticky : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagImmersiveSticky" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE_STICKY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_IMMERSIVE_STICKY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View would like to remain interactive when
            hiding the status bar with <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> and/or hiding the navigation
            bar with <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View would like to remain interactive when
            hiding the status bar with <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> and/or hiding the navigation
            bar with <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>.  Use this flag to create an immersive
            experience while also hiding the system bars.  If this flag is not set,
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c> will be force cleared by the system on any user
            interaction, and <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> will be force-cleared by the system
            if the user swipes from the top of the screen.</para>
          <para>When system bars are hidden in immersive mode, they can be revealed temporarily with
            system gestures, such as swiping from the top of the screen.  These transient system bars
            will overlay app's content, may have some degree of transparency, and will automatically
            hide after a short timeout.</para>
          <para>Since this flag is a modifier for <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> and
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, it only has an effect when used in combination
            with one or both of those flags.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_IMMERSIVE_STICKY" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutFullscreen">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLayoutFullscreen As SystemUiFlags  = 1024" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLayoutFullscreen = 1024;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutFullscreen = 1024;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutFullscreen = (1024)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLayoutFullscreen" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLayoutFullscreen : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLayoutFullscreen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View would like its window
            to be laid out as if it has requested
            <c>#SYSTEM_UI_FLAG_FULLSCREEN</c>, even if it currently hasn't.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View would like its window
            to be laid out as if it has requested
            <c>#SYSTEM_UI_FLAG_FULLSCREEN</c>, even if it currently hasn't.  This
            allows it to avoid artifacts when switching in and out of that mode, at
            the expense that some of its user interface may be covered by screen
            decorations when they are shown.  You can perform layout of your inner
            UI elements to account for non-fullscreen system UI through the
            <c>#fitSystemWindows(Rect)</c> method.</para>
          <para>Note: on displays that have a <c>DisplayCutout</c>, the window may still be placed
             differently than if <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> was set, if the
             window's <c>WindowManager.LayoutParams#layoutInDisplayCutoutMode
             layoutInDisplayCutoutMode</c> is
             <c>WindowManager.LayoutParams#LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT
             LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT</c>. To avoid this, use either of the other modes.</para>
          <para>This member is deprecated. For floating windows, use <c>LayoutParams#setFitInsetsTypes(int)</c> with
            <c>Type#statusBars()</c> ()}. For non-floating windows that fill the screen, call
            <c>Window#setDecorFitsSystemWindows(boolean)</c> with <c>false</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutHideNavigation">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLayoutHideNavigation As SystemUiFlags  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLayoutHideNavigation = 512;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutHideNavigation = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutHideNavigation = (512)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLayoutHideNavigation" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLayoutHideNavigation : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLayoutHideNavigation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View would like its window
            to be laid out as if it has requested
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, even if it currently hasn't.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View would like its window
            to be laid out as if it has requested
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, even if it currently hasn't.  This
            allows it to avoid artifacts when switching in and out of that mode, at
            the expense that some of its user interface may be covered by screen
            decorations when they are shown.  You can perform layout of your inner
            UI elements to account for the navigation system UI through the
            <c>#fitSystemWindows(Rect)</c> method.</para>
          <para>This member is deprecated. For floating windows, use <c>LayoutParams#setFitInsetsTypes(int)</c> with
            <c>Type#navigationBars()</c>. For non-floating windows that fill the screen, call
            <c>Window#setDecorFitsSystemWindows(boolean)</c> with <c>false</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLayoutStable">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLayoutStable As SystemUiFlags  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLayoutStable = 256;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLayoutStable = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLayoutStable = (256)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLayoutStable" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLayoutStable : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLayoutStable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_STABLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LAYOUT_STABLE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: When using other layout
            flags, we would like a stable view of the content insets given to
            <c>#fitSystemWindows(Rect)</c>.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: When using other layout
            flags, we would like a stable view of the content insets given to
            <c>#fitSystemWindows(Rect)</c>.  This means that the insets seen there
            will always represent the worst case that the application can expect
            as a continuous state.  In the stock Android UI this is the space for
            the system bar, nav bar, and status bar, but not more transient elements
            such as an input method.
            
            The stable layout your UI sees is based on the system UI modes you can
            switch to.  That is, if you specify <c>#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c>
            then you will get a stable layout for changes of the
            <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> mode; if you specify
            <c>#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c> and
            <c>#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c>, then you can transition
            to <c>#SYSTEM_UI_FLAG_FULLSCREEN</c> and <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>
            with a stable layout.  (Note that you should avoid using
            <c>#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c> by itself.)
            
            If you have set the window flag <c>WindowManager.LayoutParams#FLAG_FULLSCREEN</c>
            to hide the status bar (instead of using <c>#SYSTEM_UI_FLAG_FULLSCREEN</c>),
            then a hidden status bar will be considered a "stable" state for purposes
            here.  This allows your UI to continually hide the status bar, while still
            using the system UI flags to hide the action bar while still retaining
            a stable layout.  Note that changing the window fullscreen flag will never
            provide a stable layout for a clean transition.</para>
          <para>If you are using ActionBar in
            overlay mode with <c>Window#FEATURE_ACTION_BAR_OVERLAY
            Window.FEATURE_ACTION_BAR_OVERLAY</c>, this flag will also impact the
            insets it adds to those given to the application.</para>
          <para>This member is deprecated. Use <c>WindowInsets#getInsetsIgnoringVisibility(int)</c> instead to retrieve
            insets that don't change when system bars change visibility state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LAYOUT_STABLE" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LAYOUT_STABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLightNavigationBar">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLightNavigationBar As SystemUiFlags  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLightNavigationBar = 16;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLightNavigationBar = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLightNavigationBar = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLightNavigationBar" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLightNavigationBar : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLightNavigationBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: Requests the navigation bar to draw in a mode
            that is compatible with light navigation bar backgrounds.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: Requests the navigation bar to draw in a mode
            that is compatible with light navigation bar backgrounds.</para>
          <para>For this to take effect, the window must request
            <c>android.view.WindowManager.LayoutParams#FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS
                    FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS</c> but not
            <c>android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_NAVIGATION
                    FLAG_TRANSLUCENT_NAVIGATION</c>.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#APPEARANCE_LIGHT_NAVIGATION_BARS</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LIGHT_NAVIGATION_BAR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLightStatusBar">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLightStatusBar As SystemUiFlags  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLightStatusBar = 8192;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLightStatusBar = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLightStatusBar = (8192)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLightStatusBar" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLightStatusBar : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLightStatusBar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LIGHT_STATUS_BAR", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LIGHT_STATUS_BAR", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: Requests the status bar to draw in a mode that
            is compatible with light status bar backgrounds.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: Requests the status bar to draw in a mode that
            is compatible with light status bar backgrounds.</para>
          <para>For this to take effect, the window must request
            <c>android.view.WindowManager.LayoutParams#FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS
                    FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS</c> but not
            <c>android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_STATUS
                    FLAG_TRANSLUCENT_STATUS</c>.</para>
          <para>This member is deprecated. Use <c>WindowInsetsController#APPEARANCE_LIGHT_STATUS_BARS</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LIGHT_STATUS_BAR" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagLowProfile">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagLowProfile As SystemUiFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagLowProfile = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagLowProfile = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagLowProfile = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagLowProfile" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagLowProfile : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagLowProfile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_LOW_PROFILE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_LOW_PROFILE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested the
            system UI to enter an unobtrusive "low profile" mode.</summary>
        <remarks>
          <para>Flag for <c>#setSystemUiVisibility(int)</c>: View has requested the
            system UI to enter an unobtrusive "low profile" mode.</para>
          <para>This is for use in games, book readers, video players, or any other
            "immersive" application where the usual system chrome is deemed too distracting.</para>
          <para>In low profile mode, the status bar and/or navigation icons may dim.</para>
          <para>This member is deprecated. Low profile mode is deprecated. Hide the system bars instead if the application
            needs to be in a unobtrusive mode. Use <c>WindowInsetsController#hide(int)</c> with
            <c>Type#systemBars()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_LOW_PROFILE" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_LOW_PROFILE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlags">
      <MemberSignature Language="VB.NET" Value="Public Property SystemUiFlags As SystemUiFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::SystemUiFlags SystemUiFlags { Android::Views::SystemUiFlags get(); void set(Android::Views::SystemUiFlags value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.SystemUiFlags SystemUiFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SystemUiFlags SystemUiFlags" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SystemUiFlags" />
      <MemberSignature Language="F#" Value="member this.SystemUiFlags : Android.Views.SystemUiFlags with get, set" Usage="Android.Views.View.SystemUiFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "These flags are deprecated. Use WindowInsetsController instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "These flags are deprecated. Use WindowInsetsController instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemUiFlagVisible">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiFlagVisible As SystemUiFlags  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiFlagVisible = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiFlagVisible = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiFlagVisible = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiFlagVisible" />
      <MemberSignature Language="F#" Value="val mutable SystemUiFlagVisible : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiFlagVisible" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_FLAG_VISIBLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_FLAG_VISIBLE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Special constant for <c>#setSystemUiVisibility(int)</c>: View has
            requested the system UI (status bar) to be visible (the default).</summary>
        <remarks>
          <para>Special constant for <c>#setSystemUiVisibility(int)</c>: View has
            requested the system UI (status bar) to be visible (the default).</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_FLAG_VISIBLE" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_FLAG_VISIBLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.View.SystemUiVisibility" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiLayoutFlags">
      <MemberSignature Language="VB.NET" Value="Public Const SystemUiLayoutFlags As SystemUiFlags  = 1536" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::SystemUiFlags SystemUiLayoutFlags = 1536;" />
      <MemberSignature Language="C#" Value="public const Android.Views.SystemUiFlags SystemUiLayoutFlags = 1536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.SystemUiFlags SystemUiLayoutFlags = (1536)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.SystemUiLayoutFlags" />
      <MemberSignature Language="F#" Value="val mutable SystemUiLayoutFlags : Android.Views.SystemUiFlags" Usage="Android.Views.View.SystemUiLayoutFlags" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SYSTEM_UI_LAYOUT_FLAGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SYSTEM_UI_LAYOUT_FLAGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This constant will be removed in the future version. Use Android.Views.SystemUiFlags enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1536</MemberValue>
      <Docs>
        <summary>Flags that can impact the layout in relation to system UI.</summary>
        <remarks>
          <para>Flags that can impact the layout in relation to system UI.</para>
          <para>This member is deprecated. System UI layout flags are deprecated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#SYSTEM_UI_LAYOUT_FLAGS" title="Reference documentation">Java documentation for <code>android.view.View.SYSTEM_UI_LAYOUT_FLAGS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SystemUiVisibility As StatusBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::StatusBarVisibility SystemUiVisibility { Android::Views::StatusBarVisibility get(); void set(Android::Views::StatusBarVisibility value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.StatusBarVisibility SystemUiVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.StatusBarVisibility SystemUiVisibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.SystemUiVisibility" />
      <MemberSignature Language="F#" Value="member this.SystemUiVisibility : Android.Views.StatusBarVisibility with get, set" Usage="Android.Views.View.SystemUiVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This property has an incorrect enumeration type. Use the SystemUiFlags property instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property has an incorrect enumeration type. Use the SystemUiFlags property instead.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemUiVisibility", "()I", "GetGetSystemUiVisibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemUiVisibility", "()I", "GetGetSystemUiVisibilityHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSystemUiVisibility", "(I)V", "GetSetSystemUiVisibility_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSystemUiVisibility", "(I)V", "GetSetSystemUiVisibility_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.StatusBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="visibility">Bitwise-or of flags <c>#SYSTEM_UI_FLAG_LOW_PROFILE</c>,
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, <c>#SYSTEM_UI_FLAG_FULLSCREEN</c>,
            <c>#SYSTEM_UI_FLAG_LAYOUT_STABLE</c>, <c>#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c>,
            <c>#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c>, <c>#SYSTEM_UI_FLAG_IMMERSIVE</c>,
            and <c>#SYSTEM_UI_FLAG_IMMERSIVE_STICKY</c>.</param>
        <summary>Returns the last <c>#setSystemUiVisibility(int)</c> that this view has requested. -or- Request that the visibility of the status bar or other screen/window
            decorations be changed.</summary>
        <value>Bitwise-or of flags <c>#SYSTEM_UI_FLAG_LOW_PROFILE</c>,
            <c>#SYSTEM_UI_FLAG_HIDE_NAVIGATION</c>, <c>#SYSTEM_UI_FLAG_FULLSCREEN</c>,
            <c>#SYSTEM_UI_FLAG_LAYOUT_STABLE</c>, <c>#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c>,
            <c>#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c>, <c>#SYSTEM_UI_FLAG_IMMERSIVE</c>,
            and <c>#SYSTEM_UI_FLAG_IMMERSIVE_STICKY</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the last <c>#setSystemUiVisibility(int)</c> that this view has requested.</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getSystemUiVisibility()" title="Reference documentation">Java documentation for <code>android.view.View.getSystemUiVisibility()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Request that the visibility of the status bar or other screen/window
            decorations be changed.</para>
          <para>This method is used to put the over device UI into temporary modes
            where the user's attention is focused more on the application content,
            by dimming or hiding surrounding system affordances.  This is typically
            used in conjunction with <c>Window#FEATURE_ACTION_BAR_OVERLAY
            Window.FEATURE_ACTION_BAR_OVERLAY</c>, allowing the applications content
            to be placed behind the action bar (and with these flags other system
            affordances) so that smooth transitions between hiding and showing them
            can be done.</para>
          <para>Two representative examples of the use of system UI visibility is
            implementing a content browsing application (like a magazine reader)
            and a video playing application.</para>
          <para>The first code shows a typical implementation of a View in a content
            browsing application.  In this implementation, the application goes
            into a content-oriented mode by hiding the status bar and action bar,
            and putting the navigation elements into lights out mode.  The user can
            then interact with content while in this mode.  Such an application should
            provide an easy way for the user to toggle out of the mode (such as to
            check information in the status bar or access notifications).  In the
            implementation here, this is done simply by tapping on the content.
            
            {</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setSystemUiVisibility(int)" title="Reference documentation">Java documentation for <code>android.view.View.setSystemUiVisibility(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SystemUiVisibilityChange">
      <MemberSignature Language="VB.NET" Value="Public Custom Event SystemUiVisibilityChange As EventHandler(Of View.SystemUiVisibilityChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::SystemUiVisibilityChangeEventArgs ^&gt; ^ SystemUiVisibilityChange;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.SystemUiVisibilityChangeEventArgs&gt; SystemUiVisibilityChange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/SystemUiVisibilityChangeEventArgs&gt; SystemUiVisibilityChange" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.SystemUiVisibilityChange" />
      <MemberSignature Language="F#" Value="member this.SystemUiVisibilityChange : EventHandler&lt;Android.Views.View.SystemUiVisibilityChangeEventArgs&gt; " Usage="member this.SystemUiVisibilityChange : System.EventHandler&lt;Android.Views.View.SystemUiVisibilityChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+SystemUiVisibilityChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::Object ^ Tag { Java::Lang::Object ^ get(); void set(Java::Lang::Object ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Tag" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Tag" />
      <MemberSignature Language="F#" Value="member this.Tag : Java.Lang.Object with get, set" Usage="Android.Views.View.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTag", "()Ljava/lang/Object;", "GetGetTagHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTag", "()Ljava/lang/Object;", "GetGetTagHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTag", "(Ljava/lang/Object;)V", "GetSetTag_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTag", "(Ljava/lang/Object;)V", "GetSetTag_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tag">an Object to tag the view with</param>
        <summary>Returns this view's tag. -or- Sets the tag associated with this view.</summary>
        <value>the Object stored in this view as a tag, or <c>null</c> if not
                    set</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns this view's tag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTag()" title="Reference documentation">Java documentation for <code>android.view.View.getTag()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the tag associated with this view. A tag can be used to mark
            a view in its hierarchy and does not have to be unique within the
            hierarchy. Tags can also be used to store data within a view without
            resorting to another data structure.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTag(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.view.View.setTag(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.GetTag(System.Int32)" />
        <altmember cref="P:Android.Views.View.Tag" />
        <altmember cref="M:Android.Views.View.SetTag(System.Int32, Java.Lang.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::TextAlignment TextAlignment { Android::Views::TextAlignment get(); void set(Android::Views::TextAlignment value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TextAlignment" />
      <MemberSignature Language="F#" Value="member this.TextAlignment : Android.Views.TextAlignment with get, set" Usage="Android.Views.View.TextAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextAlignment", "()I", "GetGetTextAlignmentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextAlignment", "()I", "GetGetTextAlignmentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextAlignment", "(I)V", "GetSetTextAlignment_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextAlignment", "(I)V", "GetSetTextAlignment_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="textAlignment">The text alignment to set. Should be one of
            
            <c>#TEXT_ALIGNMENT_INHERIT</c>,
            <c>#TEXT_ALIGNMENT_GRAVITY</c>,
            <c>#TEXT_ALIGNMENT_CENTER</c>,
            <c>#TEXT_ALIGNMENT_TEXT_START</c>,
            <c>#TEXT_ALIGNMENT_TEXT_END</c>,
            <c>#TEXT_ALIGNMENT_VIEW_START</c>,
            <c>#TEXT_ALIGNMENT_VIEW_END</c>
            
            Resolution will be done if the value is set to TEXT_ALIGNMENT_INHERIT. The resolution
            proceeds up the parent chain of the view to get the value. If there is no parent, then it
            will return the default <c>#TEXT_ALIGNMENT_GRAVITY</c>.</param>
        <summary>Return the resolved text alignment. -or- Set the text alignment.</summary>
        <value>the resolved text alignment. Returns one of:
            
            <c>#TEXT_ALIGNMENT_GRAVITY</c>,
            <c>#TEXT_ALIGNMENT_CENTER</c>,
            <c>#TEXT_ALIGNMENT_TEXT_START</c>,
            <c>#TEXT_ALIGNMENT_TEXT_END</c>,
            <c>#TEXT_ALIGNMENT_VIEW_START</c>,
            <c>#TEXT_ALIGNMENT_VIEW_END</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the resolved text alignment.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTextAlignment()" title="Reference documentation">Java documentation for <code>android.view.View.getTextAlignment()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the text alignment.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTextAlignment(int)" title="Reference documentation">Java documentation for <code>android.view.View.setTextAlignment(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentCenter">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentCenter As TextAlignment  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentCenter = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentCenter = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentCenter = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentCenter" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentCenter : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentCenter" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_CENTER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_CENTER")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Center the paragraph, e.</summary>
        <remarks>
          <para>Center the paragraph, e.g. ALIGN_CENTER.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_CENTER" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_CENTER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentGravity">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentGravity As TextAlignment  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentGravity = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentGravity = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentGravity = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentGravity" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentGravity : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentGravity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_GRAVITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_GRAVITY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Default for the root view.</summary>
        <remarks>
          <para>Default for the root view. The gravity determines the text alignment, ALIGN_NORMAL,
            ALIGN_CENTER, or ALIGN_OPPOSITE, which are relative to each paragraph's text direction.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_GRAVITY" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_GRAVITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentInherit">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentInherit As TextAlignment  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentInherit = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentInherit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentInherit = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentInherit" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentInherit : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentInherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_INHERIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_INHERIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Default text alignment.</summary>
        <remarks>
          <para>Default text alignment. The text alignment of this View is inherited from its parent.
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_INHERIT" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_INHERIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentResolvedDefault">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentResolvedDefault As TextAlignment  = 131072" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentResolvedDefault = 131072;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentResolvedDefault = 131072;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentResolvedDefault = (131072)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentResolvedDefault" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentResolvedDefault : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentResolvedDefault" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_RESOLVED_DEFAULT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_RESOLVED_DEFAULT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary>Default resolved text alignment</summary>
        <remarks>
          <para>Default resolved text alignment</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_RESOLVED_DEFAULT" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_RESOLVED_DEFAULT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentTextEnd">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentTextEnd As TextAlignment  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentTextEnd = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentTextEnd = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentTextEnd = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentTextEnd" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentTextEnd : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentTextEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_END")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_END")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Align to the end of the paragraph, e.</summary>
        <remarks>
          <para>Align to the end of the paragraph, e.g. ALIGN_OPPOSITE.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_TEXT_END" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_TEXT_END</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentTextStart">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentTextStart As TextAlignment  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentTextStart = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentTextStart = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentTextStart = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentTextStart" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentTextStart : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentTextStart" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_START")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_TEXT_START")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Align to the start of the paragraph, e.</summary>
        <remarks>
          <para>Align to the start of the paragraph, e.g. ALIGN_NORMAL.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_TEXT_START" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_TEXT_START</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentViewEnd">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentViewEnd As TextAlignment  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentViewEnd = 6;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentViewEnd = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentViewEnd = (6)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentViewEnd" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentViewEnd : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentViewEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_END")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_END")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Align to the end of the view, which is ALIGN_RIGHT if the view's resolved
            layoutDirection is LTR, and ALIGN_LEFT otherwise.</summary>
        <remarks>
          <para>Align to the end of the view, which is ALIGN_RIGHT if the view's resolved
            layoutDirection is LTR, and ALIGN_LEFT otherwise.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_VIEW_END" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_VIEW_END</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentViewStart">
      <MemberSignature Language="VB.NET" Value="Public Const TextAlignmentViewStart As TextAlignment  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextAlignment TextAlignmentViewStart = 5;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextAlignment TextAlignmentViewStart = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextAlignment TextAlignmentViewStart = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextAlignmentViewStart" />
      <MemberSignature Language="F#" Value="val mutable TextAlignmentViewStart : Android.Views.TextAlignment" Usage="Android.Views.View.TextAlignmentViewStart" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_START")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_ALIGNMENT_VIEW_START")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextAlignment enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextAlignment</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Align to the start of the view, which is ALIGN_LEFT if the view's resolved
            layoutDirection is LTR, and ALIGN_RIGHT otherwise.</summary>
        <remarks>
          <para>Align to the start of the view, which is ALIGN_LEFT if the view's resolved
            layoutDirection is LTR, and ALIGN_RIGHT otherwise.
            
            Use with <c>#setTextAlignment(int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_ALIGNMENT_VIEW_START" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_ALIGNMENT_VIEW_START</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirection">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextDirection As TextDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::TextDirection TextDirection { Android::Views::TextDirection get(); void set(Android::Views::TextDirection value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.TextDirection TextDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.TextDirection TextDirection" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TextDirection" />
      <MemberSignature Language="F#" Value="member this.TextDirection : Android.Views.TextDirection with get, set" Usage="Android.Views.View.TextDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextDirection", "()I", "GetGetTextDirectionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextDirection", "()I", "GetGetTextDirectionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTextDirection", "(I)V", "GetSetTextDirection_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTextDirection", "(I)V", "GetSetTextDirection_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="textDirection">the direction to set. Should be one of:
            
            <c>#TEXT_DIRECTION_INHERIT</c>,
            <c>#TEXT_DIRECTION_FIRST_STRONG</c>,
            <c>#TEXT_DIRECTION_ANY_RTL</c>,
            <c>#TEXT_DIRECTION_LTR</c>,
            <c>#TEXT_DIRECTION_RTL</c>,
            <c>#TEXT_DIRECTION_LOCALE</c><c>#TEXT_DIRECTION_FIRST_STRONG_LTR</c>,
            <c>#TEXT_DIRECTION_FIRST_STRONG_RTL</c>,
            
            Resolution will be done if the value is set to TEXT_DIRECTION_INHERIT. The resolution
            proceeds up the parent chain of the view to get the value. If there is no parent, then it will
            return the default <c>#TEXT_DIRECTION_FIRST_STRONG</c>.</param>
        <summary>Return the resolved text direction. -or- Set the text direction.</summary>
        <value>the resolved text direction. Returns one of:
            
            <c>#TEXT_DIRECTION_FIRST_STRONG</c>,
            <c>#TEXT_DIRECTION_ANY_RTL</c>,
            <c>#TEXT_DIRECTION_LTR</c>,
            <c>#TEXT_DIRECTION_RTL</c>,
            <c>#TEXT_DIRECTION_LOCALE</c>,
            <c>#TEXT_DIRECTION_FIRST_STRONG_LTR</c>,
            <c>#TEXT_DIRECTION_FIRST_STRONG_RTL</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the resolved text direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTextDirection()" title="Reference documentation">Java documentation for <code>android.view.View.getTextDirection()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the text direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTextDirection(int)" title="Reference documentation">Java documentation for <code>android.view.View.setTextDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionAnyRtl">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionAnyRtl As TextDirection  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionAnyRtl = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionAnyRtl = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionAnyRtl = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionAnyRtl" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionAnyRtl : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionAnyRtl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_ANY_RTL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_ANY_RTL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Text direction is using "any-RTL" algorithm.</summary>
        <remarks>
          <para>Text direction is using "any-RTL" algorithm. The paragraph direction is RTL if it contains
            any strong RTL character, otherwise it is LTR if it contains any strong LTR characters.
            If there are neither, the paragraph direction is the view's resolved layout direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_ANY_RTL" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_ANY_RTL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionFirstStrong">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionFirstStrong As TextDirection  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionFirstStrong = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionFirstStrong = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionFirstStrong = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionFirstStrong" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionFirstStrong : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionFirstStrong" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Text direction is using "first strong algorithm".</summary>
        <remarks>
          <para>Text direction is using "first strong algorithm". The first strong directional character
            determines the paragraph direction. If there is no strong directional character, the
            paragraph direction is the view's resolved layout direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_FIRST_STRONG" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_FIRST_STRONG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionFirstStrongLtr">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionFirstStrongLtr As TextDirection  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionFirstStrongLtr = 6;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionFirstStrongLtr = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionFirstStrongLtr = (6)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionFirstStrongLtr" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionFirstStrongLtr : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionFirstStrongLtr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG_LTR", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG_LTR", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>Text direction is using "first strong algorithm".</summary>
        <remarks>
          <para>Text direction is using "first strong algorithm". The first strong directional character
            determines the paragraph direction. If there is no strong directional character, the
            paragraph direction is LTR.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_FIRST_STRONG_LTR" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_FIRST_STRONG_LTR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirectionFirstStrongRtl">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionFirstStrongRtl As TextDirection  = 7" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionFirstStrongRtl = 7;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionFirstStrongRtl = 7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionFirstStrongRtl = (7)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionFirstStrongRtl" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionFirstStrongRtl : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionFirstStrongRtl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG_RTL", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_FIRST_STRONG_RTL", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>7</MemberValue>
      <Docs>
        <summary>Text direction is using "first strong algorithm".</summary>
        <remarks>
          <para>Text direction is using "first strong algorithm". The first strong directional character
            determines the paragraph direction. If there is no strong directional character, the
            paragraph direction is RTL.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_FIRST_STRONG_RTL" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_FIRST_STRONG_RTL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextDirectionInherit">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionInherit As TextDirection  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionInherit = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionInherit = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionInherit = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionInherit" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionInherit : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionInherit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_INHERIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_INHERIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Text direction is inherited through <c>ViewGroup</c></summary>
        <remarks>
          <para>Text direction is inherited through <c>ViewGroup</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_INHERIT" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_INHERIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionLocale">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionLocale As TextDirection  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionLocale = 5;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionLocale = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionLocale = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionLocale" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionLocale : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionLocale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_LOCALE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_LOCALE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>Text direction is coming from the system Locale.</summary>
        <remarks>
          <para>Text direction is coming from the system Locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_LOCALE" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_LOCALE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionLtr">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionLtr As TextDirection  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionLtr = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionLtr = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionLtr = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionLtr" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionLtr : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionLtr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_LTR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_LTR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Text direction is forced to LTR.</summary>
        <remarks>
          <para>Text direction is forced to LTR.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_LTR" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_LTR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="TextDirectionRtl">
      <MemberSignature Language="VB.NET" Value="Public Const TextDirectionRtl As TextDirection  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Views::TextDirection TextDirectionRtl = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Views.TextDirection TextDirectionRtl = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.TextDirection TextDirectionRtl = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.TextDirectionRtl" />
      <MemberSignature Language="F#" Value="val mutable TextDirectionRtl : Android.Views.TextDirection" Usage="Android.Views.View.TextDirectionRtl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TEXT_DIRECTION_RTL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TEXT_DIRECTION_RTL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.TextDirection enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextDirection</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Text direction is forced to RTL.</summary>
        <remarks>
          <para>Text direction is forced to RTL.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#TEXT_DIRECTION_RTL" title="Reference documentation">Java documentation for <code>android.view.View.TEXT_DIRECTION_RTL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.View.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.View.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TooltipText">
      <MemberSignature Language="VB.NET" Value="Public Property TooltipText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TooltipText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? TooltipText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TooltipText" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TooltipText" />
      <MemberSignature Language="F#" Value="member this.TooltipText : string with get, set" Usage="Android.Views.View.TooltipText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TooltipTextFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TooltipTextFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ TooltipTextFormatted { Java::Lang::ICharSequence ^ get(); void set(Java::Lang::ICharSequence ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? TooltipTextFormatted { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TooltipTextFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TooltipTextFormatted" />
      <MemberSignature Language="F#" Value="member this.TooltipTextFormatted : Java.Lang.ICharSequence with get, set" Usage="Android.Views.View.TooltipTextFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTooltipText", "()Ljava/lang/CharSequence;", "GetGetTooltipTextHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTooltipText", "()Ljava/lang/CharSequence;", "GetGetTooltipTextHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTooltipText", "(Ljava/lang/CharSequence;)V", "GetSetTooltipText_Ljava_lang_CharSequence_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTooltipText", "(Ljava/lang/CharSequence;)V", "GetSetTooltipText_Ljava_lang_CharSequence_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tooltipText">the tooltip text, or null if no tooltip is required</param>
        <summary>Returns the view's tooltip text. -or- Sets the tooltip text which will be displayed in a small popup next to the view.</summary>
        <value>the tooltip text</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the view's tooltip text.
            
            &lt;strong&gt;Note:&lt;/strong&gt; Do not override this method, as it will have no
            effect on the text displayed in the tooltip. You must call
            <c>#setTooltipText(CharSequence)</c> to modify the tooltip text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTooltipText()" title="Reference documentation">Java documentation for <code>android.view.View.getTooltipText()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the tooltip text which will be displayed in a small popup next to the view.</para>
          <para>The tooltip will be displayed:
            &lt;ul&gt;
            &lt;li&gt;On long click, unless it is handled otherwise (by OnLongClickListener or a context
            menu). &lt;/li&gt;
            &lt;li&gt;On hover, after a brief delay since the pointer has stopped moving &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Do not override this method, as it will have no
            effect on the text displayed in the tooltip.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTooltipText(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.view.View.setTooltipText(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="VB.NET" Value="Public Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Top" />
      <MemberSignature Language="F#" Value="member this.Top : int with get, set" Usage="Android.Views.View.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTop", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTop", "()I", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTop", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTop", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="top">The top of this view, in pixels.</param>
        <summary>Top position of this view relative to its parent. -or- Sets the top position of this view relative to its parent.</summary>
        <value>The top of this view, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Top position of this view relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTop()" title="Reference documentation">Java documentation for <code>android.view.View.getTop()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the top position of this view relative to its parent. This method is meant to be called
            by the layout system and should not generally be called otherwise, because the property
            may be changed at any time by the layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTop(int)" title="Reference documentation">Java documentation for <code>android.view.View.setTop(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TopFadingEdgeStrength">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TopFadingEdgeStrength As Single" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property float TopFadingEdgeStrength { float get(); };" />
      <MemberSignature Language="C#" Value="protected virtual float TopFadingEdgeStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TopFadingEdgeStrength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TopFadingEdgeStrength" />
      <MemberSignature Language="F#" Value="member this.TopFadingEdgeStrength : single" Usage="Android.Views.View.TopFadingEdgeStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTopFadingEdgeStrength", "()F", "GetGetTopFadingEdgeStrengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTopFadingEdgeStrength", "()F", "GetGetTopFadingEdgeStrengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the strength, or intensity, of the top faded edge.</summary>
        <value>the intensity of the top fade as a float between 0.0f and 1.0f</value>
        <remarks>
          <para>Returns the strength, or intensity, of the top faded edge. The strength is
            a value between 0.0 (no fade) and 1.0 (full fade). The default implementation
            returns 0.0 or 1.0 but no value in between.</para>
          <para>Subclasses should override this method to provide a smoother fade transition
            when scrolling occurs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTopFadingEdgeStrength()" title="Reference documentation">Java documentation for <code>android.view.View.getTopFadingEdgeStrength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TopPaddingOffset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TopPaddingOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TopPaddingOffset { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int TopPaddingOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPaddingOffset" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TopPaddingOffset" />
      <MemberSignature Language="F#" Value="member this.TopPaddingOffset : int" Usage="Android.Views.View.TopPaddingOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTopPaddingOffset", "()I", "GetGetTopPaddingOffsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTopPaddingOffset", "()I", "GetGetTopPaddingOffsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Amount by which to extend the top fading region.</summary>
        <value>The top padding offset in pixels.</value>
        <remarks>
          <para>Amount by which to extend the top fading region. Called only when
            <c>#isPaddingOffsetRequired()</c> returns true.</para>
          <para>Added in CURRENT.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTopPaddingOffset()" title="Reference documentation">Java documentation for <code>android.view.View.getTopPaddingOffset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 2" />
        <altmember cref="P:Android.Views.View.IsPaddingOffsetRequired" />
      </Docs>
    </Member>
    <Member MemberName="Touch">
      <MemberSignature Language="VB.NET" Value="Public Custom Event Touch As EventHandler(Of View.TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::TouchEventArgs ^&gt; ^ Touch;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.TouchEventArgs&gt; Touch;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/TouchEventArgs&gt; Touch" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.Touch" />
      <MemberSignature Language="F#" Value="member this.Touch : EventHandler&lt;Android.Views.View.TouchEventArgs&gt; " Usage="member this.Touch : System.EventHandler&lt;Android.Views.View.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Touchables">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Touchables As IList(Of View)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ Touchables { System::Collections::Generic::IList&lt;Android::Views::View ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Views.View&gt;? Touchables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Views.View&gt; Touchables" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Touchables" />
      <MemberSignature Language="F#" Value="member this.Touchables : System.Collections.Generic.IList&lt;Android.Views.View&gt;" Usage="Android.Views.View.Touchables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTouchables", "()Ljava/util/ArrayList;", "GetGetTouchablesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTouchables", "()Ljava/util/ArrayList;", "GetGetTouchablesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Views.View&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Find and return all touchable views that are descendants of this view,
            possibly including this view if it is touchable itself.</summary>
        <value>A list of touchable views</value>
        <remarks>
          <para>Find and return all touchable views that are descendants of this view,
            possibly including this view if it is touchable itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTouchables()" title="Reference documentation">Java documentation for <code>android.view.View.getTouchables()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TouchDelegate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TouchDelegate As TouchDelegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::TouchDelegate ^ TouchDelegate { Android::Views::TouchDelegate ^ get(); void set(Android::Views::TouchDelegate ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.TouchDelegate? TouchDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.TouchDelegate TouchDelegate" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TouchDelegate" />
      <MemberSignature Language="F#" Value="member this.TouchDelegate : Android.Views.TouchDelegate with get, set" Usage="Android.Views.View.TouchDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTouchDelegate", "()Landroid/view/TouchDelegate;", "GetGetTouchDelegateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTouchDelegate", "()Landroid/view/TouchDelegate;", "GetGetTouchDelegateHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTouchDelegate", "(Landroid/view/TouchDelegate;)V", "GetSetTouchDelegate_Landroid_view_TouchDelegate_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTouchDelegate", "(Landroid/view/TouchDelegate;)V", "GetSetTouchDelegate_Landroid_view_TouchDelegate_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TouchDelegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the TouchDelegate for this View. -or- Sets the TouchDelegate for this View.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the TouchDelegate for this View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTouchDelegate()" title="Reference documentation">Java documentation for <code>android.view.View.getTouchDelegate()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the TouchDelegate for this View.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTouchDelegate(android.view.TouchDelegate)" title="Reference documentation">Java documentation for <code>android.view.View.setTouchDelegate(android.view.TouchDelegate)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransformMatrixToGlobal">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransformMatrixToGlobal (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransformMatrixToGlobal(Android::Graphics::Matrix ^ matrix);" />
      <MemberSignature Language="C#" Value="public virtual void TransformMatrixToGlobal (Android.Graphics.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransformMatrixToGlobal(class Android.Graphics.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.TransformMatrixToGlobal(Android.Graphics.Matrix)" />
      <MemberSignature Language="F#" Value="abstract member TransformMatrixToGlobal : Android.Graphics.Matrix -&gt; unit&#xA;override this.TransformMatrixToGlobal : Android.Graphics.Matrix -&gt; unit" Usage="view.TransformMatrixToGlobal matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transformMatrixToGlobal", "(Landroid/graphics/Matrix;)V", "GetTransformMatrixToGlobal_Landroid_graphics_Matrix_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transformMatrixToGlobal", "(Landroid/graphics/Matrix;)V", "GetTransformMatrixToGlobal_Landroid_graphics_Matrix_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">input matrix to modify</param>
        <summary>Modifies the input matrix such that it maps view-local coordinates to
            on-screen coordinates.</summary>
        <remarks>
          <para>Modifies the input matrix such that it maps view-local coordinates to
            on-screen coordinates.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#transformMatrixToGlobal(android.graphics.Matrix)" title="Reference documentation">Java documentation for <code>android.view.View.transformMatrixToGlobal(android.graphics.Matrix)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformMatrixToLocal">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransformMatrixToLocal (matrix As Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransformMatrixToLocal(Android::Graphics::Matrix ^ matrix);" />
      <MemberSignature Language="C#" Value="public virtual void TransformMatrixToLocal (Android.Graphics.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransformMatrixToLocal(class Android.Graphics.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.TransformMatrixToLocal(Android.Graphics.Matrix)" />
      <MemberSignature Language="F#" Value="abstract member TransformMatrixToLocal : Android.Graphics.Matrix -&gt; unit&#xA;override this.TransformMatrixToLocal : Android.Graphics.Matrix -&gt; unit" Usage="view.TransformMatrixToLocal matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transformMatrixToLocal", "(Landroid/graphics/Matrix;)V", "GetTransformMatrixToLocal_Landroid_graphics_Matrix_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transformMatrixToLocal", "(Landroid/graphics/Matrix;)V", "GetTransformMatrixToLocal_Landroid_graphics_Matrix_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">input matrix to modify</param>
        <summary>Modifies the input matrix such that it maps on-screen coordinates to
            view-local coordinates.</summary>
        <remarks>
          <para>Modifies the input matrix such that it maps on-screen coordinates to
            view-local coordinates.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#transformMatrixToLocal(android.graphics.Matrix)" title="Reference documentation">Java documentation for <code>android.view.View.transformMatrixToLocal(android.graphics.Matrix)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionAlpha">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransitionAlpha As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float TransitionAlpha { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float TransitionAlpha { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TransitionAlpha" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TransitionAlpha" />
      <MemberSignature Language="F#" Value="member this.TransitionAlpha : single with get, set" Usage="Android.Views.View.TransitionAlpha" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransitionAlpha", "()F", "GetGetTransitionAlphaHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransitionAlpha", "()F", "GetGetTransitionAlphaHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTransitionAlpha", "(F)V", "GetSetTransitionAlpha_FHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTransitionAlpha", "(F)V", "GetSetTransitionAlpha_FHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This property is intended only for use by the Fade transition, which animates
            it to produce a visual translucency that does not side-effect (or get affected
            by) the real alpha property. -or- This property is intended only for use by the Fade transition, which animates it
            to produce a visual translucency that does not side-effect (or get affected by)
            the real alpha property.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>This property is intended only for use by the Fade transition, which animates
            it to produce a visual translucency that does not side-effect (or get affected
            by) the real alpha property. This value is composited with the other alpha
            value (and the AlphaAnimation value, when that is present) to produce a final
            visual translucency result, which is what is passed into the DisplayList.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTransitionAlpha()" title="Reference documentation">Java documentation for <code>android.view.View.getTransitionAlpha()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>This property is intended only for use by the Fade transition, which animates it
            to produce a visual translucency that does not side-effect (or get affected by)
            the real alpha property. This value is composited with the other alpha value
            (and the AlphaAnimation value, when that is present) to produce a final visual
            translucency result, which is what is passed into the DisplayList.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTransitionAlpha(float)" title="Reference documentation">Java documentation for <code>android.view.View.setTransitionAlpha(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransitionName">
      <MemberSignature Language="VB.NET" Value="Public Property TransitionName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransitionName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="C#" Value="public string? TransitionName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransitionName" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TransitionName" />
      <MemberSignature Language="F#" Value="member this.TransitionName : string with get, set" Usage="Android.Views.View.TransitionName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransitionName", "()Ljava/lang/String;", "GetGetTransitionNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransitionName", "()Ljava/lang/String;", "GetGetTransitionNameHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTransitionName", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTransitionName", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transitionName">The name of the View to uniquely identify it for Transitions.</param>
        <summary>Returns the name of the View to be used to identify Views in Transitions. -or- Sets the name of the View to be used to identify Views in Transitions.</summary>
        <value>The name used of the View to be used to identify Views in Transitions or null
            if no name has been given.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the name of the View to be used to identify Views in Transitions.
            Names should be unique in the View hierarchy.</para>
          <para>This returns null if the View has not been given a name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTransitionName()" title="Reference documentation">Java documentation for <code>android.view.View.getTransitionName()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the name of the View to be used to identify Views in Transitions.
            Names should be unique in the View hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTransitionName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.View.setTransitionName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TranslationX As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float TranslationX { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float TranslationX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationX" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TranslationX" />
      <MemberSignature Language="F#" Value="member this.TranslationX : single with get, set" Usage="Android.Views.View.TranslationX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTranslationX", "()F", "GetGetTranslationXHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTranslationX", "()F", "GetGetTranslationXHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTranslationX", "(F)V", "GetSetTranslationX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTranslationX", "(F)V", "GetSetTranslationX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="translationX">The horizontal position of this view relative to its left position,
            in pixels.</param>
        <summary>The horizontal location of this view relative to its <c>#getLeft() left</c> position. -or- Sets the horizontal location of this view relative to its <c>#getLeft() left</c> position.</summary>
        <value>The horizontal position of this view relative to its left position, in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The horizontal location of this view relative to its <c>#getLeft() left</c> position.
            This position is post-layout, in addition to wherever the object's
            layout placed it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTranslationX()" title="Reference documentation">Java documentation for <code>android.view.View.getTranslationX()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the horizontal location of this view relative to its <c>#getLeft() left</c> position.
            This effectively positions the object post-layout, in addition to wherever the object's
            layout placed it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTranslationX(float)" title="Reference documentation">Java documentation for <code>android.view.View.setTranslationX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TranslationY As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float TranslationY { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float TranslationY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationY" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TranslationY" />
      <MemberSignature Language="F#" Value="member this.TranslationY : single with get, set" Usage="Android.Views.View.TranslationY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTranslationY", "()F", "GetGetTranslationYHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTranslationY", "()F", "GetGetTranslationYHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTranslationY", "(F)V", "GetSetTranslationY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTranslationY", "(F)V", "GetSetTranslationY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="translationY">The vertical position of this view relative to its top position,
            in pixels.</param>
        <summary>The vertical location of this view relative to its <c>#getTop() top</c> position. -or- Sets the vertical location of this view relative to its <c>#getTop() top</c> position.</summary>
        <value>The vertical position of this view relative to its top position,
            in pixels.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The vertical location of this view relative to its <c>#getTop() top</c> position.
            This position is post-layout, in addition to wherever the object's
            layout placed it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTranslationY()" title="Reference documentation">Java documentation for <code>android.view.View.getTranslationY()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the vertical location of this view relative to its <c>#getTop() top</c> position.
            This effectively positions the object post-layout, in addition to wherever the object's
            layout placed it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTranslationY(float)" title="Reference documentation">Java documentation for <code>android.view.View.setTranslationY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="TranslationZ">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TranslationZ As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float TranslationZ { float get(); void set(float value); };" />
      <MemberSignature Language="C#" Value="public virtual float TranslationZ { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 TranslationZ" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.TranslationZ" />
      <MemberSignature Language="F#" Value="member this.TranslationZ : single with get, set" Usage="Android.Views.View.TranslationZ" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTranslationZ", "()F", "GetGetTranslationZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTranslationZ", "()F", "GetGetTranslationZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTranslationZ", "(F)V", "GetSetTranslationZ_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTranslationZ", "(F)V", "GetSetTranslationZ_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The depth location of this view relative to its <c>#getElevation() elevation</c>. -or- Sets the depth location of this view relative to its <c>#getElevation() elevation</c>.</summary>
        <value>The depth of this view relative to its elevation.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>The depth location of this view relative to its <c>#getElevation() elevation</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getTranslationZ()" title="Reference documentation">Java documentation for <code>android.view.View.getTranslationZ()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the depth location of this view relative to its <c>#getElevation() elevation</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setTranslationZ(float)" title="Reference documentation">Java documentation for <code>android.view.View.setTranslationZ(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhandledKeyEvent">
      <MemberSignature Language="VB.NET" Value="Public Custom Event UnhandledKeyEvent As EventHandler(Of View.UnhandledKeyEventEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::UnhandledKeyEventEventArgs ^&gt; ^ UnhandledKeyEvent;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.UnhandledKeyEventEventArgs&gt; UnhandledKeyEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/UnhandledKeyEventEventArgs&gt; UnhandledKeyEvent" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.UnhandledKeyEvent" />
      <MemberSignature Language="F#" Value="member this.UnhandledKeyEvent : EventHandler&lt;Android.Views.View.UnhandledKeyEventEventArgs&gt; " Usage="member this.UnhandledKeyEvent : System.EventHandler&lt;Android.Views.View.UnhandledKeyEventEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+UnhandledKeyEventEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueDrawingId">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UniqueDrawingId As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long UniqueDrawingId { long get(); };" />
      <MemberSignature Language="C#" Value="public virtual long UniqueDrawingId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UniqueDrawingId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.UniqueDrawingId" />
      <MemberSignature Language="F#" Value="member this.UniqueDrawingId : int64" Usage="Android.Views.View.UniqueDrawingId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUniqueDrawingId", "()J", "GetGetUniqueDrawingIdHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUniqueDrawingId", "()J", "GetGetUniqueDrawingIdHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the identifier used for this view by the drawing system.</summary>
        <value>A long that uniquely identifies this view's drawing component</value>
        <remarks>
          <para>Get the identifier used for this view by the drawing system.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getUniqueDrawingId()" title="Reference documentation">Java documentation for <code>android.view.View.getUniqueDrawingId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnscheduleDrawable (who As Drawable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnscheduleDrawable(Android::Graphics::Drawables::Drawable ^ who);" />
      <MemberSignature Language="C#" Value="public virtual void UnscheduleDrawable (Android.Graphics.Drawables.Drawable? who);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member UnscheduleDrawable : Android.Graphics.Drawables.Drawable -&gt; unit&#xA;override this.UnscheduleDrawable : Android.Graphics.Drawables.Drawable -&gt; unit" Usage="view.UnscheduleDrawable who" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The Drawable to unschedule.</param>
        <summary>Unschedule any events associated with the given Drawable.</summary>
        <remarks>
          <para>Unschedule any events associated with the given Drawable.  This can be
            used when selecting a new Drawable into a view, so that the previous
            one is completely unscheduled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#unscheduleDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.unscheduleDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnscheduleDrawable (who As Drawable, what As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnscheduleDrawable(Android::Graphics::Drawables::Drawable ^ who, Java::Lang::IRunnable ^ what);" />
      <MemberSignature Language="C#" Value="public virtual void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Java.Lang.IRunnable what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class Java.Lang.IRunnable what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member UnscheduleDrawable : Android.Graphics.Drawables.Drawable * Java.Lang.IRunnable -&gt; unit&#xA;override this.UnscheduleDrawable : Android.Graphics.Drawables.Drawable * Java.Lang.IRunnable -&gt; unit" Usage="view.UnscheduleDrawable (who, what)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Graphics.Drawables.Drawable.ICallback.UnscheduleDrawable(Android.Graphics.Drawables.Drawable,Java.Lang.IRunnable)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="who">the recipient of the action</param>
        <param name="what">the action to cancel</param>
        <summary>Cancels a scheduled action on a drawable.</summary>
        <remarks>
          <para>Cancels a scheduled action on a drawable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#unscheduleDrawable(android.graphics.drawable.Drawable,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.View.unscheduleDrawable(android.graphics.drawable.Drawable, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnscheduleDrawable">
      <MemberSignature Language="VB.NET" Value="Public Sub UnscheduleDrawable (who As Drawable, what As Action)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnscheduleDrawable(Android::Graphics::Drawables::Drawable ^ who, Action ^ what);" />
      <MemberSignature Language="C#" Value="public void UnscheduleDrawable (Android.Graphics.Drawables.Drawable who, Action what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnscheduleDrawable(class Android.Graphics.Drawables.Drawable who, class System.Action what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable,System.Action)" />
      <MemberSignature Language="F#" Value="member this.UnscheduleDrawable : Android.Graphics.Drawables.Drawable * Action -&gt; unit" Usage="view.UnscheduleDrawable (who, what)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="what" Type="System.Action" />
      </Parameters>
      <Docs>
        <param name="who">To be added.</param>
        <param name="what">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateDragShadow">
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDragShadow (shadowBuilder As View.DragShadowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDragShadow(Android::Views::View::DragShadowBuilder ^ shadowBuilder);" />
      <MemberSignature Language="C#" Value="public void UpdateDragShadow (Android.Views.View.DragShadowBuilder? shadowBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDragShadow(class Android.Views.View/DragShadowBuilder shadowBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.UpdateDragShadow(Android.Views.View.DragShadowBuilder)" />
      <MemberSignature Language="F#" Value="member this.UpdateDragShadow : Android.Views.View.DragShadowBuilder -&gt; unit" Usage="view.UpdateDragShadow shadowBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateDragShadow", "(Landroid/view/View$DragShadowBuilder;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateDragShadow", "(Landroid/view/View$DragShadowBuilder;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shadowBuilder" Type="Android.Views.View+DragShadowBuilder" />
      </Parameters>
      <Docs>
        <param name="shadowBuilder">A <c>android.view.View.DragShadowBuilder</c> object for building the
            new drag shadow.</param>
        <summary>Updates the drag shadow for the ongoing drag and drop operation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#updateDragShadow(android.view.DragShadowBuilder)" title="Reference documentation">Java documentation for <code>android.view.View.updateDragShadow(android.view.DragShadowBuilder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyDrawable">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VerifyDrawable (who As Drawable) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool VerifyDrawable(Android::Graphics::Drawables::Drawable ^ who);" />
      <MemberSignature Language="C#" Value="protected virtual bool VerifyDrawable (Android.Graphics.Drawables.Drawable who);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool VerifyDrawable(class Android.Graphics.Drawables.Drawable who) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.VerifyDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member VerifyDrawable : Android.Graphics.Drawables.Drawable -&gt; bool&#xA;override this.VerifyDrawable : Android.Graphics.Drawables.Drawable -&gt; bool" Usage="view.VerifyDrawable who" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("verifyDrawable", "(Landroid/graphics/drawable/Drawable;)Z", "GetVerifyDrawable_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("verifyDrawable", "(Landroid/graphics/drawable/Drawable;)Z", "GetVerifyDrawable_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="who" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="who">The Drawable to verify.  Return true if it is one you are
                       displaying, else return the result of calling through to the
                       super class.</param>
        <summary>If your view subclass is displaying its own Drawable objects, it should
            override this function and return true for any Drawable it is
            displaying.</summary>
        <returns>boolean If true then the Drawable is being displayed in the
                    view; else false and it is not allowed to animate.</returns>
        <remarks>
          <para>If your view subclass is displaying its own Drawable objects, it should
            override this function and return true for any Drawable it is
            displaying.  This allows animations for those drawables to be
            scheduled.</para>
          <para>Be sure to call through to the super class when overriding this
            function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#verifyDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.verifyDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.View.UnscheduleDrawable(Android.Graphics.Drawables.Drawable)" />
        <altmember cref="M:Android.Views.View.DrawableStateChanged" />
      </Docs>
    </Member>
    <Member MemberName="VerticalFadingEdgeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalFadingEdgeEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VerticalFadingEdgeEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool VerticalFadingEdgeEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerticalFadingEdgeEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalFadingEdgeEnabled" />
      <MemberSignature Language="F#" Value="member this.VerticalFadingEdgeEnabled : bool with get, set" Usage="Android.Views.View.VerticalFadingEdgeEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVerticalFadingEdgeEnabled", "()Z", "GetIsVerticalFadingEdgeEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVerticalFadingEdgeEnabled", "()Z", "GetIsVerticalFadingEdgeEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVerticalFadingEdgeEnabled", "(Z)V", "GetSetVerticalFadingEdgeEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVerticalFadingEdgeEnabled", "(Z)V", "GetSetVerticalFadingEdgeEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="verticalFadingEdgeEnabled">true if the vertical edges should
                                             be faded when the view is scrolled
                                             vertically</param>
        <summary>Indicate whether the vertical edges are faded when the view is
            scrolled horizontally. -or- Define whether the vertical edges should be faded when this view
            is scrolled vertically.</summary>
        <value>true if the vertical edges should are faded on scroll, false
                    otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicate whether the vertical edges are faded when the view is
            scrolled horizontally.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isVerticalFadingEdgeEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isVerticalFadingEdgeEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define whether the vertical edges should be faded when this view
            is scrolled vertically.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVerticalFadingEdgeEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setVerticalFadingEdgeEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalFadingEdgeEnabled" />
      </Docs>
    </Member>
    <Member MemberName="VerticalFadingEdgeLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VerticalFadingEdgeLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VerticalFadingEdgeLength { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int VerticalFadingEdgeLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalFadingEdgeLength" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalFadingEdgeLength" />
      <MemberSignature Language="F#" Value="member this.VerticalFadingEdgeLength : int" Usage="Android.Views.View.VerticalFadingEdgeLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVerticalFadingEdgeLength", "()I", "GetGetVerticalFadingEdgeLengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVerticalFadingEdgeLength", "()I", "GetGetVerticalFadingEdgeLengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the vertical faded edges used to indicate that more
            content in this view is visible.</summary>
        <value>The size in pixels of the vertical faded edge or 0 if vertical
                    faded edges are not enabled for this view.</value>
        <remarks>
          <para>Returns the size of the vertical faded edges used to indicate that more
            content in this view is visible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVerticalFadingEdgeLength()" title="Reference documentation">Java documentation for <code>android.view.View.getVerticalFadingEdgeLength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalScrollBarEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool VerticalScrollBarEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool VerticalScrollBarEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool VerticalScrollBarEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalScrollBarEnabled" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarEnabled : bool with get, set" Usage="Android.Views.View.VerticalScrollBarEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVerticalScrollBarEnabled", "()Z", "GetIsVerticalScrollBarEnabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVerticalScrollBarEnabled", "()Z", "GetIsVerticalScrollBarEnabledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVerticalScrollBarEnabled", "(Z)V", "GetSetVerticalScrollBarEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVerticalScrollBarEnabled", "(Z)V", "GetSetVerticalScrollBarEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="verticalScrollBarEnabled">true if the vertical scrollbar should
                                            be painted</param>
        <summary>Indicate whether the vertical scrollbar should be drawn or not. -or- Define whether the vertical scrollbar should be drawn or not.</summary>
        <value>true if the vertical scrollbar should be painted, false
                    otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicate whether the vertical scrollbar should be drawn or not. The
            scrollbar is not drawn by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#isVerticalScrollBarEnabled()" title="Reference documentation">Java documentation for <code>android.view.View.isVerticalScrollBarEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Define whether the vertical scrollbar should be drawn or not. The
            scrollbar is not drawn by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVerticalScrollBarEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.view.View.setVerticalScrollBarEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.View.VerticalScrollBarEnabled" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarPosition">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalScrollbarPosition As ScrollbarPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ScrollbarPosition VerticalScrollbarPosition { Android::Views::ScrollbarPosition get(); void set(Android::Views::ScrollbarPosition value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ScrollbarPosition VerticalScrollbarPosition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ScrollbarPosition VerticalScrollbarPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalScrollbarPosition" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollbarPosition : Android.Views.ScrollbarPosition with get, set" Usage="Android.Views.View.VerticalScrollbarPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVerticalScrollbarPosition", "()I", "GetGetVerticalScrollbarPositionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVerticalScrollbarPosition", "()I", "GetGetVerticalScrollbarPositionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVerticalScrollbarPosition", "(I)V", "GetSetVerticalScrollbarPosition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVerticalScrollbarPosition", "(I)V", "GetSetVerticalScrollbarPosition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ScrollbarPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="position">Where the vertical scroll bar should be positioned.</param>
        <summary>Set the position of the vertical scroll bar.</summary>
        <value>The position where the vertical scroll bar will show, if applicable.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVerticalScrollbarPosition()" title="Reference documentation">Java documentation for <code>android.view.View.getVerticalScrollbarPosition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the position of the vertical scroll bar. Should be one of
            <c>#SCROLLBAR_POSITION_DEFAULT</c>, <c>#SCROLLBAR_POSITION_LEFT</c> or
            <c>#SCROLLBAR_POSITION_RIGHT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVerticalScrollbarPosition(int)" title="Reference documentation">Java documentation for <code>android.view.View.setVerticalScrollbarPosition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.View.VerticalScrollbarPosition" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarThumbDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalScrollbarThumbDrawable As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ VerticalScrollbarThumbDrawable { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? VerticalScrollbarThumbDrawable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable VerticalScrollbarThumbDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalScrollbarThumbDrawable" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollbarThumbDrawable : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.VerticalScrollbarThumbDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVerticalScrollbarThumbDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetVerticalScrollbarThumbDrawableHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVerticalScrollbarThumbDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetVerticalScrollbarThumbDrawableHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVerticalScrollbarThumbDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetVerticalScrollbarThumbDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVerticalScrollbarThumbDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetVerticalScrollbarThumbDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currently configured Drawable for the thumb of the vertical scroll bar if it
            exists, null otherwise. -or- Defines the vertical scrollbar thumb drawable</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the currently configured Drawable for the thumb of the vertical scroll bar if it
            exists, null otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVerticalScrollbarThumbDrawable()" title="Reference documentation">Java documentation for <code>android.view.View.getVerticalScrollbarThumbDrawable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Defines the vertical scrollbar thumb drawable</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVerticalScrollbarThumbDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setVerticalScrollbarThumbDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarTrackDrawable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property VerticalScrollbarTrackDrawable As Drawable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Graphics::Drawables::Drawable ^ VerticalScrollbarTrackDrawable { Android::Graphics::Drawables::Drawable ^ get(); void set(Android::Graphics::Drawables::Drawable ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable? VerticalScrollbarTrackDrawable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable VerticalScrollbarTrackDrawable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalScrollbarTrackDrawable" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollbarTrackDrawable : Android.Graphics.Drawables.Drawable with get, set" Usage="Android.Views.View.VerticalScrollbarTrackDrawable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVerticalScrollbarTrackDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetVerticalScrollbarTrackDrawableHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVerticalScrollbarTrackDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetVerticalScrollbarTrackDrawableHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVerticalScrollbarTrackDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetVerticalScrollbarTrackDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVerticalScrollbarTrackDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetVerticalScrollbarTrackDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the currently configured Drawable for the track of the vertical scroll bar if it
            exists, null otherwise. -or- Defines the vertical scrollbar track drawable</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the currently configured Drawable for the track of the vertical scroll bar if it
            exists, null otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVerticalScrollbarTrackDrawable()" title="Reference documentation">Java documentation for <code>android.view.View.getVerticalScrollbarTrackDrawable()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Defines the vertical scrollbar track drawable</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVerticalScrollbarTrackDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.View.setVerticalScrollbarTrackDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollbarWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VerticalScrollbarWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int VerticalScrollbarWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int VerticalScrollbarWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VerticalScrollbarWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.VerticalScrollbarWidth" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollbarWidth : int" Usage="Android.Views.View.VerticalScrollbarWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVerticalScrollbarWidth", "()I", "GetGetVerticalScrollbarWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVerticalScrollbarWidth", "()I", "GetGetVerticalScrollbarWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the width of the vertical scrollbar.</summary>
        <value>The width in pixels of the vertical scrollbar or 0 if there
                    is no vertical scrollbar.</value>
        <remarks>
          <para>Returns the width of the vertical scrollbar.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVerticalScrollbarWidth()" title="Reference documentation">Java documentation for <code>android.view.View.getVerticalScrollbarWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ViewAttachedToWindow">
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewAttachedToWindow As EventHandler(Of View.ViewAttachedToWindowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::ViewAttachedToWindowEventArgs ^&gt; ^ ViewAttachedToWindow;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ViewAttachedToWindowEventArgs&gt; ViewAttachedToWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ViewAttachedToWindowEventArgs&gt; ViewAttachedToWindow" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.ViewAttachedToWindow" />
      <MemberSignature Language="F#" Value="member this.ViewAttachedToWindow : EventHandler&lt;Android.Views.View.ViewAttachedToWindowEventArgs&gt; " Usage="member this.ViewAttachedToWindow : System.EventHandler&lt;Android.Views.View.ViewAttachedToWindowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ViewAttachedToWindowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewDetachedFromWindow">
      <MemberSignature Language="VB.NET" Value="Public Custom Event ViewDetachedFromWindow As EventHandler(Of View.ViewDetachedFromWindowEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Views::View::ViewDetachedFromWindowEventArgs ^&gt; ^ ViewDetachedFromWindow;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.View.ViewDetachedFromWindowEventArgs&gt; ViewDetachedFromWindow;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.View/ViewDetachedFromWindowEventArgs&gt; ViewDetachedFromWindow" />
      <MemberSignature Language="DocId" Value="E:Android.Views.View.ViewDetachedFromWindow" />
      <MemberSignature Language="F#" Value="member this.ViewDetachedFromWindow : EventHandler&lt;Android.Views.View.ViewDetachedFromWindowEventArgs&gt; " Usage="member this.ViewDetachedFromWindow : System.EventHandler&lt;Android.Views.View.ViewDetachedFromWindowEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.View+ViewDetachedFromWindowEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewLogTag">
      <MemberSignature Language="VB.NET" Value="Protected Const ViewLogTag As String " />
      <MemberSignature Language="C++ CLI" Value="protected: System::String ^ ViewLogTag;" />
      <MemberSignature Language="C#" Value="protected const string ViewLogTag;" />
      <MemberSignature Language="ILAsm" Value=".field family static literal string ViewLogTag" />
      <MemberSignature Language="DocId" Value="F:Android.Views.View.ViewLogTag" />
      <MemberSignature Language="F#" Value="val mutable ViewLogTag : string" Usage="Android.Views.View.ViewLogTag" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIEW_LOG_TAG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VIEW_LOG_TAG")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The logging tag used by this class with android.</summary>
        <remarks>
          <para>The logging tag used by this class with android.util.Log.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#VIEW_LOG_TAG" title="Reference documentation">Java documentation for <code>android.view.View.VIEW_LOG_TAG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ViewTranslationResponse">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ViewTranslationResponse As ViewTranslationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Translation::ViewTranslationResponse ^ ViewTranslationResponse { Android::Views::Translation::ViewTranslationResponse ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Translation.ViewTranslationResponse? ViewTranslationResponse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Translation.ViewTranslationResponse ViewTranslationResponse" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ViewTranslationResponse" />
      <MemberSignature Language="F#" Value="member this.ViewTranslationResponse : Android.Views.Translation.ViewTranslationResponse" Usage="Android.Views.View.ViewTranslationResponse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getViewTranslationResponse", "()Landroid/view/translation/ViewTranslationResponse;", "GetGetViewTranslationResponseHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getViewTranslationResponse", "()Landroid/view/translation/ViewTranslationResponse;", "GetGetViewTranslationResponseHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Translation.ViewTranslationResponse</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>ViewTranslationResponse</c> associated with this view.</summary>
        <value>a <c>ViewTranslationResponse</c> that contains the translated information associated
            with this view or <c>null</c> if this View doesn't have the translation.</value>
        <remarks>
          <para>Returns the <c>ViewTranslationResponse</c> associated with this view. The response will be
            set when the translation is done then <c>#onViewTranslationResponse</c> is called. The
            <c>ViewTranslationCallback</c> can use to get <c>ViewTranslationResponse</c> to display the
            translated information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getViewTranslationResponse()" title="Reference documentation">Java documentation for <code>android.view.View.getViewTranslationResponse()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewTreeObserver">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ViewTreeObserver As ViewTreeObserver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewTreeObserver ^ ViewTreeObserver { Android::Views::ViewTreeObserver ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewTreeObserver? ViewTreeObserver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ViewTreeObserver ViewTreeObserver" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.ViewTreeObserver" />
      <MemberSignature Language="F#" Value="member this.ViewTreeObserver : Android.Views.ViewTreeObserver" Usage="Android.Views.View.ViewTreeObserver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getViewTreeObserver", "()Landroid/view/ViewTreeObserver;", "GetGetViewTreeObserverHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getViewTreeObserver", "()Landroid/view/ViewTreeObserver;", "GetGetViewTreeObserverHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewTreeObserver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the ViewTreeObserver for this view's hierarchy.</summary>
        <value>The ViewTreeObserver for this view's hierarchy.</value>
        <remarks>
          <para>Returns the ViewTreeObserver for this view's hierarchy. The view tree
            observer can be used to get notifications when global events, like
            layout, happen.
            
            The returned ViewTreeObserver observer is not guaranteed to remain
            valid for the lifetime of this View. If the caller of this method keeps
            a long-lived reference to ViewTreeObserver, it should always check for
            the return value of <c>ViewTreeObserver#isAlive()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getViewTreeObserver()" title="Reference documentation">Java documentation for <code>android.view.View.getViewTreeObserver()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Visibility As ViewStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewStates Visibility { Android::Views::ViewStates get(); void set(Android::Views::ViewStates value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewStates Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ViewStates Visibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Visibility" />
      <MemberSignature Language="F#" Value="member this.Visibility : Android.Views.ViewStates with get, set" Usage="Android.Views.View.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVisibility", "()I", "GetGetVisibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVisibility", "()I", "GetGetVisibilityHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVisibility", "(I)V", "GetSetVisibility_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVisibility", "(I)V", "GetSetVisibility_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewStates</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="visibility">One of <c>#VISIBLE</c>, <c>#INVISIBLE</c>, or <c>#GONE</c>.</param>
        <summary>Returns the visibility status for this view. -or- Set the visibility state of this view.</summary>
        <value>One of <c>#VISIBLE</c>, <c>#INVISIBLE</c>, or <c>#GONE</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the visibility status for this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getVisibility()" title="Reference documentation">Java documentation for <code>android.view.View.getVisibility()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the visibility state of this view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#setVisibility(int)" title="Reference documentation">Java documentation for <code>android.view.View.setVisibility(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Views.View.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the width of your view.</summary>
        <value>The width of your view, in pixels.</value>
        <remarks>
          <para>Return the width of your view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWidth()" title="Reference documentation">Java documentation for <code>android.view.View.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WillNotCacheDrawing">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WillNotCacheDrawing () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WillNotCacheDrawing();" />
      <MemberSignature Language="C#" Value="public virtual bool WillNotCacheDrawing ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillNotCacheDrawing() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.WillNotCacheDrawing" />
      <MemberSignature Language="F#" Value="abstract member WillNotCacheDrawing : unit -&gt; bool&#xA;override this.WillNotCacheDrawing : unit -&gt; bool" Usage="view.WillNotCacheDrawing " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("willNotCacheDrawing", "()Z", "GetWillNotCacheDrawingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("willNotCacheDrawing", "()Z", "GetWillNotCacheDrawingHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether or not this View can cache its drawing or not.</summary>
        <returns>true if this view does not cache its drawing, false otherwise</returns>
        <remarks>
          <para>Returns whether or not this View can cache its drawing or not.</para>
          <para>This member is deprecated. The view drawing cache was largely made obsolete with the introduction of
            hardware-accelerated rendering in API 11. With hardware-acceleration, intermediate cache
            layers are largely unnecessary and can easily result in a net loss in performance due to the
            cost of creating and updating the layer. In the rare cases where caching layers are useful,
            such as for alpha animations, <c>#setLayerType(int, Paint)</c> handles this with hardware
            rendering. For software-rendered snapshots of a small part of the View hierarchy or
            individual Views it is recommended to create a <c>Canvas</c> from either a <c>Bitmap</c> or
            <c>android.graphics.Picture</c> and call <c>#draw(Canvas)</c> on the View. However these
            software-rendered usages are discouraged and have compatibility issues with hardware-only
            rendering features such as <c>android.graphics.Bitmap.Config#HARDWARE Config.HARDWARE</c>
            bitmaps, real-time shadows, and outline clipping. For screenshots of the UI for feedback
            reports or unit testing the <c>PixelCopy</c> API is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#willNotCacheDrawing()" title="Reference documentation">Java documentation for <code>android.view.View.willNotCacheDrawing()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WillNotDraw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function WillNotDraw () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool WillNotDraw();" />
      <MemberSignature Language="C#" Value="public virtual bool WillNotDraw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WillNotDraw() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.WillNotDraw" />
      <MemberSignature Language="F#" Value="abstract member WillNotDraw : unit -&gt; bool&#xA;override this.WillNotDraw : unit -&gt; bool" Usage="view.WillNotDraw " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("willNotDraw", "()Z", "GetWillNotDrawHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("willNotDraw", "()Z", "GetWillNotDrawHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether or not this View draws on its own.</summary>
        <returns>true if this view has nothing to draw, false otherwise</returns>
        <remarks>
          <para>Returns whether or not this View draws on its own.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#willNotDraw()" title="Reference documentation">Java documentation for <code>android.view.View.willNotDraw()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowAttachCount">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property WindowAttachCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int WindowAttachCount { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int WindowAttachCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowAttachCount" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowAttachCount" />
      <MemberSignature Language="F#" Value="member this.WindowAttachCount : int" Usage="Android.Views.View.WindowAttachCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowAttachCount", "()I", "GetGetWindowAttachCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowAttachCount", "()I", "GetGetWindowAttachCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>The number of times this view has been attached to a window</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowAttachCount()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowAttachCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowFocusedStateSet">
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property WindowFocusedStateSet As IList(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property System::Collections::Generic::IList&lt;int&gt; ^ WindowFocusedStateSet { System::Collections::Generic::IList&lt;int&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="protected static System.Collections.Generic.IList&lt;int&gt;? WindowFocusedStateSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;int32&gt; WindowFocusedStateSet" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowFocusedStateSet" />
      <MemberSignature Language="F#" Value="member this.WindowFocusedStateSet : System.Collections.Generic.IList&lt;int&gt;" Usage="Android.Views.View.WindowFocusedStateSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WINDOW_FOCUSED_STATE_SET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WINDOW_FOCUSED_STATE_SET")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the view's window has focus.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates the view's window has focus. States are used with
            <c>android.graphics.drawable.Drawable</c> to change the drawing of the
            view depending on its state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#WINDOW_FOCUSED_STATE_SET" title="Reference documentation">Java documentation for <code>android.view.View.WINDOW_FOCUSED_STATE_SET</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.Drawables.Drawable" />
        <altmember cref="M:Android.Views.View.GetDrawableState" />
      </Docs>
    </Member>
    <Member MemberName="WindowId">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowId As WindowId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::WindowId ^ WindowId { Android::Views::WindowId ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.WindowId? WindowId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.WindowId WindowId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowId" />
      <MemberSignature Language="F#" Value="member this.WindowId : Android.Views.WindowId" Usage="Android.Views.View.WindowId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowId", "()Landroid/view/WindowId;", "GetGetWindowIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowId", "()Landroid/view/WindowId;", "GetGetWindowIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c>WindowId</c> for the window this view is
            currently attached to.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the <c>WindowId</c> for the window this view is
            currently attached to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowId()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="WindowInsetsController">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowInsetsController As IWindowInsetsController" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::IWindowInsetsController ^ WindowInsetsController { Android::Views::IWindowInsetsController ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowInsetsController? WindowInsetsController { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowInsetsController WindowInsetsController" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowInsetsController" />
      <MemberSignature Language="F#" Value="member this.WindowInsetsController : Android.Views.IWindowInsetsController" Usage="Android.Views.View.WindowInsetsController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowInsetsController", "()Landroid/view/WindowInsetsController;", "GetGetWindowInsetsControllerHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowInsetsController", "()Landroid/view/WindowInsetsController;", "GetGetWindowInsetsControllerHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowInsetsController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the single <c>WindowInsetsController</c> of the window this view is attached to.</summary>
        <value>The <c>WindowInsetsController</c> or <c>null</c> if the view is neither attached to
                    a window nor a view tree with a decor.</value>
        <remarks>
          <para>Retrieves the single <c>WindowInsetsController</c> of the window this view is attached to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowInsetsController()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowInsetsController()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowSystemUiVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowSystemUiVisibility As SystemUiFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::SystemUiFlags WindowSystemUiVisibility { Android::Views::SystemUiFlags get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.SystemUiFlags WindowSystemUiVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SystemUiFlags WindowSystemUiVisibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowSystemUiVisibility" />
      <MemberSignature Language="F#" Value="member this.WindowSystemUiVisibility : Android.Views.SystemUiFlags" Usage="Android.Views.View.WindowSystemUiVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowSystemUiVisibility", "()I", "GetGetWindowSystemUiVisibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowSystemUiVisibility", "()I", "GetGetWindowSystemUiVisibilityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SystemUiFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current system UI visibility that is currently set for
            the entire window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the current system UI visibility that is currently set for
            the entire window.  This is the combination of the
            <c>#setSystemUiVisibility(int)</c> values supplied by all of the
            views in the window.</para>
          <para>This member is deprecated. SystemUiVisibility flags are deprecated. Use <c>WindowInsetsController</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowSystemUiVisibility()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowSystemUiVisibility()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WindowToken">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowToken As IBinder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::IBinder ^ WindowToken { Android::OS::IBinder ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.IBinder? WindowToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder WindowToken" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowToken" />
      <MemberSignature Language="F#" Value="member this.WindowToken : Android.OS.IBinder" Usage="Android.Views.View.WindowToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowToken", "()Landroid/os/IBinder;", "GetGetWindowTokenHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowToken", "()Landroid/os/IBinder;", "GetGetWindowTokenHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a unique token identifying the window this view is attached to.</summary>
        <value>Return the window's token for use in
            <c>WindowManager.LayoutParams#token WindowManager.LayoutParams.token</c>.</value>
        <remarks>
          <para>Retrieve a unique token identifying the window this view is attached to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowToken()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowVisibility">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WindowVisibility As ViewStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ViewStates WindowVisibility { Android::Views::ViewStates get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewStates WindowVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.ViewStates WindowVisibility" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.WindowVisibility" />
      <MemberSignature Language="F#" Value="member this.WindowVisibility : Android.Views.ViewStates" Usage="Android.Views.View.WindowVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowVisibility", "()I", "GetGetWindowVisibilityHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowVisibility", "()I", "GetGetWindowVisibilityHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current visibility of the window this view is attached to
            (either <c>#GONE</c>, <c>#INVISIBLE</c>, or <c>#VISIBLE</c>).</summary>
        <value>Returns the current visibility of the view's window.</value>
        <remarks>
          <para>Returns the current visibility of the window this view is attached to
            (either <c>#GONE</c>, <c>#INVISIBLE</c>, or <c>#VISIBLE</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#getWindowVisibility()" title="Reference documentation">Java documentation for <code>android.view.View.getWindowVisibility()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="VB.NET" Value="Public Shared Property X As Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Property ^ X { Android::Util::Property ^ get(); void set(Android::Util::Property ^ value); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Property? X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property X" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.X" />
      <MemberSignature Language="F#" Value="member this.X : Android.Util.Property with get, set" Usage="Android.Views.View.X" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("X")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("X")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>x</c> functionality handled by the
            <c>View#setX(float)</c> and <c>View#getX()</c> methods.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A Property wrapper around the <c>x</c> functionality handled by the
            <c>View#setX(float)</c> and <c>View#getX()</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#X" title="Reference documentation">Java documentation for <code>android.view.View.X</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="VB.NET" Value="Public Shared Property Y As Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Property ^ Y { Android::Util::Property ^ get(); void set(Android::Util::Property ^ value); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Property? Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property Y" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Y" />
      <MemberSignature Language="F#" Value="member this.Y : Android.Util.Property with get, set" Usage="Android.Views.View.Y" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("Y")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("Y")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>y</c> functionality handled by the
            <c>View#setY(float)</c> and <c>View#getY()</c> methods.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A Property wrapper around the <c>y</c> functionality handled by the
            <c>View#setY(float)</c> and <c>View#getY()</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#Y" title="Reference documentation">Java documentation for <code>android.view.View.Y</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Z As Property" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Util::Property ^ Z { Android::Util::Property ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Util.Property? Z { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Util.Property Z" />
      <MemberSignature Language="DocId" Value="P:Android.Views.View.Z" />
      <MemberSignature Language="F#" Value="member this.Z : Android.Util.Property" Usage="Android.Views.View.Z" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("Z")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("Z")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Util.Property</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Property wrapper around the <c>z</c> functionality handled by the
            <c>View#setZ(float)</c> and <c>View#getZ()</c> methods.</summary>
        <value>To be added.</value>
        <remarks>
          <para>A Property wrapper around the <c>z</c> functionality handled by the
            <c>View#setZ(float)</c> and <c>View#getZ()</c> methods.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/View#Z" title="Reference documentation">Java documentation for <code>android.view.View.Z</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
