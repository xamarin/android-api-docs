<Type Name="Choreographer" FullName="Android.Views.Choreographer">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Choreographer&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Choreographer sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class Choreographer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Choreographer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.Choreographer" />
  <TypeSignature Language="F#" Value="type Choreographer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/Choreographer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/Choreographer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Coordinates the timing of animations, input and drawing.</summary>
    <remarks>
      <para>Coordinates the timing of animations, input and drawing.</para>
      <para>The choreographer receives timing pulses (such as vertical synchronization)
            from the display subsystem then schedules work to occur as part of rendering
            the next display frame.</para>
      <para>Applications typically interact with the choreographer indirectly using
            higher level abstractions in the animation framework or the view hierarchy.
            Here are some examples of things you can do using the higher-level APIs.</para>
      <para>&lt;ul&gt;
            &lt;li&gt;To post an animation to be processed on a regular time basis synchronized with
            display frame rendering, use <c>android.animation.ValueAnimator#start</c>.&lt;/li&gt;
            &lt;li&gt;To post a <c>Runnable</c> to be invoked once at the beginning of the next display
            frame, use <c>View#postOnAnimation</c>.&lt;/li&gt;
            &lt;li&gt;To post a <c>Runnable</c> to be invoked once at the beginning of the next display
            frame after a delay, use <c>View#postOnAnimationDelayed</c>.&lt;/li&gt;
            &lt;li&gt;To post a call to <c>View#invalidate()</c> to occur once at the beginning of the
            next display frame, use <c>View#postInvalidateOnAnimation()</c> or
            <c>View#postInvalidateOnAnimation(int, int, int, int)</c>.&lt;/li&gt;
            &lt;li&gt;To ensure that the contents of a <c>View</c> scroll smoothly and are drawn in
            sync with display frame rendering, do nothing.  This already happens automatically.
            <c>View#onDraw</c> will be called at the appropriate time.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>However, there are a few cases where you might want to use the functions of the
            choreographer directly in your application.  Here are some examples.</para>
      <para>&lt;ul&gt;
            &lt;li&gt;If your application does its rendering in a different thread, possibly using GL,
            or does not use the animation framework or view hierarchy at all
            and you want to ensure that it is appropriately synchronized with the display, then use
            <c>Choreographer#postFrameCallback</c>.&lt;/li&gt;
            &lt;li&gt;... and that's about it.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>Each <c>Looper</c> thread has its own choreographer.  Other threads can
            post callbacks to run on the choreographer but they will run on the <c>Looper</c>
            to which the choreographer belongs.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/Choreographer" title="Reference documentation">Java documentation for <code>android.view.Choreographer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName="Instance">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As Choreographer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Views::Choreographer ^ Instance { Android::Views::Choreographer ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Views.Choreographer? Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Views.Choreographer Instance" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Choreographer.Instance" />
      <MemberSignature Language="F#" Value="member this.Instance : Android.Views.Choreographer" Usage="Android.Views.Choreographer.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstance", "()Landroid/view/Choreographer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInstance", "()Landroid/view/Choreographer;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Choreographer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the choreographer for the calling thread.</summary>
        <value>The choreographer for this thread.</value>
        <remarks>
          <para>Gets the choreographer for the calling thread.  Must be called from
            a thread that already has a <c>android.os.Looper</c> associated with it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Choreographer#getInstance()" title="Reference documentation">Java documentation for <code>android.view.Choreographer.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if the thread does not have a looper.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Choreographer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.Choreographer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostFrameCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub PostFrameCallback (callback As Choreographer.IFrameCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFrameCallback(Android::Views::Choreographer::IFrameCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void PostFrameCallback (Android.Views.Choreographer.IFrameCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostFrameCallback(class Android.Views.Choreographer/IFrameCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Choreographer.PostFrameCallback(Android.Views.Choreographer.IFrameCallback)" />
      <MemberSignature Language="F#" Value="member this.PostFrameCallback : Android.Views.Choreographer.IFrameCallback -&gt; unit" Usage="choreographer.PostFrameCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postFrameCallback", "(Landroid/view/Choreographer$FrameCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postFrameCallback", "(Landroid/view/Choreographer$FrameCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Choreographer+IFrameCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The frame callback to run during the next frame.</param>
        <summary>Posts a frame callback to run on the next frame.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Choreographer#postFrameCallback(android.view.FrameCallback)" title="Reference documentation">Java documentation for <code>android.view.Choreographer.postFrameCallback(android.view.FrameCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.Choreographer.PostFrameCallbackDelayed(.IFrameCallback, System.Int64)" />
        <altmember cref="M:Android.Views.Choreographer.RemoveFrameCallback(.IFrameCallback)" />
      </Docs>
    </Member>
    <Member MemberName="PostFrameCallbackDelayed">
      <MemberSignature Language="VB.NET" Value="Public Sub PostFrameCallbackDelayed (callback As Choreographer.IFrameCallback, delayMillis As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostFrameCallbackDelayed(Android::Views::Choreographer::IFrameCallback ^ callback, long delayMillis);" />
      <MemberSignature Language="C#" Value="public void PostFrameCallbackDelayed (Android.Views.Choreographer.IFrameCallback? callback, long delayMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostFrameCallbackDelayed(class Android.Views.Choreographer/IFrameCallback callback, int64 delayMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Choreographer.PostFrameCallbackDelayed(Android.Views.Choreographer.IFrameCallback,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.PostFrameCallbackDelayed : Android.Views.Choreographer.IFrameCallback * int64 -&gt; unit" Usage="choreographer.PostFrameCallbackDelayed (callback, delayMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postFrameCallbackDelayed", "(Landroid/view/Choreographer$FrameCallback;J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postFrameCallbackDelayed", "(Landroid/view/Choreographer$FrameCallback;J)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Choreographer+IFrameCallback" />
        <Parameter Name="delayMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="callback">The frame callback to run during the next frame.</param>
        <param name="delayMillis">The delay time in milliseconds.</param>
        <summary>Posts a frame callback to run on the next frame after the specified delay.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Choreographer#postFrameCallbackDelayed(android.view.FrameCallback,%20long)" title="Reference documentation">Java documentation for <code>android.view.Choreographer.postFrameCallbackDelayed(android.view.FrameCallback, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.Choreographer.PostFrameCallback(.IFrameCallback)" />
        <altmember cref="M:Android.Views.Choreographer.RemoveFrameCallback(.IFrameCallback)" />
      </Docs>
    </Member>
    <Member MemberName="PostVsyncCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub PostVsyncCallback (callback As Choreographer.IVsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostVsyncCallback(Android::Views::Choreographer::IVsyncCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void PostVsyncCallback (Android.Views.Choreographer.IVsyncCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PostVsyncCallback(class Android.Views.Choreographer/IVsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Choreographer.PostVsyncCallback(Android.Views.Choreographer.IVsyncCallback)" />
      <MemberSignature Language="F#" Value="member this.PostVsyncCallback : Android.Views.Choreographer.IVsyncCallback -&gt; unit" Usage="choreographer.PostVsyncCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postVsyncCallback", "(Landroid/view/Choreographer$VsyncCallback;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postVsyncCallback", "(Landroid/view/Choreographer$VsyncCallback;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Choreographer+IVsyncCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFrameCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFrameCallback (callback As Choreographer.IFrameCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFrameCallback(Android::Views::Choreographer::IFrameCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void RemoveFrameCallback (Android.Views.Choreographer.IFrameCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveFrameCallback(class Android.Views.Choreographer/IFrameCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Choreographer.RemoveFrameCallback(Android.Views.Choreographer.IFrameCallback)" />
      <MemberSignature Language="F#" Value="member this.RemoveFrameCallback : Android.Views.Choreographer.IFrameCallback -&gt; unit" Usage="choreographer.RemoveFrameCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeFrameCallback", "(Landroid/view/Choreographer$FrameCallback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeFrameCallback", "(Landroid/view/Choreographer$FrameCallback;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Choreographer+IFrameCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The frame callback to remove.</param>
        <summary>Removes a previously posted frame callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Choreographer#removeFrameCallback(android.view.FrameCallback)" title="Reference documentation">Java documentation for <code>android.view.Choreographer.removeFrameCallback(android.view.FrameCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.Choreographer.PostFrameCallback(.IFrameCallback)" />
        <altmember cref="M:Android.Views.Choreographer.PostFrameCallbackDelayed(.IFrameCallback, System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveVsyncCallback">
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveVsyncCallback (callback As Choreographer.IVsyncCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveVsyncCallback(Android::Views::Choreographer::IVsyncCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public void RemoveVsyncCallback (Android.Views.Choreographer.IVsyncCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveVsyncCallback(class Android.Views.Choreographer/IVsyncCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Choreographer.RemoveVsyncCallback(Android.Views.Choreographer.IVsyncCallback)" />
      <MemberSignature Language="F#" Value="member this.RemoveVsyncCallback : Android.Views.Choreographer.IVsyncCallback -&gt; unit" Usage="choreographer.RemoveVsyncCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeVsyncCallback", "(Landroid/view/Choreographer$VsyncCallback;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeVsyncCallback", "(Landroid/view/Choreographer$VsyncCallback;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.Choreographer+IVsyncCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Choreographer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.Choreographer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Choreographer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.Choreographer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
