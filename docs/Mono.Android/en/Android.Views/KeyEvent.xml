<Type Name="KeyEvent" FullName="Android.Views.KeyEvent">
  <TypeSignature Language="C#" Value="public class KeyEvent : Android.Views.InputEvent, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEvent extends Android.Views.InputEvent implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.InputEvent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/KeyEvent", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Object used to report key and button events.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Object used to report key and button events.
 </para>
      <para tool="javadoc-to-mdoc">
 Each key press is described by a sequence of key events.  A key press
 starts with a key event with <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c>.  If the key is held
 sufficiently long that it repeats, then the initial down is followed
 additional key events with <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c> and a non-zero value for
 <c><see cref="P:Android.Views.KeyEvent.RepeatCount" /></c>.  The last key event is a <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c>
 for the key up.  If the key press is canceled, the key up event will have the
 <c><see cref="!:Android.Views.KeyEvent.FLAG_CANCELED" /></c> flag set.
 </para>
      <para tool="javadoc-to-mdoc">
 Key events are generally accompanied by a key code (<c><see cref="P:Android.Views.KeyEvent.KeyCode" /></c>),
 scan code (<c><see cref="P:Android.Views.KeyEvent.ScanCode" /></c>) and meta state (<c><see cref="P:Android.Views.KeyEvent.MetaState" /></c>).
 Key code constants are defined in this class.  Scan code constants are raw
 device-specific codes obtained from the OS and so are not generally meaningful
 to applications unless interpreted using the <c><see cref="T:Android.Views.KeyCharacterMap" /></c>.
 Meta states describe the pressed state of key modifiers
 such as <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_ON" /></c> or <c><see cref="!:Android.Views.KeyEvent.META_ALT_ON" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 Key codes typically correspond one-to-one with individual keys on an input device.
 Many keys and key combinations serve quite different functions on different
 input devices so care must be taken when interpreting them.  Always use the
 <c><see cref="T:Android.Views.KeyCharacterMap" /></c> associated with the input device when mapping keys
 to characters.  Be aware that there may be multiple key input devices active
 at the same time and each will have its own key character map.
 </para>
      <para tool="javadoc-to-mdoc">
 As soft input methods can use multiple and inventive ways of inputting text,
 there is no guarantee that any key press on a soft keyboard will generate a key
 event: this is left to the IME's discretion, and in fact sending such events is
 discouraged.  You should never rely on receiving KeyEvents for any key on a soft
 input method.  In particular, the default software keyboard will never send any
 key event to any application targetting Jelly Bean or later, and will only send
 events for some presses of the delete and return keys to applications targetting
 Ice Cream Sandwich or earlier.  Be aware that other software input methods may
 never send key events regardless of the version.  Consider using editor actions
 like <c><see cref="!:Android.Views.InputMethods.EditorInfo.IME_ACTION_DONE" /></c> if you need
 specific interaction with the software keyboard, as it gives more visibility to
 the user as to how your application will react to key presses.
 </para>
      <para tool="javadoc-to-mdoc">
 When interacting with an IME, the framework may deliver key events
 with the special action <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c> that either specifies
 that single repeated key code or a sequence of characters to insert.
 </para>
      <para tool="javadoc-to-mdoc">
 In general, the framework cannot guarantee that the key events it delivers
 to a view always constitute complete key sequences since some events may be dropped
 or modified by containing views before they are delivered.  The view implementation
 should be prepared to handle <c><see cref="!:Android.Views.KeyEvent.FLAG_CANCELED" /></c> and should tolerate anomalous
 situations such as receiving a new <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c> without first having
 received an <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c> for the prior key press.
 </para>
      <para tool="javadoc-to-mdoc">
 Refer to <c><see cref="T:Android.Views.InputDevice" /></c> for more information about how different kinds of
 input devices and sources represent keys and buttons.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/KeyEvent.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (Android.Views.KeyEvent origEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.KeyEvent origEvent) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/KeyEvent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="origEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="origEvent">To be added.</param>
        <summary>Make an exact copy of an existing key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make an exact copy of an existing key event.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (Android.Views.KeyEventActions action, Android.Views.Keycode code);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected KeyEvent (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (Android.Views.KeyEvent origEvent, long eventTime, int newRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Views.KeyEvent origEvent, int64 eventTime, int32 newRepeat) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/KeyEvent;JI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="origEvent" Type="Android.Views.KeyEvent" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="newRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="origEvent">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="newRepeat">To be added.</param>
        <summary>Copy an existing key event, modifying its time and repeat count.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an existing key event, modifying its time and repeat count.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(android.view.KeyEvent, long, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long time, string characters, int deviceId, Android.Views.KeyEventFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 time, string characters, int32 deviceId, valuetype Android.Views.KeyEventFlags flags) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JLjava/lang/String;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="time" Type="System.Int64" />
        <Parameter Name="characters" Type="System.String" />
        <Parameter Name="device" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.KeyEventFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="time">To be added.</param>
        <param name="characters">To be added.</param>
        <param name="deviceId">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Create a new key event for a string of characters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event for a string of characters.  The key code,
 action, repeat count and source will automatically be set to
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_UNKNOWN" /></c>, <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c>, 0, and
 <c><see cref="F:Android.Views.InputDevice.SourceKeyboard" /></c> for you.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, java.lang.String, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long downTime, long eventTime, Android.Views.KeyEventActions action, Android.Views.Keycode code, int repeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 downTime, int64 eventTime, valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code, int32 repeat) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JJIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="downTime" Type="System.Int64" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="downTime">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <param name="repeat">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, long, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long downTime, long eventTime, Android.Views.KeyEventActions action, Android.Views.Keycode code, int repeat, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 downTime, int64 eventTime, valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code, int32 repeat, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JJIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="downTime" Type="System.Int64" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeat" Type="System.Int32" />
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="downTime">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, long, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long downTime, long eventTime, Android.Views.KeyEventActions action, Android.Views.Keycode code, int repeat, Android.Views.MetaKeyStates metaState, int deviceId, int scancode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 downTime, int64 eventTime, valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code, int32 repeat, valuetype Android.Views.MetaKeyStates metaState, int32 deviceId, int32 scancode) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JJIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="downTime" Type="System.Int64" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeat" Type="System.Int32" />
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="device" Type="System.Int32" />
        <Parameter Name="scancode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="downTime">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="metaState">To be added.</param>
        <param name="deviceId">To be added.</param>
        <param name="scancode">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, long, int, int, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long downTime, long eventTime, Android.Views.KeyEventActions action, Android.Views.Keycode code, int repeat, Android.Views.MetaKeyStates metaState, int deviceId, int scancode, Android.Views.KeyEventFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 downTime, int64 eventTime, valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code, int32 repeat, valuetype Android.Views.MetaKeyStates metaState, int32 deviceId, int32 scancode, valuetype Android.Views.KeyEventFlags flags) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JJIIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="downTime" Type="System.Int64" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeat" Type="System.Int32" />
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="device" Type="System.Int32" />
        <Parameter Name="scancode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.KeyEventFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="downTime">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="metaState">To be added.</param>
        <param name="deviceId">To be added.</param>
        <param name="scancode">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, long, int, int, int, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEvent (long downTime, long eventTime, Android.Views.KeyEventActions action, Android.Views.Keycode code, int repeat, Android.Views.MetaKeyStates metaState, int deviceId, int scancode, Android.Views.KeyEventFlags flags, Android.Views.InputSourceType source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64 downTime, int64 eventTime, valuetype Android.Views.KeyEventActions action, valuetype Android.Views.Keycode code, int32 repeat, valuetype Android.Views.MetaKeyStates metaState, int32 deviceId, int32 scancode, valuetype Android.Views.KeyEventFlags flags, valuetype Android.Views.InputSourceType source) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(JJIIIIIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="downTime" Type="System.Int64" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="code" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="repeat" Type="System.Int32" />
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="deviceId" Type="System.Int32" />
        <Parameter Name="scancode" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.KeyEventFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="source" Type="Android.Views.InputSourceType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="downTime">To be added.</param>
        <param name="eventTime">To be added.</param>
        <param name="action">To be added.</param>
        <param name="code">To be added.</param>
        <param name="repeat">To be added.</param>
        <param name="metaState">To be added.</param>
        <param name="deviceId">To be added.</param>
        <param name="scancode">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="source">To be added.</param>
        <summary>Create a new key event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#KeyEvent(long, long, int, int, int, int, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public Android.Views.KeyEventActions Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyEventActions Action" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAction", "()I", "GetGetActionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEventActions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the action of this key event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the action of this key event.  May be either
 <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c>, <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c>, or <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getAction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeAction">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyEvent ChangeAction (Android.Views.KeyEvent e, Android.Views.KeyEventActions action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyEvent ChangeAction(class Android.Views.KeyEvent e, valuetype Android.Views.KeyEventActions action) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeAction", "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="action" Type="Android.Views.KeyEventActions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="e">The existing event to be copied.  This is not modified.</param>
        <param name="action">The new action code of the event.
</param>
        <summary>Create a new key event that is the same as the given one, but whose
 action is replaced with the given value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event that is the same as the given one, but whose
 action is replaced with the given value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#changeAction(android.view.KeyEvent, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChangeFlags">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyEvent ChangeFlags (Android.Views.KeyEvent e, Android.Views.KeyEventFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyEvent ChangeFlags(class Android.Views.KeyEvent e, valuetype Android.Views.KeyEventFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeFlags", "(Landroid/view/KeyEvent;I)Landroid/view/KeyEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="flags" Type="Android.Views.KeyEventFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="e">The existing event to be copied.  This is not modified.</param>
        <param name="flags">The new flags constant.
</param>
        <summary>Create a new key event that is the same as the given one, but whose
 flags are replaced with the given value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event that is the same as the given one, but whose
 flags are replaced with the given value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#changeFlags(android.view.KeyEvent, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChangeTimeRepeat">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyEvent ChangeTimeRepeat (Android.Views.KeyEvent e, long eventTime, int newRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyEvent ChangeTimeRepeat(class Android.Views.KeyEvent e, int64 eventTime, int32 newRepeat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeTimeRepeat", "(Landroid/view/KeyEvent;JI)Landroid/view/KeyEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="newRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="e">The existing event to be copied.  This is not modified.</param>
        <param name="eventTime">The new event time
 (in <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c>) of the event.</param>
        <param name="newRepeat">The new repeat count of the event.
</param>
        <summary>Create a new key event that is the same as the given one, but whose
 event time and repeat count are replaced with the given value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event that is the same as the given one, but whose
 event time and repeat count are replaced with the given value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#changeTimeRepeat(android.view.KeyEvent, long, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ChangeTimeRepeat">
      <MemberSignature Language="C#" Value="public static Android.Views.KeyEvent ChangeTimeRepeat (Android.Views.KeyEvent e, long eventTime, int newRepeat, Android.Views.KeyEventFlags newFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.KeyEvent ChangeTimeRepeat(class Android.Views.KeyEvent e, int64 eventTime, int32 newRepeat, valuetype Android.Views.KeyEventFlags newFlags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeTimeRepeat", "(Landroid/view/KeyEvent;JII)Landroid/view/KeyEvent;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="eventTime" Type="System.Int64" />
        <Parameter Name="newRepeat" Type="System.Int32" />
        <Parameter Name="newFlags" Type="Android.Views.KeyEventFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="e">The existing event to be copied.  This is not modified.</param>
        <param name="eventTime">The new event time
 (in <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c>) of the event.</param>
        <param name="newRepeat">The new repeat count of the event.</param>
        <param name="newFlags">New flags for the event, replacing the entire value
 in the original event.
</param>
        <summary>Create a new key event that is the same as the given one, but whose
 event time and repeat count are replaced with the given value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new key event that is the same as the given one, but whose
 event time and repeat count are replaced with the given value.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#changeTimeRepeat(android.view.KeyEvent, long, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Characters">
      <MemberSignature Language="C#" Value="public string Characters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Characters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCharacters", "()Ljava/lang/String;", "GetGetCharactersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For the special case of a <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c> event with key
 code of <c><see cref="!:Android.Views.KeyEvent.KEYCODE_UNKNOWN" /></c>, this is a raw string of characters
 associated with the event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">For the special case of a <c><see cref="!:Android.Views.KeyEvent.ACTION_MULTIPLE" /></c> event with key
 code of <c><see cref="!:Android.Views.KeyEvent.KEYCODE_UNKNOWN" /></c>, this is a raw string of characters
 associated with the event.  In all other cases it is null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getCharacters()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#CREATOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public override int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceId">
      <MemberSignature Language="C#" Value="public override int DeviceId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DeviceId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDeviceId", "()I", "GetGetDeviceIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the id for the device that this event came from.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the id for the device that this event came from.  An id of
 zero indicates that the event didn't come from a physical device
 and maps to the default keymap.  The other numbers are arbitrary and
 you shouldn't depend on the values. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getDeviceId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dispatch">
      <MemberSignature Language="C#" Value="public bool Dispatch (Android.Views.KeyEvent.ICallback receiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispatch(class Android.Views.KeyEvent/ICallback receiver) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatch", "(Landroid/view/KeyEvent$Callback;)Z", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Views.KeyEvent+ICallback" />
      </Parameters>
      <Docs>
        <param name="receiver">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#dispatch(android.view.KeyEvent.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Dispatch">
      <MemberSignature Language="C#" Value="public bool Dispatch (Android.Views.KeyEvent.ICallback receiver, Android.Views.KeyEvent.DispatcherState state, Java.Lang.Object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Dispatch(class Android.Views.KeyEvent/ICallback receiver, class Android.Views.KeyEvent/DispatcherState state, class Java.Lang.Object target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatch", "(Landroid/view/KeyEvent$Callback;Landroid/view/KeyEvent$DispatcherState;Ljava/lang/Object;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="receiver" Type="Android.Views.KeyEvent+ICallback" />
        <Parameter Name="state" Type="Android.Views.KeyEvent+DispatcherState" />
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="receiver">The Callback that will be given the event.</param>
        <param name="state">State information retained across events.</param>
        <param name="target">The target of the dispatch, for use in tracking.</param>
        <summary>Deliver this key event to a <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html" /></c> interface.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Deliver this key event to a <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html" /></c> interface.  If this is
 an ACTION_MULTIPLE event and it is not handled, then an attempt will
 be made to deliver a single normal event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#dispatch(android.view.KeyEvent.Callback, android.view.KeyEvent.DispatcherState, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="DisplayLabel">
      <MemberSignature Language="C#" Value="public virtual char DisplayLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char DisplayLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDisplayLabel", "()C", "GetGetDisplayLabelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the primary character for this key.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the primary character for this key.
 In other words, the label that is physically printed on it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getDisplayLabel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DownTime">
      <MemberSignature Language="C#" Value="public long DownTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 DownTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDownTime", "()J", "GetGetDownTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the time of the most recent key down event,
 in the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> time base.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the time of the most recent key down event,
 in the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> time base.  If this
 is a down event, this will be the same as <c><see cref="P:Android.Views.KeyEvent.EventTime" /></c>.
 Note that when chording keys, this value is the down time of the
 most recently pressed key, which may <i>not</i> be the same physical
 key of this event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getDownTime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EventTime">
      <MemberSignature Language="C#" Value="public override long EventTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 EventTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEventTime", "()J", "GetGetEventTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the time this event occurred,
 in the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> time base.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the time this event occurred,
 in the <c><see cref="M:Android.OS.SystemClock.UptimeMillis" /></c> time base.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getEventTime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public Android.Views.KeyEventFlags Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.KeyEventFlags Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyEventFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the flags for this key event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the flags for this key event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getFlags()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDeadChar">
      <MemberSignature Language="C#" Value="public static int GetDeadChar (int accent, int c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDeadChar(int32 accent, int32 c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDeadChar", "(II)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accent" Type="System.Int32" />
        <Parameter Name="c" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="accent">To be added.</param>
        <param name="c">To be added.</param>
        <summary>Get the character that is produced by putting accent on the character
 c.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the character that is produced by putting accent on the character
 c.
 For example, getDeadChar('`', 'e') returns &amp;egrave;.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getDeadChar(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyData">
      <MemberSignature Language="C#" Value="public virtual bool GetKeyData (Android.Views.KeyCharacterMap.KeyData results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetKeyData(class Android.Views.KeyCharacterMap/KeyData results) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getKeyData", "(Landroid/view/KeyCharacterMap$KeyData;)Z", "GetGetKeyData_Landroid_view_KeyCharacterMap_KeyData_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="Android.Views.KeyCharacterMap+KeyData" />
      </Parameters>
      <Docs>
        <param name="results">A <c><see cref="!:NoType:android/view/KeyCharacterMap$KeyData;Href=../../../reference/android/view/KeyCharacterMap.KeyData.html" /></c> instance that will be
 filled with the results.</param>
        <summary>Get the character conversion data for a given key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the character conversion data for a given key code.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getKeyData(android.view.KeyCharacterMap.KeyData)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (char[] chars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(char[] chars) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMatch", "([C)C", "GetGetMatch_arrayCHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="chars">The array of matching characters to consider.</param>
        <summary>Gets the first character in the character array that can be generated
 by the specified key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the first character in the character array that can be generated
 by the specified key code.
 </para>
          <para tool="javadoc-to-mdoc">
 This is a convenience function that returns the same value as
 <c><see cref="M:Android.Views.KeyEvent.GetMatch(System.Char[],Android.Views.MetaKeyStates)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getMatch(char[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public virtual char GetMatch (char[] chars, Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char GetMatch(char[] chars, valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMatch", "([CI)C", "GetGetMatch_arrayCIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="modifiers" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="chars">The array of matching characters to consider.</param>
        <param name="metaState">The preferred meta key modifier state.</param>
        <summary>Gets the first character in the character array that can be generated
 by the specified key code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the first character in the character array that can be generated
 by the specified key code.  If there are multiple choices, prefers
 the one that would be generated with the specified meta key modifier state.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getMatch(char[], int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMatch">
      <MemberSignature Language="C#" Value="public char GetMatch (char[] chars, int metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char GetMatch(char[] chars, int32 metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="chars" Type="System.Char[]" />
        <Parameter Name="metaState" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="chars">To be added.</param>
        <param name="metaState">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnicodeChar">
      <MemberSignature Language="C#" Value="public virtual int GetUnicodeChar (Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetUnicodeChar(valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getUnicodeChar", "(I)I", "GetGetUnicodeChar_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="meta" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metaState">The meta key modifier state.</param>
        <summary>Gets the Unicode character generated by the specified key and meta
 key state combination.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the Unicode character generated by the specified key and meta
 key state combination.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns the Unicode character that the specified key would produce
 when the specified meta bits (see <c><see cref="T:Android.Text.Method.MetaKeyKeyListener" /></c>)
 were active.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns 0 if the key is not one that is used to type Unicode
 characters.
 </para>
          <para tool="javadoc-to-mdoc">
 If the return value has bit <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccent" /></c> set, the
 key is a "dead key" that should be combined with another to
 actually produce a character -- see <c><see cref="M:Android.Views.KeyCharacterMap.GetDeadChar(System.Int32,System.Int32)" /></c> --
 after masking with <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccentMask" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getUnicodeChar(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasModifiers">
      <MemberSignature Language="C#" Value="public bool HasModifiers (Android.Views.MetaKeyStates modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasModifiers(valuetype Android.Views.MetaKeyStates modifiers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasModifiers", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modifiers" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="modifiers">The meta state of the modifier keys to check.  May be a combination
 of modifier meta states as defined by <c><see cref="P:Android.Views.KeyEvent.ModifierMetaStateMask" /></c>.  May be 0 to
 ensure that no modifier keys are pressed.</param>
        <summary>Returns true if only the specified modifiers keys are pressed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if only the specified modifiers keys are pressed.
 Returns false if a different combination of modifier keys are pressed.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function ignores
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If the specified modifier mask includes directional modifiers, such as
 <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_LEFT_ON" /></c>, then this method ensures that the
 modifier is pressed on that side.
 If the specified modifier mask includes non-directional modifiers, such as
 <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_ON" /></c>, then this method ensures that the modifier
 is pressed on either side.
 If the specified modifier mask includes both directional and non-directional modifiers
 for the same type of key, such as <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_LEFT_ON" /></c>,
 then this method throws an illegal argument exception.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#hasModifiers(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the modifiers parameter contains invalid modifiers</exception>
        <altmember cref="M:Android.Views.KeyEvent.MetaStateHasModifiers(Android.Views.MetaKeyStates, Android.Views.MetaKeyStates)" />
      </Docs>
    </Member>
    <Member MemberName="HasNoModifiers">
      <MemberSignature Language="C#" Value="public bool HasNoModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNoModifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasNoModifiers", "()Z", "GetHasNoModifiersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if no modifier keys are pressed.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if no modifier keys are pressed.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function ignores
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The meta state is normalized prior to comparison using <c><see cref="M:Android.Views.KeyEvent.NormalizeMetaState(Android.Views.MetaKeyStates)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#hasNoModifiers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.Views.KeyEvent.MetaStateHasNoModifiers(Android.Views.MetaKeyStates)" />
      </Docs>
    </Member>
    <Member MemberName="IsAltPressed">
      <MemberSignature Language="C#" Value="public bool IsAltPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAltPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAltPressed", "()Z", "GetIsAltPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the ALT meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isAltPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsCanceled">
      <MemberSignature Language="C#" Value="public bool IsCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCanceled", "()Z", "GetIsCanceledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c> events, indicates that the event has been
 canceled as per <c><see cref="!:Android.Views.KeyEvent.FLAG_CANCELED" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">For <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c> events, indicates that the event has been
 canceled as per <c><see cref="!:Android.Views.KeyEvent.FLAG_CANCELED" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isCanceled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsCapsLockOn">
      <MemberSignature Language="C#" Value="public bool IsCapsLockOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCapsLockOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCapsLockOn", "()Z", "GetIsCapsLockOnHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the locked state of the CAPS LOCK meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isCapsLockOn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsCtrlPressed">
      <MemberSignature Language="C#" Value="public bool IsCtrlPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCtrlPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCtrlPressed", "()Z", "GetIsCtrlPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the CTRL meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isCtrlPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsFunctionPressed">
      <MemberSignature Language="C#" Value="public bool IsFunctionPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFunctionPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFunctionPressed", "()Z", "GetIsFunctionPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the FUNCTION meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isFunctionPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsGamepadButton">
      <MemberSignature Language="C#" Value="public static bool IsGamepadButton (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsGamepadButton(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isGamepadButton", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <summary>Returns true if the specified keycode is a gamepad button.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the specified keycode is a gamepad button.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isGamepadButton(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="IsLongPress">
      <MemberSignature Language="C#" Value="public bool IsLongPress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLongPress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLongPress", "()Z", "GetIsLongPressHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c> events, indicates that the event has been
 canceled as per <c><see cref="!:Android.Views.KeyEvent.FLAG_LONG_PRESS" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">For <c><see cref="!:Android.Views.KeyEvent.ACTION_DOWN" /></c> events, indicates that the event has been
 canceled as per <c><see cref="!:Android.Views.KeyEvent.FLAG_LONG_PRESS" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isLongPress()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsMetaPressed">
      <MemberSignature Language="C#" Value="public bool IsMetaPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMetaPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMetaPressed", "()Z", "GetIsMetaPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the META meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isMetaPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsModifierKey">
      <MemberSignature Language="C#" Value="public static bool IsModifierKey (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsModifierKey(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isModifierKey", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">To be added.</param>
        <summary>Returns true if this key code is a modifier key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if this key code is a modifier key.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function return false
 for those keys.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isModifierKey(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsNumLockOn">
      <MemberSignature Language="C#" Value="public bool IsNumLockOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNumLockOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isNumLockOn", "()Z", "GetIsNumLockOnHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the locked state of the NUM LOCK meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isNumLockOn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsPrintingKey">
      <MemberSignature Language="C#" Value="public virtual bool IsPrintingKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrintingKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPrintingKey", "()Z", "GetIsPrintingKeyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this key produces a glyph.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if this key produces a glyph.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isPrintingKey()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsScrollLockOn">
      <MemberSignature Language="C#" Value="public bool IsScrollLockOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScrollLockOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isScrollLockOn", "()Z", "GetIsScrollLockOnHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the locked state of the SCROLL LOCK meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isScrollLockOn()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsShiftPressed">
      <MemberSignature Language="C#" Value="public bool IsShiftPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsShiftPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isShiftPressed", "()Z", "GetIsShiftPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the SHIFT meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isShiftPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSymPressed">
      <MemberSignature Language="C#" Value="public bool IsSymPressed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSymPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSymPressed", "()Z", "GetIsSymPressedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the pressed state of the SYM meta key.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isSymPressed()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSystem">
      <MemberSignature Language="C#" Value="public bool IsSystem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSystem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSystem", "()Z", "GetIsSystemHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Is this a system key?  System keys can not be used for menu shortcuts.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Is this a system key?  System keys can not be used for menu shortcuts.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isSystem()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsTracking">
      <MemberSignature Language="C#" Value="public bool IsTracking { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isTracking", "()Z", "GetIsTrackingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c> events, indicates that the event is still being
 tracked from its initial down event as per
 <c><see cref="!:Android.Views.KeyEvent.FLAG_TRACKING" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">For <c><see cref="!:Android.Views.KeyEvent.ACTION_UP" /></c> events, indicates that the event is still being
 tracked from its initial down event as per
 <c><see cref="!:Android.Views.KeyEvent.FLAG_TRACKING" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#isTracking()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="KeyCharacterMap">
      <MemberSignature Language="C#" Value="public Android.Views.KeyCharacterMap KeyCharacterMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.KeyCharacterMap KeyCharacterMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeyCharacterMap", "()Landroid/view/KeyCharacterMap;", "GetGetKeyCharacterMapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.KeyCharacterMap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Android.Views.KeyCharacterMap" /></c> associated with the keyboard device.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the <c><see cref="T:Android.Views.KeyCharacterMap" /></c> associated with the keyboard device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getKeyCharacterMap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="!:NoType:KeyCharacterMap.UnavailableException} if the key character map&#xA; could not be loaded because it was malformed or the default key character map&#xA; is missing from the system." />
        <altmember cref="M:Android.Views.KeyCharacterMap.Load(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="KeyCode">
      <MemberSignature Language="C#" Value="public Android.Views.Keycode KeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.Keycode KeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKeyCode", "()I", "GetGetKeyCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Keycode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the key code of the key event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the key code of the key event.  This is the physical key that
 was pressed, <i>not</i> the Unicode character.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getKeyCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="KeyCodeFromString">
      <MemberSignature Language="C#" Value="public static Android.Views.Keycode KeyCodeFromString (string symbolicName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.Views.Keycode KeyCodeFromString(string symbolicName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keyCodeFromString", "(Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Keycode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbolicName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="symbolicName">The symbolic name of the keycode.</param>
        <summary>Gets a keycode by its symbolic name such as "KEYCODE_A" or an equivalent
 numeric constant such as "1001".</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a keycode by its symbolic name such as "KEYCODE_A" or an equivalent
 numeric constant such as "1001".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#keyCodeFromString(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="KeyCodeToString">
      <MemberSignature Language="C#" Value="public static string KeyCodeToString (Android.Views.Keycode keyCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string KeyCodeToString(valuetype Android.Views.Keycode keyCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("keyCodeToString", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keyCode">The key code.</param>
        <summary>Returns a string that represents the symbolic name of the specified keycode
 such as "KEYCODE_A", "KEYCODE_DPAD_UP", or an equivalent numeric constant
 such as "1001" if unknown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string that represents the symbolic name of the specified keycode
 such as "KEYCODE_A", "KEYCODE_DPAD_UP", or an equivalent numeric constant
 such as "1001" if unknown.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#keyCodeToString(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.KeyCharacterMap.GetDisplayLabel(Android.Views.Keycode)" />
      </Docs>
    </Member>
    <Member MemberName="MaxKeycode">
      <MemberSignature Language="C#" Value="public const int MaxKeycode = 84;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxKeycode = (84)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MAX_KEYCODE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>84</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#MAX_KEYCODE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxKeyCode">
      <MemberSignature Language="C#" Value="public static Android.Views.Keycode MaxKeyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Android.Views.Keycode MaxKeyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxKeyCode", "()I", "GetGetMaxKeyCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Keycode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum keycode.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum keycode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getMaxKeyCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MetaState">
      <MemberSignature Language="C#" Value="public Android.Views.MetaKeyStates MetaState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.MetaKeyStates MetaState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMetaState", "()I", "GetGetMetaStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MetaKeyStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns the state of the meta keys.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getMetaState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.KeyEvent.IsAltPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsShiftPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsSymPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsCtrlPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsMetaPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsFunctionPressed" />
        <altmember cref="P:Android.Views.KeyEvent.IsCapsLockOn" />
        <altmember cref="P:Android.Views.KeyEvent.IsNumLockOn" />
        <altmember cref="P:Android.Views.KeyEvent.IsScrollLockOn" />
        <altmember cref="P:Android.Views.KeyEvent.Modifiers" />
      </Docs>
    </Member>
    <Member MemberName="MetaStateHasModifiers">
      <MemberSignature Language="C#" Value="public static bool MetaStateHasModifiers (Android.Views.MetaKeyStates metaState, Android.Views.MetaKeyStates modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MetaStateHasModifiers(valuetype Android.Views.MetaKeyStates metaState, valuetype Android.Views.MetaKeyStates modifiers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("metaStateHasModifiers", "(II)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="modifiers" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metaState">The meta state to consider.</param>
        <param name="modifiers">The meta state of the modifier keys to check.  May be a combination
 of modifier meta states as defined by <c><see cref="P:Android.Views.KeyEvent.ModifierMetaStateMask" /></c>.  May be 0 to
 ensure that no modifier keys are pressed.</param>
        <summary>Returns true if only the specified modifier keys are pressed according to
 the specified meta state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if only the specified modifier keys are pressed according to
 the specified meta state.  Returns false if a different combination of modifier
 keys are pressed.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function ignores
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If the specified modifier mask includes directional modifiers, such as
 <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_LEFT_ON" /></c>, then this method ensures that the
 modifier is pressed on that side.
 If the specified modifier mask includes non-directional modifiers, such as
 <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_ON" /></c>, then this method ensures that the modifier
 is pressed on either side.
 If the specified modifier mask includes both directional and non-directional modifiers
 for the same type of key, such as <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_SHIFT_LEFT_ON" /></c>,
 then this method throws an illegal argument exception.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#metaStateHasModifiers(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the modifiers parameter contains invalid modifiers</exception>
        <altmember cref="M:Android.Views.KeyEvent.HasModifiers(Android.Views.MetaKeyStates)" />
      </Docs>
    </Member>
    <Member MemberName="MetaStateHasNoModifiers">
      <MemberSignature Language="C#" Value="public static bool MetaStateHasNoModifiers (Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool MetaStateHasNoModifiers(valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("metaStateHasNoModifiers", "(I)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metaState">The meta state to consider.</param>
        <summary>Returns true if no modifiers keys are pressed according to the specified meta state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if no modifiers keys are pressed according to the specified meta state.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function ignores
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The meta state is normalized prior to comparison using <c><see cref="M:Android.Views.KeyEvent.NormalizeMetaState(Android.Views.MetaKeyStates)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#metaStateHasNoModifiers(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="P:Android.Views.KeyEvent.HasNoModifiers" />
      </Docs>
    </Member>
    <Member MemberName="ModifierMetaStateMask">
      <MemberSignature Language="C#" Value="public static Android.Views.MetaKeyStates ModifierMetaStateMask { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Android.Views.MetaKeyStates ModifierMetaStateMask" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getModifierMetaStateMask", "()I", "GetGetModifierMetaStateMaskHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MetaKeyStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a mask that includes all valid modifier key meta state bits.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets a mask that includes all valid modifier key meta state bits.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, the mask specifically excludes
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getModifierMetaStateMask()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public Android.Views.MetaKeyStates Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.MetaKeyStates Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getModifiers", "()I", "GetGetModifiersHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MetaKeyStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the modifier keys.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the state of the modifier keys.
 </para>
          <para tool="javadoc-to-mdoc">
 For the purposes of this function, <c><see cref="!:Android.Views.KeyEvent.KEYCODE_CAPS_LOCK" /></c>,
 <c><see cref="!:Android.Views.KeyEvent.KEYCODE_SCROLL_LOCK" /></c>, and <c><see cref="!:Android.Views.KeyEvent.KEYCODE_NUM_LOCK" /></c> are
 not considered modifier keys.  Consequently, this function specifically masks out
 <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>, <c><see cref="!:Android.Views.KeyEvent.META_SCROLL_LOCK_ON" /></c> and <c><see cref="!:Android.Views.KeyEvent.META_NUM_LOCK_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 The value returned consists of the meta state (from <c><see cref="P:Android.Views.KeyEvent.MetaState" /></c>)
 normalized using <c><see cref="M:Android.Views.KeyEvent.NormalizeMetaState(Android.Views.MetaKeyStates)" /></c> and then masked with
 <c><see cref="P:Android.Views.KeyEvent.ModifierMetaStateMask" /></c> so that only valid modifier bits are retained.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getModifiers()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
        <altmember cref="P:Android.Views.KeyEvent.MetaState" />
      </Docs>
    </Member>
    <Member MemberName="NormalizeMetaState">
      <MemberSignature Language="C#" Value="public static Android.Views.MetaKeyStates NormalizeMetaState (Android.Views.MetaKeyStates metaState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.Views.MetaKeyStates NormalizeMetaState(valuetype Android.Views.MetaKeyStates metaState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("normalizeMetaState", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.MetaKeyStates</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metaState" Type="Android.Views.MetaKeyStates">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="metaState">The meta state.</param>
        <summary>Normalizes the specified meta state.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Normalizes the specified meta state.
 </para>
          <para tool="javadoc-to-mdoc">
 The meta state is normalized such that if either the left or right modifier meta state
 bits are set then the result will also include the universal bit for that modifier.
 </para>
          <para tool="javadoc-to-mdoc">
 If the specified meta state contains <c><see cref="!:Android.Views.KeyEvent.META_ALT_LEFT_ON" /></c> then
 the result will also contain <c><see cref="!:Android.Views.KeyEvent.META_ALT_ON" /></c> in addition to <c><see cref="!:Android.Views.KeyEvent.META_ALT_LEFT_ON" /></c>
 and the other bits that were specified in the input.  The same is process is
 performed for shift, control and meta.
 </para>
          <para tool="javadoc-to-mdoc">
 If the specified meta state contains synthetic meta states defined by
 <c><see cref="T:Android.Text.Method.MetaKeyKeyListener" /></c>, then those states are translated here and the original
 synthetic meta states are removed from the result.
 <c><see cref="!:Android.Text.Method.MetaKeyKeyListener.META_CAP_LOCKED" /></c> is translated to <c><see cref="!:Android.Views.KeyEvent.META_CAPS_LOCK_ON" /></c>.
 <c><see cref="!:Android.Text.Method.MetaKeyKeyListener.META_ALT_LOCKED" /></c> is translated to <c><see cref="!:Android.Views.KeyEvent.META_ALT_ON" /></c>.
 <c><see cref="!:Android.Text.Method.MetaKeyKeyListener.META_SYM_LOCKED" /></c> is translated to <c><see cref="!:Android.Views.KeyEvent.META_SYM_ON" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Undefined meta state bits are removed.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#normalizeMetaState(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Number">
      <MemberSignature Language="C#" Value="public virtual char Number { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Number" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNumber", "()C", "GetGetNumberHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number or symbol associated with the key.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the number or symbol associated with the key.
 </para>
          <para tool="javadoc-to-mdoc">
 The character value is returned, not the numeric value.
 If the key is not a number, but is a symbol, the symbol is retuned.
 </para>
          <para tool="javadoc-to-mdoc">
 This method is intended to to support dial pads and other numeric or
 symbolic entry on keyboards where certain keys serve dual function
 as alphabetic and symbolic keys.  This method returns the number
 or symbol associated with the key independent of whether the user
 has pressed the required modifier.
 </para>
          <para tool="javadoc-to-mdoc">
 For example, on one particular keyboard the keys on the top QWERTY row generate
 numbers when ALT is pressed such that ALT-Q maps to '1'.  So for that keyboard
 when <c><see cref="P:Android.Views.KeyEvent.Number" /></c> is called with <c><see cref="!:Android.Views.KeyEvent.KEYCODE_Q" /></c> it returns '1'
 so that the user can type numbers without pressing ALT when it makes sense.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getNumber()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RepeatCount">
      <MemberSignature Language="C#" Value="public int RepeatCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRepeatCount", "()I", "GetGetRepeatCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the repeat count of the event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the repeat count of the event.  For both key up and key down
 events, this is the number of times the key has repeated with the first
 down starting at 0 and counting up from there.  For multiple key
 events, this is the number of down/up pairs that have occurred.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getRepeatCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanCode">
      <MemberSignature Language="C#" Value="public int ScanCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ScanCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScanCode", "()I", "GetGetScanCodeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the hardware key id of this key event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the hardware key id of this key event.  These values are not
 reliable and vary from device to device.

 </para>
          <para tool="javadoc-to-mdoc">
 Mostly this is here for debugging purposes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getScanCode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSource">
      <MemberSignature Language="C#" Value="public void SetSource (Android.Views.InputSourceType source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSource(valuetype Android.Views.InputSourceType source) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSource", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Android.Views.InputSourceType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="source">The new source.</param>
        <summary>Modifies the source of the event.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Modifies the source of the event. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#setSource(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public override Android.Views.InputSourceType Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.InputSourceType Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSource", "()I", "GetGetSourceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.InputSourceType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the source of the event.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the source of the event. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getSource()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="C#" Value="public void StartTracking ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartTracking() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startTracking", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call this during <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyDown(int,android.view.KeyEvent)" /></c> to have the system track
 the key through its final up (possibly including a long press).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Call this during <c><see cref="!:NoType:android/view/KeyEvent$Callback;Href=../../../reference/android/view/KeyEvent.Callback.html#onKeyDown(int,android.view.KeyEvent)" /></c> to have the system track
 the key through its final up (possibly including a long press).  Note
 that only one key can be tracked at a time -- if another key down
 event is received while a previous one is being tracked, tracking is
 stopped on the previous event.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#startTracking()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeChar">
      <MemberSignature Language="C#" Value="public virtual int UnicodeChar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UnicodeChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUnicodeChar", "()I", "GetGetUnicodeCharHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the Unicode character generated by the specified key and meta
 key state combination.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the Unicode character generated by the specified key and meta
 key state combination.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns the Unicode character that the specified key would produce
 when the specified meta bits (see <c><see cref="T:Android.Text.Method.MetaKeyKeyListener" /></c>)
 were active.
 </para>
          <para tool="javadoc-to-mdoc">
 Returns 0 if the key is not one that is used to type Unicode
 characters.
 </para>
          <para tool="javadoc-to-mdoc">
 If the return value has bit <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccent" /></c> set, the
 key is a "dead key" that should be combined with another to
 actually produce a character -- see <c><see cref="M:Android.Views.KeyCharacterMap.GetDeadChar(System.Int32,System.Int32)" /></c> --
 after masking with <c><see cref="F:Android.Views.KeyCharacterMap.CombiningAccentMask" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#getUnicodeChar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public override void WriteToParcel (Android.OS.Parcel out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flatten this object in to a Parcel.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/KeyEvent.html#writeToParcel(android.os.Parcel, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
