<Type Name="Window" FullName="Android.Views.Window">
  <TypeSignature Language="C#" Value="public abstract class Window : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Window extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/Window", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstract base class for a top-level window look and behavior policy.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Abstract base class for a top-level window look and behavior policy.  An
 instance of this class should be used as the top-level view added to the
 window manager. It provides standard UI policies such as a background, title
 area, default key processing, etc.

 </para>
      <para tool="javadoc-to-mdoc">The only existing implementation of this abstract class is
 android.view.PhoneWindow, which you should instantiate when needing a
 Window.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/Window.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#Window(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Window (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentView">
      <MemberSignature Language="C#" Value="public abstract void AddContentView (Android.Views.View view, Android.Views.ViewGroup.LayoutParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.
</param>
        <summary>Variation on
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 to add an additional content view to the screen.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Variation on
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 to add an additional content view to the screen.  Added after any existing
 ones in the screen -- existing views are NOT removed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#addContentView(android.view.View, android.view.ViewGroup.LayoutParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual void AddFlags (Android.Views.WindowManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(valuetype Android.Views.WindowManagerFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addFlags", "(I)V", "GetAddFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The flag bits to be set.</param>
        <summary>Convenience function to set the flag bits as specified in flags, as
 per <c><see cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience function to set the flag bits as specified in flags, as
 per <c><see cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#addFlags(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags, Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.ClearFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AllowEnterTransitionOverlap">
      <MemberSignature Language="C#" Value="public virtual bool AllowEnterTransitionOverlap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEnterTransitionOverlap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowEnterTransitionOverlap", "()Z", "GetGetAllowEnterTransitionOverlapHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowEnterTransitionOverlap", "(Z)V", "GetSetAllowEnterTransitionOverlap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns how the transition set in
 <c><see cref="P:Android.Views.Window.EnterTransition" /></c> overlaps with the exit
 transition of the calling Activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getAllowEnterTransitionOverlap()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns how the transition set in
 <c><see cref="P:Android.Views.Window.EnterTransition" /></c> overlaps with the exit
 transition of the calling Activity. When true, the transition will start as soon as possible.
 When false, the transition will wait until the remote exiting transition completes before
 starting.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setAllowEnterTransitionOverlap(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Controls how the transition set in
 <c><see cref="P:Android.Views.Window.EnterTransition" /></c> overlaps with the exit
 transition of the calling Activity. When true, the transition will start as soon as possible.
 When false, the transition will wait until the remote exiting transition completes before
 starting.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturnTransitionOverlap">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturnTransitionOverlap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturnTransitionOverlap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAllowReturnTransitionOverlap", "()Z", "GetGetAllowReturnTransitionOverlapHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAllowReturnTransitionOverlap", "(Z)V", "GetSetAllowReturnTransitionOverlap_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns how the transition set in
 <c><see cref="P:Android.Views.Window.ExitTransition" /></c> overlaps with the exit
 transition of the called Activity when reentering after if finishes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getAllowReturnTransitionOverlap()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns how the transition set in
 <c><see cref="P:Android.Views.Window.ExitTransition" /></c> overlaps with the exit
 transition of the called Activity when reentering after if finishes. When true,
 the transition will start as soon as possible. When false, the transition will wait
 until the called Activity's exiting transition completes before starting.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setAllowReturnTransitionOverlap(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Controls how the transition set in
 <c><see cref="P:Android.Views.Window.ExitTransition" /></c> overlaps with the exit
 transition of the called Activity when reentering after if finishes. When true,
 the transition will start as soon as possible. When false, the transition will wait
 until the called Activity's exiting transition completes before starting.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Android.Views.WindowManagerLayoutParams Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.WindowManagerLayoutParams Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAttributes", "()Landroid/view/WindowManager$LayoutParams;", "GetGetAttributesHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAttributes", "(Landroid/view/WindowManager$LayoutParams;)V", "GetSetAttributes_Landroid_view_WindowManager_LayoutParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerLayoutParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current window attributes associated with this panel.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getAttributes()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Retrieve the current window attributes associated with this panel.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setAttributes(android.view.WindowManager.LayoutParams)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Specify custom window attributes.  <i>PLEASE NOTE:</i> the
 layout params you give here should generally be from values previously
 retrieved with <c><see cref="P:Android.Views.Window.Attributes" /></c>; you probably do not want to
 blindly create and apply your own, since this will blow away any values
 set by the framework that you are not interested in.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public Android.Views.Window.ICallback Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window/ICallback Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCallback", "()Landroid/view/Window$Callback;", "GetGetCallbackHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setCallback", "(Landroid/view/Window$Callback;)V", "GetSetCallback_Landroid_view_Window_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current Callback interface for this window.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getCallback()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the current Callback interface for this window.
</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setCallback(android.view.Window.Callback)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the Callback interface for this window, used to intercept key
 events and other dynamic operations in the window.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearFlags">
      <MemberSignature Language="C#" Value="public virtual void ClearFlags (Android.Views.WindowManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFlags(valuetype Android.Views.WindowManagerFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearFlags", "(I)V", "GetClearFlags_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The flag bits to be cleared.</param>
        <summary>Convenience function to clear the flag bits as specified in flags, as
 per <c><see cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience function to clear the flag bits as specified in flags, as
 per <c><see cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#clearFlags(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags, Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.AddFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="CloseAllPanels">
      <MemberSignature Language="C#" Value="public abstract void CloseAllPanels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseAllPanels() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeAllPanels", "()V", "GetCloseAllPanelsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#closeAllPanels()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClosePanel">
      <MemberSignature Language="C#" Value="public abstract void ClosePanel (int featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClosePanel(int32 featureId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closePanel", "(I)V", "GetClosePanel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#closePanel(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public Android.Views.Window Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContainer", "()Landroid/view/Window;", "GetGetContainerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setContainer", "(Landroid/view/Window;)V", "GetSetContainer_Landroid_view_Window_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the container for this Window.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getContainer()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Return the container for this Window.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setContainer(android.view.Window)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the container for this window.  If not set, the DecorWindow
 operates as a top-level window; otherwise, it negotiates with the
 container to display itself appropriately.</para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentScene">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Scene ContentScene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Scene ContentScene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContentScene", "()Landroid/transition/Scene;", "GetGetContentSceneHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Scene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c><see cref="T:Android.Transitions.Scene" /></c> representing this window's current content.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the <c><see cref="T:Android.Transitions.Scene" /></c> representing this window's current content.
 Requires <c><see cref="!:Android.Views.Window.FEATURE_CONTENT_TRANSITIONS" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">This method will return null if the current content is not represented by a Scene.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getContentScene()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Android.Content.Context Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Context this window policy is running in, for retrieving
 resources and other information.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the Context this window policy is running in, for retrieving
 resources and other information.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getContext()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentFocus">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View CurrentFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View CurrentFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentFocus", "()Landroid/view/View;", "GetGetCurrentFocusHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the view in this Window that currently has focus, or null if
 there are none.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the view in this Window that currently has focus, or null if
 there are none.  Note that this does not look in any containing
 Window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getCurrentFocus()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecorView">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View DecorView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View DecorView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDecorView", "()Landroid/view/View;", "GetGetDecorViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the top-level window decor view (containing the standard
 window frame/decorations and the client's content inside of that), which
 can be added as a window to the window manager.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the top-level window decor view (containing the standard
 window frame/decorations and the client's content inside of that), which
 can be added as a window to the window manager.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Note that calling this function for the first time "locks in"
 various window characteristics as described in
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>.</i>
          </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getDecorView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition EnterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition EnterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEnterTransition", "()Landroid/transition/Transition;", "GetGetEnterTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setEnterTransition", "(Landroid/transition/Transition;)V", "GetSetEnterTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the transition used to move Views into the initial scene.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getEnterTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the transition used to move Views into the initial scene. The entering
 Views will be those that are regular Views or ViewGroups that have
 <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as entering is governed by changing visibility from
 <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c> to <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>. If <c>transition</c> is null,
 entering Views will remain unaffected.  Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setEnterTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used to move Views into the initial scene. The entering
 Views will be those that are regular Views or ViewGroups that have
 <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as entering is governed by changing visibility from
 <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c> to <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c>. If <c>transition</c> is null,
 entering Views will remain unaffected.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ExitTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ExitTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExitTransition", "()Landroid/transition/Transition;", "GetGetExitTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setExitTransition", "(Landroid/transition/Transition;)V", "GetSetExitTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition that will be used to move Views out of the scene when starting a
 new Activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getExitTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition that will be used to move Views out of the scene when starting a
 new Activity. The exiting Views will be those that are regular Views or ViewGroups that
 have <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as exiting is governed by changing visibility
 from <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>. If transition is null, the views will
 remain unaffected. Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setExitTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used to move Views out of the scene when starting a
 new Activity. The exiting Views will be those that are regular Views or ViewGroups that
 have <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as exiting is governed by changing visibility
 from <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>. If transition is null, the views will
 remain unaffected. Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Features">
      <MemberSignature Language="C#" Value="protected int Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Features" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFeatures", "()I", "GetGetFeaturesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the feature bits that are enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the feature bits that are enabled.  This is the set of features
 that were given to requestFeature(), and are being handled by this
 Window itself or its container.  That is, it is the set of
 requested features that you can actually use.

 </para>
          <para tool="javadoc-to-mdoc">To do: add a public version of this API that allows you to check for
 features by their feature ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getFeatures()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Finds a view that was identified by the id attribute from the XML that
 was processed in <c><see cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Finds a view that was identified by the id attribute from the XML that
 was processed in <c><see cref="M:Android.App.Activity.OnCreate(Android.OS.Bundle)" /></c>.  This will
 implicitly call <c><see cref="P:Android.Views.Window.DecorView" /></c> for you, with all of the
 associated side-effects.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#findViewById(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T FindViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForcedWindowFlags">
      <MemberSignature Language="C#" Value="protected int ForcedWindowFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForcedWindowFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getForcedWindowFlags", "()I", "GetGetForcedWindowFlagsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the window flags that have been explicitly set by the client,
 so will not be modified by <c><see cref="P:Android.Views.Window.DecorView" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the window flags that have been explicitly set by the client,
 so will not be modified by <c><see cref="P:Android.Views.Window.DecorView" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getForcedWindowFlags()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasChildren", "()Z", "GetHasChildrenHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#hasChildren()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFeature">
      <MemberSignature Language="C#" Value="public virtual bool HasFeature (Android.Views.WindowFeatures feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFeature(valuetype Android.Views.WindowFeatures feature) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasFeature", "(I)Z", "GetHasFeature_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feature">The feature ID to check</param>
        <summary>Query for the availability of a certain feature.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query for the availability of a certain feature.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#hasFeature(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasSoftInputMode">
      <MemberSignature Language="C#" Value="protected bool HasSoftInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSoftInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasSoftInputMode", "()Z", "GetHasSoftInputModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Has the app specified their own soft input mode?
</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Has the app specified their own soft input mode?
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#hasSoftInputMode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IdAndroidContent">
      <MemberSignature Language="C#" Value="public const int IdAndroidContent = 16908290;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 IdAndroidContent = (16908290)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ID_ANDROID_CONTENT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16908290</MemberValue>
      <Docs>
        <summary>The ID that the main layout in the XML layout file should have.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The ID that the main layout in the XML layout file should have.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#ID_ANDROID_CONTENT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InjectInputEvent">
      <MemberSignature Language="C#" Value="public virtual void InjectInputEvent (Android.Views.InputEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InjectInputEvent(class Android.Views.InputEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("injectInputEvent", "(Landroid/view/InputEvent;)V", "GetInjectInputEvent_Landroid_view_InputEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.InputEvent" />
      </Parameters>
      <Docs>
        <param name="e">A key or touch event to inject to this window.
</param>
        <summary>Inject an event to window locally.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Inject an event to window locally.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#injectInputEvent(android.view.InputEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidatePanelMenu">
      <MemberSignature Language="C#" Value="public abstract void InvalidatePanelMenu (Android.Views.WindowFeatures featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidatePanelMenu(valuetype Android.Views.WindowFeatures featureId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("invalidatePanelMenu", "(I)V", "GetInvalidatePanelMenu_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#invalidatePanelMenu(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isActive", "()Z", "GetIsActiveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#isActive()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFloating">
      <MemberSignature Language="C#" Value="public abstract bool IsFloating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isFloating", "()Z", "GetIsFloatingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this window is being displayed with a floating style
 (based on the <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#windowIsFloating" /></c> attribute in
 the style/theme).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return whether this window is being displayed with a floating style
 (based on the <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#windowIsFloating" /></c> attribute in
 the style/theme).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#isFloating()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsShortcutKey">
      <MemberSignature Language="C#" Value="public abstract bool IsShortcutKey (Android.Views.Keycode keyCode, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsShortcutKey(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isShortcutKey", "(ILandroid/view/KeyEvent;)Z", "GetIsShortcutKey_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyCode">the key code from <c><see cref="T:Android.Views.KeyEvent" /></c> to check.</param>
        <param name="e">the <c><see cref="T:Android.Views.KeyEvent" /></c> to use to help check.
</param>
        <summary>Is a keypress one of the defined shortcut keys for this window.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Is a keypress one of the defined shortcut keys for this window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#isShortcutKey(int, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LayoutInflater">
      <MemberSignature Language="C#" Value="public abstract Android.Views.LayoutInflater LayoutInflater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater LayoutInflater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quick access to the <c><see cref="T:Android.Views.LayoutInflater" /></c> instance that this Window
 retrieved from its Context.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Quick access to the <c><see cref="T:Android.Views.LayoutInflater" /></c> instance that this Window
 retrieved from its Context.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getLayoutInflater()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalFeatures">
      <MemberSignature Language="C#" Value="protected int LocalFeatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLocalFeatures", "()I", "GetGetLocalFeaturesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the feature bits that are being implemented by this Window.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the feature bits that are being implemented by this Window.
 This is the set of features that were given to requestFeature(), and are
 being handled by only this Window itself, not by its containers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getLocalFeatures()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MakeActive">
      <MemberSignature Language="C#" Value="public void MakeActive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeActive() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("makeActive", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#makeActive()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MediaController">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Session.MediaController MediaController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaController MediaController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMediaController", "()Landroid/media/session/MediaController;", "GetGetMediaControllerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMediaController", "(Landroid/media/session/MediaController;)V", "GetSetMediaController_Landroid_media_session_MediaController_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the <c><see cref="T:Android.Media.Session.MediaController" /></c> that was previously set.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getMediaController()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Gets the <c><see cref="T:Android.Media.Session.MediaController" /></c> that was previously set.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setMediaController(android.media.session.MediaController)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets a <c><see cref="T:Android.Media.Session.MediaController" /></c> to send media keys and volume changes to.
 If set, this should be preferred for all media keys and volume requests
 sent to this window.</para>
        </remarks>
        <altmember cref="P:Android.Views.Window.MediaController" />
        <altmember cref="P:Android.App.Activity.MediaController" />
        <altmember cref="P:Android.App.Activity.MediaController" />
      </Docs>
    </Member>
    <Member MemberName="NavigationBarBackgroundTransitionName">
      <MemberSignature Language="C#" Value="public const string NavigationBarBackgroundTransitionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NavigationBarBackgroundTransitionName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transitionName for the navigation bar background View when a custom background is used.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The transitionName for the navigation bar background View when a custom background is used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Views.Window.SetNavigationBarColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="NavigationBarColor">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Color NavigationBarColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color NavigationBarColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNavigationBarColor", "()I", "GetGetNavigationBarColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNavigationBarColor", "(I)V", "GetSetNavigationBarColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getNavigationBarColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActive">
      <MemberSignature Language="C#" Value="protected abstract void OnActive ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActive() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onActive", "()V", "GetOnActiveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#onActive()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="public abstract void OnConfigurationChanged (Android.Content.Res.Configuration newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new configuration.
</param>
        <summary>Should be called when the configuration is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Should be called when the configuration is changed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#onConfigurationChanged(android.content.res.Configuration)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenPanel">
      <MemberSignature Language="C#" Value="public abstract void OpenPanel (int featureId, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenPanel(int32 featureId, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openPanel", "(ILandroid/view/KeyEvent;)V", "GetOpenPanel_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="e">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#openPanel(int, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeekDecorView">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View PeekDecorView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View PeekDecorView() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("peekDecorView", "()Landroid/view/View;", "GetPeekDecorViewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the current decor view, but only if it has already been created;
 otherwise returns null.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the current decor view, but only if it has already been created;
 otherwise returns null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#peekDecorView()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Window.DecorView" />
      </Docs>
    </Member>
    <Member MemberName="PerformContextMenuIdentifierAction">
      <MemberSignature Language="C#" Value="public abstract bool PerformContextMenuIdentifierAction (int id, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextMenuIdentifierAction(int32 id, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performContextMenuIdentifierAction", "(II)Z", "GetPerformContextMenuIdentifierAction_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#performContextMenuIdentifierAction(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformPanelIdentifierAction">
      <MemberSignature Language="C#" Value="public abstract bool PerformPanelIdentifierAction (int featureId, int id, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPanelIdentifierAction(int32 featureId, int32 id, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performPanelIdentifierAction", "(III)Z", "GetPerformPanelIdentifierAction_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#performPanelIdentifierAction(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformPanelShortcut">
      <MemberSignature Language="C#" Value="public abstract bool PerformPanelShortcut (int featureId, Android.Views.Keycode keyCode, Android.Views.KeyEvent e, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPanelShortcut(int32 featureId, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("performPanelShortcut", "(IILandroid/view/KeyEvent;I)Z", "GetPerformPanelShortcut_IILandroid_view_KeyEvent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#performPanelShortcut(int, int, android.view.KeyEvent, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressEnd = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressEnd = (10000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_END")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>Ending value for the (primary) progress </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Ending value for the (primary) progress </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_END" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressIndeterminateOff">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressIndeterminateOff = -4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressIndeterminateOff = (-4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_INDETERMINATE_OFF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-4</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's indeterminate mode off </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag for setting the progress bar's indeterminate mode off </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_INDETERMINATE_OFF" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressIndeterminateOn">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressIndeterminateOn = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressIndeterminateOn = (-3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_INDETERMINATE_ON")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's indeterminate mode on </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag for setting the progress bar's indeterminate mode on </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_INDETERMINATE_ON" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressSecondaryEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressSecondaryEnd = 30000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressSecondaryEnd = (30000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_SECONDARY_END")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>30000</MemberValue>
      <Docs>
        <summary>Highest possible value for the secondary progress </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Highest possible value for the secondary progress </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_SECONDARY_END" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressSecondaryStart">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressSecondaryStart = 20000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressSecondaryStart = (20000)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_SECONDARY_START")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>20000</MemberValue>
      <Docs>
        <summary>Lowest possible value for the secondary progress </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Lowest possible value for the secondary progress </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_SECONDARY_START" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressStart">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressStart = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressStart = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_START")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Starting value for the (primary) progress </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starting value for the (primary) progress </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_START" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressVisibilityOff">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressVisibilityOff = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressVisibilityOff = (-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_VISIBILITY_OFF")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's visibility to GONE </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag for setting the progress bar's visibility to GONE </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_VISIBILITY_OFF" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressVisibilityOn">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressVisibilityOn = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressVisibilityOn = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROGRESS_VISIBILITY_ON")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's visibility to VISIBLE </summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag for setting the progress bar's visibility to VISIBLE </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#PROGRESS_VISIBILITY_ON" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReenterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ReenterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ReenterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReenterTransition", "()Landroid/transition/Transition;", "GetGetReenterTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReenterTransition", "(Landroid/transition/Transition;)V", "GetSetReenterTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition that will be used to move Views in to the scene when returning from
 a previously-started Activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getReenterTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition that will be used to move Views in to the scene when returning from
 a previously-started Activity. The entering Views will be those that are regular Views
 or ViewGroups that have <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions
 will extend <c><see cref="T:Android.Transitions.Visibility" /></c> as exiting is governed by changing
 visibility from <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setReenterTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used to move Views in to the scene when returning from
 a previously-started Activity. The entering Views will be those that are regular Views
 or ViewGroups that have <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions
 will extend <c><see cref="T:Android.Transitions.Visibility" /></c> as exiting is governed by changing
 visibility from <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>. If transition is null,
 the views will remain unaffected. If nothing is set, the default will be to use the same
 transition as <c><see cref="P:Android.Views.Window.ExitTransition" /></c>.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFeature">
      <MemberSignature Language="C#" Value="public virtual bool RequestFeature (Android.Views.WindowFeatures featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestFeature(valuetype Android.Views.WindowFeatures featureId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestFeature", "(I)Z", "GetRequestFeature_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">The desired features, defined as constants by Window.</param>
        <summary>Enable extended screen features.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable extended screen features.  This must be called before
 setContentView().  May be called as many times as desired as long as it
 is before setContentView().  If not called, no extended features
 will be available.  You can not turn off a feature once it is requested.
 You canot use other title features with <c><see cref="!:Android.Views.Window.FEATURE_CUSTOM_TITLE" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#requestFeature(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestoreHierarchyState">
      <MemberSignature Language="C#" Value="public abstract void RestoreHierarchyState (Android.OS.Bundle savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreHierarchyState(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restoreHierarchyState", "(Landroid/os/Bundle;)V", "GetRestoreHierarchyState_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#restoreHierarchyState(android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReturnTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition ReturnTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ReturnTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getReturnTransition", "()Landroid/transition/Transition;", "GetGetReturnTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setReturnTransition", "(Landroid/transition/Transition;)V", "GetSetReturnTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns he Transition that will be used to move Views out of the scene when the Window is
 preparing to close, for example after a call to
 <c><see cref="M:Android.App.Activity.FinishAfterTransition" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getReturnTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns he Transition that will be used to move Views out of the scene when the Window is
 preparing to close, for example after a call to
 <c><see cref="M:Android.App.Activity.FinishAfterTransition" /></c>. The exiting
 Views will be those that are regular Views or ViewGroups that have
 <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as entering is governed by changing visibility from
 <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setReturnTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used to move Views out of the scene when the Window is
 preparing to close, for example after a call to
 <c><see cref="M:Android.App.Activity.FinishAfterTransition" /></c>. The exiting
 Views will be those that are regular Views or ViewGroups that have
 <c><see cref="P:Android.Views.ViewGroup.TransitionGroup" /></c> return true. Typical Transitions will extend
 <c><see cref="T:Android.Transitions.Visibility" /></c> as entering is governed by changing visibility from
 <c><see cref="T:Android.Views.ViewStates.Visible" tool="ReplaceLinkValue" /></c> to <c><see cref="F:Android.Views.ViewStates.Invisible" tool="ReplaceLinkValue" /></c>. If <c>transition</c> is null,
 entering Views will remain unaffected. If nothing is set, the default will be to
 use the same value as set in <c><see cref="P:Android.Views.Window.EnterTransition" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveHierarchyState">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle SaveHierarchyState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle SaveHierarchyState() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("saveHierarchyState", "()Landroid/os/Bundle;", "GetSaveHierarchyStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#saveHierarchyState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">The new Drawable to use for this window's background.
</param>
        <summary>Change the background of this window to a custom Drawable.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Change the background of this window to a custom Drawable. Setting the
 background to null will make the window be opaque. To make the window
 transparent, you can use an empty drawable (for instance a ColorDrawable
 with the color 0 or the system drawable android:drawable/empty.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setBackgroundDrawable(android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawableResource">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundDrawableResource (int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawableResource(int32 resid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setBackgroundDrawableResource", "(I)V", "GetSetBackgroundDrawableResource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resid">The resource identifier of a drawable resource which will be
              installed as the new background.
</param>
        <summary>Change the background of this window to a Drawable resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Change the background of this window to a Drawable resource. Setting the
 background to null will make the window be opaque. To make the window
 transparent, you can use an empty drawable (for instance a ColorDrawable
 with the color 0 or the system drawable android:drawable/empty.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setBackgroundDrawableResource(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChildDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetChildDrawable (int featureId, Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildDrawable(int32 featureId, class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChildDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetChildDrawable_ILandroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="drawable">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setChildDrawable(int, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChildInt">
      <MemberSignature Language="C#" Value="public abstract void SetChildInt (int featureId, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildInt(int32 featureId, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setChildInt", "(II)V", "GetSetChildInt_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setChildInt(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (Android.Views.View view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <summary tool="true">Convenience for
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 set the screen content to an explicit view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 set the screen content to an explicit view.  This view is placed
 directly into the screen's view hierarchy.  It can itself be a complex
 view hierarhcy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setContentView(android.view.View)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (int layoutResID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(int32 layoutResID) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutResID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="layoutResID">Resource ID to be inflated.</param>
        <summary>Convenience for
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 to set the screen content from a layout resource.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c>
 to set the screen content from a layout resource.  The resource will be
 inflated, adding all top-level views to the screen.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setContentView(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (Android.Views.View view, Android.Views.ViewGroup.LayoutParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Set the screen content to an explicit view.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the screen content to an explicit view.  This view is placed
 directly into the screen's view hierarchy.  It can itself be a complex
 view hierarchy.

 </para>
          <para tool="javadoc-to-mdoc">Note that calling this function "locks in" various characteristics
 of the window that can not, from this point forward, be changed: the
 features that have been requested with <c><see cref="M:Android.Views.Window.RequestFeature(Android.Views.WindowFeatures)" /></c>,
 and certain window flags as described in <c><see cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" /></c>.</para>
          <para tool="javadoc-to-mdoc">If <c><see cref="!:Android.Views.Window.FEATURE_CONTENT_TRANSITIONS" /></c> is set, the window's
 TransitionManager will be used to animate content from the current
 content View to view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setContentView(android.view.View, android.view.ViewGroup.LayoutParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Window.TransitionManager" />
        <altmember cref="P:Android.Views.Window.TransitionManager" />
      </Docs>
    </Member>
    <Member MemberName="SetDefaultWindowFormat">
      <MemberSignature Language="C#" Value="protected virtual void SetDefaultWindowFormat (int format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDefaultWindowFormat(int32 format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDefaultWindowFormat", "(I)V", "GetSetDefaultWindowFormat_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">The new window format (see PixelFormat).</param>
        <summary>Set the default format of window, as per the PixelFormat types.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the default format of window, as per the PixelFormat types.  This
 is the format that will be used unless the client specifies in explicit
 format with setFormat();</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setDefaultWindowFormat(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFormat(Android.Graphics.Format)" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="SetDimAmount">
      <MemberSignature Language="C#" Value="public virtual void SetDimAmount (float amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDimAmount(float32 amount) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDimAmount", "(F)V", "GetSetDimAmount_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="amount">The new dim amount, from 0 for no dim to 1 for full dim.
</param>
        <summary>Set the amount of dim behind the window when using
 <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_DIM_BEHIND" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the amount of dim behind the window when using
 <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_DIM_BEHIND" /></c>.  This overrides
 the default dim amount of that is selected by the Window based on
 its theme.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setDimAmount(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawable (Android.Views.WindowFeatures featureId, Android.Graphics.Drawables.Drawable drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawable(valuetype Android.Views.WindowFeatures featureId, class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeatureDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetFeatureDrawable_ILandroid_graphics_drawable_Drawable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
                  constants defined by Window.</param>
        <param name="drawable">A Drawable object to display.
</param>
        <summary>Set an explicit Drawable value for feature of this window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set an explicit Drawable value for feature of this window. You must
 have called requestFeature(featureId) before calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFeatureDrawable(int, android.graphics.drawable.Drawable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableAlpha">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableAlpha (Android.Views.WindowFeatures featureId, int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableAlpha(valuetype Android.Views.WindowFeatures featureId, int32 alpha) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeatureDrawableAlpha", "(II)V", "GetSetFeatureDrawableAlpha_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
                  constants defined by Window.</param>
        <param name="alpha">The alpha amount, 0 is completely transparent and 255 is
              completely opaque.
</param>
        <summary tool="true">Set a custom alpha value for the given drawable feature, controlling how
 much the background is visible through it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a custom alpha value for the given drawable feature, controlling how
 much the background is visible through it.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFeatureDrawableAlpha(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableResource">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableResource (Android.Views.WindowFeatures featureId, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableResource(valuetype Android.Views.WindowFeatures featureId, int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeatureDrawableResource", "(II)V", "GetSetFeatureDrawableResource_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change, defined as a
 constant by Window.</param>
        <param name="resId">Resource identifier of the desired image.
</param>
        <summary>Set the value for a drawable feature of this window, from a resource
 identifier.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value for a drawable feature of this window, from a resource
 identifier.  You must have called requestFeature(featureId) before
 calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFeatureDrawableResource(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Res.Resources.GetDrawable(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableUri">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableUri (Android.Views.WindowFeatures featureId, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableUri(valuetype Android.Views.WindowFeatures featureId, class Android.Net.Uri uri) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "GetSetFeatureDrawableUri_ILandroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
 constants defined by Window.</param>
        <param name="uri">The desired URI.
</param>
        <summary>Set the value for a drawable feature of this window, from a URI.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value for a drawable feature of this window, from a URI. You
 must have called requestFeature(featureId) before calling this
 function.

 </para>
          <para tool="javadoc-to-mdoc">The only URI currently supported is "content:", specifying an image
 in a content provider.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFeatureDrawableUri(int, android.net.Uri)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.ImageView.SetImageURI(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureInt">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureInt (Android.Views.WindowFeatures featureId, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureInt(valuetype Android.Views.WindowFeatures featureId, int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeatureInt", "(II)V", "GetSetFeatureInt_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired feature to change. Features are constants
                  defined by Window.</param>
        <param name="value">The value for the feature. The interpretation of this
              value is feature-specific.
</param>
        <summary>Set the integer value for a feature.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the integer value for a feature. The range of the value depends on
 the feature being set. For <c><see cref="!:Android.Views.Window.FEATURE_PROGRESS" /></c>, it should go from
 0 to 10000. At 10000 the progress is complete and the indicator hidden.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFeatureInt(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual void SetFlags (Android.Views.WindowManagerFlags flags, Android.Views.WindowManagerFlags mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(valuetype Android.Views.WindowManagerFlags flags, valuetype Android.Views.WindowManagerFlags mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFlags", "(II)V", "GetSetFlags_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The new window flags (see WindowManager.LayoutParams).</param>
        <param name="mask">Which of the window flag bits to modify.</param>
        <summary>Set the flags of the window, as per the
 <c><see cref="T:Android.Views.WindowManagerLayoutParams" /></c>
 flags.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the flags of the window, as per the
 <c><see cref="T:Android.Views.WindowManagerLayoutParams" /></c>
 flags.

 </para>
          <para tool="javadoc-to-mdoc">Note that some flags must be set before the window decoration is
 created (by the first call to
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View,.LayoutParams)" /></c> or
 <c><see cref="P:Android.Views.Window.DecorView" /></c>:
 <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_LAYOUT_IN_SCREEN" /></c> and
 <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_LAYOUT_INSET_DECOR" /></c>.  These
 will be set for you based on the <c><see cref="!:NoType:android/R$attr;Href=../../../reference/android/R.attr.html#windowIsFloating" /></c>
 attribute.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFlags(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.AddFlags(Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.ClearFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="SetFormat">
      <MemberSignature Language="C#" Value="public virtual void SetFormat (Android.Graphics.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFormat(valuetype Android.Graphics.Format format) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFormat", "(I)V", "GetSetFormat_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">The new window format (see PixelFormat).  Use
               PixelFormat.UNKNOWN to allow the Window to select
               the format.</param>
        <summary>Set the format of window, as per the PixelFormat types.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the format of window, as per the PixelFormat types.  This overrides
 the default format that is selected by the Window based on its
 window decorations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setFormat(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="SetGravity">
      <MemberSignature Language="C#" Value="public virtual void SetGravity (Android.Views.GravityFlags gravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGravity(valuetype Android.Views.GravityFlags gravity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGravity", "(I)V", "GetSetGravity_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="gravity">The desired gravity constant.</param>
        <summary>Set the gravity of the window, as per the Gravity constants.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the gravity of the window, as per the Gravity constants.  This
 controls how the window manager is positioned in the overall window; it
 is only useful when using WRAP_CONTENT for the layout width or height.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setGravity(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.Gravity" />
        <altmember cref="M:Android.Views.Window.SetLayout(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetIcon">
      <MemberSignature Language="C#" Value="public virtual void SetIcon (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIcon(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setIcon", "(I)V", "GetSetIcon_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">resource ID of a drawable to set
</param>
        <summary>Set the primary icon for this window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the primary icon for this window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setIcon(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayout">
      <MemberSignature Language="C#" Value="public virtual void SetLayout (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayout(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLayout", "(II)V", "GetSetLayout_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The desired layout width of the window.</param>
        <param name="height">The desired layout height of the window.</param>
        <summary>Set the width and height layout parameters of the window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the width and height layout parameters of the window.  The default
 for both of these is MATCH_PARENT; you can change them to WRAP_CONTENT
 or an absolute value to make a window that is not full-screen.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setLayout(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLocalFocus">
      <MemberSignature Language="C#" Value="public virtual void SetLocalFocus (bool hasFocus, bool inTouchMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocalFocus(bool hasFocus, bool inTouchMode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocalFocus", "(ZZ)V", "GetSetLocalFocus_ZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
        <Parameter Name="inTouchMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">Whether this window has focus or not.</param>
        <param name="inTouchMode">Whether this window is in touch mode or not.
</param>
        <summary>Set focus locally.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set focus locally. The window should have the
 <c><see cref="!:Android.Views.WindowManagerLayoutParams.FLAG_LOCAL_FOCUS_MODE" /></c> flag set already.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setLocalFocus(boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLogo">
      <MemberSignature Language="C#" Value="public virtual void SetLogo (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogo(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLogo", "(I)V", "GetSetLogo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">resource ID of a drawable to set
</param>
        <summary>Set the logo for this window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the logo for this window. A logo is often shown in place of an
 <c><see cref="M:Android.Views.Window.SetIcon(System.Int32)" /></c> but is generally wider and communicates window title information
 as well.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setLogo(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSoftInputMode">
      <MemberSignature Language="C#" Value="public virtual void SetSoftInputMode (Android.Views.SoftInput mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSoftInputMode(valuetype Android.Views.SoftInput mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSoftInputMode", "(I)V", "GetSetSoftInputMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.SoftInput">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>Specify an explicit soft input mode to use for the window, as per
 <c><see cref="P:Android.Views.WindowManagerLayoutParams.SoftInputMode" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify an explicit soft input mode to use for the window, as per
 <c><see cref="P:Android.Views.WindowManagerLayoutParams.SoftInputMode" /></c>.  Providing anything besides
 "unspecified" here will override the input mode the window would
 normally retrieve from its theme.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setSoftInputMode(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public abstract void SetTitle (Java.Lang.ICharSequence title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitle(class Java.Lang.ICharSequence title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setTitle(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public void SetTitle (string title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTitle(string title) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleColor">
      <MemberSignature Language="C#" Value="public abstract void SetTitleColor (Android.Graphics.Color textColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleColor(valuetype Android.Graphics.Color textColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTitleColor", "(I)V", "GetSetTitleColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textColor" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="textColor">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setTitleColor(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetType">
      <MemberSignature Language="C#" Value="public virtual void SetType (Android.Views.WindowManagerTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetType(valuetype Android.Views.WindowManagerTypes type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setType", "(I)V", "GetSetType_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Views.WindowManagerTypes">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">The new window type (see WindowManager.LayoutParams).
</param>
        <summary tool="true">Set the type of the window, as per the WindowManager.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the type of the window, as per the WindowManager.LayoutParams
 types.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setType(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetUiOptions">
      <MemberSignature Language="C#" Value="public virtual void SetUiOptions (Android.Content.PM.UiOptions uiOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUiOptions(valuetype Android.Content.PM.UiOptions uiOptions) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUiOptions", "(I)V", "GetSetUiOptions_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uiOptions" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uiOptions">Flags specifying extra options for this window.
</param>
        <summary>Set extra options that will influence the UI for this window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set extra options that will influence the UI for this window.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setUiOptions(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUiOptions">
      <MemberSignature Language="C#" Value="public virtual void SetUiOptions (Android.Content.PM.UiOptions uiOptions, Android.Content.PM.UiOptions mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUiOptions(valuetype Android.Content.PM.UiOptions uiOptions, valuetype Android.Content.PM.UiOptions mask) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUiOptions", "(II)V", "GetSetUiOptions_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uiOptions" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uiOptions">Flags specifying extra options for this window.</param>
        <param name="mask">Flags specifying which options should be modified. Others will remain unchanged.
</param>
        <summary>Set extra options that will influence the UI for this window.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set extra options that will influence the UI for this window.
 Only the bits filtered by mask will be modified.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setUiOptions(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowAnimations">
      <MemberSignature Language="C#" Value="public virtual void SetWindowAnimations (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowAnimations(int32 resId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindowAnimations", "(I)V", "GetSetWindowAnimations_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <summary>Specify custom animations to use for the window, as per
 <c><see cref="P:Android.Views.WindowManagerLayoutParams.WindowAnimations" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Specify custom animations to use for the window, as per
 <c><see cref="P:Android.Views.WindowManagerLayoutParams.WindowAnimations" /></c>.  Providing anything besides
 0 here will override the animations the window would
 normally retrieve from its theme.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setWindowAnimations(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowManager">
      <MemberSignature Language="C#" Value="public virtual void SetWindowManager (Android.Views.IWindowManager wm, Android.OS.IBinder appToken, string appName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowManager(class Android.Views.IWindowManager wm, class Android.OS.IBinder appToken, string appName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wm" Type="Android.Views.IWindowManager" />
        <Parameter Name="appToken" Type="Android.OS.IBinder" />
        <Parameter Name="appName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="wm">The window manager for adding new windows.
</param>
        <param name="appToken">To be added.</param>
        <param name="appName">To be added.</param>
        <summary>Set the window manager for use by this Window to, for example,
 display panels.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the window manager for use by this Window to, for example,
 display panels.  This is <i>not</i> used for displaying the
 Window itself -- that must be done by the client.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowManager">
      <MemberSignature Language="C#" Value="public virtual void SetWindowManager (Android.Views.IWindowManager wm, Android.OS.IBinder appToken, string appName, bool hardwareAccelerated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowManager(class Android.Views.IWindowManager wm, class Android.OS.IBinder appToken, string appName, bool hardwareAccelerated) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;Z)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wm" Type="Android.Views.IWindowManager" />
        <Parameter Name="appToken" Type="Android.OS.IBinder" />
        <Parameter Name="appName" Type="System.String" />
        <Parameter Name="hardwareAccelerated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="wm">The window manager for adding new windows.
</param>
        <param name="appToken">To be added.</param>
        <param name="appName">To be added.</param>
        <param name="hardwareAccelerated">To be added.</param>
        <summary>Set the window manager for use by this Window to, for example,
 display panels.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the window manager for use by this Window to, for example,
 display panels.  This is <i>not</i> used for displaying the
 Window itself -- that must be done by the client.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SharedElementEnterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SharedElementEnterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementEnterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSharedElementEnterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementEnterTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSharedElementEnterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementEnterTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition that will be used for shared elements transferred into the content
 Scene.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getSharedElementEnterTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition that will be used for shared elements transferred into the content
 Scene. Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setSharedElementEnterTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used for shared elements transferred into the content
 Scene. Typical Transitions will affect size and location, such as
 <c><see cref="T:Android.Transitions.ChangeBounds" /></c>. A null
 value will cause transferred shared elements to blink to the final position.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementExitTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SharedElementExitTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementExitTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSharedElementExitTransition", "()Landroid/transition/Transition;", "GetGetSharedElementExitTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSharedElementExitTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementExitTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition to use for shared elements in the launching Window prior
 to transferring to the launched Activity's Window.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getSharedElementExitTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition to use for shared elements in the launching Window prior
 to transferring to the launched Activity's Window.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setSharedElementExitTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used for shared elements after starting a new Activity
 before the shared elements are transferred to the called Activity. If the shared elements
 must animate during the exit transition, this Transition should be used. Upon completion,
 the shared elements may be transferred to the started Activity.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementReenterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SharedElementReenterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementReenterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSharedElementReenterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReenterTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSharedElementReenterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReenterTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition that will be used for shared elements reentering from a started
 Activity after it has returned the shared element to it start location.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getSharedElementReenterTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition that will be used for shared elements reentering from a started
 Activity after it has returned the shared element to it start location.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setSharedElementReenterTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used for shared elements reentering from a started
 Activity after it has returned the shared element to it start location. If no value
 is set, this will default to
 <c><see cref="P:Android.Views.Window.SharedElementExitTransition" /></c>.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementReturnTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition SharedElementReturnTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementReturnTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSharedElementReturnTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReturnTransitionHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSharedElementReturnTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReturnTransition_Landroid_transition_Transition_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Transition that will be used for shared elements transferred back to a
 calling Activity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getSharedElementReturnTransition()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the Transition that will be used for shared elements transferred back to a
 calling Activity. Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setSharedElementReturnTransition(android.transition.Transition)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the Transition that will be used for shared elements transferred back to a
 calling Activity. Typical Transitions will affect size and location, such as
 <c><see cref="T:Android.Transitions.ChangeBounds" /></c>. A null
 value will cause transferred shared elements to blink to the final position.
 If no value is set, the default will be to use the same value as
 <c><see cref="P:Android.Views.Window.SharedElementEnterTransition" /></c>.
 Requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementsUseOverlay">
      <MemberSignature Language="C#" Value="public virtual bool SharedElementsUseOverlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharedElementsUseOverlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSharedElementsUseOverlay", "()Z", "GetGetSharedElementsUseOverlayHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSharedElementsUseOverlay", "(Z)V", "GetSetSharedElementsUseOverlay_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> when shared elements should use an Overlay during
 shared element transitions or <c>false</c> when they should animate as
 part of the normal View hierarchy.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getSharedElementsUseOverlay()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns <c>true</c> when shared elements should use an Overlay during
 shared element transitions or <c>false</c> when they should animate as
 part of the normal View hierarchy. The default value is true.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setSharedElementsUseOverlay(boolean)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets whether or not shared elements should use an Overlay during shared element transitions.
 The default value is true.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBarBackgroundTransitionName">
      <MemberSignature Language="C#" Value="public const string StatusBarBackgroundTransitionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StatusBarBackgroundTransitionName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATUS_BAR_BACKGROUND_TRANSITION_NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transitionName for the status bar background View when a custom background is used.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The transitionName for the status bar background View when a custom background is used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#STATUS_BAR_BACKGROUND_TRANSITION_NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Views.Window.SetStatusBarColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="StatusBarColor">
      <MemberSignature Language="C#" Value="public abstract Android.Graphics.Color StatusBarColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Color StatusBarColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStatusBarColor", "()I", "GetGetStatusBarColorHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setStatusBarColor", "(I)V", "GetSetStatusBarColor_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getStatusBarColor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchGenericMotionEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("superDispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the generic motion event
 further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by custom windows, such as Dialog, to pass the generic motion event
 further down the view hierarchy. Application developers should
 not need to implement or call this.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#superDispatchGenericMotionEvent(android.view.MotionEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchKeyEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchKeyEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("superDispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the key press event
 further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by custom windows, such as Dialog, to pass the key press event
 further down the view hierarchy. Application developers should
 not need to implement or call this.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#superDispatchKeyEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchKeyShortcutEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchKeyShortcutEvent (Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("superDispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the key shortcut press event
 further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by custom windows, such as Dialog, to pass the key shortcut press event
 further down the view hierarchy. Application developers should
 not need to implement or call this.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#superDispatchKeyShortcutEvent(android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchTouchEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchTouchEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("superDispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTouchEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the touch screen event
 further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by custom windows, such as Dialog, to pass the touch screen event
 further down the view hierarchy. Application developers should
 not need to implement or call this.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#superDispatchTouchEvent(android.view.MotionEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchTrackballEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("superDispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the trackball event
 further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Used by custom windows, such as Dialog, to pass the trackball event
 further down the view hierarchy. Application developers should
 not need to implement or call this.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#superDispatchTrackballEvent(android.view.MotionEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TakeInputQueue">
      <MemberSignature Language="C#" Value="public abstract void TakeInputQueue (Android.Views.InputQueue.ICallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeInputQueue(class Android.Views.InputQueue/ICallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takeInputQueue", "(Landroid/view/InputQueue$Callback;)V", "GetTakeInputQueue_Landroid_view_InputQueue_Callback_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.InputQueue+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Take ownership of this window's InputQueue.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take ownership of this window's InputQueue.  The window will no
 longer read and dispatch input events from the queue; it is your
 responsibility to do so.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#takeInputQueue(android.view.InputQueue.Callback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TakeKeyEvents">
      <MemberSignature Language="C#" Value="public abstract void TakeKeyEvents (bool get);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeKeyEvents(bool get) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takeKeyEvents", "(Z)V", "GetTakeKeyEvents_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>Request that key events come to this activity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Request that key events come to this activity. Use this if your
 activity has no views with focus, but the activity still wants
 a chance to process key events.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#takeKeyEvents(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TakeSurface">
      <MemberSignature Language="C#" Value="public abstract void TakeSurface (Android.Views.ISurfaceHolderCallback2 callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeSurface(class Android.Views.ISurfaceHolderCallback2 callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("takeSurface", "(Landroid/view/SurfaceHolder$Callback2;)V", "GetTakeSurface_Landroid_view_SurfaceHolder_Callback2_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ISurfaceHolderCallback2" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Take ownership of this window's surface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Take ownership of this window's surface.  The window's view hierarchy
 will no longer draw into the surface, though it will otherwise continue
 to operate (such as for receiving input events).  The given SurfaceHolder
 callback will be used to tell you about state changes to the surface.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#takeSurface(android.view.SurfaceHolder.Callback2)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TogglePanel">
      <MemberSignature Language="C#" Value="public abstract void TogglePanel (int featureId, Android.Views.KeyEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TogglePanel(int32 featureId, class Android.Views.KeyEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("togglePanel", "(ILandroid/view/KeyEvent;)V", "GetTogglePanel_ILandroid_view_KeyEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="e">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#togglePanel(int, android.view.KeyEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransitionBackgroundFadeDuration">
      <MemberSignature Language="C#" Value="public virtual long TransitionBackgroundFadeDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TransitionBackgroundFadeDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransitionBackgroundFadeDuration", "()J", "GetGetTransitionBackgroundFadeDurationHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTransitionBackgroundFadeDuration", "(J)V", "GetSetTransitionBackgroundFadeDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the duration, in milliseconds, of the window background fade
 when transitioning into or away from an Activity when called with an Activity Transition.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getTransitionBackgroundFadeDuration()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the duration, in milliseconds, of the window background fade
 when transitioning into or away from an Activity when called with an Activity Transition.
 </para>
          <para tool="javadoc-to-mdoc">When executing the enter transition, the background starts transparent
 and fades in. This requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>. The default is
 300 milliseconds.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setTransitionBackgroundFadeDuration(long)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the duration, in milliseconds, of the window background fade
 when transitioning into or away from an Activity when called with an Activity Transition.
 </para>
          <para tool="javadoc-to-mdoc">When executing the enter transition, the background starts transparent
 and fades in. This requires <c><see cref="F:Android.Views.WindowsFeatures.ActivityTransitions" tool="ReplaceLinkValue" /></c>. The default is
 300 milliseconds.</para>
        </remarks>
        <altmember cref="P:Android.Views.Window.EnterTransition" />
        <altmember cref="P:Android.Views.Window.EnterTransition" />
      </Docs>
    </Member>
    <Member MemberName="TransitionManager">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.TransitionManager TransitionManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.TransitionManager TransitionManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTransitionManager", "()Landroid/transition/TransitionManager;", "GetGetTransitionManagerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setTransitionManager", "(Landroid/transition/TransitionManager;)V", "GetSetTransitionManager_Landroid_transition_TransitionManager_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.TransitionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c><see cref="T:Android.Transitions.TransitionManager" /></c> responsible for  for default transitions
 in this window.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getTransitionManager()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Retrieve the <c><see cref="T:Android.Transitions.TransitionManager" /></c> responsible for  for default transitions
 in this window. Requires <c><see cref="!:Android.Views.Window.FEATURE_CONTENT_TRANSITIONS" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">This method will return non-null after content has been initialized (e.g. by using
 <c><see cref="M:Android.Views.Window.SetContentView(Android.Views.View)" /></c>) if <c><see cref="!:Android.Views.Window.FEATURE_CONTENT_TRANSITIONS" /></c> has been granted.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setTransitionManager(android.transition.TransitionManager)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the <c><see cref="T:Android.Transitions.TransitionManager" /></c> to use for default transitions in this window.
 Requires <c><see cref="!:Android.Views.Window.FEATURE_CONTENT_TRANSITIONS" /></c>.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeControlStream">
      <MemberSignature Language="C#" Value="public abstract Android.Media.Stream VolumeControlStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Stream VolumeControlStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setVolumeControlStream", "(I)V", "GetSetVolumeControlStream_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#getVolumeControlStream()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/Window.html#setVolumeControlStream(int)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.VolumeControlStream" />
        <altmember cref="P:Android.App.Activity.VolumeControlStream" />
      </Docs>
    </Member>
    <Member MemberName="WindowManager">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowManager WindowManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowManager WindowManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the window manager allowing this Window to display its own
 windows.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the window manager allowing this Window to display its own
 windows.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getWindowManager()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray WindowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.TypedArray WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getWindowStyle", "()Landroid/content/res/TypedArray;", "GetGetWindowStyleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#Window" /></c> attributes from this
 window's theme.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the <c><see cref="!:NoType:android/R$styleable;Href=../../../reference/android/R.styleable.html#Window" /></c> attributes from this
 window's theme.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/Window.html#getWindowStyle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
