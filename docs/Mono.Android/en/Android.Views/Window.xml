<Type Name="Window" FullName="Android.Views.Window">
  <TypeSignature Language="C#" Value="public abstract class Window : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Window extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.Window" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/Window", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/Window", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Abstract base class for a top-level window look and behavior policy.</summary>
    <remarks>
      <para>Abstract base class for a top-level window look and behavior policy.  An
            instance of this class should be used as the top-level view added to the
            window manager. It provides standard UI policies such as a background, title
            area, default key processing, etc.</para>
      <para>The framework will instantiate an implementation of this class on behalf of the application.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/Window" title="Reference documentation">Java documentation for <code>android.view.Window</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.Window : Android.Content.Context -&gt; Android.Views.Window" Usage="new Android.Views.Window context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Window (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.Window : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.Window" Usage="new Android.Views.Window (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContentView">
      <MemberSignature Language="C#" Value="public abstract void AddContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.AddContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member AddContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="window.AddContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetAddContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Variation on
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            to add an additional content view to the screen.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#addContentView(android.view.View,%20android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.view.Window.addContentView(android.view.View, android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddFlags">
      <MemberSignature Language="C#" Value="public virtual void AddFlags (Android.Views.WindowManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddFlags(valuetype Android.Views.WindowManagerFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.AddFlags(Android.Views.WindowManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member AddFlags : Android.Views.WindowManagerFlags -&gt; unit&#xA;override this.AddFlags : Android.Views.WindowManagerFlags -&gt; unit" Usage="window.AddFlags flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addFlags", "(I)V", "GetAddFlags_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addFlags", "(I)V", "GetAddFlags_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The flag bits to be set.</param>
        <summary>Convenience function to set the flag bits as specified in flags, as
            per <c>#setFlags</c>.</summary>
        <remarks>
          <para>Convenience function to set the flag bits as specified in flags, as
            per <c>#setFlags</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#addFlags(int)" title="Reference documentation">Java documentation for <code>android.view.Window.addFlags(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags, Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.ClearFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AddOnFrameMetricsAvailableListener">
      <MemberSignature Language="C#" Value="public void AddOnFrameMetricsAvailableListener (Android.Views.Window.IOnFrameMetricsAvailableListener listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOnFrameMetricsAvailableListener(class Android.Views.Window/IOnFrameMetricsAvailableListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.AddOnFrameMetricsAvailableListener(Android.Views.Window.IOnFrameMetricsAvailableListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.AddOnFrameMetricsAvailableListener : Android.Views.Window.IOnFrameMetricsAvailableListener * Android.OS.Handler -&gt; unit" Usage="window.AddOnFrameMetricsAvailableListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;Landroid/os/Handler;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;Landroid/os/Handler;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.Window+IOnFrameMetricsAvailableListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>Set an observer to collect frame stats for each frame rendered in this window.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#addOnFrameMetricsAvailableListener(android.view.OnFrameMetricsAvailableListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.view.Window.addOnFrameMetricsAvailableListener(android.view.OnFrameMetricsAvailableListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowEnterTransitionOverlap">
      <MemberSignature Language="C#" Value="public virtual bool AllowEnterTransitionOverlap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowEnterTransitionOverlap" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.AllowEnterTransitionOverlap" />
      <MemberSignature Language="F#" Value="member this.AllowEnterTransitionOverlap : bool with get, set" Usage="Android.Views.Window.AllowEnterTransitionOverlap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowEnterTransitionOverlap", "()Z", "GetGetAllowEnterTransitionOverlapHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllowEnterTransitionOverlap", "()Z", "GetGetAllowEnterTransitionOverlapHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAllowEnterTransitionOverlap", "(Z)V", "GetSetAllowEnterTransitionOverlap_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAllowEnterTransitionOverlap", "(Z)V", "GetSetAllowEnterTransitionOverlap_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="allow">true to start the enter transition when possible or false to
                         wait until the exiting transition completes.</param>
        <summary>Returns how the transition set in
            <c>#setEnterTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the calling Activity. -or- Controls how the transition set in
            <c>#setEnterTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the calling Activity.</summary>
        <value>true when the enter transition should start as soon as possible or false to
            when it should wait until the exiting transition completes.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns how the transition set in
            <c>#setEnterTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the calling Activity. When true, the transition will start as soon as possible.
            When false, the transition will wait until the remote exiting transition completes before
            starting. The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getAllowEnterTransitionOverlap()" title="Reference documentation">Java documentation for <code>android.view.Window.getAllowEnterTransitionOverlap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls how the transition set in
            <c>#setEnterTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the calling Activity. When true, the transition will start as soon as possible.
            When false, the transition will wait until the remote exiting transition completes before
            starting. The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setAllowEnterTransitionOverlap(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setAllowEnterTransitionOverlap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturnTransitionOverlap">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturnTransitionOverlap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturnTransitionOverlap" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.AllowReturnTransitionOverlap" />
      <MemberSignature Language="F#" Value="member this.AllowReturnTransitionOverlap : bool with get, set" Usage="Android.Views.Window.AllowReturnTransitionOverlap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowReturnTransitionOverlap", "()Z", "GetGetAllowReturnTransitionOverlapHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllowReturnTransitionOverlap", "()Z", "GetGetAllowReturnTransitionOverlapHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAllowReturnTransitionOverlap", "(Z)V", "GetSetAllowReturnTransitionOverlap_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAllowReturnTransitionOverlap", "(Z)V", "GetSetAllowReturnTransitionOverlap_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="allow">true to start the transition when possible or false to wait until the
                         called Activity's exiting transition completes.</param>
        <summary>Returns how the transition set in
            <c>#setExitTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the called Activity when reentering after if finishes. -or- Controls how the transition set in
            <c>#setExitTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the called Activity when reentering after if finishes.</summary>
        <value>true when the transition should start when possible or false when it should wait
            until the called Activity's exiting transition completes.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns how the transition set in
            <c>#setExitTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the called Activity when reentering after if finishes. When true,
            the transition will start as soon as possible. When false, the transition will wait
            until the called Activity's exiting transition completes before starting.
            The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getAllowReturnTransitionOverlap()" title="Reference documentation">Java documentation for <code>android.view.Window.getAllowReturnTransitionOverlap()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Controls how the transition set in
            <c>#setExitTransition(android.transition.Transition)</c> overlaps with the exit
            transition of the called Activity when reentering after if finishes. When true,
            the transition will start as soon as possible. When false, the transition will wait
            until the called Activity's exiting transition completes before starting.
            The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setAllowReturnTransitionOverlap(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setAllowReturnTransitionOverlap(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public Android.Views.WindowManagerLayoutParams? Attributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.WindowManagerLayoutParams Attributes" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.Attributes" />
      <MemberSignature Language="F#" Value="member this.Attributes : Android.Views.WindowManagerLayoutParams with get, set" Usage="Android.Views.Window.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAttributes", "()Landroid/view/WindowManager$LayoutParams;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAttributes", "()Landroid/view/WindowManager$LayoutParams;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAttributes", "(Landroid/view/WindowManager$LayoutParams;)V", "GetSetAttributes_Landroid_view_WindowManager_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAttributes", "(Landroid/view/WindowManager$LayoutParams;)V", "GetSetAttributes_Landroid_view_WindowManager_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowManagerLayoutParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the current window attributes associated with this panel. -or- Specify custom window attributes.</summary>
        <value>WindowManager.LayoutParams Either the existing window
                    attributes object, or a freshly created one if there is none.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getAttributes()" title="Reference documentation">Java documentation for <code>android.view.Window.getAttributes()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setAttributes(android.view.LayoutParams)" title="Reference documentation">Java documentation for <code>android.view.Window.setAttributes(android.view.LayoutParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Callback">
      <MemberSignature Language="C#" Value="public Android.Views.Window.ICallback? Callback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window/ICallback Callback" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.Callback" />
      <MemberSignature Language="F#" Value="member this.Callback : Android.Views.Window.ICallback with get, set" Usage="Android.Views.Window.Callback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallback", "()Landroid/view/Window$Callback;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallback", "()Landroid/view/Window$Callback;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCallback", "(Landroid/view/Window$Callback;)V", "GetSetCallback_Landroid_view_Window_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCallback", "(Landroid/view/Window$Callback;)V", "GetSetCallback_Landroid_view_Window_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window+ICallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current Callback interface for this window. -or- Set the Callback interface for this window, used to intercept key
            events and other dynamic operations in the window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getCallback()" title="Reference documentation">Java documentation for <code>android.view.Window.getCallback()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setCallback(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.view.Window.setCallback(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearFlags">
      <MemberSignature Language="C#" Value="public virtual void ClearFlags (Android.Views.WindowManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearFlags(valuetype Android.Views.WindowManagerFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.ClearFlags(Android.Views.WindowManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member ClearFlags : Android.Views.WindowManagerFlags -&gt; unit&#xA;override this.ClearFlags : Android.Views.WindowManagerFlags -&gt; unit" Usage="window.ClearFlags flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearFlags", "(I)V", "GetClearFlags_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearFlags", "(I)V", "GetClearFlags_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The flag bits to be cleared.</param>
        <summary>Convenience function to clear the flag bits as specified in flags, as
            per <c>#setFlags</c>.</summary>
        <remarks>
          <para>Convenience function to clear the flag bits as specified in flags, as
            per <c>#setFlags</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#clearFlags(int)" title="Reference documentation">Java documentation for <code>android.view.Window.clearFlags(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags, Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.AddFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="CloseAllPanels">
      <MemberSignature Language="C#" Value="public abstract void CloseAllPanels ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseAllPanels() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.CloseAllPanels" />
      <MemberSignature Language="F#" Value="abstract member CloseAllPanels : unit -&gt; unit" Usage="window.CloseAllPanels " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeAllPanels", "()V", "GetCloseAllPanelsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeAllPanels", "()V", "GetCloseAllPanelsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClosePanel">
      <MemberSignature Language="C#" Value="public abstract void ClosePanel (int featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClosePanel(int32 featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.ClosePanel(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ClosePanel : int -&gt; unit" Usage="window.ClosePanel featureId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closePanel", "(I)V", "GetClosePanel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closePanel", "(I)V", "GetClosePanel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColorMode">
      <MemberSignature Language="C#" Value="public virtual Android.Content.PM.ActivityColorMode ColorMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Content.PM.ActivityColorMode ColorMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ColorMode" />
      <MemberSignature Language="F#" Value="member this.ColorMode : Android.Content.PM.ActivityColorMode with get, set" Usage="Android.Views.Window.ColorMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColorMode", "()I", "GetGetColorModeHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColorMode", "()I", "GetGetColorModeHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setColorMode", "(I)V", "GetSetColorMode_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setColorMode", "(I)V", "GetSetColorMode_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ActivityColorMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the requested color mode of the window, one of
            <c>ActivityInfo#COLOR_MODE_DEFAULT</c>, <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c>
            or <c>ActivityInfo#COLOR_MODE_HDR</c>. -or- Sets the requested color mode of the window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the requested color mode of the window, one of
            <c>ActivityInfo#COLOR_MODE_DEFAULT</c>, <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c>
            or <c>ActivityInfo#COLOR_MODE_HDR</c>. If <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c>
            was requested it is possible the window will not be put in wide color gamut mode depending
            on device and display support for that mode. Use <c>#isWideColorGamut</c> to determine
            if the window is currently in wide color gamut mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getColorMode()" title="Reference documentation">Java documentation for <code>android.view.Window.getColorMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the requested color mode of the window. The requested the color mode might
            override the window's pixel <c>WindowManager.LayoutParams#format format</c>.</para>
          <para>The requested color mode must be one of <c>ActivityInfo#COLOR_MODE_DEFAULT</c>,
            <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c> or <c>ActivityInfo#COLOR_MODE_HDR</c>.</para>
          <para>The requested color mode is not guaranteed to be honored. Please refer to
            <c>#getColorMode()</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setColorMode(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setColorMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public Android.Views.Window? Container { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Window Container" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.Container" />
      <MemberSignature Language="F#" Value="member this.Container : Android.Views.Window with get, set" Usage="Android.Views.Window.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContainer", "()Landroid/view/Window;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContainer", "()Landroid/view/Window;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setContainer", "(Landroid/view/Window;)V", "GetSetContainer_Landroid_view_Window_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setContainer", "(Landroid/view/Window;)V", "GetSetContainer_Landroid_view_Window_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="container">The desired containing Window.</param>
        <summary>Return the container for this Window. -or- Set the container for this window.</summary>
        <value>Window The containing window, or null if this is a
                    top-level window.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the container for this Window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getContainer()" title="Reference documentation">Java documentation for <code>android.view.Window.getContainer()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the container for this window.  If not set, the DecorWindow
            operates as a top-level window; otherwise, it negotiates with the
            container to display itself appropriately.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setContainer(android.view.Window)" title="Reference documentation">Java documentation for <code>android.view.Window.setContainer(android.view.Window)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ContentScene">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Scene? ContentScene { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Scene ContentScene" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ContentScene" />
      <MemberSignature Language="F#" Value="member this.ContentScene : Android.Transitions.Scene" Usage="Android.Views.Window.ContentScene" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContentScene", "()Landroid/transition/Scene;", "GetGetContentSceneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContentScene", "()Landroid/transition/Scene;", "GetGetContentSceneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Scene</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the <c>Scene</c> representing this window's current content.</summary>
        <value>Current Scene being shown or null</value>
        <remarks>
          <para>Retrieve the <c>Scene</c> representing this window's current content.
            Requires <c>#FEATURE_CONTENT_TRANSITIONS</c>.</para>
          <para>This method will return null if the current content is not represented by a Scene.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getContentScene()" title="Reference documentation">Java documentation for <code>android.view.Window.getContentScene()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public Android.Content.Context? Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.Context" />
      <MemberSignature Language="F#" Value="member this.Context : Android.Content.Context" Usage="Android.Views.Window.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Context this window policy is running in, for retrieving
            resources and other information.</summary>
        <value>Context The Context that was supplied to the constructor.</value>
        <remarks>
          <para>Return the Context this window policy is running in, for retrieving
            resources and other information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getContext()" title="Reference documentation">Java documentation for <code>android.view.Window.getContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentFocus">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View? CurrentFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View CurrentFocus" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.CurrentFocus" />
      <MemberSignature Language="F#" Value="member this.CurrentFocus : Android.Views.View" Usage="Android.Views.Window.CurrentFocus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentFocus", "()Landroid/view/View;", "GetGetCurrentFocusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentFocus", "()Landroid/view/View;", "GetGetCurrentFocusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the view in this Window that currently has focus, or null if
 there are none.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecorCaptionShadeAuto">
      <MemberSignature Language="C#" Value="public const Android.Views.DecorCaptionShade DecorCaptionShadeAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DecorCaptionShade DecorCaptionShadeAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.DecorCaptionShadeAuto" />
      <MemberSignature Language="F#" Value="val mutable DecorCaptionShadeAuto : Android.Views.DecorCaptionShade" Usage="Android.Views.Window.DecorCaptionShadeAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DECOR_CAPTION_SHADE_AUTO", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DECOR_CAPTION_SHADE_AUTO", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DecorCaptionShade</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Flag for letting the theme drive the color of the window caption controls.</summary>
        <remarks>
          <para>Flag for letting the theme drive the color of the window caption controls. Use with
            <c>#setDecorCaptionShade(int)</c>. This is the default value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#DECOR_CAPTION_SHADE_AUTO" title="Reference documentation">Java documentation for <code>android.view.Window.DECOR_CAPTION_SHADE_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorCaptionShadeDark">
      <MemberSignature Language="C#" Value="public const Android.Views.DecorCaptionShade DecorCaptionShadeDark = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DecorCaptionShade DecorCaptionShadeDark = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.DecorCaptionShadeDark" />
      <MemberSignature Language="F#" Value="val mutable DecorCaptionShadeDark : Android.Views.DecorCaptionShade" Usage="Android.Views.Window.DecorCaptionShadeDark" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DECOR_CAPTION_SHADE_DARK", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DECOR_CAPTION_SHADE_DARK", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DecorCaptionShade</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for setting dark-color controls on the window caption.</summary>
        <remarks>
          <para>Flag for setting dark-color controls on the window caption. Use with
            <c>#setDecorCaptionShade(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#DECOR_CAPTION_SHADE_DARK" title="Reference documentation">Java documentation for <code>android.view.Window.DECOR_CAPTION_SHADE_DARK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorCaptionShadeLight">
      <MemberSignature Language="C#" Value="public const Android.Views.DecorCaptionShade DecorCaptionShadeLight = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DecorCaptionShade DecorCaptionShadeLight = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.DecorCaptionShadeLight" />
      <MemberSignature Language="F#" Value="val mutable DecorCaptionShadeLight : Android.Views.DecorCaptionShade" Usage="Android.Views.Window.DecorCaptionShadeLight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DECOR_CAPTION_SHADE_LIGHT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DECOR_CAPTION_SHADE_LIGHT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DecorCaptionShade enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DecorCaptionShade</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for setting light-color controls on the window caption.</summary>
        <remarks>
          <para>Flag for setting light-color controls on the window caption. Use with
            <c>#setDecorCaptionShade(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#DECOR_CAPTION_SHADE_LIGHT" title="Reference documentation">Java documentation for <code>android.view.Window.DECOR_CAPTION_SHADE_LIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecorView">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View DecorView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.View DecorView" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.DecorView" />
      <MemberSignature Language="F#" Value="member this.DecorView : Android.Views.View" Usage="Android.Views.Window.DecorView" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDecorView", "()Landroid/view/View;", "GetGetDecorViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDecorView", "()Landroid/view/View;", "GetGetDecorViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the top-level window decor view (containing the standard
 window frame/decorations and the client's content inside of that), which
 can be added as a window to the window manager.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EnterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? EnterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition EnterTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.EnterTransition" />
      <MemberSignature Language="F#" Value="member this.EnterTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.EnterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnterTransition", "()Landroid/transition/Transition;", "GetGetEnterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnterTransition", "()Landroid/transition/Transition;", "GetGetEnterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setEnterTransition", "(Landroid/transition/Transition;)V", "GetSetEnterTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setEnterTransition", "(Landroid/transition/Transition;)V", "GetSetEnterTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use to move Views into the initial Scene.</param>
        <summary>Returns the transition used to move Views into the initial scene. -or- Sets the Transition that will be used to move Views into the initial scene.</summary>
        <value>the Transition to use to move Views into the initial Scene.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the transition used to move Views into the initial scene. The entering
            Views will be those that are regular Views or ViewGroups that have
            <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as entering is governed by changing visibility from
            <c>View#INVISIBLE</c> to <c>View#VISIBLE</c>. If <c>transition</c> is null,
            entering Views will remain unaffected.  Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getEnterTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getEnterTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used to move Views into the initial scene. The entering
            Views will be those that are regular Views or ViewGroups that have
            <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as entering is governed by changing visibility from
            <c>View#INVISIBLE</c> to <c>View#VISIBLE</c>. If <c>transition</c> is null,
            entering Views will remain unaffected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setEnterTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setEnterTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? ExitTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ExitTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ExitTransition" />
      <MemberSignature Language="F#" Value="member this.ExitTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.ExitTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getExitTransition", "()Landroid/transition/Transition;", "GetGetExitTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getExitTransition", "()Landroid/transition/Transition;", "GetGetExitTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setExitTransition", "(Landroid/transition/Transition;)V", "GetSetExitTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setExitTransition", "(Landroid/transition/Transition;)V", "GetSetExitTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use to move Views out of the scene when calling a
                              new Activity.</param>
        <summary>Returns the Transition that will be used to move Views out of the scene when starting a
            new Activity. -or- Sets the Transition that will be used to move Views out of the scene when starting a
            new Activity.</summary>
        <value>the Transition to use to move Views out of the scene when calling a
            new Activity.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used to move Views out of the scene when starting a
            new Activity. The exiting Views will be those that are regular Views or ViewGroups that
            have <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as exiting is governed by changing visibility
            from <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>. If transition is null, the views will
            remain unaffected. Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getExitTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getExitTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used to move Views out of the scene when starting a
            new Activity. The exiting Views will be those that are regular Views or ViewGroups that
            have <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as exiting is governed by changing visibility
            from <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>. If transition is null, the views will
            remain unaffected. Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setExitTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setExitTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Features">
      <MemberSignature Language="C#" Value="protected int Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Features" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.Features" />
      <MemberSignature Language="F#" Value="member this.Features : int" Usage="Android.Views.Window.Features" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFeatures", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFeatures", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the feature bits that are enabled.</summary>
        <value>int The feature bits.</value>
        <remarks>
          <para>Return the feature bits that are enabled.  This is the set of features
            that were given to requestFeature(), and are being handled by this
            Window itself or its container.  That is, it is the set of
            requested features that you can actually use.</para>
          <para>To do: add a public version of this API that allows you to check for
            features by their feature ID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getFeatures()" title="Reference documentation">Java documentation for <code>android.view.Window.getFeatures()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? FindViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View FindViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.FindViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FindViewById : int -&gt; Android.Views.View&#xA;override this.FindViewById : int -&gt; Android.Views.View" Usage="window.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("findViewById", "(I)Landroid/view/View;", "GetFindViewById_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was identified by the <c>android:id</c> XML attribute
            that was processed in <c>android.app.Activity#onCreate</c>.</summary>
        <returns>a view with given ID if found, or <c>null</c> otherwise</returns>
        <remarks>
          <para>Finds a view that was identified by the <c>android:id</c> XML attribute
            that was processed in <c>android.app.Activity#onCreate</c>.</para>
          <para>This will implicitly call <c>#getDecorView</c> with all of the associated side-effects.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#findViewById(int)" title="Reference documentation">Java documentation for <code>android.view.Window.findViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FindViewById&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T? FindViewById&lt;T&gt; (int id) where T : Android.Views.View;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T FindViewById&lt;(class Android.Views.View) T&gt;(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.FindViewById``1(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.FindViewById : int -&gt; 'T (requires 'T :&gt; Android.Views.View)" Usage="window.FindViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>Android.Views.View</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="id">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForcedWindowFlags">
      <MemberSignature Language="C#" Value="protected int ForcedWindowFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ForcedWindowFlags" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ForcedWindowFlags" />
      <MemberSignature Language="F#" Value="member this.ForcedWindowFlags : int" Usage="Android.Views.Window.ForcedWindowFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getForcedWindowFlags", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getForcedWindowFlags", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the window flags that have been explicitly set by the client,
            so will not be modified by <c>#getDecorView</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the window flags that have been explicitly set by the client,
            so will not be modified by <c>#getDecorView</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getForcedWindowFlags()" title="Reference documentation">Java documentation for <code>android.view.Window.getForcedWindowFlags()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FrameMetricsAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.Window.FrameMetricsAvailableEventArgs&gt; FrameMetricsAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.Window/FrameMetricsAvailableEventArgs&gt; FrameMetricsAvailable" />
      <MemberSignature Language="DocId" Value="E:Android.Views.Window.FrameMetricsAvailable" />
      <MemberSignature Language="F#" Value="member this.FrameMetricsAvailable : EventHandler&lt;Android.Views.Window.FrameMetricsAvailableEventArgs&gt; " Usage="member this.FrameMetricsAvailable : System.EventHandler&lt;Android.Views.Window.FrameMetricsAvailableEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.Window+FrameMetricsAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultFeatures">
      <MemberSignature Language="C#" Value="public static Android.Views.WindowFeatures GetDefaultFeatures (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.Views.WindowFeatures GetDefaultFeatures(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.GetDefaultFeatures(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetDefaultFeatures : Android.Content.Context -&gt; Android.Views.WindowFeatures" Usage="Android.Views.Window.GetDefaultFeatures context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefaultFeatures", "(Landroid/content/Context;)I", "", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefaultFeatures", "(Landroid/content/Context;)I", "", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowFeatures</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The context used to access resources</param>
        <summary>Return the feature bits set by default on a window.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the feature bits set by default on a window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getDefaultFeatures(android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.Window.getDefaultFeatures(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.HasChildren" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="Android.Views.Window.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasChildren", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasChildren", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasFeature">
      <MemberSignature Language="C#" Value="public virtual bool HasFeature (Android.Views.WindowFeatures feature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFeature(valuetype Android.Views.WindowFeatures feature) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.HasFeature(Android.Views.WindowFeatures)" />
      <MemberSignature Language="F#" Value="abstract member HasFeature : Android.Views.WindowFeatures -&gt; bool&#xA;override this.HasFeature : Android.Views.WindowFeatures -&gt; bool" Usage="window.HasFeature feature" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasFeature", "(I)Z", "GetHasFeature_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasFeature", "(I)Z", "GetHasFeature_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="feature" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="feature">The feature ID to check</param>
        <summary>Query for the availability of a certain feature.</summary>
        <returns>true if the feature is enabled, false otherwise.</returns>
        <remarks>
          <para>Query for the availability of a certain feature.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#hasFeature(int)" title="Reference documentation">Java documentation for <code>android.view.Window.hasFeature(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasSoftInputMode">
      <MemberSignature Language="C#" Value="protected bool HasSoftInputMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSoftInputMode" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.HasSoftInputMode" />
      <MemberSignature Language="F#" Value="member this.HasSoftInputMode : bool" Usage="Android.Views.Window.HasSoftInputMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("hasSoftInputMode", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("hasSoftInputMode", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Has the app specified their own soft input mode?</summary>
        <value>To be added.</value>
        <remarks>
          <para>Has the app specified their own soft input mode?</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#hasSoftInputMode()" title="Reference documentation">Java documentation for <code>android.view.Window.hasSoftInputMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IdAndroidContent">
      <MemberSignature Language="C#" Value="public const int IdAndroidContent = 16908290;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 IdAndroidContent = (16908290)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.IdAndroidContent" />
      <MemberSignature Language="F#" Value="val mutable IdAndroidContent : int" Usage="Android.Views.Window.IdAndroidContent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_ANDROID_CONTENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_ANDROID_CONTENT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16908290</MemberValue>
      <Docs>
        <summary>The ID that the main layout in the XML layout file should have.</summary>
        <remarks>
          <para>The ID that the main layout in the XML layout file should have.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#ID_ANDROID_CONTENT" title="Reference documentation">Java documentation for <code>android.view.Window.ID_ANDROID_CONTENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InjectInputEvent">
      <MemberSignature Language="C#" Value="public virtual void InjectInputEvent (Android.Views.InputEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InjectInputEvent(class Android.Views.InputEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.InjectInputEvent(Android.Views.InputEvent)" />
      <MemberSignature Language="F#" Value="abstract member InjectInputEvent : Android.Views.InputEvent -&gt; unit&#xA;override this.InjectInputEvent : Android.Views.InputEvent -&gt; unit" Usage="window.InjectInputEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("injectInputEvent", "(Landroid/view/InputEvent;)V", "GetInjectInputEvent_Landroid_view_InputEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("injectInputEvent", "(Landroid/view/InputEvent;)V", "GetInjectInputEvent_Landroid_view_InputEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.InputEvent" />
      </Parameters>
      <Docs>
        <param name="e">A key or touch event to inject to this window.
</param>
        <param name="event">A key or touch event to inject to this window.</param>
        <summary>Inject an event to window locally.</summary>
        <remarks>
          <para>Inject an event to window locally.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#injectInputEvent(android.view.InputEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.injectInputEvent(android.view.InputEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsetsController">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowInsetsController? InsetsController { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowInsetsController InsetsController" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.InsetsController" />
      <MemberSignature Language="F#" Value="member this.InsetsController : Android.Views.IWindowInsetsController" Usage="Android.Views.Window.InsetsController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInsetsController", "()Landroid/view/WindowInsetsController;", "GetGetInsetsControllerHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInsetsController", "()Landroid/view/WindowInsetsController;", "GetGetInsetsControllerHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowInsetsController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>The <c>WindowInsetsController</c> associated with this window</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getInsetsController()" title="Reference documentation">Java documentation for <code>android.view.Window.getInsetsController()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidatePanelMenu">
      <MemberSignature Language="C#" Value="public abstract void InvalidatePanelMenu (Android.Views.WindowFeatures featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InvalidatePanelMenu(valuetype Android.Views.WindowFeatures featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.InvalidatePanelMenu(Android.Views.WindowFeatures)" />
      <MemberSignature Language="F#" Value="abstract member InvalidatePanelMenu : Android.Views.WindowFeatures -&gt; unit" Usage="window.InvalidatePanelMenu featureId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("invalidatePanelMenu", "(I)V", "GetInvalidatePanelMenu_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("invalidatePanelMenu", "(I)V", "GetInvalidatePanelMenu_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.IsActive" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="Android.Views.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActive", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActive", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFloating">
      <MemberSignature Language="C#" Value="public abstract bool IsFloating { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFloating" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.IsFloating" />
      <MemberSignature Language="F#" Value="member this.IsFloating : bool" Usage="Android.Views.Window.IsFloating" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFloating", "()Z", "GetIsFloatingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFloating", "()Z", "GetIsFloatingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether this window is being displayed with a floating style
 (based on the <see cref="F:Android.Resource.Attribute.WindowIsFloating" /> attribute in
 the style/theme).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsShortcutKey">
      <MemberSignature Language="C#" Value="public abstract bool IsShortcutKey (Android.Views.Keycode keyCode, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsShortcutKey(valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.IsShortcutKey(Android.Views.Keycode,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member IsShortcutKey : Android.Views.Keycode * Android.Views.KeyEvent -&gt; bool" Usage="window.IsShortcutKey (keyCode, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isShortcutKey", "(ILandroid/view/KeyEvent;)Z", "GetIsShortcutKey_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isShortcutKey", "(ILandroid/view/KeyEvent;)Z", "GetIsShortcutKey_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">the <see cref="T:Android.Views.KeyEvent" /> to use to help check.
</param>
        <param name="keyCode">the key code from <c>android.view.KeyEvent</c> to check.</param>
        <param name="event">the <c>android.view.KeyEvent</c> to use to help check.</param>
        <summary>Is a keypress one of the defined shortcut keys for this window.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Is a keypress one of the defined shortcut keys for this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#isShortcutKey(int,%20android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.isShortcutKey(int, android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsWideColorGamut">
      <MemberSignature Language="C#" Value="public virtual bool IsWideColorGamut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWideColorGamut" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.IsWideColorGamut" />
      <MemberSignature Language="F#" Value="member this.IsWideColorGamut : bool" Usage="Android.Views.Window.IsWideColorGamut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android27.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android27.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWideColorGamut", "()Z", "GetIsWideColorGamutHandler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWideColorGamut", "()Z", "GetIsWideColorGamutHandler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this window's color mode is <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c>,
            the display has a wide color gamut and this device supports wide color gamut rendering.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if this window's color mode is <c>ActivityInfo#COLOR_MODE_WIDE_COLOR_GAMUT</c>,
            the display has a wide color gamut and this device supports wide color gamut rendering.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#isWideColorGamut()" title="Reference documentation">Java documentation for <code>android.view.Window.isWideColorGamut()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.Window.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutInflater">
      <MemberSignature Language="C#" Value="public abstract Android.Views.LayoutInflater LayoutInflater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater LayoutInflater" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.LayoutInflater" />
      <MemberSignature Language="F#" Value="member this.LayoutInflater : Android.Views.LayoutInflater" Usage="Android.Views.Window.LayoutInflater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLayoutInflater", "()Landroid/view/LayoutInflater;", "GetGetLayoutInflaterHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Quick access to the <see cref="T:Android.Views.LayoutInflater" /> instance that this Window
 retrieved from its Context.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LocalFeatures">
      <MemberSignature Language="C#" Value="protected int LocalFeatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalFeatures" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.LocalFeatures" />
      <MemberSignature Language="F#" Value="member this.LocalFeatures : int" Usage="Android.Views.Window.LocalFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLocalFeatures", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLocalFeatures", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the feature bits that are being implemented by this Window.</summary>
        <value>int The feature bits.</value>
        <remarks>
          <para>Return the feature bits that are being implemented by this Window.
            This is the set of features that were given to requestFeature(), and are
            being handled by only this Window itself, not by its containers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getLocalFeatures()" title="Reference documentation">Java documentation for <code>android.view.Window.getLocalFeatures()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MakeActive">
      <MemberSignature Language="C#" Value="public void MakeActive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeActive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.MakeActive" />
      <MemberSignature Language="F#" Value="member this.MakeActive : unit -&gt; unit" Usage="window.MakeActive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("makeActive", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("makeActive", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MediaController">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Session.MediaController? MediaController { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Session.MediaController MediaController" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.MediaController" />
      <MemberSignature Language="F#" Value="member this.MediaController : Android.Media.Session.MediaController with get, set" Usage="Android.Views.Window.MediaController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMediaController", "()Landroid/media/session/MediaController;", "GetGetMediaControllerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMediaController", "()Landroid/media/session/MediaController;", "GetGetMediaControllerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMediaController", "(Landroid/media/session/MediaController;)V", "GetSetMediaController_Landroid_media_session_MediaController_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMediaController", "(Landroid/media/session/MediaController;)V", "GetSetMediaController_Landroid_media_session_MediaController_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Session.MediaController</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="controller">The controller for the session which should receive
                       media keys and volume changes.</param>
        <summary>Gets the <c>MediaController</c> that was previously set. -or- Sets a <c>MediaController</c> to send media keys and volume changes to.</summary>
        <value>The controller which should receive events.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the <c>MediaController</c> that was previously set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getMediaController()" title="Reference documentation">Java documentation for <code>android.view.Window.getMediaController()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a <c>MediaController</c> to send media keys and volume changes to.
            If set, this should be preferred for all media keys and volume requests
            sent to this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setMediaController(android.media.session.MediaController)" title="Reference documentation">Java documentation for <code>android.view.Window.setMediaController(android.media.session.MediaController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.Window.MediaController" />
        <altmember cref="P:Android.App.Activity.MediaController" />
      </Docs>
    </Member>
    <Member MemberName="NavigationBarBackgroundTransitionName">
      <MemberSignature Language="C#" Value="public const string NavigationBarBackgroundTransitionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NavigationBarBackgroundTransitionName" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.NavigationBarBackgroundTransitionName" />
      <MemberSignature Language="F#" Value="val mutable NavigationBarBackgroundTransitionName : string" Usage="Android.Views.Window.NavigationBarBackgroundTransitionName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transitionName for the navigation bar background View when a custom background is used.</summary>
        <remarks>
          <para>The transitionName for the navigation bar background View when a custom background is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME" title="Reference documentation">Java documentation for <code>android.view.Window.NAVIGATION_BAR_BACKGROUND_TRANSITION_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.Window.SetNavigationBarColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="NavigationBarColor">
      <MemberSignature Language="C#" Value="public abstract int NavigationBarColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NavigationBarColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.NavigationBarColor" />
      <MemberSignature Language="F#" Value="member this.NavigationBarColor : int" Usage="Android.Views.Window.NavigationBarColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNavigationBarColor", "()I", "GetGetNavigationBarColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNavigationBarColor", "()I", "GetGetNavigationBarColorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBarContrastEnforced">
      <MemberSignature Language="C#" Value="public virtual bool NavigationBarContrastEnforced { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NavigationBarContrastEnforced" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.NavigationBarContrastEnforced" />
      <MemberSignature Language="F#" Value="member this.NavigationBarContrastEnforced : bool with get, set" Usage="Android.Views.Window.NavigationBarContrastEnforced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isNavigationBarContrastEnforced", "()Z", "GetIsNavigationBarContrastEnforcedHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isNavigationBarContrastEnforced", "()Z", "GetIsNavigationBarContrastEnforcedHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNavigationBarContrastEnforced", "(Z)V", "GetSetNavigationBarContrastEnforced_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNavigationBarContrastEnforced", "(Z)V", "GetSetNavigationBarContrastEnforced_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the system is ensuring that the navigation bar has enough contrast when a
            fully transparent background is requested. -or- Sets whether the system should ensure that the navigation bar has enough
            contrast when a fully transparent background is requested.</summary>
        <value>true, if the system is ensuring contrast, false otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether the system is ensuring that the navigation bar has enough contrast when a
            fully transparent background is requested.</para>
          <para>When the navigation bar color has a non-zero alpha value, the value of this
            property has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#isNavigationBarContrastEnforced()" title="Reference documentation">Java documentation for <code>android.view.Window.isNavigationBarContrastEnforced()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the system should ensure that the navigation bar has enough
            contrast when a fully transparent background is requested.</para>
          <para>If set to this value, the system will determine whether a scrim is necessary
            to ensure that the navigation bar has enough contrast with the contents of
            this app, and set an appropriate effective bar background color accordingly.</para>
          <para>When the navigation bar color has a non-zero alpha value, the value of this
            property has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setNavigationBarContrastEnforced(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setNavigationBarContrastEnforced(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationBarDividerColor">
      <MemberSignature Language="C#" Value="public virtual int NavigationBarDividerColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NavigationBarDividerColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.NavigationBarDividerColor" />
      <MemberSignature Language="F#" Value="member this.NavigationBarDividerColor : int with get, set" Usage="Android.Views.Window.NavigationBarDividerColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNavigationBarDividerColor", "()I", "GetGetNavigationBarDividerColorHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNavigationBarDividerColor", "()I", "GetGetNavigationBarDividerColorHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNavigationBarDividerColor", "(I)V", "GetSetNavigationBarDividerColor_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNavigationBarDividerColor", "(I)V", "GetSetNavigationBarDividerColor_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="dividerColor">The color of the thin line.</param>
        <summary>Retrieves the color of the navigation bar divider. -or- Shows a thin line of the specified color between the navigation bar and the app
            content.</summary>
        <value>The color of the navigation bar divider color.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieves the color of the navigation bar divider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getNavigationBarDividerColor()" title="Reference documentation">Java documentation for <code>android.view.Window.getNavigationBarDividerColor()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Shows a thin line of the specified color between the navigation bar and the app
            content.</para>
          <para>For this to take effect,
            the window must be drawing the system bar backgrounds with
            <c>android.view.WindowManager.LayoutParams#FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS</c> and
            <c>android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_NAVIGATION</c> must not be set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setNavigationBarDividerColor(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setNavigationBarDividerColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActive">
      <MemberSignature Language="C#" Value="protected abstract void OnActive ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.OnActive" />
      <MemberSignature Language="F#" Value="abstract member OnActive : unit -&gt; unit" Usage="window.OnActive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onActive", "()V", "GetOnActiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onActive", "()V", "GetOnActiveHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnBackInvokedDispatcher">
      <MemberSignature Language="C#" Value="public virtual Android.Window.IOnBackInvokedDispatcher OnBackInvokedDispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Window.IOnBackInvokedDispatcher OnBackInvokedDispatcher" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.OnBackInvokedDispatcher" />
      <MemberSignature Language="F#" Value="member this.OnBackInvokedDispatcher : Android.Window.IOnBackInvokedDispatcher" Usage="Android.Views.Window.OnBackInvokedDispatcher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "GetGetOnBackInvokedDispatcherHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOnBackInvokedDispatcher", "()Landroid/window/OnBackInvokedDispatcher;", "GetGetOnBackInvokedDispatcherHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Window.IOnBackInvokedDispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>OnBackInvokedDispatcher</c> instance associated with this window.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the <c>OnBackInvokedDispatcher</c> instance associated with this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getOnBackInvokedDispatcher()" title="Reference documentation">Java documentation for <code>android.view.Window.getOnBackInvokedDispatcher()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConfigurationChanged">
      <MemberSignature Language="C#" Value="public abstract void OnConfigurationChanged (Android.Content.Res.Configuration? newConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConfigurationChanged(class Android.Content.Res.Configuration newConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.OnConfigurationChanged(Android.Content.Res.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member OnConfigurationChanged : Android.Content.Res.Configuration -&gt; unit" Usage="window.OnConfigurationChanged newConfig" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newConfig" Type="Android.Content.Res.Configuration" />
      </Parameters>
      <Docs>
        <param name="newConfig">The new configuration.</param>
        <summary>Should be called when the configuration is changed.</summary>
        <remarks>
          <para>Should be called when the configuration is changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#onConfigurationChanged(android.content.res.Configuration)" title="Reference documentation">Java documentation for <code>android.view.Window.onConfigurationChanged(android.content.res.Configuration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OpenPanel">
      <MemberSignature Language="C#" Value="public abstract void OpenPanel (int featureId, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OpenPanel(int32 featureId, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.OpenPanel(System.Int32,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OpenPanel : int * Android.Views.KeyEvent -&gt; unit" Usage="window.OpenPanel (featureId, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("openPanel", "(ILandroid/view/KeyEvent;)V", "GetOpenPanel_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("openPanel", "(ILandroid/view/KeyEvent;)V", "GetOpenPanel_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="e">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PeekDecorView">
      <MemberSignature Language="C#" Value="public abstract Android.Views.View? PeekDecorView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View PeekDecorView() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.PeekDecorView" />
      <MemberSignature Language="F#" Value="abstract member PeekDecorView : unit -&gt; Android.Views.View" Usage="window.PeekDecorView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("peekDecorView", "()Landroid/view/View;", "GetPeekDecorViewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("peekDecorView", "()Landroid/view/View;", "GetPeekDecorViewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the current decor view, but only if it has already been created;
            otherwise returns null.</summary>
        <returns>Returns the top-level window decor or null.</returns>
        <remarks>
          <para>Retrieve the current decor view, but only if it has already been created;
            otherwise returns null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#peekDecorView()" title="Reference documentation">Java documentation for <code>android.view.Window.peekDecorView()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Window.DecorView" />
      </Docs>
    </Member>
    <Member MemberName="PerformContextMenuIdentifierAction">
      <MemberSignature Language="C#" Value="public abstract bool PerformContextMenuIdentifierAction (int id, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformContextMenuIdentifierAction(int32 id, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.PerformContextMenuIdentifierAction(System.Int32,Android.Views.MenuPerformFlags)" />
      <MemberSignature Language="F#" Value="abstract member PerformContextMenuIdentifierAction : int * Android.Views.MenuPerformFlags -&gt; bool" Usage="window.PerformContextMenuIdentifierAction (id, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performContextMenuIdentifierAction", "(II)Z", "GetPerformContextMenuIdentifierAction_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performContextMenuIdentifierAction", "(II)Z", "GetPerformContextMenuIdentifierAction_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformPanelIdentifierAction">
      <MemberSignature Language="C#" Value="public abstract bool PerformPanelIdentifierAction (int featureId, int id, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPanelIdentifierAction(int32 featureId, int32 id, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.PerformPanelIdentifierAction(System.Int32,System.Int32,Android.Views.MenuPerformFlags)" />
      <MemberSignature Language="F#" Value="abstract member PerformPanelIdentifierAction : int * int * Android.Views.MenuPerformFlags -&gt; bool" Usage="window.PerformPanelIdentifierAction (featureId, id, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performPanelIdentifierAction", "(III)Z", "GetPerformPanelIdentifierAction_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performPanelIdentifierAction", "(III)Z", "GetPerformPanelIdentifierAction_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="id">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PerformPanelShortcut">
      <MemberSignature Language="C#" Value="public abstract bool PerformPanelShortcut (int featureId, Android.Views.Keycode keyCode, Android.Views.KeyEvent? e, Android.Views.MenuPerformFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PerformPanelShortcut(int32 featureId, valuetype Android.Views.Keycode keyCode, class Android.Views.KeyEvent e, valuetype Android.Views.MenuPerformFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.PerformPanelShortcut(System.Int32,Android.Views.Keycode,Android.Views.KeyEvent,Android.Views.MenuPerformFlags)" />
      <MemberSignature Language="F#" Value="abstract member PerformPanelShortcut : int * Android.Views.Keycode * Android.Views.KeyEvent * Android.Views.MenuPerformFlags -&gt; bool" Usage="window.PerformPanelShortcut (featureId, keyCode, e, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performPanelShortcut", "(IILandroid/view/KeyEvent;I)Z", "GetPerformPanelShortcut_IILandroid_view_KeyEvent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performPanelShortcut", "(IILandroid/view/KeyEvent;I)Z", "GetPerformPanelShortcut_IILandroid_view_KeyEvent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="keyCode" Type="Android.Views.Keycode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="flags" Type="Android.Views.MenuPerformFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="keyCode">To be added.</param>
        <param name="e">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressEnd = 10000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressEnd = (10000)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressEnd" />
      <MemberSignature Language="F#" Value="val mutable ProgressEnd : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_END")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_END")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>10000</MemberValue>
      <Docs>
        <summary>Ending value for the (primary) progress.</summary>
        <remarks>
          <para>Ending value for the (primary) progress.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_END" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_END</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressIndeterminateOff">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressIndeterminateOff = -4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressIndeterminateOff = (-4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressIndeterminateOff" />
      <MemberSignature Language="F#" Value="val mutable ProgressIndeterminateOff : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressIndeterminateOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_INDETERMINATE_OFF")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_INDETERMINATE_OFF")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-4</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's indeterminate mode off.</summary>
        <remarks>
          <para>Flag for setting the progress bar's indeterminate mode off.</para>
          <para>This member is deprecated. <c>#FEATURE_INDETERMINATE_PROGRESS</c> and related methods
                        are no longer supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_INDETERMINATE_OFF" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_INDETERMINATE_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressIndeterminateOn">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressIndeterminateOn = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressIndeterminateOn = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressIndeterminateOn" />
      <MemberSignature Language="F#" Value="val mutable ProgressIndeterminateOn : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressIndeterminateOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_INDETERMINATE_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_INDETERMINATE_ON")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's indeterminate mode on.</summary>
        <remarks>
          <para>Flag for setting the progress bar's indeterminate mode on.</para>
          <para>This member is deprecated. <c>#FEATURE_INDETERMINATE_PROGRESS</c> and related methods
                        are no longer supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_INDETERMINATE_ON" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_INDETERMINATE_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressSecondaryEnd">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressSecondaryEnd = 30000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressSecondaryEnd = (30000)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressSecondaryEnd" />
      <MemberSignature Language="F#" Value="val mutable ProgressSecondaryEnd : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressSecondaryEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_SECONDARY_END")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_SECONDARY_END")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>30000</MemberValue>
      <Docs>
        <summary>Highest possible value for the secondary progress.</summary>
        <remarks>
          <para>Highest possible value for the secondary progress.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_SECONDARY_END" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_SECONDARY_END</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressSecondaryStart">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressSecondaryStart = 20000;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressSecondaryStart = (20000)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressSecondaryStart" />
      <MemberSignature Language="F#" Value="val mutable ProgressSecondaryStart : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressSecondaryStart" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_SECONDARY_START")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_SECONDARY_START")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>20000</MemberValue>
      <Docs>
        <summary>Lowest possible value for the secondary progress.</summary>
        <remarks>
          <para>Lowest possible value for the secondary progress.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_SECONDARY_START" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_SECONDARY_START</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressStart">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressStart = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressStart = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressStart" />
      <MemberSignature Language="F#" Value="val mutable ProgressStart : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressStart" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_START")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_START")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Starting value for the (primary) progress.</summary>
        <remarks>
          <para>Starting value for the (primary) progress.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_START" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_START</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressVisibilityOff">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressVisibilityOff = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressVisibilityOff = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressVisibilityOff" />
      <MemberSignature Language="F#" Value="val mutable ProgressVisibilityOff : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressVisibilityOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_VISIBILITY_OFF")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_VISIBILITY_OFF")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's visibility to GONE.</summary>
        <remarks>
          <para>Flag for setting the progress bar's visibility to GONE.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_VISIBILITY_OFF" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_VISIBILITY_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ProgressVisibilityOn">
      <MemberSignature Language="C#" Value="public const Android.Views.WindowProgress ProgressVisibilityOn = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.WindowProgress ProgressVisibilityOn = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.ProgressVisibilityOn" />
      <MemberSignature Language="F#" Value="val mutable ProgressVisibilityOn : Android.Views.WindowProgress" Usage="Android.Views.Window.ProgressVisibilityOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROGRESS_VISIBILITY_ON")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROGRESS_VISIBILITY_ON")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This constant will be removed in the future version. Use Android.Views.WindowProgress enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.WindowProgress</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Flag for setting the progress bar's visibility to VISIBLE.</summary>
        <remarks>
          <para>Flag for setting the progress bar's visibility to VISIBLE.</para>
          <para>This member is deprecated. <c>#FEATURE_PROGRESS</c> and related methods are no longer
                        supported starting in API 21.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#PROGRESS_VISIBILITY_ON" title="Reference documentation">Java documentation for <code>android.view.Window.PROGRESS_VISIBILITY_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReenterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? ReenterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ReenterTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ReenterTransition" />
      <MemberSignature Language="F#" Value="member this.ReenterTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.ReenterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReenterTransition", "()Landroid/transition/Transition;", "GetGetReenterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReenterTransition", "()Landroid/transition/Transition;", "GetGetReenterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReenterTransition", "(Landroid/transition/Transition;)V", "GetSetReenterTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReenterTransition", "(Landroid/transition/Transition;)V", "GetSetReenterTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use to move Views into the scene when reentering from a
                              previously-started Activity.</param>
        <summary>Returns the Transition that will be used to move Views in to the scene when returning from
            a previously-started Activity. -or- Sets the Transition that will be used to move Views in to the scene when returning from
            a previously-started Activity.</summary>
        <value>The Transition to use to move Views into the scene when reentering from a
                    previously-started Activity.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used to move Views in to the scene when returning from
            a previously-started Activity. The entering Views will be those that are regular Views
            or ViewGroups that have <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions
            will extend <c>android.transition.Visibility</c> as exiting is governed by changing
            visibility from <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getReenterTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getReenterTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used to move Views in to the scene when returning from
            a previously-started Activity. The entering Views will be those that are regular Views
            or ViewGroups that have <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions
            will extend <c>android.transition.Visibility</c> as exiting is governed by changing
            visibility from <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>. If transition is null,
            the views will remain unaffected. If nothing is set, the default will be to use the same
            transition as <c>#setExitTransition(android.transition.Transition)</c>.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setReenterTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setReenterTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterScrollCaptureCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterScrollCaptureCallback (Android.Views.IScrollCaptureCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterScrollCaptureCallback(class Android.Views.IScrollCaptureCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.RegisterScrollCaptureCallback(Android.Views.IScrollCaptureCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterScrollCaptureCallback : Android.Views.IScrollCaptureCallback -&gt; unit&#xA;override this.RegisterScrollCaptureCallback : Android.Views.IScrollCaptureCallback -&gt; unit" Usage="window.RegisterScrollCaptureCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "GetRegisterScrollCaptureCallback_Landroid_view_ScrollCaptureCallback_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "GetRegisterScrollCaptureCallback_Landroid_view_ScrollCaptureCallback_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.IScrollCaptureCallback" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to add</param>
        <summary>Used to provide scroll capture support for an arbitrary window.</summary>
        <remarks>
          <para>Used to provide scroll capture support for an arbitrary window. This registeres the given
            callback with the root view of the window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#registerScrollCaptureCallback(android.view.ScrollCaptureCallback)" title="Reference documentation">Java documentation for <code>android.view.Window.registerScrollCaptureCallback(android.view.ScrollCaptureCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnFrameMetricsAvailableListener">
      <MemberSignature Language="C#" Value="public void RemoveOnFrameMetricsAvailableListener (Android.Views.Window.IOnFrameMetricsAvailableListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveOnFrameMetricsAvailableListener(class Android.Views.Window/IOnFrameMetricsAvailableListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.RemoveOnFrameMetricsAvailableListener(Android.Views.Window.IOnFrameMetricsAvailableListener)" />
      <MemberSignature Language="F#" Value="member this.RemoveOnFrameMetricsAvailableListener : Android.Views.Window.IOnFrameMetricsAvailableListener -&gt; unit" Usage="window.RemoveOnFrameMetricsAvailableListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnFrameMetricsAvailableListener", "(Landroid/view/Window$OnFrameMetricsAvailableListener;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.Window+IOnFrameMetricsAvailableListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Remove observer and stop listening to frame stats for this window.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#removeOnFrameMetricsAvailableListener(android.view.OnFrameMetricsAvailableListener)" title="Reference documentation">Java documentation for <code>android.view.Window.removeOnFrameMetricsAvailableListener(android.view.OnFrameMetricsAvailableListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestFeature">
      <MemberSignature Language="C#" Value="public virtual bool RequestFeature (Android.Views.WindowFeatures featureId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestFeature(valuetype Android.Views.WindowFeatures featureId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.RequestFeature(Android.Views.WindowFeatures)" />
      <MemberSignature Language="F#" Value="abstract member RequestFeature : Android.Views.WindowFeatures -&gt; bool&#xA;override this.RequestFeature : Android.Views.WindowFeatures -&gt; bool" Usage="window.RequestFeature featureId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestFeature", "(I)Z", "GetRequestFeature_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestFeature", "(I)Z", "GetRequestFeature_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="featureId">The desired features, defined as constants by Window.</param>
        <summary>Enable extended screen features.</summary>
        <returns>The features that are now set.</returns>
        <remarks>
          <para>Enable extended screen features.  This must be called before
            setContentView().  May be called as many times as desired as long as it
            is before setContentView().  If not called, no extended features
            will be available.  You can not turn off a feature once it is requested.
            You canot use other title features with <c>#FEATURE_CUSTOM_TITLE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#requestFeature(int)" title="Reference documentation">Java documentation for <code>android.view.Window.requestFeature(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RequireViewById">
      <MemberSignature Language="C#" Value="public Java.Lang.Object RequireViewById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object RequireViewById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.RequireViewById(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.RequireViewById : int -&gt; Java.Lang.Object" Usage="window.RequireViewById id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requireViewById", "(I)Landroid/view/View;", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T extends android.view.View" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">the ID to search for</param>
        <summary>Finds a view that was identified by the <c>android:id</c> XML attribute
            that was processed in <c>android.app.Activity#onCreate</c>, or throws an
            IllegalArgumentException if the ID is invalid, or there is no matching view in the hierarchy.</summary>
        <returns>a view with given ID</returns>
        <remarks>
          <para>Finds a view that was identified by the <c>android:id</c> XML attribute
            that was processed in <c>android.app.Activity#onCreate</c>, or throws an
            IllegalArgumentException if the ID is invalid, or there is no matching view in the hierarchy.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; In most cases -- depending on compiler support --
            the resulting view is automatically cast to the target class type. If
            the target class type is unconstrained, an explicit cast may be
            necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#requireViewById(int)" title="Reference documentation">Java documentation for <code>android.view.Window.requireViewById(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreHierarchyState">
      <MemberSignature Language="C#" Value="public abstract void RestoreHierarchyState (Android.OS.Bundle? savedInstanceState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreHierarchyState(class Android.OS.Bundle savedInstanceState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.RestoreHierarchyState(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member RestoreHierarchyState : Android.OS.Bundle -&gt; unit" Usage="window.RestoreHierarchyState savedInstanceState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restoreHierarchyState", "(Landroid/os/Bundle;)V", "GetRestoreHierarchyState_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restoreHierarchyState", "(Landroid/os/Bundle;)V", "GetRestoreHierarchyState_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedInstanceState" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="savedInstanceState">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestrictedCaptionArea">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.Window.RestrictedCaptionAreaChangedEventArgs&gt; RestrictedCaptionArea;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.Window/RestrictedCaptionAreaChangedEventArgs&gt; RestrictedCaptionArea" />
      <MemberSignature Language="DocId" Value="E:Android.Views.Window.RestrictedCaptionArea" />
      <MemberSignature Language="F#" Value="member this.RestrictedCaptionArea : EventHandler&lt;Android.Views.Window.RestrictedCaptionAreaChangedEventArgs&gt; " Usage="member this.RestrictedCaptionArea : System.EventHandler&lt;Android.Views.Window.RestrictedCaptionAreaChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.Window+RestrictedCaptionAreaChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? ReturnTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition ReturnTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ReturnTransition" />
      <MemberSignature Language="F#" Value="member this.ReturnTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.ReturnTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReturnTransition", "()Landroid/transition/Transition;", "GetGetReturnTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReturnTransition", "()Landroid/transition/Transition;", "GetGetReturnTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReturnTransition", "(Landroid/transition/Transition;)V", "GetSetReturnTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReturnTransition", "(Landroid/transition/Transition;)V", "GetSetReturnTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use to move Views out of the Scene when the Window
                              is preparing to close.</param>
        <summary>Returns the Transition that will be used to move Views out of the scene when the Window is
            preparing to close, for example after a call to
            <c>android.app.Activity#finishAfterTransition()</c>. -or- Sets the Transition that will be used to move Views out of the scene when the Window is
            preparing to close, for example after a call to
            <c>android.app.Activity#finishAfterTransition()</c>.</summary>
        <value>The Transition to use to move Views out of the Scene when the Window
                    is preparing to close.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used to move Views out of the scene when the Window is
            preparing to close, for example after a call to
            <c>android.app.Activity#finishAfterTransition()</c>. The exiting
            Views will be those that are regular Views or ViewGroups that have
            <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as entering is governed by changing visibility from
            <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getReturnTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getReturnTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used to move Views out of the scene when the Window is
            preparing to close, for example after a call to
            <c>android.app.Activity#finishAfterTransition()</c>. The exiting
            Views will be those that are regular Views or ViewGroups that have
            <c>ViewGroup#isTransitionGroup</c> return true. Typical Transitions will extend
            <c>android.transition.Visibility</c> as entering is governed by changing visibility from
            <c>View#VISIBLE</c> to <c>View#INVISIBLE</c>. If <c>transition</c> is null,
            entering Views will remain unaffected. If nothing is set, the default will be to
            use the same value as set in <c>#setEnterTransition(android.transition.Transition)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setReturnTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setReturnTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootSurfaceControl">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IAttachedSurfaceControl? RootSurfaceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IAttachedSurfaceControl RootSurfaceControl" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.RootSurfaceControl" />
      <MemberSignature Language="F#" Value="member this.RootSurfaceControl : Android.Views.IAttachedSurfaceControl" Usage="Android.Views.Window.RootSurfaceControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRootSurfaceControl", "()Landroid/view/AttachedSurfaceControl;", "GetGetRootSurfaceControlHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRootSurfaceControl", "()Landroid/view/AttachedSurfaceControl;", "GetGetRootSurfaceControlHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IAttachedSurfaceControl</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This will be null before a content view is added, e.</summary>
        <value>The <c>android.view.AttachedSurfaceControl</c> interface for this Window</value>
        <remarks>
          <para>This will be null before a content view is added, e.g. via
            <c>#setContentView</c> or <c>#addContentView</c>. See
            <c>android.view.View#getRootSurfaceControl</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getRootSurfaceControl()" title="Reference documentation">Java documentation for <code>android.view.Window.getRootSurfaceControl()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveHierarchyState">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle? SaveHierarchyState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle SaveHierarchyState() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SaveHierarchyState" />
      <MemberSignature Language="F#" Value="abstract member SaveHierarchyState : unit -&gt; Android.OS.Bundle" Usage="window.SaveHierarchyState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("saveHierarchyState", "()Landroid/os/Bundle;", "GetSaveHierarchyStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("saveHierarchyState", "()Landroid/os/Bundle;", "GetSaveHierarchyStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundBlurRadius">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundBlurRadius (int blurRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundBlurRadius(int32 blurRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetBackgroundBlurRadius(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundBlurRadius : int -&gt; unit&#xA;override this.SetBackgroundBlurRadius : int -&gt; unit" Usage="window.SetBackgroundBlurRadius blurRadius" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundBlurRadius", "(I)V", "GetSetBackgroundBlurRadius_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundBlurRadius", "(I)V", "GetSetBackgroundBlurRadius_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blurRadius" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="blurRadius">The blur radius to use for window background blur in pixels</param>
        <summary>Blurs the screen behind the window within the bounds of the window.</summary>
        <remarks>
          <para>Blurs the screen behind the window within the bounds of the window.</para>
          <para>The density of the blur is set by the blur radius. The radius defines the size
            of the neighbouring area, from which pixels will be averaged to form the final
            color for each pixel. The operation approximates a Gaussian blur.
            A radius of 0 means no blur. The higher the radius, the denser the blur.</para>
          <para>The window background drawable is drawn on top of the blurred region. The blur
            region bounds and rounded corners will mimic those of the background drawable.</para>
          <para>For the blur region to be visible, the window has to be translucent
            (see <c>android.R.attr#windowIsTranslucent</c>) and floating
            (see <c>android.R.attr#windowIsFloating</c>).</para>
          <para>Note the difference with <c>WindowManager.LayoutParams#setBlurBehindRadius</c>,
            which blurs the whole screen behind the window. Background blur blurs the screen behind
            only within the bounds of the window.</para>
          <para>Some devices might not support cross-window blur due to GPU limitations. It can also be
            disabled at runtime, e.g. during battery saving mode, when multimedia tunneling is used or
            when minimal post processing is requested. In such situations, no blur will be computed or
            drawn, resulting in a transparent window background. To avoid this, the app might want to
            change its theme to one that does not use blurs. To listen for cross-window blur
            enabled/disabled events, use <c>WindowManager#addCrossWindowBlurEnabledListener</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setBackgroundBlurRadius(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setBackgroundBlurRadius(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetBackgroundDrawable (Android.Graphics.Drawables.Drawable? drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetBackgroundDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundDrawable : Android.Graphics.Drawables.Drawable -&gt; unit" Usage="window.SetBackgroundDrawable drawable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">The new Drawable to use for this window's background.</param>
        <summary>Change the background of this window to a custom Drawable.</summary>
        <remarks>
          <para>Change the background of this window to a custom Drawable. Setting the
            background to null will make the window be opaque. To make the window
            transparent, you can use an empty drawable (for instance a ColorDrawable
            with the color 0 or the system drawable android:drawable/empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setBackgroundDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.Window.setBackgroundDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetBackgroundDrawableResource">
      <MemberSignature Language="C#" Value="public virtual void SetBackgroundDrawableResource (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackgroundDrawableResource(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetBackgroundDrawableResource(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBackgroundDrawableResource : int -&gt; unit&#xA;override this.SetBackgroundDrawableResource : int -&gt; unit" Usage="window.SetBackgroundDrawableResource resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackgroundDrawableResource", "(I)V", "GetSetBackgroundDrawableResource_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackgroundDrawableResource", "(I)V", "GetSetBackgroundDrawableResource_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">The resource identifier of a drawable resource which will
                         be installed as the new background.</param>
        <summary>Change the background of this window to a Drawable resource.</summary>
        <remarks>
          <para>Change the background of this window to a Drawable resource. Setting the
            background to null will make the window be opaque. To make the window
            transparent, you can use an empty drawable (for instance a ColorDrawable
            with the color 0 or the system drawable android:drawable/empty.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setBackgroundDrawableResource(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setBackgroundDrawableResource(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChildDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetChildDrawable (int featureId, Android.Graphics.Drawables.Drawable? drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildDrawable(int32 featureId, class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetChildDrawable(System.Int32,Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member SetChildDrawable : int * Android.Graphics.Drawables.Drawable -&gt; unit" Usage="window.SetChildDrawable (featureId, drawable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setChildDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetChildDrawable_ILandroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setChildDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetChildDrawable_ILandroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="drawable">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChildInt">
      <MemberSignature Language="C#" Value="public abstract void SetChildInt (int featureId, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChildInt(int32 featureId, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetChildInt(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetChildInt : int * int -&gt; unit" Usage="window.SetChildInt (featureId, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setChildInt", "(II)V", "GetSetChildInt_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setChildInt", "(II)V", "GetSetChildInt_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="value">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetClipToOutline">
      <MemberSignature Language="C#" Value="public virtual void SetClipToOutline (bool clipToOutline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetClipToOutline(bool clipToOutline) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetClipToOutline(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetClipToOutline : bool -&gt; unit&#xA;override this.SetClipToOutline : bool -&gt; unit" Usage="window.SetClipToOutline clipToOutline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setClipToOutline", "(Z)V", "GetSetClipToOutline_ZHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setClipToOutline", "(Z)V", "GetSetClipToOutline_ZHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipToOutline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="clipToOutline">Whether window content should be clipped to the
                                 outline of the window background.</param>
        <summary>Sets whether window content should be clipped to the outline of the
            window background.</summary>
        <remarks>
          <para>Sets whether window content should be clipped to the outline of the
            window background.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setClipToOutline(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setClipToOutline(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (Android.Views.View? view);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetContentView(Android.Views.View)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View -&gt; unit" Usage="window.SetContentView view" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <summary>Convenience for
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            set the screen content to an explicit view.</summary>
        <remarks>
          <para>Convenience for
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            set the screen content to an explicit view.  This view is placed
            directly into the screen's view hierarchy.  It can itself be a complex
            view hierarhcy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setContentView(android.view.View)" title="Reference documentation">Java documentation for <code>android.view.Window.setContentView(android.view.View)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (int layoutResID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(int32 layoutResID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetContentView(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : int -&gt; unit" Usage="window.SetContentView layoutResID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(I)V", "GetSetContentView_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutResID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="layoutResID">Resource ID to be inflated.</param>
        <summary>Convenience for
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            to set the screen content from a layout resource.</summary>
        <remarks>
          <para>Convenience for
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            to set the screen content from a layout resource.  The resource will be
            inflated, adding all top-level views to the screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setContentView(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetContentView(Android.Views.View, .LayoutParams)" />
      </Docs>
    </Member>
    <Member MemberName="SetContentView">
      <MemberSignature Language="C#" Value="public abstract void SetContentView (Android.Views.View? view, Android.Views.ViewGroup.LayoutParams? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetContentView(class Android.Views.View view, class Android.Views.ViewGroup/LayoutParams params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetContentView(Android.Views.View,Android.Views.ViewGroup.LayoutParams)" />
      <MemberSignature Language="F#" Value="abstract member SetContentView : Android.Views.View * Android.Views.ViewGroup.LayoutParams -&gt; unit" Usage="window.SetContentView (view, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setContentView", "(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V", "GetSetContentView_Landroid_view_View_Landroid_view_ViewGroup_LayoutParams_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="params" Type="Android.Views.ViewGroup+LayoutParams" />
      </Parameters>
      <Docs>
        <param name="view">The desired content to display.</param>
        <param name="params">Layout parameters for the view.</param>
        <summary>Convenience for
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c>
            to set the screen content from a layout resource.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setContentView(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setContentView(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Views.Window.TransitionManager" />
      </Docs>
    </Member>
    <Member MemberName="SetDecorCaptionShade">
      <MemberSignature Language="C#" Value="public abstract void SetDecorCaptionShade (Android.Views.DecorCaptionShade decorCaptionShade);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDecorCaptionShade(valuetype Android.Views.DecorCaptionShade decorCaptionShade) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetDecorCaptionShade(Android.Views.DecorCaptionShade)" />
      <MemberSignature Language="F#" Value="abstract member SetDecorCaptionShade : Android.Views.DecorCaptionShade -&gt; unit" Usage="window.SetDecorCaptionShade decorCaptionShade" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDecorCaptionShade", "(I)V", "GetSetDecorCaptionShade_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDecorCaptionShade", "(I)V", "GetSetDecorCaptionShade_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decorCaptionShade" Type="Android.Views.DecorCaptionShade">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="decorCaptionShade">To be added.</param>
        <summary>Set what color should the caption controls be.</summary>
        <remarks>
          <para>Set what color should the caption controls be. By default the system will try to determine
            the color from the theme. You can overwrite this by using <c>#DECOR_CAPTION_SHADE_DARK</c>,
            <c>#DECOR_CAPTION_SHADE_LIGHT</c>, or <c>#DECOR_CAPTION_SHADE_AUTO</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setDecorCaptionShade(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setDecorCaptionShade(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDecorFitsSystemWindows">
      <MemberSignature Language="C#" Value="public virtual void SetDecorFitsSystemWindows (bool decorFitsSystemWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDecorFitsSystemWindows(bool decorFitsSystemWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetDecorFitsSystemWindows(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetDecorFitsSystemWindows : bool -&gt; unit&#xA;override this.SetDecorFitsSystemWindows : bool -&gt; unit" Usage="window.SetDecorFitsSystemWindows decorFitsSystemWindows" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDecorFitsSystemWindows", "(Z)V", "GetSetDecorFitsSystemWindows_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDecorFitsSystemWindows", "(Z)V", "GetSetDecorFitsSystemWindows_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="decorFitsSystemWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="decorFitsSystemWindows">Whether the decor view should fit root-level content views for
                                          insets.</param>
        <summary>Sets whether the decor view should fit root-level content views for <c>WindowInsets</c>.</summary>
        <remarks>
          <para>Sets whether the decor view should fit root-level content views for <c>WindowInsets</c>.</para>
          <para>If set to <c>true</c>, the framework will inspect the now deprecated
            <c>View#SYSTEM_UI_LAYOUT_FLAGS</c> as well the
            <c>WindowManager.LayoutParams#SOFT_INPUT_ADJUST_RESIZE</c> flag and fits content according
            to these flags.</para>
          <para>If set to <c>false</c>, the framework will not fit the content view to the insets and will
            just pass through the <c>WindowInsets</c> to the content view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setDecorFitsSystemWindows(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setDecorFitsSystemWindows(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultWindowFormat">
      <MemberSignature Language="C#" Value="protected virtual void SetDefaultWindowFormat (int format);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDefaultWindowFormat(int32 format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetDefaultWindowFormat(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultWindowFormat : int -&gt; unit&#xA;override this.SetDefaultWindowFormat : int -&gt; unit" Usage="window.SetDefaultWindowFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultWindowFormat", "(I)V", "GetSetDefaultWindowFormat_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultWindowFormat", "(I)V", "GetSetDefaultWindowFormat_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="format">The new window format (see PixelFormat).</param>
        <summary>Set the default format of window, as per the PixelFormat types.</summary>
        <remarks>
          <para>Set the default format of window, as per the PixelFormat types.  This
            is the format that will be used unless the client specifies in explicit
            format with setFormat();</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setDefaultWindowFormat(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setDefaultWindowFormat(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.SetFormat(Android.Graphics.Format)" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="SetDimAmount">
      <MemberSignature Language="C#" Value="public virtual void SetDimAmount (float amount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDimAmount(float32 amount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetDimAmount(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetDimAmount : single -&gt; unit&#xA;override this.SetDimAmount : single -&gt; unit" Usage="window.SetDimAmount amount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDimAmount", "(F)V", "GetSetDimAmount_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDimAmount", "(F)V", "GetSetDimAmount_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="amount" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="amount">The new dim amount, from 0 for no dim to 1 for full dim.</param>
        <summary>Set the amount of dim behind the window when using
            <c>WindowManager.LayoutParams#FLAG_DIM_BEHIND</c>.</summary>
        <remarks>
          <para>Set the amount of dim behind the window when using
            <c>WindowManager.LayoutParams#FLAG_DIM_BEHIND</c>.  This overrides
            the default dim amount of that is selected by the Window based on
            its theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setDimAmount(float)" title="Reference documentation">Java documentation for <code>android.view.Window.setDimAmount(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetElevation">
      <MemberSignature Language="C#" Value="public virtual void SetElevation (float elevation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetElevation(float32 elevation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetElevation(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetElevation : single -&gt; unit&#xA;override this.SetElevation : single -&gt; unit" Usage="window.SetElevation elevation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setElevation", "(F)V", "GetSetElevation_FHandler", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elevation" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="elevation">The window elevation.</param>
        <summary>Sets the window elevation.</summary>
        <remarks>
          <para>Sets the window elevation.</para>
          <para>Changes to this property take effect immediately and will cause the
            window surface to be recreated. This is an expensive operation and as a
            result, this property should not be animated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setElevation(float)" title="Reference documentation">Java documentation for <code>android.view.Window.setElevation(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawable (Android.Views.WindowFeatures featureId, Android.Graphics.Drawables.Drawable? drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawable(valuetype Android.Views.WindowFeatures featureId, class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFeatureDrawable(Android.Views.WindowFeatures,Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member SetFeatureDrawable : Android.Views.WindowFeatures * Android.Graphics.Drawables.Drawable -&gt; unit" Usage="window.SetFeatureDrawable (featureId, drawable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetFeatureDrawable_ILandroid_graphics_drawable_Drawable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawable", "(ILandroid/graphics/drawable/Drawable;)V", "GetSetFeatureDrawable_ILandroid_graphics_drawable_Drawable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
                             constants defined by Window.</param>
        <param name="drawable">A Drawable object to display.</param>
        <summary>Set an explicit Drawable value for feature of this window.</summary>
        <remarks>
          <para>Set an explicit Drawable value for feature of this window. You must
            have called requestFeature(featureId) before calling this function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFeatureDrawable(int,%20android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.Window.setFeatureDrawable(int, android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableAlpha">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableAlpha (Android.Views.WindowFeatures featureId, int alpha);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableAlpha(valuetype Android.Views.WindowFeatures featureId, int32 alpha) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFeatureDrawableAlpha(Android.Views.WindowFeatures,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetFeatureDrawableAlpha : Android.Views.WindowFeatures * int -&gt; unit" Usage="window.SetFeatureDrawableAlpha (featureId, alpha)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableAlpha", "(II)V", "GetSetFeatureDrawableAlpha_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableAlpha", "(II)V", "GetSetFeatureDrawableAlpha_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alpha" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
                             constants defined by Window.</param>
        <param name="alpha">The alpha amount, 0 is completely transparent and 255 is
                         completely opaque.</param>
        <summary>Set a custom alpha value for the given drawable feature, controlling how
            much the background is visible through it.</summary>
        <remarks>
          <para>Set a custom alpha value for the given drawable feature, controlling how
            much the background is visible through it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFeatureDrawableAlpha(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setFeatureDrawableAlpha(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableResource">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableResource (Android.Views.WindowFeatures featureId, int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableResource(valuetype Android.Views.WindowFeatures featureId, int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFeatureDrawableResource(Android.Views.WindowFeatures,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetFeatureDrawableResource : Android.Views.WindowFeatures * int -&gt; unit" Usage="window.SetFeatureDrawableResource (featureId, resId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableResource", "(II)V", "GetSetFeatureDrawableResource_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableResource", "(II)V", "GetSetFeatureDrawableResource_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change, defined as a
            constant by Window.</param>
        <param name="resId">Resource identifier of the desired image.</param>
        <summary>Set the value for a drawable feature of this window, from a resource
            identifier.</summary>
        <remarks>
          <para>Set the value for a drawable feature of this window, from a resource
            identifier.  You must have called requestFeature(featureId) before
            calling this function.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFeatureDrawableResource(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setFeatureDrawableResource(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Content.Res.Resources.GetDrawable(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureDrawableUri">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureDrawableUri (Android.Views.WindowFeatures featureId, Android.Net.Uri? uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureDrawableUri(valuetype Android.Views.WindowFeatures featureId, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFeatureDrawableUri(Android.Views.WindowFeatures,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member SetFeatureDrawableUri : Android.Views.WindowFeatures * Android.Net.Uri -&gt; unit" Usage="window.SetFeatureDrawableUri (featureId, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "GetSetFeatureDrawableUri_ILandroid_net_Uri_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureDrawableUri", "(ILandroid/net/Uri;)V", "GetSetFeatureDrawableUri_ILandroid_net_Uri_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired drawable feature to change. Features are
            constants defined by Window.</param>
        <param name="uri">The desired URI.</param>
        <summary>Set the value for a drawable feature of this window, from a URI.</summary>
        <remarks>
          <para>Set the value for a drawable feature of this window, from a URI. You
            must have called requestFeature(featureId) before calling this
            function.</para>
          <para>The only URI currently supported is "content:", specifying an image
            in a content provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFeatureDrawableUri(int,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.view.Window.setFeatureDrawableUri(int, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Widget.ImageView.SetImageURI(Android.Net.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="SetFeatureInt">
      <MemberSignature Language="C#" Value="public abstract void SetFeatureInt (Android.Views.WindowFeatures featureId, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeatureInt(valuetype Android.Views.WindowFeatures featureId, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFeatureInt(Android.Views.WindowFeatures,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetFeatureInt : Android.Views.WindowFeatures * int -&gt; unit" Usage="window.SetFeatureInt (featureId, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeatureInt", "(II)V", "GetSetFeatureInt_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeatureInt", "(II)V", "GetSetFeatureInt_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="Android.Views.WindowFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="featureId">The desired feature to change. Features are constants
                             defined by Window.</param>
        <param name="value">The value for the feature. The interpretation of this
                         value is feature-specific.</param>
        <summary>Set the integer value for a feature.</summary>
        <remarks>
          <para>Set the integer value for a feature. The range of the value depends on
            the feature being set. For <c>#FEATURE_PROGRESS</c>, it should go from
            0 to 10000. At 10000 the progress is complete and the indicator hidden.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFeatureInt(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setFeatureInt(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFlags">
      <MemberSignature Language="C#" Value="public virtual void SetFlags (Android.Views.WindowManagerFlags flags, Android.Views.WindowManagerFlags mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFlags(valuetype Android.Views.WindowManagerFlags flags, valuetype Android.Views.WindowManagerFlags mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFlags(Android.Views.WindowManagerFlags,Android.Views.WindowManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetFlags : Android.Views.WindowManagerFlags * Android.Views.WindowManagerFlags -&gt; unit&#xA;override this.SetFlags : Android.Views.WindowManagerFlags * Android.Views.WindowManagerFlags -&gt; unit" Usage="window.SetFlags (flags, mask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFlags", "(II)V", "GetSetFlags_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFlags", "(II)V", "GetSetFlags_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Views.WindowManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">The new window flags (see WindowManager.LayoutParams).</param>
        <param name="mask">Which of the window flag bits to modify.</param>
        <summary>Set the flags of the window, as per the
            <c>WindowManager.LayoutParams WindowManager.LayoutParams</c>
            flags.</summary>
        <remarks>
          <para>Set the flags of the window, as per the
            <c>WindowManager.LayoutParams WindowManager.LayoutParams</c>
            flags.</para>
          <para>Note that some flags must be set before the window decoration is
            created (by the first call to
            <c>#setContentView(View, android.view.ViewGroup.LayoutParams)</c> or
            <c>#getDecorView()</c>:
            <c>WindowManager.LayoutParams#FLAG_LAYOUT_IN_SCREEN</c> and
            <c>WindowManager.LayoutParams#FLAG_LAYOUT_INSET_DECOR</c>.  These
            will be set for you based on the <c>android.R.attr#windowIsFloating</c>
            attribute.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFlags(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setFlags(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Views.Window.AddFlags(Android.Views.WindowManagerFlags)" />
        <altmember cref="M:Android.Views.Window.ClearFlags(Android.Views.WindowManagerFlags)" />
      </Docs>
    </Member>
    <Member MemberName="SetFormat">
      <MemberSignature Language="C#" Value="public virtual void SetFormat (Android.Graphics.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFormat(valuetype Android.Graphics.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetFormat(Android.Graphics.Format)" />
      <MemberSignature Language="F#" Value="abstract member SetFormat : Android.Graphics.Format -&gt; unit&#xA;override this.SetFormat : Android.Graphics.Format -&gt; unit" Usage="window.SetFormat format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFormat", "(I)V", "GetSetFormat_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFormat", "(I)V", "GetSetFormat_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">The new window format (see PixelFormat).  Use
                          PixelFormat.UNKNOWN to allow the Window to select
                          the format.</param>
        <summary>Set the format of window, as per the PixelFormat types.</summary>
        <remarks>
          <para>Set the format of window, as per the PixelFormat types.  This overrides
            the default format that is selected by the Window based on its
            window decorations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setFormat(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setFormat(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Graphics.PixelFormat" />
      </Docs>
    </Member>
    <Member MemberName="SetGravity">
      <MemberSignature Language="C#" Value="public virtual void SetGravity (Android.Views.GravityFlags gravity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGravity(valuetype Android.Views.GravityFlags gravity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetGravity(Android.Views.GravityFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetGravity : Android.Views.GravityFlags -&gt; unit&#xA;override this.SetGravity : Android.Views.GravityFlags -&gt; unit" Usage="window.SetGravity gravity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGravity", "(I)V", "GetSetGravity_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGravity", "(I)V", "GetSetGravity_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gravity" Type="Android.Views.GravityFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="gravity">The desired gravity constant.</param>
        <summary>Set the gravity of the window, as per the Gravity constants.</summary>
        <remarks>
          <para>Set the gravity of the window, as per the Gravity constants.  This
            controls how the window manager is positioned in the overall window; it
            is only useful when using WRAP_CONTENT for the layout width or height.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setGravity(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setGravity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Views.Gravity" />
        <altmember cref="M:Android.Views.Window.SetLayout(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetHideOverlayWindows">
      <MemberSignature Language="C#" Value="public void SetHideOverlayWindows (bool hide);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetHideOverlayWindows(bool hide) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetHideOverlayWindows(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetHideOverlayWindows : bool -&gt; unit" Usage="window.SetHideOverlayWindows hide" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setHideOverlayWindows", "(Z)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setHideOverlayWindows", "(Z)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.HIDE_OVERLAY_WINDOWS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.HIDE_OVERLAY_WINDOWS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hide" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hide">whether non-system overlay windows should be hidden.</param>
        <summary>Prevent non-system overlay windows from being drawn on top of this window.</summary>
        <remarks>
          <para>Prevent non-system overlay windows from being drawn on top of this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setHideOverlayWindows(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setHideOverlayWindows(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIcon">
      <MemberSignature Language="C#" Value="public virtual void SetIcon (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetIcon(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetIcon(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetIcon : int -&gt; unit&#xA;override this.SetIcon : int -&gt; unit" Usage="window.SetIcon resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setIcon", "(I)V", "GetSetIcon_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setIcon", "(I)V", "GetSetIcon_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">resource ID of a drawable to set</param>
        <summary>Set the primary icon for this window.</summary>
        <remarks>
          <para>Set the primary icon for this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setIcon(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setIcon(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLayout">
      <MemberSignature Language="C#" Value="public virtual void SetLayout (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLayout(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetLayout(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetLayout : int * int -&gt; unit&#xA;override this.SetLayout : int * int -&gt; unit" Usage="window.SetLayout (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLayout", "(II)V", "GetSetLayout_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLayout", "(II)V", "GetSetLayout_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The desired layout width of the window.</param>
        <param name="height">The desired layout height of the window.</param>
        <summary>Set the width and height layout parameters of the window.</summary>
        <remarks>
          <para>Set the width and height layout parameters of the window.  The default
            for both of these is MATCH_PARENT; you can change them to WRAP_CONTENT
            or an absolute value to make a window that is not full-screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setLayout(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setLayout(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLocalFocus">
      <MemberSignature Language="C#" Value="public virtual void SetLocalFocus (bool hasFocus, bool inTouchMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocalFocus(bool hasFocus, bool inTouchMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetLocalFocus(System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetLocalFocus : bool * bool -&gt; unit&#xA;override this.SetLocalFocus : bool * bool -&gt; unit" Usage="window.SetLocalFocus (hasFocus, inTouchMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLocalFocus", "(ZZ)V", "GetSetLocalFocus_ZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLocalFocus", "(ZZ)V", "GetSetLocalFocus_ZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasFocus" Type="System.Boolean" />
        <Parameter Name="inTouchMode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasFocus">Whether this window has focus or not.</param>
        <param name="inTouchMode">Whether this window is in touch mode or not.</param>
        <summary>Set focus locally.</summary>
        <remarks>
          <para>Set focus locally. The window should have the
            <c>WindowManager.LayoutParams#FLAG_LOCAL_FOCUS_MODE</c> flag set already.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setLocalFocus(boolean,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setLocalFocus(boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLogo">
      <MemberSignature Language="C#" Value="public virtual void SetLogo (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogo(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetLogo(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetLogo : int -&gt; unit&#xA;override this.SetLogo : int -&gt; unit" Usage="window.SetLogo resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLogo", "(I)V", "GetSetLogo_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLogo", "(I)V", "GetSetLogo_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">resource ID of a drawable to set</param>
        <summary>Set the logo for this window.</summary>
        <remarks>
          <para>Set the logo for this window. A logo is often shown in place of an
            <c>#setIcon(int) icon</c> but is generally wider and communicates window title information
            as well.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setLogo(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setLogo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNavigationBarColor">
      <MemberSignature Language="C#" Value="public abstract void SetNavigationBarColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNavigationBarColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetNavigationBarColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetNavigationBarColor : Android.Graphics.Color -&gt; unit" Usage="window.SetNavigationBarColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNavigationBarColor", "(I)V", "GetSetNavigationBarColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNavigationBarColor", "(I)V", "GetSetNavigationBarColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the color of the navigation bar to <paramref>color</paramref>.</summary>
        <remarks>
          <para>Sets the color of the navigation bar to <paramref>color</paramref>.
            
            For this to take effect,
            the window must be drawing the system bar backgrounds with
            <c>android.view.WindowManager.LayoutParams#FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS</c> and
            <c>android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_NAVIGATION</c> must not be set.
            
            If <paramref>color</paramref> is not opaque, consider setting
            <c>android.view.View#SYSTEM_UI_FLAG_LAYOUT_STABLE</c> and
            <c>android.view.View#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION</c>.</para>
          <para>The transitionName for the view background will be "android:navigation:background".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setNavigationBarColor(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setNavigationBarColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferMinimalPostProcessing">
      <MemberSignature Language="C#" Value="public virtual void SetPreferMinimalPostProcessing (bool isPreferred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPreferMinimalPostProcessing(bool isPreferred) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetPreferMinimalPostProcessing(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferMinimalPostProcessing : bool -&gt; unit&#xA;override this.SetPreferMinimalPostProcessing : bool -&gt; unit" Usage="window.SetPreferMinimalPostProcessing isPreferred" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferMinimalPostProcessing", "(Z)V", "GetSetPreferMinimalPostProcessing_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferMinimalPostProcessing", "(Z)V", "GetSetPreferMinimalPostProcessing_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isPreferred" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isPreferred">Indicates whether minimal post processing is preferred for this window
                               (<c>isPreferred=true</c>) or not (<c>isPreferred=false</c>).</param>
        <summary>If <c>isPreferred</c> is true, this method requests that the connected display does minimal
            post processing when this window is visible on the screen.</summary>
        <remarks>
          <para>If <c>isPreferred</c> is true, this method requests that the connected display does minimal
            post processing when this window is visible on the screen. Otherwise, it requests that the
            display switches back to standard image processing.</para>
          <para>By default, the display does not do minimal post processing and if this is desired, this
            method should not be used. It should be used with <c>isPreferred=true</c> when low
            latency has a higher priority than image enhancement processing (e.g. for games or video
            conferencing). The display will automatically go back into standard image processing mode
            when no window requesting minimal posst processing is visible on screen anymore.
            <c>setPreferMinimalPostProcessing(false)</c> can be used if
            <c>setPreferMinimalPostProcessing(true)</c> was previously called for this window and
            minimal post processing is no longer required.</para>
          <para>If the Display sink is connected via HDMI, the device will begin to send infoframes with
            Auto Low Latency Mode enabled and Game Content Type. This will switch the connected display
            to a minimal image processing mode (if available), which reduces latency, improving the user
            experience for gaming or video conferencing applications. For more information, see HDMI 2.1
            specification.</para>
          <para>If the Display sink has an internal connection or uses some other protocol than HDMI,
            effects may be similar but implementation-defined.</para>
          <para>The ability to switch to a mode with minimal post proessing may be disabled by a user
            setting in the system settings menu. In that case, this method does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setPreferMinimalPostProcessing(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setPreferMinimalPostProcessing(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResizingCaptionDrawable">
      <MemberSignature Language="C#" Value="public abstract void SetResizingCaptionDrawable (Android.Graphics.Drawables.Drawable? drawable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetResizingCaptionDrawable(class Android.Graphics.Drawables.Drawable drawable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetResizingCaptionDrawable(Android.Graphics.Drawables.Drawable)" />
      <MemberSignature Language="F#" Value="abstract member SetResizingCaptionDrawable : Android.Graphics.Drawables.Drawable -&gt; unit" Usage="window.SetResizingCaptionDrawable drawable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setResizingCaptionDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetResizingCaptionDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setResizingCaptionDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetResizingCaptionDrawable_Landroid_graphics_drawable_Drawable_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
      </Parameters>
      <Docs>
        <param name="drawable">To be added.</param>
        <summary>Set the drawable that is drawn underneath the caption during the resizing.</summary>
        <remarks>
          <para>Set the drawable that is drawn underneath the caption during the resizing.</para>
          <para>During the resizing the caption might not be drawn fast enough to match the new dimensions.
            There is a second caption drawn underneath it that will be fast enough. By default the
            caption is constructed from the theme. You can provide a drawable, that will be drawn instead
            to better match your application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setResizingCaptionDrawable(android.graphics.drawable.Drawable)" title="Reference documentation">Java documentation for <code>android.view.Window.setResizingCaptionDrawable(android.graphics.drawable.Drawable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRestrictedCaptionAreaListener">
      <MemberSignature Language="C#" Value="public void SetRestrictedCaptionAreaListener (Android.Views.Window.IOnRestrictedCaptionAreaChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRestrictedCaptionAreaListener(class Android.Views.Window/IOnRestrictedCaptionAreaChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetRestrictedCaptionAreaListener(Android.Views.Window.IOnRestrictedCaptionAreaChangedListener)" />
      <MemberSignature Language="F#" Value="member this.SetRestrictedCaptionAreaListener : Android.Views.Window.IOnRestrictedCaptionAreaChangedListener -&gt; unit" Usage="window.SetRestrictedCaptionAreaListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRestrictedCaptionAreaListener", "(Landroid/view/Window$OnRestrictedCaptionAreaChangedListener;)V", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRestrictedCaptionAreaListener", "(Landroid/view/Window$OnRestrictedCaptionAreaChangedListener;)V", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Views.Window+IOnRestrictedCaptionAreaChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">Callback that will be called when the area changes.</param>
        <summary>Set a callback for changes of area where caption will draw its content.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setRestrictedCaptionAreaListener(android.view.OnRestrictedCaptionAreaChangedListener)" title="Reference documentation">Java documentation for <code>android.view.Window.setRestrictedCaptionAreaListener(android.view.OnRestrictedCaptionAreaChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSoftInputMode">
      <MemberSignature Language="C#" Value="public virtual void SetSoftInputMode (Android.Views.SoftInput mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSoftInputMode(valuetype Android.Views.SoftInput mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetSoftInputMode(Android.Views.SoftInput)" />
      <MemberSignature Language="F#" Value="abstract member SetSoftInputMode : Android.Views.SoftInput -&gt; unit&#xA;override this.SetSoftInputMode : Android.Views.SoftInput -&gt; unit" Usage="window.SetSoftInputMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSoftInputMode", "(I)V", "GetSetSoftInputMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSoftInputMode", "(I)V", "GetSetSoftInputMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Views.SoftInput">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>Specify an explicit soft input mode to use for the window, as per
            <c>WindowManager.LayoutParams#softInputMode
            WindowManager.LayoutParams.softInputMode</c>.</summary>
        <remarks>
          <para>Specify an explicit soft input mode to use for the window, as per
            <c>WindowManager.LayoutParams#softInputMode
            WindowManager.LayoutParams.softInputMode</c>.  Providing anything besides
            "unspecified" here will override the input mode the window would
            normally retrieve from its theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSoftInputMode(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setSoftInputMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetStatusBarColor">
      <MemberSignature Language="C#" Value="public abstract void SetStatusBarColor (Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStatusBarColor(valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetStatusBarColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetStatusBarColor : Android.Graphics.Color -&gt; unit" Usage="window.SetStatusBarColor color" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStatusBarColor", "(I)V", "GetSetStatusBarColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStatusBarColor", "(I)V", "GetSetStatusBarColor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="color">To be added.</param>
        <summary>Sets the color of the status bar to <c>color</c>.</summary>
        <remarks>
          <para>Sets the color of the status bar to <c>color</c>.
            
            For this to take effect,
            the window must be drawing the system bar backgrounds with
            <c>android.view.WindowManager.LayoutParams#FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS</c> and
            <c>android.view.WindowManager.LayoutParams#FLAG_TRANSLUCENT_STATUS</c> must not be set.
            
            If <c>color</c> is not opaque, consider setting
            <c>android.view.View#SYSTEM_UI_FLAG_LAYOUT_STABLE</c> and
            <c>android.view.View#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN</c>.</para>
          <para>The transitionName for the view background will be "android:status:background".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setStatusBarColor(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setStatusBarColor(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSustainedPerformanceMode">
      <MemberSignature Language="C#" Value="public virtual void SetSustainedPerformanceMode (bool enable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSustainedPerformanceMode(bool enable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetSustainedPerformanceMode(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSustainedPerformanceMode : bool -&gt; unit&#xA;override this.SetSustainedPerformanceMode : bool -&gt; unit" Usage="window.SetSustainedPerformanceMode enable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSustainedPerformanceMode", "(Z)V", "GetSetSustainedPerformanceMode_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSustainedPerformanceMode", "(Z)V", "GetSetSustainedPerformanceMode_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enable">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public abstract void SetTitle (Java.Lang.ICharSequence? title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitle(class Java.Lang.ICharSequence title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetTitle(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetTitle : Java.Lang.ICharSequence -&gt; unit" Usage="window.SetTitle title" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetTitle">
      <MemberSignature Language="C#" Value="public void SetTitle (string? title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetTitle(string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetTitle(System.String)" />
      <MemberSignature Language="F#" Value="member this.SetTitle : string -&gt; unit" Usage="window.SetTitle title" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="title">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTitleColor">
      <MemberSignature Language="C#" Value="public abstract void SetTitleColor (Android.Graphics.Color textColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTitleColor(valuetype Android.Graphics.Color textColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetTitleColor(Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetTitleColor : Android.Graphics.Color -&gt; unit" Usage="window.SetTitleColor textColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTitleColor", "(I)V", "GetSetTitleColor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTitleColor", "(I)V", "GetSetTitleColor_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textColor" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="textColor">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetType">
      <MemberSignature Language="C#" Value="public virtual void SetType (Android.Views.WindowManagerTypes type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetType(valuetype Android.Views.WindowManagerTypes type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetType(Android.Views.WindowManagerTypes)" />
      <MemberSignature Language="F#" Value="abstract member SetType : Android.Views.WindowManagerTypes -&gt; unit&#xA;override this.SetType : Android.Views.WindowManagerTypes -&gt; unit" Usage="window.SetType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setType", "(I)V", "GetSetType_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setType", "(I)V", "GetSetType_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Android.Views.WindowManagerTypes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">The new window type (see WindowManager.LayoutParams).</param>
        <summary>Set the type of the window, as per the WindowManager.</summary>
        <remarks>
          <para>Set the type of the window, as per the WindowManager.LayoutParams
            types.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setType(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetUiOptions">
      <MemberSignature Language="C#" Value="public virtual void SetUiOptions (Android.Content.PM.UiOptions uiOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUiOptions(valuetype Android.Content.PM.UiOptions uiOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetUiOptions(Android.Content.PM.UiOptions)" />
      <MemberSignature Language="F#" Value="abstract member SetUiOptions : Android.Content.PM.UiOptions -&gt; unit&#xA;override this.SetUiOptions : Android.Content.PM.UiOptions -&gt; unit" Usage="window.SetUiOptions uiOptions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUiOptions", "(I)V", "GetSetUiOptions_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUiOptions", "(I)V", "GetSetUiOptions_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uiOptions" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uiOptions">Flags specifying extra options for this window.</param>
        <summary>Set extra options that will influence the UI for this window.</summary>
        <remarks>
          <para>Set extra options that will influence the UI for this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setUiOptions(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setUiOptions(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUiOptions">
      <MemberSignature Language="C#" Value="public virtual void SetUiOptions (Android.Content.PM.UiOptions uiOptions, Android.Content.PM.UiOptions mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUiOptions(valuetype Android.Content.PM.UiOptions uiOptions, valuetype Android.Content.PM.UiOptions mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetUiOptions(Android.Content.PM.UiOptions,Android.Content.PM.UiOptions)" />
      <MemberSignature Language="F#" Value="abstract member SetUiOptions : Android.Content.PM.UiOptions * Android.Content.PM.UiOptions -&gt; unit&#xA;override this.SetUiOptions : Android.Content.PM.UiOptions * Android.Content.PM.UiOptions -&gt; unit" Usage="window.SetUiOptions (uiOptions, mask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUiOptions", "(II)V", "GetSetUiOptions_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUiOptions", "(II)V", "GetSetUiOptions_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uiOptions" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Content.PM.UiOptions">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="uiOptions">Flags specifying extra options for this window.</param>
        <param name="mask">Flags specifying which options should be modified. Others will remain unchanged.</param>
        <summary>Set extra options that will influence the UI for this window.</summary>
        <remarks>
          <para>Set extra options that will influence the UI for this window.
            Only the bits filtered by mask will be modified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setUiOptions(int,%20int)" title="Reference documentation">Java documentation for <code>android.view.Window.setUiOptions(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowAnimations">
      <MemberSignature Language="C#" Value="public virtual void SetWindowAnimations (int resId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowAnimations(int32 resId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetWindowAnimations(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetWindowAnimations : int -&gt; unit&#xA;override this.SetWindowAnimations : int -&gt; unit" Usage="window.SetWindowAnimations resId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWindowAnimations", "(I)V", "GetSetWindowAnimations_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWindowAnimations", "(I)V", "GetSetWindowAnimations_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="resId">To be added.</param>
        <summary>Specify custom animations to use for the window, as per
            <c>WindowManager.LayoutParams#windowAnimations
            WindowManager.LayoutParams.windowAnimations</c>.</summary>
        <remarks>
          <para>Specify custom animations to use for the window, as per
            <c>WindowManager.LayoutParams#windowAnimations
            WindowManager.LayoutParams.windowAnimations</c>.  Providing anything besides
            0 here will override the animations the window would
            normally retrieve from its theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setWindowAnimations(int)" title="Reference documentation">Java documentation for <code>android.view.Window.setWindowAnimations(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowManager">
      <MemberSignature Language="C#" Value="public virtual void SetWindowManager (Android.Views.IWindowManager? wm, Android.OS.IBinder? appToken, string? appName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowManager(class Android.Views.IWindowManager wm, class Android.OS.IBinder appToken, string appName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetWindowManager(Android.Views.IWindowManager,Android.OS.IBinder,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetWindowManager : Android.Views.IWindowManager * Android.OS.IBinder * string -&gt; unit&#xA;override this.SetWindowManager : Android.Views.IWindowManager * Android.OS.IBinder * string -&gt; unit" Usage="window.SetWindowManager (wm, appToken, appName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wm" Type="Android.Views.IWindowManager" />
        <Parameter Name="appToken" Type="Android.OS.IBinder" />
        <Parameter Name="appName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appToken">To be added.</param>
        <param name="appName">To be added.</param>
        <param name="wm">The window manager for adding new windows.</param>
        <summary>Set the window manager for use by this Window to, for example,
            display panels.</summary>
        <remarks>
          <para>Set the window manager for use by this Window to, for example,
            display panels.  This is &lt;em&gt;not&lt;/em&gt; used for displaying the
            Window itself -- that must be done by the client.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setWindowManager(android.view.WindowManager,%20android.os.IBinder,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.view.Window.setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowManager">
      <MemberSignature Language="C#" Value="public virtual void SetWindowManager (Android.Views.IWindowManager? wm, Android.OS.IBinder? appToken, string? appName, bool hardwareAccelerated);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWindowManager(class Android.Views.IWindowManager wm, class Android.OS.IBinder appToken, string appName, bool hardwareAccelerated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SetWindowManager(Android.Views.IWindowManager,Android.OS.IBinder,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetWindowManager : Android.Views.IWindowManager * Android.OS.IBinder * string * bool -&gt; unit&#xA;override this.SetWindowManager : Android.Views.IWindowManager * Android.OS.IBinder * string * bool -&gt; unit" Usage="window.SetWindowManager (wm, appToken, appName, hardwareAccelerated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;Z)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWindowManager", "(Landroid/view/WindowManager;Landroid/os/IBinder;Ljava/lang/String;Z)V", "GetSetWindowManager_Landroid_view_WindowManager_Landroid_os_IBinder_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wm" Type="Android.Views.IWindowManager" />
        <Parameter Name="appToken" Type="Android.OS.IBinder" />
        <Parameter Name="appName" Type="System.String" />
        <Parameter Name="hardwareAccelerated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="appToken">To be added.</param>
        <param name="appName">To be added.</param>
        <param name="hardwareAccelerated">To be added.</param>
        <param name="wm">The window manager for adding new windows.</param>
        <summary>Set the window manager for use by this Window to, for example,
            display panels.</summary>
        <remarks>
          <para>Set the window manager for use by this Window to, for example,
            display panels.  This is &lt;em&gt;not&lt;/em&gt; used for displaying the
            Window itself -- that must be done by the client.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setWindowManager(android.view.WindowManager,%20android.os.IBinder,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setWindowManager(android.view.WindowManager, android.os.IBinder, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SharedElementEnterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? SharedElementEnterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementEnterTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SharedElementEnterTransition" />
      <MemberSignature Language="F#" Value="member this.SharedElementEnterTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.SharedElementEnterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSharedElementEnterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementEnterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSharedElementEnterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementEnterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSharedElementEnterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementEnterTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSharedElementEnterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementEnterTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use for shared elements transferred into the content
                              Scene.</param>
        <summary>Returns the Transition that will be used for shared elements transferred into the content
            Scene. -or- Sets the Transition that will be used for shared elements transferred into the content
            Scene.</summary>
        <value>Transition to use for sharend elements transferred into the content Scene.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used for shared elements transferred into the content
            Scene. Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSharedElementEnterTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getSharedElementEnterTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used for shared elements transferred into the content
            Scene. Typical Transitions will affect size and location, such as
            <c>android.transition.ChangeBounds</c>. A null
            value will cause transferred shared elements to blink to the final position.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSharedElementEnterTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setSharedElementEnterTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementExitTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? SharedElementExitTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementExitTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SharedElementExitTransition" />
      <MemberSignature Language="F#" Value="member this.SharedElementExitTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.SharedElementExitTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSharedElementExitTransition", "()Landroid/transition/Transition;", "GetGetSharedElementExitTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSharedElementExitTransition", "()Landroid/transition/Transition;", "GetGetSharedElementExitTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSharedElementExitTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementExitTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSharedElementExitTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementExitTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use for shared elements in the launching Window
                              prior to transferring to the launched Activity's Window.</param>
        <summary>Returns the Transition to use for shared elements in the launching Window prior
            to transferring to the launched Activity's Window. -or- Sets the Transition that will be used for shared elements after starting a new Activity
            before the shared elements are transferred to the called Activity.</summary>
        <value>the Transition to use for shared elements in the launching Window prior
            to transferring to the launched Activity's Window.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition to use for shared elements in the launching Window prior
            to transferring to the launched Activity's Window.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSharedElementExitTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getSharedElementExitTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used for shared elements after starting a new Activity
            before the shared elements are transferred to the called Activity. If the shared elements
            must animate during the exit transition, this Transition should be used. Upon completion,
            the shared elements may be transferred to the started Activity.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSharedElementExitTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setSharedElementExitTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementReenterTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? SharedElementReenterTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementReenterTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SharedElementReenterTransition" />
      <MemberSignature Language="F#" Value="member this.SharedElementReenterTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.SharedElementReenterTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSharedElementReenterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReenterTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSharedElementReenterTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReenterTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSharedElementReenterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReenterTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSharedElementReenterTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReenterTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use for shared elements in the launching Window
                              after the shared element has returned to the Window.</param>
        <summary>Returns the Transition that will be used for shared elements reentering from a started
            Activity after it has returned the shared element to it start location. -or- Sets the Transition that will be used for shared elements reentering from a started
            Activity after it has returned the shared element to it start location.</summary>
        <value>the Transition that will be used for shared elements reentering from a started
            Activity after it has returned the shared element to it start location.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used for shared elements reentering from a started
            Activity after it has returned the shared element to it start location.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSharedElementReenterTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getSharedElementReenterTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used for shared elements reentering from a started
            Activity after it has returned the shared element to it start location. If no value
            is set, this will default to
            <c>#setSharedElementExitTransition(android.transition.Transition)</c>.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSharedElementReenterTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setSharedElementReenterTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementReturnTransition">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.Transition? SharedElementReturnTransition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.Transition SharedElementReturnTransition" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SharedElementReturnTransition" />
      <MemberSignature Language="F#" Value="member this.SharedElementReturnTransition : Android.Transitions.Transition with get, set" Usage="Android.Views.Window.SharedElementReturnTransition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSharedElementReturnTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReturnTransitionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSharedElementReturnTransition", "()Landroid/transition/Transition;", "GetGetSharedElementReturnTransitionHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSharedElementReturnTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReturnTransition_Landroid_transition_Transition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSharedElementReturnTransition", "(Landroid/transition/Transition;)V", "GetSetSharedElementReturnTransition_Landroid_transition_Transition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.Transition</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="transition">The Transition to use for shared elements transferred out of the content
                              Scene.</param>
        <summary>Returns the Transition that will be used for shared elements transferred back to a
            calling Activity. -or- Sets the Transition that will be used for shared elements transferred back to a
            calling Activity.</summary>
        <value>Transition to use for sharend elements transferred into the content Scene.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the Transition that will be used for shared elements transferred back to a
            calling Activity. Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSharedElementReturnTransition()" title="Reference documentation">Java documentation for <code>android.view.Window.getSharedElementReturnTransition()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the Transition that will be used for shared elements transferred back to a
            calling Activity. Typical Transitions will affect size and location, such as
            <c>android.transition.ChangeBounds</c>. A null
            value will cause transferred shared elements to blink to the final position.
            If no value is set, the default will be to use the same value as
            <c>#setSharedElementEnterTransition(android.transition.Transition)</c>.
            Requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSharedElementReturnTransition(android.transition.Transition)" title="Reference documentation">Java documentation for <code>android.view.Window.setSharedElementReturnTransition(android.transition.Transition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SharedElementsUseOverlay">
      <MemberSignature Language="C#" Value="public virtual bool SharedElementsUseOverlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SharedElementsUseOverlay" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SharedElementsUseOverlay" />
      <MemberSignature Language="F#" Value="member this.SharedElementsUseOverlay : bool with get, set" Usage="Android.Views.Window.SharedElementsUseOverlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSharedElementsUseOverlay", "()Z", "GetGetSharedElementsUseOverlayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSharedElementsUseOverlay", "()Z", "GetGetSharedElementsUseOverlayHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSharedElementsUseOverlay", "(Z)V", "GetSetSharedElementsUseOverlay_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSharedElementsUseOverlay", "(Z)V", "GetSetSharedElementsUseOverlay_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="sharedElementsUseOverlay">
          <c>true</c> indicates that shared elements should
                                            be transitioned with an Overlay or <c>false</c>
                                            to transition within the normal View hierarchy.</param>
        <summary>Returns <c>true</c> when shared elements should use an Overlay during
            shared element transitions or <c>false</c> when they should animate as
            part of the normal View hierarchy. -or- Sets whether or not shared elements should use an Overlay during shared element transitions.</summary>
        <value>
          <c>true</c> when shared elements should use an Overlay during
            shared element transitions or <c>false</c> when they should animate as
            part of the normal View hierarchy.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns <c>true</c> when shared elements should use an Overlay during
            shared element transitions or <c>false</c> when they should animate as
            part of the normal View hierarchy. The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSharedElementsUseOverlay()" title="Reference documentation">Java documentation for <code>android.view.Window.getSharedElementsUseOverlay()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether or not shared elements should use an Overlay during shared element transitions.
            The default value is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSharedElementsUseOverlay(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setSharedElementsUseOverlay(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBarBackgroundTransitionName">
      <MemberSignature Language="C#" Value="public const string StatusBarBackgroundTransitionName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string StatusBarBackgroundTransitionName" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Window.StatusBarBackgroundTransitionName" />
      <MemberSignature Language="F#" Value="val mutable StatusBarBackgroundTransitionName : string" Usage="Android.Views.Window.StatusBarBackgroundTransitionName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STATUS_BAR_BACKGROUND_TRANSITION_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STATUS_BAR_BACKGROUND_TRANSITION_NAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The transitionName for the status bar background View when a custom background is used.</summary>
        <remarks>
          <para>The transitionName for the status bar background View when a custom background is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#STATUS_BAR_BACKGROUND_TRANSITION_NAME" title="Reference documentation">Java documentation for <code>android.view.Window.STATUS_BAR_BACKGROUND_TRANSITION_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.Window.SetStatusBarColor(Android.Graphics.Color)" />
      </Docs>
    </Member>
    <Member MemberName="StatusBarColor">
      <MemberSignature Language="C#" Value="public abstract int StatusBarColor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StatusBarColor" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.StatusBarColor" />
      <MemberSignature Language="F#" Value="member this.StatusBarColor : int" Usage="Android.Views.Window.StatusBarColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStatusBarColor", "()I", "GetGetStatusBarColorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStatusBarColor", "()I", "GetGetStatusBarColorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBarContrastEnforced">
      <MemberSignature Language="C#" Value="public virtual bool StatusBarContrastEnforced { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StatusBarContrastEnforced" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.StatusBarContrastEnforced" />
      <MemberSignature Language="F#" Value="member this.StatusBarContrastEnforced : bool with get, set" Usage="Android.Views.Window.StatusBarContrastEnforced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStatusBarContrastEnforced", "()Z", "GetIsStatusBarContrastEnforcedHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStatusBarContrastEnforced", "()Z", "GetIsStatusBarContrastEnforcedHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStatusBarContrastEnforced", "(Z)V", "GetSetStatusBarContrastEnforced_ZHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStatusBarContrastEnforced", "(Z)V", "GetSetStatusBarContrastEnforced_ZHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the system is ensuring that the status bar has enough contrast when a
            fully transparent background is requested. -or- Sets whether the system should ensure that the status bar has enough
            contrast when a fully transparent background is requested.</summary>
        <value>true, if the system is ensuring contrast, false otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether the system is ensuring that the status bar has enough contrast when a
            fully transparent background is requested.</para>
          <para>When the status bar color has a non-zero alpha value, the value of this
            property has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#isStatusBarContrastEnforced()" title="Reference documentation">Java documentation for <code>android.view.Window.isStatusBarContrastEnforced()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether the system should ensure that the status bar has enough
            contrast when a fully transparent background is requested.</para>
          <para>If set to this value, the system will determine whether a scrim is necessary
            to ensure that the status bar has enough contrast with the contents of
            this app, and set an appropriate effective bar background color accordingly.</para>
          <para>When the status bar color has a non-zero alpha value, the value of this
            property has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setStatusBarContrastEnforced(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.setStatusBarContrastEnforced(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchGenericMotionEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchGenericMotionEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchGenericMotionEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SuperDispatchGenericMotionEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member SuperDispatchGenericMotionEvent : Android.Views.MotionEvent -&gt; bool" Usage="window.SuperDispatchGenericMotionEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("superDispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("superDispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchGenericMotionEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the generic motion event
            further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Used by custom windows, such as Dialog, to pass the generic motion event
            further down the view hierarchy. Application developers should
            not need to implement or call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#superDispatchGenericMotionEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.superDispatchGenericMotionEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchKeyEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchKeyEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchKeyEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SuperDispatchKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member SuperDispatchKeyEvent : Android.Views.KeyEvent -&gt; bool" Usage="window.SuperDispatchKeyEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("superDispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("superDispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the key press event
            further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Used by custom windows, such as Dialog, to pass the key press event
            further down the view hierarchy. Application developers should
            not need to implement or call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#superDispatchKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.superDispatchKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchKeyShortcutEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchKeyShortcutEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchKeyShortcutEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SuperDispatchKeyShortcutEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member SuperDispatchKeyShortcutEvent : Android.Views.KeyEvent -&gt; bool" Usage="window.SuperDispatchKeyShortcutEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("superDispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("superDispatchKeyShortcutEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyShortcutEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the key shortcut press event
            further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Used by custom windows, such as Dialog, to pass the key shortcut press event
            further down the view hierarchy. Application developers should
            not need to implement or call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#superDispatchKeyShortcutEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.superDispatchKeyShortcutEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchTouchEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SuperDispatchTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member SuperDispatchTouchEvent : Android.Views.MotionEvent -&gt; bool" Usage="window.SuperDispatchTouchEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("superDispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("superDispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the touch screen event
            further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Used by custom windows, such as Dialog, to pass the touch screen event
            further down the view hierarchy. Application developers should
            not need to implement or call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#superDispatchTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.superDispatchTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SuperDispatchTrackballEvent">
      <MemberSignature Language="C#" Value="public abstract bool SuperDispatchTrackballEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SuperDispatchTrackballEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.SuperDispatchTrackballEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="F#" Value="abstract member SuperDispatchTrackballEvent : Android.Views.MotionEvent -&gt; bool" Usage="window.SuperDispatchTrackballEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("superDispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("superDispatchTrackballEvent", "(Landroid/view/MotionEvent;)Z", "GetSuperDispatchTrackballEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Used by custom windows, such as Dialog, to pass the trackball event
            further down the view hierarchy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Used by custom windows, such as Dialog, to pass the trackball event
            further down the view hierarchy. Application developers should
            not need to implement or call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#superDispatchTrackballEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.view.Window.superDispatchTrackballEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SystemGestureExclusionRects">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; SystemGestureExclusionRects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Graphics.Rect&gt; SystemGestureExclusionRects" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.SystemGestureExclusionRects" />
      <MemberSignature Language="F#" Value="member this.SystemGestureExclusionRects : System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt; with get, set" Usage="Android.Views.Window.SystemGestureExclusionRects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemGestureExclusionRects", "()Ljava/util/List;", "GetGetSystemGestureExclusionRectsHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemGestureExclusionRects", "()Ljava/util/List;", "GetGetSystemGestureExclusionRectsHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSystemGestureExclusionRects", "(Ljava/util/List;)V", "GetSetSystemGestureExclusionRects_Ljava_util_List_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSystemGestureExclusionRects", "(Ljava/util/List;)V", "GetSetSystemGestureExclusionRects_Ljava_util_List_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Graphics.Rect&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="rects">A list of precision gesture regions that this window needs to function correctly</param>
        <summary>Retrieve the list of areas within this window's coordinate space where the system should not
            intercept touch or other pointing device gestures. -or- Sets a list of areas within this window's coordinate space where the system should not
            intercept touch or other pointing device gestures.</summary>
        <value>a list of system gesture exclusion rects specific to this window</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the list of areas within this window's coordinate space where the system should not
            intercept touch or other pointing device gestures. This is the list as set by
            <c>#setSystemGestureExclusionRects(List)</c> or an empty list if
            <c>#setSystemGestureExclusionRects(List)</c> has not been called. It does not include
            exclusion rects set by this window's view hierarchy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getSystemGestureExclusionRects()" title="Reference documentation">Java documentation for <code>android.view.Window.getSystemGestureExclusionRects()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a list of areas within this window's coordinate space where the system should not
            intercept touch or other pointing device gestures.</para>
          <para>This method should be used by apps that make use of
            <c>#takeSurface(SurfaceHolder.Callback2)</c> and do not have a view hierarchy available.
            Apps that do have a view hierarchy should use
            <c>View#setSystemGestureExclusionRects(List)</c> instead. This method does not modify or
            replace the gesture exclusion rects populated by individual views in this window's view
            hierarchy using <c>View#setSystemGestureExclusionRects(List)</c>.</para>
          <para>Use this to tell the system which specific sub-areas of a view need to receive gesture
            input in order to function correctly in the presence of global system gestures that may
            conflict. For example, if the system wishes to capture swipe-in-from-screen-edge gestures
            to provide system-level navigation functionality, a view such as a navigation drawer
            container can mark the left (or starting) edge of itself as requiring gesture capture
            priority using this API. The system may then choose to relax its own gesture recognition
            to allow the app to consume the user's gesture. It is not necessary for an app to register
            exclusion rects for broadly spanning regions such as the entirety of a
            <c>ScrollView</c> or for simple press and release click targets such as
            <c>Button</c>. Mark an exclusion rect when interacting with a view requires
            a precision touch gesture in a small area in either the X or Y dimension, such as
            an edge swipe or dragging a <c>SeekBar</c> thumb.</para>
          <para>Do not modify the provided list after this method is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setSystemGestureExclusionRects(java.util.List%3Candroid.graphics.Rect%3E)" title="Reference documentation">Java documentation for <code>android.view.Window.setSystemGestureExclusionRects(java.util.List&lt;android.graphics.Rect&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TakeInputQueue">
      <MemberSignature Language="C#" Value="public abstract void TakeInputQueue (Android.Views.InputQueue.ICallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeInputQueue(class Android.Views.InputQueue/ICallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.TakeInputQueue(Android.Views.InputQueue.ICallback)" />
      <MemberSignature Language="F#" Value="abstract member TakeInputQueue : Android.Views.InputQueue.ICallback -&gt; unit" Usage="window.TakeInputQueue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeInputQueue", "(Landroid/view/InputQueue$Callback;)V", "GetTakeInputQueue_Landroid_view_InputQueue_Callback_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeInputQueue", "(Landroid/view/InputQueue$Callback;)V", "GetTakeInputQueue_Landroid_view_InputQueue_Callback_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.InputQueue+ICallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Take ownership of this window's InputQueue.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#takeInputQueue(android.view.Callback)" title="Reference documentation">Java documentation for <code>android.view.Window.takeInputQueue(android.view.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="TakeKeyEvents">
      <MemberSignature Language="C#" Value="public abstract void TakeKeyEvents (bool get);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeKeyEvents(bool get) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.TakeKeyEvents(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member TakeKeyEvents : bool -&gt; unit" Usage="window.TakeKeyEvents get" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeKeyEvents", "(Z)V", "GetTakeKeyEvents_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeKeyEvents", "(Z)V", "GetTakeKeyEvents_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="get" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="get">To be added.</param>
        <summary>Request that key events come to this activity.</summary>
        <remarks>
          <para>Request that key events come to this activity. Use this if your
            activity has no views with focus, but the activity still wants
            a chance to process key events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#takeKeyEvents(boolean)" title="Reference documentation">Java documentation for <code>android.view.Window.takeKeyEvents(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TakeSurface">
      <MemberSignature Language="C#" Value="public abstract void TakeSurface (Android.Views.ISurfaceHolderCallback2? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TakeSurface(class Android.Views.ISurfaceHolderCallback2 callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.TakeSurface(Android.Views.ISurfaceHolderCallback2)" />
      <MemberSignature Language="F#" Value="abstract member TakeSurface : Android.Views.ISurfaceHolderCallback2 -&gt; unit" Usage="window.TakeSurface callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("takeSurface", "(Landroid/view/SurfaceHolder$Callback2;)V", "GetTakeSurface_Landroid_view_SurfaceHolder_Callback2_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("takeSurface", "(Landroid/view/SurfaceHolder$Callback2;)V", "GetTakeSurface_Landroid_view_SurfaceHolder_Callback2_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.ISurfaceHolderCallback2" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Take ownership of this window's surface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#takeSurface(android.view.Callback2)" title="Reference documentation">Java documentation for <code>android.view.Window.takeSurface(android.view.Callback2)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.Window.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.Window.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TogglePanel">
      <MemberSignature Language="C#" Value="public abstract void TogglePanel (int featureId, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TogglePanel(int32 featureId, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.TogglePanel(System.Int32,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member TogglePanel : int * Android.Views.KeyEvent -&gt; unit" Usage="window.TogglePanel (featureId, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("togglePanel", "(ILandroid/view/KeyEvent;)V", "GetTogglePanel_ILandroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("togglePanel", "(ILandroid/view/KeyEvent;)V", "GetTogglePanel_ILandroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="featureId" Type="System.Int32" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="featureId">To be added.</param>
        <param name="e">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TransitionBackgroundFadeDuration">
      <MemberSignature Language="C#" Value="public virtual long TransitionBackgroundFadeDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TransitionBackgroundFadeDuration" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.TransitionBackgroundFadeDuration" />
      <MemberSignature Language="F#" Value="member this.TransitionBackgroundFadeDuration : int64 with get, set" Usage="Android.Views.Window.TransitionBackgroundFadeDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransitionBackgroundFadeDuration", "()J", "GetGetTransitionBackgroundFadeDurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransitionBackgroundFadeDuration", "()J", "GetGetTransitionBackgroundFadeDurationHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTransitionBackgroundFadeDuration", "(J)V", "GetSetTransitionBackgroundFadeDuration_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTransitionBackgroundFadeDuration", "(J)V", "GetSetTransitionBackgroundFadeDuration_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="fadeDurationMillis">The duration of the window background fade to or from opaque
                                      during enter transition.</param>
        <summary>Returns the duration, in milliseconds, of the window background fade
            when transitioning into or away from an Activity when called with an Activity Transition. -or- Sets the duration, in milliseconds, of the window background fade
            when transitioning into or away from an Activity when called with an Activity Transition.</summary>
        <value>The duration of the window background fade to opaque during enter transition.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the duration, in milliseconds, of the window background fade
            when transitioning into or away from an Activity when called with an Activity Transition.</para>
          <para>When executing the enter transition, the background starts transparent
            and fades in. This requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>. The default is
            300 milliseconds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getTransitionBackgroundFadeDuration()" title="Reference documentation">Java documentation for <code>android.view.Window.getTransitionBackgroundFadeDuration()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the duration, in milliseconds, of the window background fade
            when transitioning into or away from an Activity when called with an Activity Transition.</para>
          <para>When executing the enter transition, the background starts transparent
            and fades in. This requires <c>#FEATURE_ACTIVITY_TRANSITIONS</c>. The default is
            300 milliseconds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setTransitionBackgroundFadeDuration(long)" title="Reference documentation">Java documentation for <code>android.view.Window.setTransitionBackgroundFadeDuration(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.Window.EnterTransition" />
      </Docs>
    </Member>
    <Member MemberName="TransitionManager">
      <MemberSignature Language="C#" Value="public virtual Android.Transitions.TransitionManager? TransitionManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Transitions.TransitionManager TransitionManager" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.TransitionManager" />
      <MemberSignature Language="F#" Value="member this.TransitionManager : Android.Transitions.TransitionManager with get, set" Usage="Android.Views.Window.TransitionManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransitionManager", "()Landroid/transition/TransitionManager;", "GetGetTransitionManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransitionManager", "()Landroid/transition/TransitionManager;", "GetGetTransitionManagerHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setTransitionManager", "(Landroid/transition/TransitionManager;)V", "GetSetTransitionManager_Landroid_transition_TransitionManager_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setTransitionManager", "(Landroid/transition/TransitionManager;)V", "GetSetTransitionManager_Landroid_transition_TransitionManager_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Transitions.TransitionManager</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="tm">The TransitionManager to use for scene changes.</param>
        <summary>Retrieve the <c>TransitionManager</c> responsible for  for default transitions
            in this window. -or- Set the <c>TransitionManager</c> to use for default transitions in this window.</summary>
        <value>This window's content TransitionManager or null if none is set.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Retrieve the <c>TransitionManager</c> responsible for  for default transitions
            in this window. Requires <c>#FEATURE_CONTENT_TRANSITIONS</c>.</para>
          <para>This method will return non-null after content has been initialized (e.g. by using
            <c>#setContentView</c>) if <c>#FEATURE_CONTENT_TRANSITIONS</c> has been granted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getTransitionManager()" title="Reference documentation">Java documentation for <code>android.view.Window.getTransitionManager()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set the <c>TransitionManager</c> to use for default transitions in this window.
            Requires <c>#FEATURE_CONTENT_TRANSITIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#setTransitionManager(android.transition.TransitionManager)" title="Reference documentation">Java documentation for <code>android.view.Window.setTransitionManager(android.transition.TransitionManager)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterScrollCaptureCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterScrollCaptureCallback (Android.Views.IScrollCaptureCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterScrollCaptureCallback(class Android.Views.IScrollCaptureCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Window.UnregisterScrollCaptureCallback(Android.Views.IScrollCaptureCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterScrollCaptureCallback : Android.Views.IScrollCaptureCallback -&gt; unit&#xA;override this.UnregisterScrollCaptureCallback : Android.Views.IScrollCaptureCallback -&gt; unit" Usage="window.UnregisterScrollCaptureCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "GetUnregisterScrollCaptureCallback_Landroid_view_ScrollCaptureCallback_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterScrollCaptureCallback", "(Landroid/view/ScrollCaptureCallback;)V", "GetUnregisterScrollCaptureCallback_Landroid_view_ScrollCaptureCallback_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Views.IScrollCaptureCallback" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to remove</param>
        <summary>Unregisters a <c>ScrollCaptureCallback</c> previously registered with this window.</summary>
        <remarks>
          <para>Unregisters a <c>ScrollCaptureCallback</c> previously registered with this window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#unregisterScrollCaptureCallback(android.view.ScrollCaptureCallback)" title="Reference documentation">Java documentation for <code>android.view.Window.unregisterScrollCaptureCallback(android.view.ScrollCaptureCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VolumeControlStream">
      <MemberSignature Language="C#" Value="public abstract Android.Media.Stream VolumeControlStream { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Stream VolumeControlStream" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.VolumeControlStream" />
      <MemberSignature Language="F#" Value="member this.VolumeControlStream : Android.Media.Stream with get, set" Usage="Android.Views.Window.VolumeControlStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setVolumeControlStream", "(I)V", "GetSetVolumeControlStream_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setVolumeControlStream", "(I)V", "GetSetVolumeControlStream_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.App.Activity.VolumeControlStream" />
      </Docs>
    </Member>
    <Member MemberName="WindowManager">
      <MemberSignature Language="C#" Value="public virtual Android.Views.IWindowManager? WindowManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.IWindowManager WindowManager" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.WindowManager" />
      <MemberSignature Language="F#" Value="member this.WindowManager : Android.Views.IWindowManager" Usage="Android.Views.Window.WindowManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowManager", "()Landroid/view/WindowManager;", "GetGetWindowManagerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.IWindowManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the window manager allowing this Window to display its own
            windows.</summary>
        <value>WindowManager The ViewManager.</value>
        <remarks>
          <para>Return the window manager allowing this Window to display its own
            windows.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getWindowManager()" title="Reference documentation">Java documentation for <code>android.view.Window.getWindowManager()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public Android.Content.Res.TypedArray? WindowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Res.TypedArray WindowStyle" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Window.WindowStyle" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : Android.Content.Res.TypedArray" Usage="Android.Views.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWindowStyle", "()Landroid/content/res/TypedArray;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWindowStyle", "()Landroid/content/res/TypedArray;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.TypedArray</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the <c>android.R.styleable#Window</c> attributes from this
            window's theme.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the <c>android.R.styleable#Window</c> attributes from this
            window's theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Window#getWindowStyle()" title="Reference documentation">Java documentation for <code>android.view.Window.getWindowStyle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
