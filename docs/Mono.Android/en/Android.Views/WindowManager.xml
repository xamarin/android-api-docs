<Type Name="WindowManager" FullName="Android.Views.WindowManager">
  <TypeSignature Language="C#" Value="public abstract class WindowManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WindowManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.WindowManager" />
  <TypeSignature Language="F#" Value="type WindowManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/WindowManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/WindowManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Use the 'Android.Views.IWindowManager' type. This class will be removed in a future release.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use the 'Android.Views.IWindowManager' type. This class will be removed in a future release.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PropertyActivityEmbeddingAllowSystemOverride">
      <MemberSignature Language="C#" Value="public const string PropertyActivityEmbeddingAllowSystemOverride;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyActivityEmbeddingAllowSystemOverride" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyActivityEmbeddingAllowSystemOverride" />
      <MemberSignature Language="F#" Value="val mutable PropertyActivityEmbeddingAllowSystemOverride : string" Usage="Android.Views.WindowManager.PropertyActivityEmbeddingAllowSystemOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyActivityEmbeddingAllowSystemOverride'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyActivityEmbeddingAllowSystemOverride'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application-level
            <c>android.content.pm.PackageManager.Property PackageManager.Property</c>
            tag that specifies whether OEMs are permitted to provide activity
            embedding split-rule configurations on behalf of the app.</summary>
        <remarks>
          <para>Application-level
            <c>android.content.pm.PackageManager.Property PackageManager.Property</c>
            tag that specifies whether OEMs are permitted to provide activity
            embedding split-rule configurations on behalf of the app.</para>
          <para>If <c>true</c>, the system is permitted to override the app's
            windowing behavior and implement activity embedding split rules, such as
            displaying activities side by side. A system override informs the app
            that the activity embedding APIs are disabled so the app will not provide
            its own activity embedding rules, which would conflict with the system's
            rules.</para>
          <para>If <c>false</c>, the system is not permitted to override the
            windowing behavior of the app. Set the property to <c>false</c> if the
            app provides its own activity embedding split rules, or if you want to
            prevent the system override for any other reason.</para>
          <para>The default value is <c>false</c>.
            
            &lt;p class="note"&gt;&lt;b&gt;Note:&lt;/b&gt; Refusal to permit the system override is not
            enforceable. OEMs can override the app's activity embedding
            implementation whether or not this property is specified and set to
            <c>false</c>. The property is, in effect, a hint to OEMs.</para>
          <para>OEMs can implement activity embedding on any API level. The best
            practice for apps is to always explicitly set this property in the app
            manifest file regardless of targeted API level rather than rely on the
            default value.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyActivityEmbeddingSplitsEnabled">
      <MemberSignature Language="C#" Value="public const string PropertyActivityEmbeddingSplitsEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyActivityEmbeddingSplitsEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyActivityEmbeddingSplitsEnabled" />
      <MemberSignature Language="F#" Value="val mutable PropertyActivityEmbeddingSplitsEnabled : string" Usage="Android.Views.WindowManager.PropertyActivityEmbeddingSplitsEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyActivityEmbeddingSplitsEnabled'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyActivityEmbeddingSplitsEnabled'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> that an app can specify to inform the system that the app is ActivityEmbedding
            split feature enabled.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> that an app can specify to inform the system that the app is ActivityEmbedding
            split feature enabled.</para>
          <para>With this property, the system could provide custom behaviors for the apps that are
            ActivityEmbedding split feature enabled. For example, the fixed-portrait orientation
            requests of the activities could be ignored by the system in order to provide seamless
            ActivityEmbedding split experiences while holding the large-screen devices in landscape mode.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCameraCompatAllowForceRotation">
      <MemberSignature Language="C#" Value="public const string PropertyCameraCompatAllowForceRotation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCameraCompatAllowForceRotation" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCameraCompatAllowForceRotation" />
      <MemberSignature Language="F#" Value="val mutable PropertyCameraCompatAllowForceRotation : string" Usage="Android.Views.WindowManager.PropertyCameraCompatAllowForceRotation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ALLOW_FORCE_ROTATION", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ALLOW_FORCE_ROTATION", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatAllowForceRotation'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatAllowForceRotation'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded from the
            camera compatibility force rotation treatment.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded from the
            camera compatibility force rotation treatment.</para>
          <para>The camera compatibility treatment aligns orientations of portrait app window and natural
            orientation of the device and set opposite to natural orientation for a landscape app
            window. Mismatch between them can lead to camera issues like sideways or stretched
            viewfinder since this is one of the strongest assumptions that apps make when they implement
            camera previews. Since app and natural display orientations aren't guaranteed to match, the
            rotation can cause letterboxing. The forced rotation is triggered as soon as app opens to
            camera and is removed once camera is closed.</para>
          <para>The camera compatibility can be enabled by device manufacturers on the displays that have
            ignoreOrientationRequest display setting enabled (enables compatibility mode for fixed
            orientation, see <see href="https://developer.android.com/guide/practices/enhanced-letterboxing">Enhanced letterboxing</see>
            for more details).</para>
          <para>With this property set to <c>true</c> or unset, the system may apply the force rotation
            treatment to fixed orientation activities. Device manufacturers can exclude packages from the
            treatment using their discretion to improve display compatibility.</para>
          <para>With this property set to <c>false</c>, the system will not apply the force rotation
            treatment.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_CAMERA_COMPAT_ALLOW_FORCE_ROTATION"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_CAMERA_COMPAT_ALLOW_FORCE_ROTATION" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_CAMERA_COMPAT_ALLOW_FORCE_ROTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCameraCompatAllowRefresh">
      <MemberSignature Language="C#" Value="public const string PropertyCameraCompatAllowRefresh;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCameraCompatAllowRefresh" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCameraCompatAllowRefresh" />
      <MemberSignature Language="F#" Value="val mutable PropertyCameraCompatAllowRefresh : string" Usage="Android.Views.WindowManager.PropertyCameraCompatAllowRefresh" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ALLOW_REFRESH", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ALLOW_REFRESH", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatAllowRefresh'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatAllowRefresh'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded
            from the activity "refresh" after the camera compatibility force rotation treatment.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded
            from the activity "refresh" after the camera compatibility force rotation treatment.</para>
          <para>The camera compatibility treatment aligns orientations of portrait app window and natural
            orientation of the device and set opposite to natural orientation for a landscape app
            window. Mismatch between them can lead to camera issues like sideways or stretched
            viewfinder since this is one of the strongest assumptions that apps make when they implement
            camera previews. Since app and natural display orientations aren't guaranteed to match, the
            rotation can cause letterboxing. The forced rotation is triggered as soon as app opens to
            camera and is removed once camera is closed.</para>
          <para>Force rotation is followed by the "Refresh" of the activity by going through "resumed -&gt;
            ... -&gt; stopped -&gt; ... -&gt; resumed" cycle (by default) or "resumed -&gt; paused -&gt; resumed" cycle
            (if overridden, see <c>#PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE</c> for context).
            This allows to clear cached values in apps (e.g. display or camera rotation) that influence
            camera preview and can lead to sideways or stretching issues persisting even after force
            rotation.</para>
          <para>The camera compatibility can be enabled by device manufacturers on the displays that have
            ignoreOrientationRequest display setting enabled (enables compatibility mode for fixed
            orientation, see <see href="https://developer.android.com/guide/practices/enhanced-letterboxing">Enhanced letterboxing</see>
            for more details).</para>
          <para>With this property set to <c>true</c> or unset, the system may "refresh" activity after
            the force rotation treatment. Device manufacturers can exclude packages from the "refresh"
            using their discretion to improve display compatibility.</para>
          <para>With this property set to <c>false</c>, the system will not "refresh" activity after the
            force rotation treatment.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_CAMERA_COMPAT_ALLOW_REFRESH"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_CAMERA_COMPAT_ALLOW_REFRESH" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_CAMERA_COMPAT_ALLOW_REFRESH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCameraCompatEnableRefreshViaPause">
      <MemberSignature Language="C#" Value="public const string PropertyCameraCompatEnableRefreshViaPause;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCameraCompatEnableRefreshViaPause" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCameraCompatEnableRefreshViaPause" />
      <MemberSignature Language="F#" Value="val mutable PropertyCameraCompatEnableRefreshViaPause : string" Usage="Android.Views.WindowManager.PropertyCameraCompatEnableRefreshViaPause" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatEnableRefreshViaPause'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCameraCompatEnableRefreshViaPause'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the activity should be or shouldn't be
            "refreshed" after the camera compatibility force rotation treatment using "paused -&gt;
            resumed" cycle rather than "stopped -&gt; resumed".</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the activity should be or shouldn't be
            "refreshed" after the camera compatibility force rotation treatment using "paused -&gt;
            resumed" cycle rather than "stopped -&gt; resumed".</para>
          <para>The camera compatibility treatment aligns orientations of portrait app window and natural
            orientation of the device and set opposite to natural orientation for a landscape app
            window. Mismatch between them can lead to camera issues like sideways or stretched
            viewfinder since this is one of the strongest assumptions that apps make when they implement
            camera previews. Since app and natural display orientations aren't guaranteed to match, the
            rotation can cause letterboxing. The forced rotation is triggered as soon as app opens to
            camera and is removed once camera is closed.</para>
          <para>Force rotation is followed by the "Refresh" of the activity by going through "resumed -&gt;
            ... -&gt; stopped -&gt; ... -&gt; resumed" cycle (by default) or "resumed -&gt; paused -&gt; resumed" cycle
            (if overridden by device manufacturers or using this property). This allows to clear cached
            values in apps (e.g., display or camera rotation) that influence camera preview and can lead
            to sideways or stretching issues persisting even after force rotation.</para>
          <para>The camera compatibility can be enabled by device manufacturers on the displays that have
            ignoreOrientationRequest display setting enabled (enables compatibility mode for fixed
            orientation, see <see href="https://developer.android.com/guide/practices/enhanced-letterboxing">Enhanced letterboxing</see>
            for more details).</para>
          <para>Device manufacturers can override packages to "refresh" via "resumed -&gt; paused -&gt; resumed"
            cycle using their discretion to improve display compatibility.</para>
          <para>With this property set to <c>true</c>, the system will "refresh" activity after the
            force rotation treatment using "resumed -&gt; paused -&gt; resumed" cycle.</para>
          <para>With this property set to <c>false</c>, the system will not "refresh" activity after the
            force rotation treatment using "resumed -&gt; paused -&gt; resumed" cycle even if the device
            manufacturer adds the corresponding override.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_CAMERA_COMPAT_ENABLE_REFRESH_VIA_PAUSE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCompatAllowDisplayOrientationOverride">
      <MemberSignature Language="C#" Value="public const string PropertyCompatAllowDisplayOrientationOverride;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCompatAllowDisplayOrientationOverride" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCompatAllowDisplayOrientationOverride" />
      <MemberSignature Language="F#" Value="val mutable PropertyCompatAllowDisplayOrientationOverride : string" Usage="Android.Views.WindowManager.PropertyCompatAllowDisplayOrientationOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_DISPLAY_ORIENTATION_OVERRIDE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_DISPLAY_ORIENTATION_OVERRIDE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowDisplayOrientationOverride'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowDisplayOrientationOverride'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be opted-out from the
            compatibility override that fixes display orientation to landscape natural orientation when
            an activity is fullscreen.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be opted-out from the
            compatibility override that fixes display orientation to landscape natural orientation when
            an activity is fullscreen.</para>
          <para>When this compat override is enabled and while display is fixed to the landscape natural
            orientation, the orientation requested by the activity will be still respected by bounds
            resolution logic. For instance, if an activity requests portrait orientation, then activity
            will appear in the letterbox mode for fixed orientation with the display rotated to the
            lanscape natural orientation.</para>
          <para>The treatment is disabled by default but device manufacturers can enable the treatment
            using their discretion to improve display compatibility on the displays that have
            ignoreOrientationRequest display setting enabled (enables compatibility mode for fixed
            orientation, see <see href="https://developer.android.com/guide/practices/enhanced-letterboxing">Enhanced letterboxing</see>
            for more details).</para>
          <para>With this property set to <c>true</c> or unset, the system wiil use landscape display
            orientation when the following conditions are met:
            &lt;ul&gt;
                &lt;li&gt;Natural orientation of the display is landscape
                &lt;li&gt;ignoreOrientationRequest display setting is enabled
                &lt;li&gt;Activity is fullscreen.
                &lt;li&gt;Device manufacturer enabled the treatment.
            &lt;/ul&gt;</para>
          <para>With this property set to <c>false</c>, device manufactured per-app override for
            display orientation won't be applied.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_COMPAT_ALLOW_DISPLAY_ORIENTATION_OVERRIDE"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_COMPAT_ALLOW_DISPLAY_ORIENTATION_OVERRIDE" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_COMPAT_ALLOW_DISPLAY_ORIENTATION_OVERRIDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCompatAllowOrientationOverride">
      <MemberSignature Language="C#" Value="public const string PropertyCompatAllowOrientationOverride;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCompatAllowOrientationOverride" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCompatAllowOrientationOverride" />
      <MemberSignature Language="F#" Value="val mutable PropertyCompatAllowOrientationOverride : string" Usage="Android.Views.WindowManager.PropertyCompatAllowOrientationOverride" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_ORIENTATION_OVERRIDE", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_ORIENTATION_OVERRIDE", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowOrientationOverride'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowOrientationOverride'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded from the
            compatibility override for orientation set by the device manufacturer.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app should be excluded from the
            compatibility override for orientation set by the device manufacturer. When the orientation
            override is applied it can:
            &lt;ul&gt;
              &lt;li&gt;Replace the specific orientation requested by the app with another selected by the
                         device manufacturer, e.g. replace undefined requested by the app with portrait.
              &lt;li&gt;Always use an orientation selected by the device manufacturer.
              &lt;li&gt;Do one of the above but only when camera connection is open.
            &lt;/ul&gt;</para>
          <para>This property is different from <c>PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION</c>
            (which is used to avoid orientation loops caused by the incorrect use of <c>android.app.Activity#setRequestedOrientation</c>) because this property overrides the app to an
            orientation selected by the device manufacturer rather than ignoring one of orientation
            requests coming from the app while respecting the previous one.</para>
          <para>With this property set to <c>true</c> or unset, device manufacturers can override
            orientation for the app using their discretion to improve display compatibility.</para>
          <para>With this property set to <c>false</c>, device manufactured per-app override for
            orientation won't be applied.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_COMPAT_ALLOW_ORIENTATION_OVERRIDE"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_COMPAT_ALLOW_ORIENTATION_OVERRIDE" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_COMPAT_ALLOW_ORIENTATION_OVERRIDE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCompatAllowSandboxingViewBoundsApis">
      <MemberSignature Language="C#" Value="public const string PropertyCompatAllowSandboxingViewBoundsApis;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCompatAllowSandboxingViewBoundsApis" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCompatAllowSandboxingViewBoundsApis" />
      <MemberSignature Language="F#" Value="val mutable PropertyCompatAllowSandboxingViewBoundsApis : string" Usage="Android.Views.WindowManager.PropertyCompatAllowSandboxingViewBoundsApis" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_SANDBOXING_VIEW_BOUNDS_APIS", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_COMPAT_ALLOW_SANDBOXING_VIEW_BOUNDS_APIS", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowSandboxingViewBoundsApis'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatAllowSandboxingViewBoundsApis'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that it needs to be opted-out from the
            compatibility treatment that sandboxes <c>android.view.View</c> API.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that it needs to be opted-out from the
            compatibility treatment that sandboxes <c>android.view.View</c> API.</para>
          <para>The treatment can be enabled by device manufacturers for applications which misuse
            <c>android.view.View</c> APIs by expecting that
            <c>android.view.View#getLocationOnScreen</c>,
            <c>android.view.View#getBoundsOnScreen</c>,
            <c>android.view.View#getWindowVisibleDisplayFrame</c>,
            <c>android.view.View#getWindowDisplayFrame</c>
            return coordinates as if an activity is positioned in the top-left corner of the screen, with
            left coordinate equal to 0. This may not be the case for applications in multi-window and in
            letterbox modes.</para>
          <para>Setting this property to <c>false</c> informs the system that the application must be
            opted-out from the "Sandbox <c>android.view.View</c> API to Activity bounds" treatment even
            if the device manufacturer has opted the app into the treatment.</para>
          <para>Not setting this property at all, or setting this property to <c>true</c> has no effect.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_COMPAT_ALLOW_SANDBOXING_VIEW_BOUNDS_APIS"
                android:value="false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_COMPAT_ALLOW_SANDBOXING_VIEW_BOUNDS_APIS" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_COMPAT_ALLOW_SANDBOXING_VIEW_BOUNDS_APIS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCompatEnableFakeFocus">
      <MemberSignature Language="C#" Value="public const string PropertyCompatEnableFakeFocus;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCompatEnableFakeFocus" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCompatEnableFakeFocus" />
      <MemberSignature Language="F#" Value="val mutable PropertyCompatEnableFakeFocus : string" Usage="Android.Views.WindowManager.PropertyCompatEnableFakeFocus" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_COMPAT_ENABLE_FAKE_FOCUS", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_COMPAT_ENABLE_FAKE_FOCUS", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatEnableFakeFocus'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatEnableFakeFocus'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the application can be opted-in or opted-out
            from the compatibility treatment that enables sending a fake focus event for unfocused
            resumed split screen activities.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the application can be opted-in or opted-out
            from the compatibility treatment that enables sending a fake focus event for unfocused
            resumed split screen activities. This is needed because some game engines wait to get
            focus before drawing the content of the app which isn't guaranteed by default in multi-window
            modes.</para>
          <para>Device manufacturers can enable this treatment using their discretion on a per-device
            basis to improve display compatibility. The treatment also needs to be specifically enabled
            on a per-app basis afterwards. This can either be done by device manufacturers or developers.</para>
          <para>With this property set to <c>true</c>, the system will apply the treatment only if the
            device manufacturer had previously enabled it on the device. A fake focus event will be sent
            to the app after it is resumed only if the app is in split-screen.</para>
          <para>Setting this property to <c>false</c> informs the system that the activity must be
            opted-out from the compatibility treatment even if the device manufacturer has opted the app
            into the treatment.</para>
          <para>If the property remains unset the system will apply the treatment only if it had
            previously been enabled both at the device and app level by the device manufacturer.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_COMPAT_ENABLE_FAKE_FOCUS"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_COMPAT_ENABLE_FAKE_FOCUS" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_COMPAT_ENABLE_FAKE_FOCUS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyCompatIgnoreRequestedOrientation">
      <MemberSignature Language="C#" Value="public const string PropertyCompatIgnoreRequestedOrientation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyCompatIgnoreRequestedOrientation" />
      <MemberSignature Language="DocId" Value="F:Android.Views.WindowManager.PropertyCompatIgnoreRequestedOrientation" />
      <MemberSignature Language="F#" Value="val mutable PropertyCompatIgnoreRequestedOrientation : string" Usage="Android.Views.WindowManager.PropertyCompatIgnoreRequestedOrientation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatIgnoreRequestedOrientation'. This class will be removed in a future release.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("Use 'Android.Views.IWindowManager.PropertyCompatIgnoreRequestedOrientation'. This class will be removed in a future release.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app can be opted-in or opted-out
            from the compatibility treatment that avoids <c>android.app.Activity#setRequestedOrientation</c> loops.</summary>
        <remarks>
          <para>Application level <c>android.content.pm.PackageManager.Property PackageManager
            .Property</c> for an app to inform the system that the app can be opted-in or opted-out
            from the compatibility treatment that avoids <c>android.app.Activity#setRequestedOrientation</c> loops. The loop can be trigerred by
            ignoreRequestedOrientation display setting enabled on the device or by the landscape natural
            orientation of the device.</para>
          <para>The treatment is disabled by default but device manufacturers can enable the treatment
            using their discretion to improve display compatibility.</para>
          <para>With this property set to <c>true</c>, the system could ignore <c>android.app.Activity#setRequestedOrientation</c> call from an app if one of the following
            conditions are true:
            &lt;ul&gt;
                &lt;li&gt;Activity is relaunching due to the previous <c>android.app.Activity#setRequestedOrientation</c> call.
                &lt;li&gt;Camera compatibility force rotation treatment is active for the package.
            &lt;/ul&gt;</para>
          <para>Setting this property to <c>false</c> informs the system that the app must be
            opted-out from the compatibility treatment even if the device manufacturer has opted the app
            into the treatment.</para>
          <para>&lt;b&gt;Syntax:&lt;/b&gt;</para>
          <code lang="text/java">&amp;lt;application&amp;gt;
              &amp;lt;property
                android:name="android.window.PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION"
                android:value="true|false"/&amp;gt;
            &amp;lt;/application&amp;gt;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/WindowManager#PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION" title="Reference documentation">Java documentation for <code>android.view.WindowManager.PROPERTY_COMPAT_IGNORE_REQUESTED_ORIENTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
