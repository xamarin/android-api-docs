<Type Name="KeyEvent+DispatcherState" FullName="Android.Views.KeyEvent+DispatcherState">
  <TypeSignature Language="VB.NET" Value="Public Class KeyEvent.DispatcherState&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class KeyEvent::DispatcherState : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class KeyEvent.DispatcherState : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit KeyEvent/DispatcherState extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.KeyEvent.DispatcherState" />
  <TypeSignature Language="F#" Value="type KeyEvent.DispatcherState = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/KeyEvent$DispatcherState", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/KeyEvent$DispatcherState", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Use with <c>KeyEvent#dispatch(Callback, DispatcherState, Object)</c>
            for more advanced key dispatching, such as long presses.</summary>
    <remarks>
      <para>Use with <c>KeyEvent#dispatch(Callback, DispatcherState, Object)</c>
            for more advanced key dispatching, such as long presses.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DispatcherState();" />
      <MemberSignature Language="C#" Value="public DispatcherState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherState(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected DispatcherState (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.KeyEvent.DispatcherState : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.KeyEvent.DispatcherState" Usage="new Android.Views.KeyEvent.DispatcherState (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleUpEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub HandleUpEvent (e As KeyEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void HandleUpEvent(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual void HandleUpEvent (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void HandleUpEvent(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.HandleUpEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member HandleUpEvent : Android.Views.KeyEvent -&gt; unit&#xA;override this.HandleUpEvent : Android.Views.KeyEvent -&gt; unit" Usage="dispatcherState.HandleUpEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("handleUpEvent", "(Landroid/view/KeyEvent;)V", "GetHandleUpEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("handleUpEvent", "(Landroid/view/KeyEvent;)V", "GetHandleUpEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Handle key up event to stop tracking.</summary>
        <remarks>
          <para>Handle key up event to stop tracking.  This resets the dispatcher state,
            and updates the key event state based on it.</para>
          <para>This is only needed if you are directly dispatching events, rather
            than handling them in <c>Callback#onKeyUp</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#handleUpEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.handleUpEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsTracking">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsTracking (e As KeyEvent) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsTracking(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual bool IsTracking (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsTracking(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.IsTracking(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member IsTracking : Android.Views.KeyEvent -&gt; bool&#xA;override this.IsTracking : Android.Views.KeyEvent -&gt; bool" Usage="dispatcherState.IsTracking e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isTracking", "(Landroid/view/KeyEvent;)Z", "GetIsTracking_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isTracking", "(Landroid/view/KeyEvent;)Z", "GetIsTracking_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Return true if the key event is for a key code that is currently
            being tracked by the dispatcher.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return true if the key event is for a key code that is currently
            being tracked by the dispatcher.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#isTracking(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.isTracking(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyEvent.DispatcherState.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.KeyEvent.DispatcherState.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PerformedLongPress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PerformedLongPress (e As KeyEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PerformedLongPress(Android::Views::KeyEvent ^ e);" />
      <MemberSignature Language="C#" Value="public virtual void PerformedLongPress (Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PerformedLongPress(class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.PerformedLongPress(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member PerformedLongPress : Android.Views.KeyEvent -&gt; unit&#xA;override this.PerformedLongPress : Android.Views.KeyEvent -&gt; unit" Usage="dispatcherState.PerformedLongPress e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("performedLongPress", "(Landroid/view/KeyEvent;)V", "GetPerformedLongPress_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("performedLongPress", "(Landroid/view/KeyEvent;)V", "GetPerformedLongPress_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Keep track of the given event's key code as having performed an
            action with a long press, so no action should occur on the up.</summary>
        <remarks>
          <para>Keep track of the given event's key code as having performed an
            action with a long press, so no action should occur on the up.</para>
          <para>This is only needed if you are directly dispatching events, rather
            than handling them in <c>Callback#onKeyLongPress</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#performedLongPress(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.performedLongPress(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="dispatcherState.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset back to initial state.</summary>
        <remarks>
          <para>Reset back to initial state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#reset()" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset (target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset(Java::Lang::Object ^ target);" />
      <MemberSignature Language="C#" Value="public virtual void Reset (Java.Lang.Object? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset(class Java.Lang.Object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.Reset(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Reset : Java.Lang.Object -&gt; unit&#xA;override this.Reset : Java.Lang.Object -&gt; unit" Usage="dispatcherState.Reset target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "(Ljava/lang/Object;)V", "GetReset_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "(Ljava/lang/Object;)V", "GetReset_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>Stop any tracking associated with this target.</summary>
        <remarks>
          <para>Stop any tracking associated with this target.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#reset(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.reset(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="StartTracking">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartTracking (e As KeyEvent, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartTracking(Android::Views::KeyEvent ^ e, Java::Lang::Object ^ target);" />
      <MemberSignature Language="C#" Value="public virtual void StartTracking (Android.Views.KeyEvent? e, Java.Lang.Object? target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartTracking(class Android.Views.KeyEvent e, class Java.Lang.Object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.KeyEvent.DispatcherState.StartTracking(Android.Views.KeyEvent,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member StartTracking : Android.Views.KeyEvent * Java.Lang.Object -&gt; unit&#xA;override this.StartTracking : Android.Views.KeyEvent * Java.Lang.Object -&gt; unit" Usage="dispatcherState.StartTracking (e, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startTracking", "(Landroid/view/KeyEvent;Ljava/lang/Object;)V", "GetStartTracking_Landroid_view_KeyEvent_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startTracking", "(Landroid/view/KeyEvent;Ljava/lang/Object;)V", "GetStartTracking_Landroid_view_KeyEvent_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
        <Parameter Name="target" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="target">To be added.</param>
        <summary>Start tracking the key code associated with the given event.</summary>
        <remarks>
          <para>Start tracking the key code associated with the given event.  This
            can only be called on a key down.  It will allow you to see any
            long press associated with the key, and will result in
            <c>KeyEvent#isTracking</c> return true on the long press and up
            events.</para>
          <para>This is only needed if you are directly dispatching events, rather
            than handling them in <c>Callback#onKeyDown</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/KeyEvent.DispatcherState#startTracking(android.view.KeyEvent,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.view.KeyEvent.DispatcherState.startTracking(android.view.KeyEvent, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyEvent.DispatcherState.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.KeyEvent.DispatcherState.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.KeyEvent.DispatcherState.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.KeyEvent.DispatcherState.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
