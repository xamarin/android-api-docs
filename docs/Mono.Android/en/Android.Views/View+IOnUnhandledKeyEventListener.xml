<Type Name="View+IOnUnhandledKeyEventListener" FullName="Android.Views.View+IOnUnhandledKeyEventListener">
  <TypeSignature Language="C#" Value="public interface View.IOnUnhandledKeyEventListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract View/IOnUnhandledKeyEventListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.View.IOnUnhandledKeyEventListener" />
  <TypeSignature Language="F#" Value="type View.IOnUnhandledKeyEventListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/View$OnUnhandledKeyEventListener", "", "Android.Views.View/IOnUnhandledKeyEventListenerInvoker", ApiSince=28)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/View$OnUnhandledKeyEventListener", "", "Android.Views.View/IOnUnhandledKeyEventListenerInvoker", ApiSince=28)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnUnhandledKeyEvent">
      <MemberSignature Language="C#" Value="public bool OnUnhandledKeyEvent (Android.Views.View? v, Android.Views.KeyEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnUnhandledKeyEvent(class Android.Views.View v, class Android.Views.KeyEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.View.IOnUnhandledKeyEventListener.OnUnhandledKeyEvent(Android.Views.View,Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member OnUnhandledKeyEvent : Android.Views.View * Android.Views.KeyEvent -&gt; bool" Usage="iOnUnhandledKeyEventListener.OnUnhandledKeyEvent (v, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUnhandledKeyEvent", "(Landroid/view/View;Landroid/view/KeyEvent;)Z", "GetOnUnhandledKeyEvent_Landroid_view_View_Landroid_view_KeyEvent_Handler:Android.Views.View/IOnUnhandledKeyEventListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUnhandledKeyEvent", "(Landroid/view/View;Landroid/view/KeyEvent;)Z", "GetOnUnhandledKeyEvent_Landroid_view_View_Landroid_view_KeyEvent_Handler:Android.Views.View/IOnUnhandledKeyEventListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="v" Type="Android.Views.View" />
        <Parameter Name="e" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="v">To be added.</param>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
