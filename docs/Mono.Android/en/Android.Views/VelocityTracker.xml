<Type Name="VelocityTracker" FullName="Android.Views.VelocityTracker">
  <TypeSignature Language="C#" Value="public sealed class VelocityTracker : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VelocityTracker extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/VelocityTracker", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Helper for tracking the velocity of touch events, for implementing
 flinging and other such gestures.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Helper for tracking the velocity of touch events, for implementing
 flinging and other such gestures.

 Use <c><see cref="M:Android.Views.VelocityTracker.Obtain" /></c> to retrieve a new instance of the class when you are going
 to begin tracking.  Put the motion events you receive into it with
 <c><see cref="M:Android.Views.VelocityTracker.AddMovement(Android.Views.MotionEvent)" /></c>.  When you want to determine the velocity call
 <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32)" /></c> and then call <c><see cref="M:Android.Views.VelocityTracker.GetXVelocity(System.Int32)" /></c>
 and <c><see cref="M:Android.Views.VelocityTracker.GetYVelocity(System.Int32)" /></c> to retrieve the velocity for each pointer id.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/VelocityTracker.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AddMovement">
      <MemberSignature Language="C#" Value="public void AddMovement (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddMovement(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addMovement", "(Landroid/view/MotionEvent;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ev" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">The MotionEvent you received and would like to track.
</param>
        <summary>Add a user's movement to the tracker.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Add a user's movement to the tracker.  You should call this for the
 initial <c><see cref="F:Android.Support.V4.View.MotionEventCompat.ActionPointerDown" tool="ReplaceLinkValue" /></c>, the following
 <c><see cref="!:Android.Views.MotionEvent.ACTION_MOVE" /></c> events that you receive, and the
 final <c><see cref="!:Android.Views.MotionEvent.ACTION_UP" /></c>.  You can, however, call this
 for whichever events you desire.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#addMovement(android.view.MotionEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clear", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset the velocity tracker back to its initial state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reset the velocity tracker back to its initial state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#clear()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ComputeCurrentVelocity">
      <MemberSignature Language="C#" Value="public void ComputeCurrentVelocity (int units);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCurrentVelocity(int32 units) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeCurrentVelocity", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="units" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="units">To be added.</param>
        <summary tool="true">Equivalent to invoking <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32,System.Single)" /></c> with a maximum
 velocity of Float.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Equivalent to invoking <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32,System.Single)" /></c> with a maximum
 velocity of Float.MAX_VALUE.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#computeCurrentVelocity(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
        <altmember cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32, System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ComputeCurrentVelocity">
      <MemberSignature Language="C#" Value="public void ComputeCurrentVelocity (int units, float maxVelocity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCurrentVelocity(int32 units, float32 maxVelocity) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("computeCurrentVelocity", "(IF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="units" Type="System.Int32" />
        <Parameter Name="maxVelocity" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="units">The units you would like the velocity in.  A value of 1
 provides pixels per millisecond, 1000 provides pixels per second, etc.</param>
        <param name="maxVelocity">The maximum velocity that can be computed by this method.
 This value must be declared in the same unit as the units parameter. This value
 must be positive.
</param>
        <summary>Compute the current velocity based on the points that have been
 collected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Compute the current velocity based on the points that have been
 collected.  Only call this when you actually want to retrieve velocity
 information, as it is relatively expensive.  You can then retrieve
 the velocity with <c><see cref="P:Android.Views.VelocityTracker.XVelocity" /></c> and
 <c><see cref="P:Android.Views.VelocityTracker.YVelocity" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#computeCurrentVelocity(int, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="GetXVelocity">
      <MemberSignature Language="C#" Value="public float GetXVelocity (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetXVelocity(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getXVelocity", "(I)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Which pointer's velocity to return.</param>
        <summary>Retrieve the last computed X velocity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the last computed X velocity.  You must first call
 <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32)" /></c> before calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#getXVelocity(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetYVelocity">
      <MemberSignature Language="C#" Value="public float GetYVelocity (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 GetYVelocity(int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getYVelocity", "(I)F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Which pointer's velocity to return.</param>
        <summary>Retrieve the last computed Y velocity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the last computed Y velocity.  You must first call
 <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32)" /></c> before calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#getYVelocity(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Obtain">
      <MemberSignature Language="C#" Value="public static Android.Views.VelocityTracker Obtain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.VelocityTracker Obtain() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("obtain", "()Landroid/view/VelocityTracker;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.VelocityTracker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve a new VelocityTracker object to watch the velocity of a
 motion.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve a new VelocityTracker object to watch the velocity of a
 motion.  Be sure to call <c><see cref="M:Android.Views.VelocityTracker.Recycle" /></c> when done.  You should
 generally only maintain an active object while tracking a movement,
 so that the VelocityTracker can be re-used elsewhere.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#obtain()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("recycle", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a VelocityTracker object back to be re-used by others.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Return a VelocityTracker object back to be re-used by others.  You must
 not touch the object after calling this function.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#recycle()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XVelocity">
      <MemberSignature Language="C#" Value="public float XVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 XVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getXVelocity", "()F", "GetGetXVelocityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the last computed X velocity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the last computed X velocity.  You must first call
 <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32)" /></c> before calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#getXVelocity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="YVelocity">
      <MemberSignature Language="C#" Value="public float YVelocity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 YVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getYVelocity", "()F", "GetGetYVelocityHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the last computed Y velocity.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the last computed Y velocity.  You must first call
 <c><see cref="M:Android.Views.VelocityTracker.ComputeCurrentVelocity(System.Int32)" /></c> before calling this function.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/VelocityTracker.html#getYVelocity()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
