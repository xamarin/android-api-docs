<Type Name="ViewDebug+ExportedProperty" FullName="Android.Views.ViewDebug+ExportedProperty">
  <TypeSignature Language="C#" Value="public abstract class ViewDebug.ExportedProperty : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.Annotation.IAnnotation" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi abstract beforefieldinit ViewDebug/ExportedProperty extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.Annotation.IAnnotation, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.ViewDebug.ExportedProperty" />
  <TypeSignature Language="F#" Value="type ViewDebug.ExportedProperty = class&#xA;    inherit Object&#xA;    interface IAnnotation&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Annotation.IAnnotation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/ViewDebug$ExportedProperty", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/ViewDebug$ExportedProperty", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Obsolete("Use ViewDebug.IExportedProperty interface instead")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("Use ViewDebug.IExportedProperty interface instead")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This annotation can be used to mark fields and methods to be dumped by
            the view server.</summary>
    <remarks>
      <para>This annotation can be used to mark fields and methods to be dumped by
            the view server. Only non-void methods with no arguments can be annotated
            by this annotation.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty" title="Reference documentation">Java documentation for <code>android.view.ViewDebug.ExportedProperty</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportedProperty (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.ViewDebug.ExportedProperty : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.ViewDebug.ExportedProperty" Usage="new Android.Views.ViewDebug.ExportedProperty (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AnnotationType">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Class? AnnotationType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Class AnnotationType() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.AnnotationType" />
      <MemberSignature Language="F#" Value="abstract member AnnotationType : unit -&gt; Java.Lang.Class" Usage="exportedProperty.AnnotationType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Annotation.IAnnotation.AnnotationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("annotationType", "()Ljava/lang/Class;", "GetAnnotationTypeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("annotationType", "()Ljava/lang/Class;", "GetAnnotationTypeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the annotation interface of this annotation.</summary>
        <returns>the annotation interface of this annotation</returns>
        <remarks>
          <para>Returns the annotation interface of this annotation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/annotation/Annotation#annotationType()" title="Reference documentation">Java documentation for <code>java.lang.annotation.Annotation.annotationType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public abstract string? Category ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Category() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.Category" />
      <MemberSignature Language="F#" Value="abstract member Category : unit -&gt; string" Usage="exportedProperty.Category " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("category", "()Ljava/lang/String;", "GetCategoryHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("category", "()Ljava/lang/String;", "GetCategoryHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Specifies the category the property falls into, such as measurement,
            layout, drawing, etc.</summary>
        <returns>the category as String</returns>
        <remarks>
          <para>Specifies the category the property falls into, such as measurement,
            layout, drawing, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty#category()" title="Reference documentation">Java documentation for <code>android.view.ViewDebug.ExportedProperty.category()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeepExport">
      <MemberSignature Language="C#" Value="public abstract bool DeepExport ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeepExport() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.DeepExport" />
      <MemberSignature Language="F#" Value="abstract member DeepExport : unit -&gt; bool" Usage="exportedProperty.DeepExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("deepExport", "()Z", "GetDeepExportHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("deepExport", "()Z", "GetDeepExportHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When deep export is turned on, this property is not dumped.</summary>
        <returns>true if the properties of this property should be dumped</returns>
        <remarks>
          <para>When deep export is turned on, this property is not dumped. Instead, the
            properties contained in this property are dumped. Each child property
            is prefixed with the name of this property.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty#deepExport()" title="Reference documentation">Java documentation for <code>android.view.ViewDebug.ExportedProperty.deepExport()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagMapping">
      <MemberSignature Language="C#" Value="public abstract Android.Views.ViewDebug.FlagToString[]? FlagMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewDebug/FlagToString[] FlagMapping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.FlagMapping" />
      <MemberSignature Language="F#" Value="abstract member FlagMapping : unit -&gt; Android.Views.ViewDebug.FlagToString[]" Usage="exportedProperty.FlagMapping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flagMapping", "()[Landroid/view/ViewDebug$FlagToString;", "GetFlagMappingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flagMapping", "()[Landroid/view/ViewDebug$FlagToString;", "GetFlagMappingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewDebug+FlagToString[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexMapping">
      <MemberSignature Language="C#" Value="public abstract Android.Views.ViewDebug.IntToString[]? IndexMapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewDebug/IntToString[] IndexMapping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.IndexMapping" />
      <MemberSignature Language="F#" Value="abstract member IndexMapping : unit -&gt; Android.Views.ViewDebug.IntToString[]" Usage="exportedProperty.IndexMapping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("indexMapping", "()[Landroid/view/ViewDebug$IntToString;", "GetIndexMappingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("indexMapping", "()[Landroid/view/ViewDebug$IntToString;", "GetIndexMappingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewDebug+IntToString[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewDebug.ExportedProperty.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.ViewDebug.ExportedProperty.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mapping">
      <MemberSignature Language="C#" Value="public abstract Android.Views.ViewDebug.IntToString[]? Mapping ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewDebug/IntToString[] Mapping() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.Mapping" />
      <MemberSignature Language="F#" Value="abstract member Mapping : unit -&gt; Android.Views.ViewDebug.IntToString[]" Usage="exportedProperty.Mapping " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mapping", "()[Landroid/view/ViewDebug$IntToString;", "GetMappingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mapping", "()[Landroid/view/ViewDebug$IntToString;", "GetMappingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewDebug+IntToString[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public abstract string? Prefix ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Prefix() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.Prefix" />
      <MemberSignature Language="F#" Value="abstract member Prefix : unit -&gt; string" Usage="exportedProperty.Prefix " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prefix", "()Ljava/lang/String;", "GetPrefixHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prefix", "()Ljava/lang/String;", "GetPrefixHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The prefix to use on child properties when deep export is enabled</summary>
        <returns>a prefix as a String</returns>
        <remarks>
          <para>The prefix to use on child properties when deep export is enabled</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty#prefix()" title="Reference documentation">Java documentation for <code>android.view.ViewDebug.ExportedProperty.prefix()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveId">
      <MemberSignature Language="C#" Value="public abstract bool ResolveId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ResolveId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewDebug.ExportedProperty.ResolveId" />
      <MemberSignature Language="F#" Value="abstract member ResolveId : unit -&gt; bool" Usage="exportedProperty.ResolveId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveId", "()Z", "GetResolveIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveId", "()Z", "GetResolveIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>When resolveId is true, and if the annotated field/method return value
            is an int, the value is converted to an Android's resource name.</summary>
        <returns>true if the property's value must be transformed into an Android
                    resource name, false otherwise</returns>
        <remarks>
          <para>When resolveId is true, and if the annotated field/method return value
            is an int, the value is converted to an Android's resource name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewDebug.ExportedProperty#resolveId()" title="Reference documentation">Java documentation for <code>android.view.ViewDebug.ExportedProperty.resolveId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewDebug.ExportedProperty.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.ViewDebug.ExportedProperty.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewDebug.ExportedProperty.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.ViewDebug.ExportedProperty.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
