<Type Name="ViewAnimationUtils" FullName="Android.Views.ViewAnimationUtils">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewAnimationUtils&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewAnimationUtils sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class ViewAnimationUtils : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ViewAnimationUtils extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.ViewAnimationUtils" />
  <TypeSignature Language="F#" Value="type ViewAnimationUtils = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/ViewAnimationUtils", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/ViewAnimationUtils", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>Defines common utilities for working with View's animations.</summary>
    <remarks>
      <para>Defines common utilities for working with View's animations.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/ViewAnimationUtils" title="Reference documentation">Java documentation for <code>android.view.ViewAnimationUtils</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateCircularReveal">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCircularReveal (view As View, centerX As Integer, centerY As Integer, startRadius As Single, endRadius As Single) As Animator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Animation::Animator ^ CreateCircularReveal(Android::Views::View ^ view, int centerX, int centerY, float startRadius, float endRadius);" />
      <MemberSignature Language="C#" Value="public static Android.Animation.Animator? CreateCircularReveal (Android.Views.View? view, int centerX, int centerY, float startRadius, float endRadius);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Animation.Animator CreateCircularReveal(class Android.Views.View view, int32 centerX, int32 centerY, float32 startRadius, float32 endRadius) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewAnimationUtils.CreateCircularReveal(Android.Views.View,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="static member CreateCircularReveal : Android.Views.View * int * int * single * single -&gt; Android.Animation.Animator" Usage="Android.Views.ViewAnimationUtils.CreateCircularReveal (view, centerX, centerY, startRadius, endRadius)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCircularReveal", "(Landroid/view/View;IIFF)Landroid/animation/Animator;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCircularReveal", "(Landroid/view/View;IIFF)Landroid/animation/Animator;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.Animator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="view" Type="Android.Views.View" />
        <Parameter Name="centerX" Type="System.Int32" />
        <Parameter Name="centerY" Type="System.Int32" />
        <Parameter Name="startRadius" Type="System.Single" />
        <Parameter Name="endRadius" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="view">The View will be clipped to the animating circle.</param>
        <param name="centerX">The x coordinate of the center of the animating circle, relative to
                           <c>view</c>.</param>
        <param name="centerY">The y coordinate of the center of the animating circle, relative to
                           <c>view</c>.</param>
        <param name="startRadius">The starting radius of the animating circle.</param>
        <param name="endRadius">The ending radius of the animating circle.</param>
        <summary>Returns an Animator which can animate a clipping circle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns an Animator which can animate a clipping circle.</para>
          <para>Any shadow cast by the View will respect the circular clip from this animator.</para>
          <para>Only a single non-rectangular clip can be applied on a View at any time.
            Views clipped by a circular reveal animation take priority over
            <c>View#setClipToOutline(boolean) View Outline clipping</c>.</para>
          <para>Note that the animation returned here is a one-shot animation. It cannot
            be re-used, and once started it cannot be paused or resumed. It is also
            an asynchronous animation that automatically runs off of the UI thread.
            As a result <c>AnimatorListener#onAnimationEnd(Animator)</c>
            will occur after the animation has ended, but it may be delayed depending
            on thread responsiveness.</para>
          <para>Note that if any start delay is set on the reveal animator, the start radius
            will not be applied to the reveal circle until the start delay has passed.
            If it's desired to set a start radius on the reveal circle during the start
            delay, one workaround could be adding an animator with the same start and
            end radius. For example:</para>
          <code lang="text/java">&lt;code&gt;
            public static Animator createRevealWithDelay(View view, int centerX, int centerY, float startRadius, float endRadius) {
                Animator delayAnimator = ViewAnimationUtils.createCircularReveal(view, centerX, centerY, startRadius, startRadius);
                delayAnimator.setDuration(delayTimeMS);
                Animator revealAnimator = ViewAnimationUtils.createCircularReveal(view, centerX, centerY, startRadius, endRadius);
                AnimatorSet set = new AnimatorSet();
                set.playSequentially(delayAnimator, revealAnimator);
                return set;
            }
            &lt;/code&gt;</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewAnimationUtils#createCircularReveal(android.view.View,%20int,%20int,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.view.ViewAnimationUtils.createCircularReveal(android.view.View, int, int, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewAnimationUtils.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.ViewAnimationUtils.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewAnimationUtils.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.ViewAnimationUtils.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewAnimationUtils.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.ViewAnimationUtils.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
