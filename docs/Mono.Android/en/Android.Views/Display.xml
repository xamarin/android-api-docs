<Type Name="Display" FullName="Android.Views.Display">
  <TypeSignature Language="C#" Value="public class Display : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Display extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.Display" />
  <TypeSignature Language="F#" Value="type Display = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/Display", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/Display", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides information about the size and density of a logical display.</summary>
    <remarks>
      <para>Provides information about the size and density of a logical display.</para>
      <para>The display area is described in two different ways.
            &lt;ul&gt;
            &lt;li&gt;The application display area specifies the part of the display that may contain
            an application window, excluding the system decorations.  The application display area may
            be smaller than the real display area because the system subtracts the space needed
            for decor elements such as the status bar.  Use <c>WindowMetrics#getBounds()</c> to query the
            application window bounds.&lt;/li&gt;
            &lt;li&gt;The real display area specifies the part of the display that is accessible to an application
            in the current system state. The real display area may be smaller than the physical size of the
            display in a few scenarios. Use <c>WindowManager#getCurrentWindowMetrics()</c> to identify the
            current size of the activity window. UI-related work, such as choosing UI layouts, should rely
            upon <c>WindowMetrics#getBounds()</c>. See <c>#getRealSize</c> / <c>#getRealMetrics</c> for
            details.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>A logical display does not necessarily represent a particular physical display device
            such as the internal display or an external display.  The contents of a logical
            display may be presented on one or more physical displays according to the devices
            that are currently attached and whether mirroring has been enabled.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/Display" title="Reference documentation">Java documentation for <code>android.view.Display</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Display (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.Display : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.Display" Usage="new Android.Views.Display (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppVsyncOffsetNanos">
      <MemberSignature Language="C#" Value="public virtual long AppVsyncOffsetNanos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AppVsyncOffsetNanos" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.AppVsyncOffsetNanos" />
      <MemberSignature Language="F#" Value="member this.AppVsyncOffsetNanos : int64" Usage="Android.Views.Display.AppVsyncOffsetNanos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAppVsyncOffsetNanos", "()J", "GetGetAppVsyncOffsetNanosHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAppVsyncOffsetNanos", "()J", "GetGetAppVsyncOffsetNanosHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the app VSYNC offset, in nanoseconds.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the app VSYNC offset, in nanoseconds.  This is a positive value indicating
            the phase offset of the VSYNC events provided by Choreographer relative to the
            display refresh.  For example, if Choreographer reports that the refresh occurred
            at time N, it actually occurred at (N - appVsyncOffset).</para>
          <para>Apps generally do not need to be aware of this.  It's only useful for fine-grained
            A/V synchronization.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getAppVsyncOffsetNanos()" title="Reference documentation">Java documentation for <code>android.view.Display.getAppVsyncOffsetNanos()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cutout">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayCutout? Cutout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.DisplayCutout Cutout" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Cutout" />
      <MemberSignature Language="F#" Value="member this.Cutout : Android.Views.DisplayCutout" Usage="Android.Views.Display.Cutout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCutout", "()Landroid/view/DisplayCutout;", "GetGetCutoutHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCutout", "()Landroid/view/DisplayCutout;", "GetGetCutoutHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayCutout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>DisplayCutout</c>, or <c>null</c> if there is none.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the <c>DisplayCutout</c>, or <c>null</c> if there is none.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getCutout()" title="Reference documentation">Java documentation for <code>android.view.Display.getCutout()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultDisplay">
      <MemberSignature Language="C#" Value="public const int DefaultDisplay = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DefaultDisplay = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.DefaultDisplay" />
      <MemberSignature Language="F#" Value="val mutable DefaultDisplay : int" Usage="Android.Views.Display.DefaultDisplay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEFAULT_DISPLAY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEFAULT_DISPLAY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The default Display id, which is the id of the primary display assuming there is one.</summary>
        <remarks>
          <para>The default Display id, which is the id of the primary display assuming there is one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#DEFAULT_DISPLAY" title="Reference documentation">Java documentation for <code>android.view.Display.DEFAULT_DISPLAY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeviceProductInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Hardware.Display.DeviceProductInfo? DeviceProductInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Hardware.Display.DeviceProductInfo DeviceProductInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.DeviceProductInfo" />
      <MemberSignature Language="F#" Value="member this.DeviceProductInfo : Android.Hardware.Display.DeviceProductInfo" Usage="Android.Views.Display.DeviceProductInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeviceProductInfo", "()Landroid/hardware/display/DeviceProductInfo;", "GetGetDeviceProductInfoHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeviceProductInfo", "()Landroid/hardware/display/DeviceProductInfo;", "GetGetDeviceProductInfoHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Hardware.Display.DeviceProductInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the product-specific information about the display or the directly connected
            device on the display chain.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the product-specific information about the display or the directly connected
            device on the display chain.
            For example, if the display is transitively connected, this field may contain product
            information about the intermediate device.
            Returns <c>null</c> if product information is not available.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getDeviceProductInfo()" title="Reference documentation">Java documentation for <code>android.view.Display.getDeviceProductInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayId">
      <MemberSignature Language="C#" Value="public virtual int DisplayId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayId" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.DisplayId" />
      <MemberSignature Language="F#" Value="member this.DisplayId : int" Usage="Android.Views.Display.DisplayId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplayId", "()I", "GetGetDisplayIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplayId", "()I", "GetGetDisplayIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the display id.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the display id.</para>
          <para>Each logical display has a unique id.
            The default display has id <c>#DEFAULT_DISPLAY</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getDisplayId()" title="Reference documentation">Java documentation for <code>android.view.Display.getDisplayId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlagPresentation">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagPresentation = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagPresentation = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.FlagPresentation" />
      <MemberSignature Language="F#" Value="val mutable FlagPresentation : Android.Views.DisplayFlags" Usage="Android.Views.Display.FlagPresentation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_PRESENTATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_PRESENTATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display is a presentation display.</summary>
        <remarks>
          <para>Display flag: Indicates that the display is a presentation display.</para>
          <para>This flag identifies secondary displays that are suitable for
            use as presentation displays such as external or wireless displays.  Applications
            may automatically project their content to presentation displays to provide
            richer second screen experiences.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#FLAG_PRESENTATION" title="Reference documentation">Java documentation for <code>android.view.Display.FLAG_PRESENTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="FlagPrivate">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagPrivate = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagPrivate = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.FlagPrivate" />
      <MemberSignature Language="F#" Value="val mutable FlagPrivate : Android.Views.DisplayFlags" Usage="Android.Views.Display.FlagPrivate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_PRIVATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_PRIVATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display is private.</summary>
        <remarks>
          <para>Display flag: Indicates that the display is private.  Only the application that
            owns the display and apps that are already on the display can create windows on it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#FLAG_PRIVATE" title="Reference documentation">Java documentation for <code>android.view.Display.FLAG_PRIVATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="FlagRound">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagRound = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagRound = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.FlagRound" />
      <MemberSignature Language="F#" Value="val mutable FlagRound : Android.Views.DisplayFlags" Usage="Android.Views.Display.FlagRound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_ROUND", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_ROUND", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display has a round shape.</summary>
        <remarks>
          <para>Display flag: Indicates that the display has a round shape.</para>
          <para>This flag identifies displays that are circular, elliptical or otherwise
            do not permit the user to see all the way to the logical corners of the display.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#FLAG_ROUND" title="Reference documentation">Java documentation for <code>android.view.Display.FLAG_ROUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayFlags Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DisplayFlags Flags" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Flags" />
      <MemberSignature Language="F#" Value="member this.Flags : Android.Views.DisplayFlags" Usage="Android.Views.Display.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFlags", "()I", "GetGetFlagsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a combination of flags that describe the capabilities of the display.</summary>
        <value>The display flags.</value>
        <remarks>
          <para>Returns a combination of flags that describe the capabilities of the display.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getFlags()" title="Reference documentation">Java documentation for <code>android.view.Display.getFlags()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="F:Android.Views.Display.FlagSupportsProtectedBuffers" />
        <altmember cref="F:Android.Views.Display.FlagSecure" />
        <altmember cref="F:Android.Views.Display.FlagPrivate" />
      </Docs>
    </Member>
    <Member MemberName="FlagSecure">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagSecure = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagSecure = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.FlagSecure" />
      <MemberSignature Language="F#" Value="val mutable FlagSecure : Android.Views.DisplayFlags" Usage="Android.Views.Display.FlagSecure" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_SECURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_SECURE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display has a secure video output and
            supports compositing secure surfaces.</summary>
        <remarks>
          <para>Display flag: Indicates that the display has a secure video output and
            supports compositing secure surfaces.</para>
          <para>If this flag is set then the display device has a secure video output
            and is capable of showing secure surfaces.  It may also be capable of
            showing <c>#FLAG_SUPPORTS_PROTECTED_BUFFERS protected buffers</c>.</para>
          <para>If this flag is not set then the display device may not have a secure video
            output; the user may see a blank region on the screen instead of
            the contents of secure surfaces or protected buffers.</para>
          <para>Secure surfaces are used to prevent content rendered into those surfaces
            by applications from appearing in screenshots or from being viewed
            on non-secure displays.  Protected buffers are used by secure video decoders
            for a similar purpose.</para>
          <para>An application creates a window with a secure surface by specifying the
            <c>WindowManager.LayoutParams#FLAG_SECURE</c> window flag.
            Likewise, an application creates a <c>SurfaceView</c> with a secure surface
            by calling <c>SurfaceView#setSecure</c> before attaching the secure view to
            its containing window.</para>
          <para>An application can use the absence of this flag as a hint that it should not create
            secure surfaces or protected buffers on this display because the content may
            not be visible.  For example, if the flag is not set then the application may
            choose not to show content on this display, show an informative error message,
            select an alternate content stream or adopt a different strategy for decoding
            content that does not rely on secure surfaces or protected buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#FLAG_SECURE" title="Reference documentation">Java documentation for <code>android.view.Display.FLAG_SECURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="FlagSupportsProtectedBuffers">
      <MemberSignature Language="C#" Value="public const Android.Views.DisplayFlags FlagSupportsProtectedBuffers = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Views.DisplayFlags FlagSupportsProtectedBuffers = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.FlagSupportsProtectedBuffers" />
      <MemberSignature Language="F#" Value="val mutable FlagSupportsProtectedBuffers : Android.Views.DisplayFlags" Usage="Android.Views.Display.FlagSupportsProtectedBuffers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_SUPPORTS_PROTECTED_BUFFERS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_SUPPORTS_PROTECTED_BUFFERS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Views.DisplayFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Display flag: Indicates that the display supports compositing content
            that is stored in protected graphics buffers.</summary>
        <remarks>
          <para>Display flag: Indicates that the display supports compositing content
            that is stored in protected graphics buffers.</para>
          <para>If this flag is set then the display device supports compositing protected buffers.</para>
          <para>If this flag is not set then the display device may not support compositing
            protected buffers; the user may see a blank region on the screen instead of
            the protected content.</para>
          <para>Secure (DRM) video decoders may allocate protected graphics buffers to request that
            a hardware-protected path be provided between the video decoder and the external
            display sink.  If a hardware-protected path is not available, then content stored
            in protected graphics buffers may not be composited.</para>
          <para>An application can use the absence of this flag as a hint that it should not use protected
            buffers for this display because the content may not be visible.  For example,
            if the flag is not set then the application may choose not to show content on this
            display, show an informative error message, select an alternate content stream
            or adopt a different strategy for decoding content that does not rely on
            protected buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#FLAG_SUPPORTS_PROTECTED_BUFFERS" title="Reference documentation">Java documentation for <code>android.view.Display.FLAG_SUPPORTS_PROTECTED_BUFFERS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="P:Android.Views.Display.Flags" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentSizeRange">
      <MemberSignature Language="C#" Value="public virtual void GetCurrentSizeRange (Android.Graphics.Point? outSmallestSize, Android.Graphics.Point? outLargestSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCurrentSizeRange(class Android.Graphics.Point outSmallestSize, class Android.Graphics.Point outLargestSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetCurrentSizeRange(Android.Graphics.Point,Android.Graphics.Point)" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentSizeRange : Android.Graphics.Point * Android.Graphics.Point -&gt; unit&#xA;override this.GetCurrentSizeRange : Android.Graphics.Point * Android.Graphics.Point -&gt; unit" Usage="display.GetCurrentSizeRange (outSmallestSize, outLargestSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCurrentSizeRange", "(Landroid/graphics/Point;Landroid/graphics/Point;)V", "GetGetCurrentSizeRange_Landroid_graphics_Point_Landroid_graphics_Point_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCurrentSizeRange", "(Landroid/graphics/Point;Landroid/graphics/Point;)V", "GetGetCurrentSizeRange_Landroid_graphics_Point_Landroid_graphics_Point_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSmallestSize" Type="Android.Graphics.Point" />
        <Parameter Name="outLargestSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSmallestSize">Filled in with the smallest width and height
            that the application will encounter, in pixels (not dp units).  The x
            (width) dimension here directly corresponds to
            <c>android.content.res.Configuration#smallestScreenWidthDp
            Configuration.smallestScreenWidthDp</c>, except the value here is in raw
            screen pixels rather than dp units.  Your application may of course
            still get smaller space yet if, for example, a soft keyboard is
            being displayed.</param>
        <param name="outLargestSize">Filled in with the largest width and height
            that the application will encounter, in pixels (not dp units).  Your
            application may of course still get larger space than this if,
            for example, screen decorations like the status bar are being hidden.</param>
        <summary>Return the range of display sizes an application can expect to encounter
            under normal operation, as long as there is no physical change in screen
            size.</summary>
        <remarks>
          <para>Return the range of display sizes an application can expect to encounter
            under normal operation, as long as there is no physical change in screen
            size.  This is basically the sizes you will see as the orientation
            changes, taking into account whatever screen decoration there is in
            each rotation.  For example, the status bar is always at the top of the
            screen, so it will reduce the height both in landscape and portrait, and
            the smallest height returned here will be the smaller of the two.
            
            This is intended for applications to get an idea of the range of sizes
            they will encounter while going through device rotations, to provide a
            stable UI through rotation.  The sizes here take into account all standard
            system decorations that reduce the size actually available to the
            application: the status bar, navigation bar, system bar, etc.  It does
            &lt;em&gt;not&lt;/em&gt; take into account more transient elements like an IME
            soft keyboard.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getCurrentSizeRange(android.graphics.Point,%20android.graphics.Point)" title="Reference documentation">Java documentation for <code>android.view.Display.getCurrentSizeRange(android.graphics.Point, android.graphics.Point)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetHdrCapabilities">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Display.HdrCapabilities? GetHdrCapabilities ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Display/HdrCapabilities GetHdrCapabilities() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetHdrCapabilities" />
      <MemberSignature Language="F#" Value="abstract member GetHdrCapabilities : unit -&gt; Android.Views.Display.HdrCapabilities&#xA;override this.GetHdrCapabilities : unit -&gt; Android.Views.Display.HdrCapabilities" Usage="display.GetHdrCapabilities " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getHdrCapabilities", "()Landroid/view/Display$HdrCapabilities;", "GetGetHdrCapabilitiesHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getHdrCapabilities", "()Landroid/view/Display$HdrCapabilities;", "GetGetHdrCapabilitiesHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display+HdrCapabilities</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the display's HDR capabilities.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getHdrCapabilities()" title="Reference documentation">Java documentation for <code>android.view.Display.getHdrCapabilities()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetrics">
      <MemberSignature Language="C#" Value="public virtual void GetMetrics (Android.Util.DisplayMetrics? outMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetMetrics(class Android.Util.DisplayMetrics outMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetMetrics(Android.Util.DisplayMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetMetrics : Android.Util.DisplayMetrics -&gt; unit&#xA;override this.GetMetrics : Android.Util.DisplayMetrics -&gt; unit" Usage="display.GetMetrics outMetrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetMetrics_Landroid_util_DisplayMetrics_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetMetrics_Landroid_util_DisplayMetrics_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outMetrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="outMetrics">A <c>DisplayMetrics</c> object which receives the display metrics.</param>
        <summary>Gets the size and density of this display.</summary>
        <remarks>
          <para>Gets the size and density of this display.</para>
          <para>The size returned does not necessarily represent the actual size (native resolution) of
            the display. The returned size might be adjusted to exclude certain system decor elements
            that are always visible, or the size might be scaled to provide compatibility with older
            applications that were originally designed for smaller displays.</para>
          <para>The returned size can also be different depending on the WindowManager associated with the
            display:
            &lt;ul&gt;
                &lt;li&gt;If metrics are requested from an activity (either using a WindowManager accessed by
                    <c>getWindowManager()</c> or <c>getSystemService(Context.WINDOW_SERVICE)</c>), the
                    returned metrics provide the size of the current app window. As a result, in
                    multi-window mode, the returned size can be smaller than the size of the device
                    screen.
                &lt;li&gt;If metrics are requested from a non-activity context (for example, the application
                    context, where the WindowManager is accessed by
                    <c>getApplicationContext().getSystemService(Context.WINDOW_SERVICE)</c>), the
                    returned size can vary depending on API level:
                    &lt;ul&gt;
                        &lt;li&gt;API level 29 and below &amp;mdash; The returned metrics provide the size of the
                            entire display (based on current rotation) minus system decoration areas.
                        &lt;li&gt;API level 30 and above &amp;mdash; The returned metrics provide the size of the
                            top running activity in the current process. If the current process has no
                            running activities, the metrics provide the size of the default display of
                            the device, including system decoration areas.
                    &lt;/ul&gt;
            &lt;/ul&gt;</para>
          <para>This member is deprecated. Use <c>WindowMetrics#getBounds()</c> to get the dimensions of the application
                window. Use <c>WindowMetrics#getDensity()</c> to get the density of the application
                window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getMetrics(android.util.DisplayMetrics)" title="Reference documentation">Java documentation for <code>android.view.Display.getMetrics(android.util.DisplayMetrics)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMode">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Display.Mode? GetMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Display/Mode GetMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetMode" />
      <MemberSignature Language="F#" Value="abstract member GetMode : unit -&gt; Android.Views.Display.Mode&#xA;override this.GetMode : unit -&gt; Android.Views.Display.Mode" Usage="display.GetMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMode", "()Landroid/view/Display$Mode;", "GetGetModeHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMode", "()Landroid/view/Display$Mode;", "GetGetModeHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display+Mode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the active mode of the display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getMode()" title="Reference documentation">Java documentation for <code>android.view.Display.getMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRealMetrics">
      <MemberSignature Language="C#" Value="public virtual void GetRealMetrics (Android.Util.DisplayMetrics? outMetrics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRealMetrics(class Android.Util.DisplayMetrics outMetrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetRealMetrics(Android.Util.DisplayMetrics)" />
      <MemberSignature Language="F#" Value="abstract member GetRealMetrics : Android.Util.DisplayMetrics -&gt; unit&#xA;override this.GetRealMetrics : Android.Util.DisplayMetrics -&gt; unit" Usage="display.GetRealMetrics outMetrics" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRealMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetRealMetrics_Landroid_util_DisplayMetrics_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRealMetrics", "(Landroid/util/DisplayMetrics;)V", "GetGetRealMetrics_Landroid_util_DisplayMetrics_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outMetrics" Type="Android.Util.DisplayMetrics" />
      </Parameters>
      <Docs>
        <param name="outMetrics">A <c>DisplayMetrics</c> object to receive the metrics.</param>
        <summary>Gets the size of the largest region of the display accessible to an app in the current system
            state, without subtracting any window decor or applying scaling factors.</summary>
        <remarks>
          <para>Gets the size of the largest region of the display accessible to an app in the current system
            state, without subtracting any window decor or applying scaling factors.</para>
          <para>The size is adjusted based on the current rotation of the display.</para>
          <para />
          <para>The returned size will fall into one of these scenarios:
            &lt;ol&gt;
            &lt;li&gt;The device has no partitions on the display. The returned value is the largest region
            of the display accessible to an app in the current system state, regardless of windowing
            mode.&lt;/li&gt;
            &lt;li&gt;The device divides a single display into multiple partitions. An application is
            restricted to a portion of the display. This is common in devices where the display changes
            size, such as foldables or large screens. The returned size will match the portion of
            the display the application is restricted to.&lt;/li&gt;
            &lt;li&gt;The window manager is emulating a different display size, using <c>adb shell wm
            size</c>. The returned size will match the emulated display size.&lt;/li&gt;
            &lt;/ol&gt;
            &lt;/p&gt;</para>
          <para>The returned value is &lt;b&gt;unsuitable to use when sizing and placing UI elements&lt;/b&gt;, since it
            does not reflect the application window size in any of these scenarios.
            <c>WindowManager#getCurrentWindowMetrics()</c> is an alternative that returns the size
            of the current application window, even if the window is on a device with a partitioned
            display. This helps prevent UI bugs where UI elements are misaligned or placed beyond the
            bounds of the window.</para>
          <para />
          <para>Handling multi-window mode correctly is necessary since applications are not always
            fullscreen. A user on a large screen device, such as a tablet or ChromeOS devices, is more
            likely to use multi-window modes.</para>
          <para />
          <para>For example, consider a device with a display partitioned into two halves. The user may have
            a fullscreen application open on the first partition. They may have two applications open in
            split screen (an example of multi-window mode) on the second partition, with each application
            consuming half of the partition. In this case,
            <c>WindowManager#getCurrentWindowMetrics()</c> reports the fullscreen window is half of the
            screen in size, and each split screen window is a quarter of the screen in size. On the other
            hand, <c>#getRealMetrics</c> reports half of the screen size for all windows, since the
            application windows are all restricted to their respective partitions.
            &lt;/p&gt;</para>
          <para>This member is deprecated. Use <c>WindowManager#getCurrentWindowMetrics()</c> to identify the current size
            of the activity window. UI-related work, such as choosing UI layouts, should rely
            upon <c>WindowMetrics#getBounds()</c>. Use <c>Configuration#densityDpi</c> to
            get the current density.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRealMetrics(android.util.DisplayMetrics)" title="Reference documentation">Java documentation for <code>android.view.Display.getRealMetrics(android.util.DisplayMetrics)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRealSize">
      <MemberSignature Language="C#" Value="public virtual void GetRealSize (Android.Graphics.Point? outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRealSize(class Android.Graphics.Point outSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetRealSize(Android.Graphics.Point)" />
      <MemberSignature Language="F#" Value="abstract member GetRealSize : Android.Graphics.Point -&gt; unit&#xA;override this.GetRealSize : Android.Graphics.Point -&gt; unit" Usage="display.GetRealSize outSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRealSize", "(Landroid/graphics/Point;)V", "GetGetRealSize_Landroid_graphics_Point_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRealSize", "(Landroid/graphics/Point;)V", "GetGetRealSize_Landroid_graphics_Point_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSize">Set to the real size of the display.</param>
        <summary>Gets the size of the largest region of the display accessible to an app in the current system
            state, without subtracting any window decor or applying scaling factors.</summary>
        <remarks>
          <para>Gets the size of the largest region of the display accessible to an app in the current system
            state, without subtracting any window decor or applying scaling factors.</para>
          <para>The size is adjusted based on the current rotation of the display.</para>
          <para />
          <para>The returned size will fall into one of these scenarios:
            &lt;ol&gt;
            &lt;li&gt;The device has no partitions on the display. The returned value is the largest region
            of the display accessible to an app in the current system state, regardless of windowing
            mode.&lt;/li&gt;
            &lt;li&gt;The device divides a single display into multiple partitions. An application is
            restricted to a portion of the display. This is common in devices where the display changes
            size, such as foldables or large screens. The returned size will match the portion of
            the display the application is restricted to.&lt;/li&gt;
            &lt;li&gt;The window manager is emulating a different display size, using <c>adb shell wm
            size</c>. The returned size will match the emulated display size.&lt;/li&gt;
            &lt;/ol&gt;
            &lt;/p&gt;</para>
          <para>The returned value is &lt;b&gt;unsuitable to use when sizing and placing UI elements&lt;/b&gt;, since it
            does not reflect the application window size in any of these scenarios.
            <c>WindowManager#getCurrentWindowMetrics()</c> is an alternative that returns the size
            of the current application window, even if the window is on a device with a partitioned
            display. This helps prevent UI bugs where UI elements are misaligned or placed beyond the
            bounds of the window.</para>
          <para />
          <para>Handling multi-window mode correctly is necessary since applications are not always
            fullscreen. A user on a large screen device, such as a tablet or ChromeOS devices, is more
            likely to use multi-window modes.</para>
          <para />
          <para>For example, consider a device with a display partitioned into two halves. The user may have
            a fullscreen application open on the first partition. They may have two applications open in
            split screen (an example of multi-window mode) on the second partition, with each application
            consuming half of the partition. In this case,
            <c>WindowManager#getCurrentWindowMetrics()</c> reports the fullscreen window is half of the
            screen in size, and each split screen window is a quarter of the screen in size. On the other
            hand, <c>#getRealSize</c> reports half of the screen size for all windows, since the
            application windows are all restricted to their respective partitions.
            &lt;/p&gt;</para>
          <para>This member is deprecated. Use <c>WindowManager#getCurrentWindowMetrics()</c> to identify the current size
            of the activity window. UI-related work, such as choosing UI layouts, should rely
            upon <c>WindowMetrics#getBounds()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRealSize(android.graphics.Point)" title="Reference documentation">Java documentation for <code>android.view.Display.getRealSize(android.graphics.Point)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRectSize">
      <MemberSignature Language="C#" Value="public virtual void GetRectSize (Android.Graphics.Rect? outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRectSize(class Android.Graphics.Rect outSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetRectSize(Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetRectSize : Android.Graphics.Rect -&gt; unit&#xA;override this.GetRectSize : Android.Graphics.Rect -&gt; unit" Usage="display.GetRectSize outSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRectSize", "(Landroid/graphics/Rect;)V", "GetGetRectSize_Landroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRectSize", "(Landroid/graphics/Rect;)V", "GetGetRectSize_Landroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="outSize">A <c>Rect</c> object to receive the size information.</param>
        <summary>Gets the size of the display as a rectangle, in pixels.</summary>
        <remarks>
          <para>Gets the size of the display as a rectangle, in pixels.</para>
          <para>This member is deprecated. Use <c>WindowMetrics#getBounds()</c> to get the dimensions of the application
            window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRectSize(android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.view.Display.getRectSize(android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 13" />
        <altmember cref="M:Android.Views.Display.GetSize(Android.Graphics.Point)" />
      </Docs>
    </Member>
    <Member MemberName="GetRoundedCorner">
      <MemberSignature Language="C#" Value="public virtual Android.Views.RoundedCorner? GetRoundedCorner (int position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.RoundedCorner GetRoundedCorner(int32 position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetRoundedCorner(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetRoundedCorner : int -&gt; Android.Views.RoundedCorner&#xA;override this.GetRoundedCorner : int -&gt; Android.Views.RoundedCorner" Usage="display.GetRoundedCorner position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRoundedCorner", "(I)Landroid/view/RoundedCorner;", "GetGetRoundedCorner_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRoundedCorner", "(I)Landroid/view/RoundedCorner;", "GetGetRoundedCorner_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.RoundedCorner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "PositionTopLeft", "PositionTopRight", "PositionBottomRight", "PositionBottomLeft" }, Type="Android.Views.RoundedCorner")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "PositionTopLeft", "PositionTopRight", "PositionBottomRight", "PositionBottomLeft" }, Type="Android.Views.RoundedCorner")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="position">the position of the rounded corner on the display.</param>
        <summary>Returns the <c>RoundedCorner</c> of the given position if there is one.</summary>
        <returns>the rounded corner of the given position. Returns <c>null</c> if there is none.</returns>
        <remarks>
          <para>Returns the <c>RoundedCorner</c> of the given position if there is one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRoundedCorner(int)" title="Reference documentation">Java documentation for <code>android.view.Display.getRoundedCorner(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSize">
      <MemberSignature Language="C#" Value="public virtual void GetSize (Android.Graphics.Point? outSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSize(class Android.Graphics.Point outSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetSize(Android.Graphics.Point)" />
      <MemberSignature Language="F#" Value="abstract member GetSize : Android.Graphics.Point -&gt; unit&#xA;override this.GetSize : Android.Graphics.Point -&gt; unit" Usage="display.GetSize outSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSize", "(Landroid/graphics/Point;)V", "GetGetSize_Landroid_graphics_Point_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSize", "(Landroid/graphics/Point;)V", "GetGetSize_Landroid_graphics_Point_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outSize" Type="Android.Graphics.Point" />
      </Parameters>
      <Docs>
        <param name="outSize">A <c>Point</c> object which receives the display size information.</param>
        <summary>Gets the size of the display in pixels.</summary>
        <remarks>
          <para>Gets the size of the display in pixels.</para>
          <para>The return value does not necessarily represent the actual size (native resolution) of the
            display. The returned size might be adjusted to exclude certain system decor elements that
            are always visible, or the size might be scaled to provide compatibility with older
            applications that were originally designed for smaller displays.</para>
          <para>The returned size can also be different depending on the WindowManager bound to the
            display:
            &lt;ul&gt;
                &lt;li&gt;If size is requested from an activity (either using a WindowManager accessed by
                    <c>getWindowManager()</c> or <c>getSystemService(Context.WINDOW_SERVICE)</c>), the
                    size of the current app window is returned. As a result, in multi-window mode, the
                    returned size can be smaller than the size of the device screen.
                &lt;li&gt;If size is requested from a non-activity context (for example, the application
                    context, where the WindowManager is accessed by
                    <c>getApplicationContext().getSystemService(Context.WINDOW_SERVICE)</c>), the
                    returned size can vary depending on API level:
                    &lt;ul&gt;
                        &lt;li&gt;API level 29 and below &amp;mdash; The size of the entire display (based on
                            current rotation) minus system decoration areas is returned.
                        &lt;li&gt;API level 30 and above &amp;mdash; The size of the top running activity in the
                            current process is returned. If the current process has no running
                            activities, the size of the device default display, including system
                            decoration areas, is returned.
                    &lt;/ul&gt;
            &lt;/ul&gt;</para>
          <para>For layout purposes, apps should make a request from an activity context to obtain the
            size of the display area available for app content.</para>
          <para>This member is deprecated. Use <c>WindowMetrics</c> instead. Obtain a <c>WindowMetrics</c> instance by
                calling <c>WindowManager#getCurrentWindowMetrics()</c>, then call
                <c>WindowMetrics#getBounds()</c> to get the dimensions of the application window.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getSize(android.graphics.Point)" title="Reference documentation">Java documentation for <code>android.view.Display.getSize(android.graphics.Point)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedModes">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Display.Mode[]? GetSupportedModes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.Display/Mode[] GetSupportedModes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetSupportedModes" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedModes : unit -&gt; Android.Views.Display.Mode[]&#xA;override this.GetSupportedModes : unit -&gt; Android.Views.Display.Mode[]" Usage="display.GetSupportedModes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedModes", "()[Landroid/view/Display$Mode;", "GetGetSupportedModesHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedModes", "()[Landroid/view/Display$Mode;", "GetGetSupportedModesHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Display+Mode[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the supported modes of this display.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getSupportedModes()" title="Reference documentation">Java documentation for <code>android.view.Display.getSupportedModes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedRefreshRates">
      <MemberSignature Language="C#" Value="public virtual float[]? GetSupportedRefreshRates ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32[] GetSupportedRefreshRates() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.GetSupportedRefreshRates" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedRefreshRates : unit -&gt; single[]&#xA;override this.GetSupportedRefreshRates : unit -&gt; single[]" Usage="display.GetSupportedRefreshRates " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedRefreshRates", "()[F", "GetGetSupportedRefreshRatesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedRefreshRates", "()[F", "GetGetSupportedRefreshRatesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get the supported refresh rates of this display in frames per second.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the supported refresh rates of this display in frames per second.</para>
          <para>This method only returns refresh rates for the display's default modes. For more options, use
            <c>#getSupportedModes()</c>.</para>
          <para>This member is deprecated. use <c>#getSupportedModes()</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getSupportedRefreshRates()" title="Reference documentation">Java documentation for <code>android.view.Display.getSupportedRefreshRates()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HdrSdrRatio">
      <MemberSignature Language="C#" Value="public virtual float HdrSdrRatio { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 HdrSdrRatio" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.HdrSdrRatio" />
      <MemberSignature Language="F#" Value="member this.HdrSdrRatio : single" Usage="Android.Views.Display.HdrSdrRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHdrSdrRatio", "()F", "GetGetHdrSdrRatioHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHdrSdrRatio", "()F", "GetGetHdrSdrRatioHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>The current hdr/sdr ratio expressed as the ratio of targetHdrPeakBrightnessInNits /
                    targetSdrWhitePointInNits. If <c>#isHdrSdrRatioAvailable()</c> is false, this
                    always returns 1.0f.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getHdrSdrRatio()" title="Reference documentation">Java documentation for <code>android.view.Display.getHdrSdrRatio()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Views.Display.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. Use <c>WindowMetrics#getBounds()#height()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getHeight()" title="Reference documentation">Java documentation for <code>android.view.Display.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InvalidDisplay">
      <MemberSignature Language="C#" Value="public const int InvalidDisplay = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InvalidDisplay = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Views.Display.InvalidDisplay" />
      <MemberSignature Language="F#" Value="val mutable InvalidDisplay : int" Usage="Android.Views.Display.InvalidDisplay" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INVALID_DISPLAY", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INVALID_DISPLAY", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Invalid display id.</summary>
        <remarks>
          <para>Invalid display id.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#INVALID_DISPLAY" title="Reference documentation">Java documentation for <code>android.view.Display.INVALID_DISPLAY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHdr">
      <MemberSignature Language="C#" Value="public virtual bool IsHdr { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHdr" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.IsHdr" />
      <MemberSignature Language="F#" Value="member this.IsHdr : bool" Usage="Android.Views.Display.IsHdr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHdr", "()Z", "GetIsHdrHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHdr", "()Z", "GetIsHdrHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this display supports any HDR type.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns whether this display supports any HDR type.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#isHdr()" title="Reference documentation">Java documentation for <code>android.view.Display.isHdr()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHdrSdrRatioAvailable">
      <MemberSignature Language="C#" Value="public virtual bool IsHdrSdrRatioAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHdrSdrRatioAvailable" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.IsHdrSdrRatioAvailable" />
      <MemberSignature Language="F#" Value="member this.IsHdrSdrRatioAvailable : bool" Usage="Android.Views.Display.IsHdrSdrRatioAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHdrSdrRatioAvailable", "()Z", "GetIsHdrSdrRatioAvailableHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHdrSdrRatioAvailable", "()Z", "GetIsHdrSdrRatioAvailableHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>Whether the display supports reporting an hdr/sdr ratio. If this is false,
                    <c>#getHdrSdrRatio()</c> will always be 1.0f</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#isHdrSdrRatioAvailable()" title="Reference documentation">Java documentation for <code>android.view.Display.isHdrSdrRatioAvailable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMinimalPostProcessingSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsMinimalPostProcessingSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMinimalPostProcessingSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.IsMinimalPostProcessingSupported" />
      <MemberSignature Language="F#" Value="member this.IsMinimalPostProcessingSupported : bool" Usage="Android.Views.Display.IsMinimalPostProcessingSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMinimalPostProcessingSupported", "()Z", "GetIsMinimalPostProcessingSupportedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMinimalPostProcessingSupported", "()Z", "GetIsMinimalPostProcessingSupportedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the connected display can be switched into a mode with minimal
            post processing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns true if the connected display can be switched into a mode with minimal
            post processing.</para>
          <para>If the Display sink is connected via HDMI, this method will return true if the
            display supports either Auto Low Latency Mode or Game Content Type.</para>
          <para>If the Display sink has an internal connection or uses some other protocol than
            HDMI, this method will return true if the sink can be switched into an
            implementation-defined low latency image processing mode.</para>
          <para>The ability to switch to a mode with minimal post processing may be disabled
            by a user setting in the system settings menu. In that case, this method returns
            false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#isMinimalPostProcessingSupported()" title="Reference documentation">Java documentation for <code>android.view.Display.isMinimalPostProcessingSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.IsValid" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="Android.Views.Display.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isValid", "()Z", "GetIsValidHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isValid", "()Z", "GetIsValidHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this display is still valid, false if the display has been removed.</summary>
        <value>True if the display is still valid.</value>
        <remarks>
          <para>Returns true if this display is still valid, false if the display has been removed.
            
            If the display is invalid, then the methods of this class will
            continue to report the most recently observed display information.
            However, it is unwise (and rather fruitless) to continue using a
            <c>Display</c> object after the display's demise.
            
            It's possible for a display that was previously invalid to become
            valid again if a display with the same id is reconnected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#isValid()" title="Reference documentation">Java documentation for <code>android.view.Display.isValid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="IsWideColorGamut">
      <MemberSignature Language="C#" Value="public virtual bool IsWideColorGamut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWideColorGamut" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.IsWideColorGamut" />
      <MemberSignature Language="F#" Value="member this.IsWideColorGamut : bool" Usage="Android.Views.Display.IsWideColorGamut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWideColorGamut", "()Z", "GetIsWideColorGamutHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWideColorGamut", "()Z", "GetIsWideColorGamutHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this display can be used to display wide color gamut content.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns whether this display can be used to display wide color gamut content.
            This does not necessarily mean the device itself can render wide color gamut
            content. To ensure wide color gamut content can be produced, refer to
            <c>Configuration#isScreenWideColorGamut()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#isWideColorGamut()" title="Reference documentation">Java documentation for <code>android.view.Display.isWideColorGamut()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.Display.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Android.Views.Display.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the display.</summary>
        <value>The display's name.</value>
        <remarks>
          <para>Gets the name of the display.</para>
          <para>Note that some displays may be renamed by the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getName()" title="Reference documentation">Java documentation for <code>android.view.Display.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="Orientation">
      <MemberSignature Language="C#" Value="public virtual int Orientation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Orientation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Orientation" />
      <MemberSignature Language="F#" Value="member this.Orientation : int" Usage="Android.Views.Display.Orientation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOrientation", "()I", "GetGetOrientationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOrientation", "()I", "GetGetOrientationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>orientation of this display.</value>
        <remarks>
          <para>This member is deprecated. use <c>#getRotation</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getOrientation()" title="Reference documentation">Java documentation for <code>android.view.Display.getOrientation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PixelFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Format PixelFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.Format PixelFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.PixelFormat" />
      <MemberSignature Language="F#" Value="member this.PixelFormat : Android.Graphics.Format" Usage="Android.Views.Display.PixelFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPixelFormat", "()I", "GetGetPixelFormatHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPixelFormat", "()I", "GetGetPixelFormatHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the pixel format of the display.</summary>
        <value>One of the constants defined in <c>android.graphics.PixelFormat</c>.</value>
        <remarks>
          <para>Gets the pixel format of the display.</para>
          <para>This member is deprecated. This method is no longer supported.
            The result is always <c>PixelFormat#RGBA_8888</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getPixelFormat()" title="Reference documentation">Java documentation for <code>android.view.Display.getPixelFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PreferredWideGamutColorSpace">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ColorSpace? PreferredWideGamutColorSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.ColorSpace PreferredWideGamutColorSpace" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.PreferredWideGamutColorSpace" />
      <MemberSignature Language="F#" Value="member this.PreferredWideGamutColorSpace : Android.Graphics.ColorSpace" Usage="Android.Views.Display.PreferredWideGamutColorSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferredWideGamutColorSpace", "()Landroid/graphics/ColorSpace;", "GetGetPreferredWideGamutColorSpaceHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferredWideGamutColorSpace", "()Landroid/graphics/ColorSpace;", "GetGetPreferredWideGamutColorSpaceHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ColorSpace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the preferred wide color space of the Display.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the preferred wide color space of the Display.
            The returned wide gamut color space is based on hardware capability and
            is preferred by the composition pipeline.
            Returns null if the display doesn't support wide color gamut.
            <c>Display#isWideColorGamut()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getPreferredWideGamutColorSpace()" title="Reference documentation">Java documentation for <code>android.view.Display.getPreferredWideGamutColorSpace()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PresentationDeadlineNanos">
      <MemberSignature Language="C#" Value="public virtual long PresentationDeadlineNanos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 PresentationDeadlineNanos" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.PresentationDeadlineNanos" />
      <MemberSignature Language="F#" Value="member this.PresentationDeadlineNanos : int64" Usage="Android.Views.Display.PresentationDeadlineNanos" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPresentationDeadlineNanos", "()J", "GetGetPresentationDeadlineNanosHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPresentationDeadlineNanos", "()J", "GetGetPresentationDeadlineNanosHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is how far in advance a buffer must be queued for presentation at
            a given time.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This is how far in advance a buffer must be queued for presentation at
            a given time.  If you want a buffer to appear on the screen at
            time N, you must submit the buffer before (N - presentationDeadline).</para>
          <para>The desired presentation time for GLES rendering may be set with
            <c>android.opengl.EGLExt#eglPresentationTimeANDROID</c>.  For video decoding, use
            <c>android.media.MediaCodec#releaseOutputBuffer(int, long)</c>.  Times are
            expressed in nanoseconds, using the system monotonic clock
            (<c>System#nanoTime</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getPresentationDeadlineNanos()" title="Reference documentation">Java documentation for <code>android.view.Display.getPresentationDeadlineNanos()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshRate">
      <MemberSignature Language="C#" Value="public virtual float RefreshRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 RefreshRate" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.RefreshRate" />
      <MemberSignature Language="F#" Value="member this.RefreshRate : single" Usage="Android.Views.Display.RefreshRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRefreshRate", "()F", "GetGetRefreshRateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRefreshRate", "()F", "GetGetRefreshRateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the refresh rate of this display in frames per second.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the refresh rate of this display in frames per second.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRefreshRate()" title="Reference documentation">Java documentation for <code>android.view.Display.getRefreshRate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHdrSdrRatioChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RegisterHdrSdrRatioChangedListener (Java.Util.Concurrent.IExecutor executor, Java.Util.Functions.IConsumer listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterHdrSdrRatioChangedListener(class Java.Util.Concurrent.IExecutor executor, class Java.Util.Functions.IConsumer listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.RegisterHdrSdrRatioChangedListener(Java.Util.Concurrent.IExecutor,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member RegisterHdrSdrRatioChangedListener : Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.RegisterHdrSdrRatioChangedListener : Java.Util.Concurrent.IExecutor * Java.Util.Functions.IConsumer -&gt; unit" Usage="display.RegisterHdrSdrRatioChangedListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerHdrSdrRatioChangedListener", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetRegisterHdrSdrRatioChangedListener_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerHdrSdrRatioChangedListener", "(Ljava/util/concurrent/Executor;Ljava/util/function/Consumer;)V", "GetRegisterHdrSdrRatioChangedListener_Ljava_util_concurrent_Executor_Ljava_util_function_Consumer_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="executor">The executor to invoke the listener on</param>
        <param name="listener">The listener to invoke when the HDR/SDR ratio changes</param>
        <summary>Registers a listener that will be invoked whenever the display's hdr/sdr ratio has changed.</summary>
        <remarks>
          <para>Registers a listener that will be invoked whenever the display's hdr/sdr ratio has changed.
            After receiving the callback on the specified Executor, call <c>#getHdrSdrRatio()</c> to
            get the updated value.
            If <c>#isHdrSdrRatioAvailable()</c> is false, then an IllegalStateException will be thrown</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#registerHdrSdrRatioChangedListener(java.util.concurrent.Executor,%20java.util.function.Consumer%3Candroid.view.Display%3E)" title="Reference documentation">Java documentation for <code>android.view.Display.registerHdrSdrRatioChangedListener(java.util.concurrent.Executor, java.util.function.Consumer&lt;android.view.Display&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.SurfaceOrientation Rotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.SurfaceOrientation Rotation" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Rotation" />
      <MemberSignature Language="F#" Value="member this.Rotation : Android.Views.SurfaceOrientation" Usage="Android.Views.Display.Rotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRotation", "()I", "GetGetRotationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRotation", "()I", "GetGetRotationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.SurfaceOrientation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the rotation of the screen from its "natural" orientation.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the rotation of the screen from its "natural" orientation.
            The returned value may be <c>Surface#ROTATION_0 Surface.ROTATION_0</c>
            (no rotation), <c>Surface#ROTATION_90 Surface.ROTATION_90</c>,
            <c>Surface#ROTATION_180 Surface.ROTATION_180</c>, or
            <c>Surface#ROTATION_270 Surface.ROTATION_270</c>.  For
            example, if a device has a naturally tall screen, and the user has
            turned it on its side to go into a landscape orientation, the value
            returned here may be either <c>Surface#ROTATION_90 Surface.ROTATION_90</c>
            or <c>Surface#ROTATION_270 Surface.ROTATION_270</c> depending on
            the direction it was turned.  The angle is the rotation of the drawn
            graphics on the screen, which is the opposite direction of the physical
            rotation of the device.  For example, if the device is rotated 90
            degrees counter-clockwise, to compensate rendering will be rotated by
            90 degrees clockwise and thus the returned value here will be
            <c>Surface#ROTATION_90 Surface.ROTATION_90</c>.
            
            This rotation value will match the results of <c>#getMetrics</c>: this means that the
            rotation value will correspond to the activity if accessed through the activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getRotation()" title="Reference documentation">Java documentation for <code>android.view.Display.getRotation()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Shape">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayShape Shape { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.DisplayShape Shape" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Shape" />
      <MemberSignature Language="F#" Value="member this.Shape : Android.Views.DisplayShape" Usage="Android.Views.Display.Shape" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getShape", "()Landroid/view/DisplayShape;", "GetGetShapeHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getShape", "()Landroid/view/DisplayShape;", "GetGetShapeHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayShape</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>DisplayShape</c> which is based on display coordinates.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the <c>DisplayShape</c> which is based on display coordinates.
            
            To get the <c>DisplayShape</c> based on the window frame, use
            <c>WindowInsets#getDisplayShape()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getShape()" title="Reference documentation">Java documentation for <code>android.view.Display.getShape()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Views.DisplayState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Views.DisplayState State" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.State" />
      <MemberSignature Language="F#" Value="member this.State : Android.Views.DisplayState" Usage="Android.Views.Display.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.DisplayState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the state of the display, such as whether it is on or off.</summary>
        <value>The state of the display: one of <c>#STATE_OFF</c>, <c>#STATE_ON</c>,
            <c>#STATE_DOZE</c>, <c>#STATE_DOZE_SUSPEND</c>, <c>#STATE_ON_SUSPEND</c>, or
            <c>#STATE_UNKNOWN</c>.</value>
        <remarks>
          <para>Gets the state of the display, such as whether it is on or off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getState()" title="Reference documentation">Java documentation for <code>android.view.Display.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.Display.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.Display.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterHdrSdrRatioChangedListener">
      <MemberSignature Language="C#" Value="public virtual void UnregisterHdrSdrRatioChangedListener (Java.Util.Functions.IConsumer listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterHdrSdrRatioChangedListener(class Java.Util.Functions.IConsumer listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.Display.UnregisterHdrSdrRatioChangedListener(Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterHdrSdrRatioChangedListener : Java.Util.Functions.IConsumer -&gt; unit&#xA;override this.UnregisterHdrSdrRatioChangedListener : Java.Util.Functions.IConsumer -&gt; unit" Usage="display.UnregisterHdrSdrRatioChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterHdrSdrRatioChangedListener", "(Ljava/util/function/Consumer;)V", "GetUnregisterHdrSdrRatioChangedListener_Ljava_util_function_Consumer_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterHdrSdrRatioChangedListener", "(Ljava/util/function/Consumer;)V", "GetUnregisterHdrSdrRatioChangedListener_Ljava_util_function_Consumer_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="listener">The previously
                             <c>#registerHdrSdrRatioChangedListener(Executor, Consumer) registered</c>
                             hdr/sdr ratio listener to remove.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#unregisterHdrSdrRatioChangedListener(java.util.function.Consumer%3Candroid.view.Display%3E)" title="Reference documentation">Java documentation for <code>android.view.Display.unregisterHdrSdrRatioChangedListener(java.util.function.Consumer&lt;android.view.Display&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Views.Display.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Views.Display.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "GetGetWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This member is deprecated. Use <c>WindowMetrics#getBounds#width()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/Display#getWidth()" title="Reference documentation">Java documentation for <code>android.view.Display.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
