<Type Name="IScrollCaptureCallback" FullName="Android.Views.IScrollCaptureCallback">
  <TypeSignature Language="C#" Value="public interface IScrollCaptureCallback : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IScrollCaptureCallback implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Views.IScrollCaptureCallback" />
  <TypeSignature Language="F#" Value="type IScrollCaptureCallback = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/ScrollCaptureCallback", "", "Android.Views.IScrollCaptureCallbackInvoker", ApiSince=31)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/ScrollCaptureCallback", "", "Android.Views.IScrollCaptureCallbackInvoker", ApiSince=31)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A ScrollCaptureCallback is responsible for providing rendered snapshots of scrolling content for
            the scroll capture system.</summary>
    <remarks>
      <para>A ScrollCaptureCallback is responsible for providing rendered snapshots of scrolling content for
            the scroll capture system. A single callback is responsible for providing support to a single
            scrolling UI element. At request time, the system will select the best candidate from among all
            callbacks registered within the window.</para>
      <para>A callback is assigned to a View using <c>View#setScrollCaptureCallback</c>, or to the window as
            <c>Window#registerScrollCaptureCallback</c>. The point where the callback is registered defines
            the frame of reference for the bounds measurements used.</para>
      <para>&lt;b&gt;Terminology&lt;/b&gt;
            &lt;dl&gt;
            &lt;dt&gt;Containing View&lt;/dt&gt;
            &lt;dd&gt;The view on which this callback is attached, or the root view of the window if the callback
            is assigned  directly to a window.&lt;/dd&gt;
            
            &lt;dt&gt;Scroll Bounds&lt;/dt&gt;
            &lt;dd&gt;A rectangle which describes an area within the containing view where scrolling content
            appears. This may be the entire view or any rectangle within. This defines a frame of reference
            for requests as well as the width and maximum height of a single request.&lt;/dd&gt;
            
            &lt;dt&gt;Scroll Delta&lt;/dt&gt;
            &lt;dd&gt;The distance the scroll position has moved since capture started. Implementations are
            responsible for tracking changes in vertical scroll position during capture. This is required to
            map the capture area to the correct location, given the current scroll position.
            
            &lt;dt&gt;Capture Area&lt;/dt&gt;
            &lt;dd&gt;A rectangle which describes the area to capture, relative to scroll bounds. The vertical
            position remains relative to the starting scroll position and any movement since ("Scroll Delta")
            should be subtracted to locate the correct local position, and scrolled into view as necessary.
            &lt;/dd&gt;
            &lt;/dl&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/ScrollCaptureCallback" title="Reference documentation">Java documentation for <code>android.view.ScrollCaptureCallback</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnScrollCaptureEnd">
      <MemberSignature Language="C#" Value="public void OnScrollCaptureEnd (Java.Lang.IRunnable onReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScrollCaptureEnd(class Java.Lang.IRunnable onReady) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IScrollCaptureCallback.OnScrollCaptureEnd(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollCaptureEnd : Java.Lang.IRunnable -&gt; unit" Usage="iScrollCaptureCallback.OnScrollCaptureEnd onReady" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollCaptureEnd", "(Ljava/lang/Runnable;)V", "GetOnScrollCaptureEnd_Ljava_lang_Runnable_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollCaptureEnd", "(Ljava/lang/Runnable;)V", "GetOnScrollCaptureEnd_Ljava_lang_Runnable_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onReady" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="onReady">a callback to inform the system that the application has completed any
                           cleanup and is ready to become visible</param>
        <summary>Signals that capture has ended.</summary>
        <remarks>
          <para>Signals that capture has ended. Implementations should release any temporary resources or
            references to objects in use during the capture. Any resources obtained from the session are
            now invalid and attempts to use them after this point may throw an exception.</para>
          <para>The window should be returned to its original state when capture started. At a minimum, the
            content should be scrolled to its original position.</para>
          <para>
            <c>Runnable#run onReady.run</c> should be called as soon as possible after the window is
            ready for normal interactive use. After the callback (or after a timeout, if not called) the
            screenshot tool will be dismissed and the window may become visible to the user at any time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ScrollCaptureCallback#onScrollCaptureEnd(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.ScrollCaptureCallback.onScrollCaptureEnd(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScrollCaptureImageRequest">
      <MemberSignature Language="C#" Value="public void OnScrollCaptureImageRequest (Android.Views.ScrollCaptureSession session, Android.OS.CancellationSignal signal, Android.Graphics.Rect captureArea, Java.Util.Functions.IConsumer onComplete);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScrollCaptureImageRequest(class Android.Views.ScrollCaptureSession session, class Android.OS.CancellationSignal signal, class Android.Graphics.Rect captureArea, class Java.Util.Functions.IConsumer onComplete) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IScrollCaptureCallback.OnScrollCaptureImageRequest(Android.Views.ScrollCaptureSession,Android.OS.CancellationSignal,Android.Graphics.Rect,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollCaptureImageRequest : Android.Views.ScrollCaptureSession * Android.OS.CancellationSignal * Android.Graphics.Rect * Java.Util.Functions.IConsumer -&gt; unit" Usage="iScrollCaptureCallback.OnScrollCaptureImageRequest (session, signal, captureArea, onComplete)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollCaptureImageRequest", "(Landroid/view/ScrollCaptureSession;Landroid/os/CancellationSignal;Landroid/graphics/Rect;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureImageRequest_Landroid_view_ScrollCaptureSession_Landroid_os_CancellationSignal_Landroid_graphics_Rect_Ljava_util_function_Consumer_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollCaptureImageRequest", "(Landroid/view/ScrollCaptureSession;Landroid/os/CancellationSignal;Landroid/graphics/Rect;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureImageRequest_Landroid_view_ScrollCaptureSession_Landroid_os_CancellationSignal_Landroid_graphics_Rect_Ljava_util_function_Consumer_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Views.ScrollCaptureSession" />
        <Parameter Name="signal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="captureArea" Type="Android.Graphics.Rect" />
        <Parameter Name="onComplete" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="session">the current session, resources provided by it are valid for use until the
                           <c>#onScrollCaptureEnd(Runnable) session ends</c></param>
        <param name="signal">signal to cancel the operation in progress</param>
        <param name="captureArea">the area to capture, a rectangle within <c>scrollBounds</c></param>
        <param name="onComplete">a consumer for the captured area</param>
        <summary>An image capture has been requested from the scrolling content.</summary>
        <remarks>
          <para>An image capture has been requested from the scrolling content.</para>
          <para>The requested rectangle describes an area inside the target view, relative to
            <c>scrollBounds</c>. The content may be offscreen, above or below the current visible
            portion of the target view. To handle the request, render the available portion of this
            rectangle to a buffer and return it via the Surface available from <c>ScrollCaptureSession#getSurface()</c>.</para>
          <para>Note: Implementations are only required to render the requested content, and may do so into
            off-screen buffers without scrolling if they are able.</para>
          <para>The resulting available portion of the request must be computed as a portion of <c>captureArea</c>, and sent to signal the operation is complete, using  <c>Consumer#accept
            onComplete.accept</c>. If the requested rectangle is  partially or fully out of bounds the
            resulting portion should be returned. If no portion is available (outside of available
            content), then skip sending any buffer and report an empty Rect as result.</para>
          <para>This request may be cancelled via the provided <c>CancellationSignal</c>. When this happens,
            any future call to <c>Consumer#accept onComplete.accept</c> will be ignored until the next
            request.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ScrollCaptureCallback#onScrollCaptureImageRequest(android.view.ScrollCaptureSession,%20android.os.CancellationSignal,%20android.graphics.Rect,%20java.util.function.Consumer%3Candroid.graphics.Rect%3E)" title="Reference documentation">Java documentation for <code>android.view.ScrollCaptureCallback.onScrollCaptureImageRequest(android.view.ScrollCaptureSession, android.os.CancellationSignal, android.graphics.Rect, java.util.function.Consumer&lt;android.graphics.Rect&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScrollCaptureSearch">
      <MemberSignature Language="C#" Value="public void OnScrollCaptureSearch (Android.OS.CancellationSignal signal, Java.Util.Functions.IConsumer onReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScrollCaptureSearch(class Android.OS.CancellationSignal signal, class Java.Util.Functions.IConsumer onReady) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IScrollCaptureCallback.OnScrollCaptureSearch(Android.OS.CancellationSignal,Java.Util.Functions.IConsumer)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollCaptureSearch : Android.OS.CancellationSignal * Java.Util.Functions.IConsumer -&gt; unit" Usage="iScrollCaptureCallback.OnScrollCaptureSearch (signal, onReady)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollCaptureSearch", "(Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureSearch_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollCaptureSearch", "(Landroid/os/CancellationSignal;Ljava/util/function/Consumer;)V", "GetOnScrollCaptureSearch_Landroid_os_CancellationSignal_Ljava_util_function_Consumer_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="onReady" Type="Java.Util.Functions.IConsumer" />
      </Parameters>
      <Docs>
        <param name="signal">signal to cancel the operation in progress</param>
        <param name="onReady">consumer for the updated rectangle</param>
        <summary>The system is searching for the appropriate scrolling container to capture and would like to
            know the size and position of scrolling content handled by this callback.</summary>
        <remarks>
          <para>The system is searching for the appropriate scrolling container to capture and would like to
            know the size and position of scrolling content handled by this callback.</para>
          <para>To determine scroll bounds, an implementation should inset the visible bounds of the
            containing view to cover only the area where scrolling content may be positioned. This
            should cover only the content which tracks with scrolling movement.</para>
          <para>Return the updated rectangle to <c>Consumer#accept onReady.accept</c>. If for any reason the
            scrolling content is not available to capture, a empty rectangle may be returned which will
            exclude this view from consideration.</para>
          <para>This request may be cancelled via the provided <c>CancellationSignal</c>. When this happens,
            any future call to <c>Consumer#accept onReady.accept</c> will have no effect and this
            content will be omitted from the search results.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ScrollCaptureCallback#onScrollCaptureSearch(android.os.CancellationSignal,%20java.util.function.Consumer%3Candroid.graphics.Rect%3E)" title="Reference documentation">Java documentation for <code>android.view.ScrollCaptureCallback.onScrollCaptureSearch(android.os.CancellationSignal, java.util.function.Consumer&lt;android.graphics.Rect&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnScrollCaptureStart">
      <MemberSignature Language="C#" Value="public void OnScrollCaptureStart (Android.Views.ScrollCaptureSession session, Android.OS.CancellationSignal signal, Java.Lang.IRunnable onReady);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnScrollCaptureStart(class Android.Views.ScrollCaptureSession session, class Android.OS.CancellationSignal signal, class Java.Lang.IRunnable onReady) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.IScrollCaptureCallback.OnScrollCaptureStart(Android.Views.ScrollCaptureSession,Android.OS.CancellationSignal,Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member OnScrollCaptureStart : Android.Views.ScrollCaptureSession * Android.OS.CancellationSignal * Java.Lang.IRunnable -&gt; unit" Usage="iScrollCaptureCallback.OnScrollCaptureStart (session, signal, onReady)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onScrollCaptureStart", "(Landroid/view/ScrollCaptureSession;Landroid/os/CancellationSignal;Ljava/lang/Runnable;)V", "GetOnScrollCaptureStart_Landroid_view_ScrollCaptureSession_Landroid_os_CancellationSignal_Ljava_lang_Runnable_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onScrollCaptureStart", "(Landroid/view/ScrollCaptureSession;Landroid/os/CancellationSignal;Ljava/lang/Runnable;)V", "GetOnScrollCaptureStart_Landroid_view_ScrollCaptureSession_Landroid_os_CancellationSignal_Ljava_lang_Runnable_Handler:Android.Views.IScrollCaptureCallbackInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="session" Type="Android.Views.ScrollCaptureSession" />
        <Parameter Name="signal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="onReady" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="session">the current session, resources provided by it are valid for use until the
                           <c>#onScrollCaptureEnd(Runnable) session ends</c></param>
        <param name="signal">signal to cancel the operation in progress</param>
        <param name="onReady">signal used to report completion of the request</param>
        <summary>Scroll Capture has selected this callback to provide the scrolling image content.</summary>
        <remarks>
          <para>Scroll Capture has selected this callback to provide the scrolling image content.</para>
          <para>
            <c>Runnable#run onReady.run</c> should be called when ready to begin handling image
            requests.</para>
          <para>This request may be cancelled via the provided <c>CancellationSignal</c>. When this happens,
            any future call to <c>Runnable#run onReady.run</c> will have no effect and provided session
            will not be activated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ScrollCaptureCallback#onScrollCaptureStart(android.view.ScrollCaptureSession,%20android.os.CancellationSignal,%20java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.ScrollCaptureCallback.onScrollCaptureStart(android.view.ScrollCaptureSession, android.os.CancellationSignal, java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
