<Type Name="TextureView" FullName="Android.Views.TextureView">
  <TypeSignature Language="C#" Value="public class TextureView : Android.Views.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextureView extends Android.Views.View" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Views.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/TextureView", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="14">
    <summary tool="true">
      <example>
        <code lang="java">
  public class LiveCameraActivity extends Activity implements TextureView.SurfaceTextureListener {
      private Camera mCamera;
      private TextureView mTextureView;

      protected void onCreate(Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);

          mTextureView = new TextureView(this);
          mTextureView.setSurfaceTextureListener(this);

          setContentView(mTextureView);
      }

      public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height) {
          mCamera = Camera.open();

          try {
              mCamera.setPreviewTexture(surface);
              mCamera.startPreview();
          } catch (IOException ioe) {
              // Something bad happened
          }
      }

      public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {
          // Ignored, Camera does all the work for us
      }

      public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {
          mCamera.stopPreview();
          mCamera.release();
          return true;
      }

      public void onSurfaceTextureUpdated(SurfaceTexture surface) {
          // Invoked every time there's a new Camera preview frame
      }
  }
 </code>
      </example>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <example>
          <code lang="java">
  public class LiveCameraActivity extends Activity implements TextureView.SurfaceTextureListener {
      private Camera mCamera;
      private TextureView mTextureView;

      protected void onCreate(Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);

          mTextureView = new TextureView(this);
          mTextureView.setSurfaceTextureListener(this);

          setContentView(mTextureView);
      }

      public void onSurfaceTextureAvailable(SurfaceTexture surface, int width, int height) {
          mCamera = Camera.open();

          try {
              mCamera.setPreviewTexture(surface);
              mCamera.startPreview();
          } catch (IOException ioe) {
              // Something bad happened
          }
      }

      public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {
          // Ignored, Camera does all the work for us
      }

      public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {
          mCamera.stopPreview();
          mCamera.release();
          return true;
      }

      public void onSurfaceTextureUpdated(SurfaceTexture surface) {
          // Invoked every time there's a new Camera preview frame
      }
  }
 </code>
        </example>
      </para>
      <para tool="javadoc-to-mdoc">A TextureView can be used to display a content stream. Such a content
 stream can for instance be a video or an OpenGL scene. The content stream
 can come from the application's process as well as a remote process.</para>
      <para tool="javadoc-to-mdoc">TextureView can only be used in a hardware accelerated window. When
 rendered in software, TextureView will draw nothing.</para>
      <para tool="javadoc-to-mdoc">Unlike <c><see cref="T:Android.Views.SurfaceView" /></c>, TextureView does not create a separate
 window but behaves as a regular View. This key difference allows a
 TextureView to be moved, transformed, animated, etc. For instance, you
 can make a TextureView semi-translucent by calling
 <c>myView.setAlpha(0.5f)</c>.</para>
      <para tool="javadoc-to-mdoc">Using a TextureView is simple: all you need to do is get its
 <c><see cref="T:Android.Graphics.SurfaceTexture" /></c>. The <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> can then be used to
 render content. The following example demonstrates how to render the
 camera preview into a TextureView:</para>
      <para tool="javadoc-to-mdoc">A TextureView's SurfaceTexture can be obtained either by invoking
 <c><see cref="P:Android.Views.TextureView.SurfaceTexture" /></c> or by using a <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html" /></c>.
 It is important to know that a SurfaceTexture is available only after the
 TextureView is attached to a window (and <c><see cref="!:Android.Views.TextureView.onAttachedToWindow()" /></c> has
 been invoked.) It is therefore highly recommended you use a listener to
 be notified when the SurfaceTexture becomes available.</para>
      <para tool="javadoc-to-mdoc">It is important to note that only one producer can use the TextureView.
 For instance, if you use a TextureView to display the camera preview, you
 cannot use <c><see cref="M:Android.Views.TextureView.LockCanvas" /></c> to draw onto the TextureView at the same
 time.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Views.SurfaceView" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Graphics.SurfaceTexture" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/TextureView.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureView (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Creates a new TextureView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new TextureView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#TextureView(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureView (Android.Content.Context context, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Creates a new TextureView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new TextureView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#TextureView(android.content.Context, android.util.AttributeSet)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextureView (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyle" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <summary>Creates a new TextureView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new TextureView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#TextureView(android.content.Context, android.util.AttributeSet, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TextureView (Android.Content.Context context, Android.Util.IAttributeSet attrs, int defStyleAttr, int defStyleRes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs, int32 defStyleAttr, int32 defStyleRes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
        <Parameter Name="defStyleAttr" Type="System.Int32" />
        <Parameter Name="defStyleRes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <param name="defStyleAttr">To be added.</param>
        <param name="defStyleRes">To be added.</param>
        <summary>Creates a new TextureView.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new TextureView.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#TextureView(android.content.Context, android.util.AttributeSet, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Bitmap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap Bitmap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Bitmap Bitmap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Graphics.Bitmap" /></c> representation of the content
 of the associated surface texture. If the surface texture is not available,
 this method returns null.</para>
          <para tool="javadoc-to-mdoc">The bitmap returned by this method uses the <c><see cref="!:NoType:android/graphics/Bitmap$Config;Href=../../../reference/android/graphics/Bitmap.Config.html#ARGB_8888" /></c>
 pixel format and its dimensions are the same as this view's.</para>
          <para tool="javadoc-to-mdoc">
            <i>Do not</i> invoke this method from a drawing method
 (<c><see cref="M:Android.Views.TextureView.OnDraw(Android.Graphics.Canvas)" /></c> for instance).</para>
          <para tool="javadoc-to-mdoc">If an error occurs during the copy, an empty bitmap will be returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getBitmap()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.TextureView.IsAvailable" />
        <altmember cref="M:Android.Views.TextureView.GetBitmap(Android.Graphics.Bitmap)" />
        <altmember cref="M:Android.Views.TextureView.GetBitmap(System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public override sealed void Draw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Draw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas to which the View is rendered.
</param>
        <summary>Subclasses of TextureView cannot do their own rendering
 with the <c><see cref="T:Android.Graphics.Canvas" /></c> object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses of TextureView cannot do their own rendering
 with the <c><see cref="T:Android.Graphics.Canvas" /></c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#draw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetBitmap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap GetBitmap (Android.Graphics.Bitmap bitmap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Bitmap GetBitmap(class Android.Graphics.Bitmap bitmap) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "GetGetBitmap_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmap" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="bitmap">The bitmap to copy the content of the surface texture into,
               cannot be null, all configurations are supported</param>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Copies the content of this view's surface texture into the specified
 bitmap. If the surface texture is not available, the copy is not executed.
 The content of the surface texture will be scaled to fit exactly inside
 the specified bitmap.</para>
          <para tool="javadoc-to-mdoc">
            <i>Do not</i> invoke this method from a drawing method
 (<c><see cref="M:Android.Views.TextureView.OnDraw(Android.Graphics.Canvas)" /></c> for instance).</para>
          <para tool="javadoc-to-mdoc">If an error occurs, the bitmap is left unchanged.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getBitmap(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalStateException">if the hardware rendering context cannot be
         acquired to capture the bitmap
</exception>
        <altmember cref="P:Android.Views.TextureView.IsAvailable" />
        <altmember cref="M:Android.Views.TextureView.GetBitmap(System.Int32, System.Int32)" />
        <altmember cref="P:Android.Views.TextureView.Bitmap" />
      </Docs>
    </Member>
    <Member MemberName="GetBitmap">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Bitmap GetBitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Bitmap GetBitmap(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getBitmap", "(II)Landroid/graphics/Bitmap;", "GetGetBitmap_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">The width of the bitmap to create</param>
        <param name="height">The height of the bitmap to create</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Returns a <c><see cref="T:Android.Graphics.Bitmap" /></c> representation of the content
 of the associated surface texture. If the surface texture is not available,
 this method returns null.</para>
          <para tool="javadoc-to-mdoc">The bitmap returned by this method uses the <c><see cref="!:NoType:android/graphics/Bitmap$Config;Href=../../../reference/android/graphics/Bitmap.Config.html#ARGB_8888" /></c>
 pixel format.</para>
          <para tool="javadoc-to-mdoc">
            <i>Do not</i> invoke this method from a drawing method
 (<c><see cref="M:Android.Views.TextureView.OnDraw(Android.Graphics.Canvas)" /></c> for instance).</para>
          <para tool="javadoc-to-mdoc">If an error occurs during the copy, an empty bitmap will be returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getBitmap(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.TextureView.IsAvailable" />
        <altmember cref="M:Android.Views.TextureView.GetBitmap(Android.Graphics.Bitmap)" />
        <altmember cref="P:Android.Views.TextureView.Bitmap" />
      </Docs>
    </Member>
    <Member MemberName="GetTransform">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Matrix GetTransform (Android.Graphics.Matrix transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Matrix GetTransform(class Android.Graphics.Matrix transform) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTransform", "(Landroid/graphics/Matrix;)Landroid/graphics/Matrix;", "GetGetTransform_Landroid_graphics_Matrix_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Matrix</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="transform">The <c><see cref="T:Android.Graphics.Matrix" /></c> in which to copy the current
        transform. Can be null.</param>
        <summary>Returns the transform associated with this texture view.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the transform associated with this texture view.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getTransform(android.graphics.Matrix)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.TextureView.SetTransform(Android.Graphics.Matrix)" />
      </Docs>
    </Member>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public virtual bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAvailable", "()Z", "GetIsAvailableHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> associated with this
 TextureView is available for rendering.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> associated with this
 TextureView is available for rendering. When this method returns
 true, <c><see cref="P:Android.Views.TextureView.SurfaceTexture" /></c> returns a valid surface texture.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#isAvailable()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="LockCanvas">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Canvas LockCanvas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Canvas LockCanvas() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lockCanvas", "()Landroid/graphics/Canvas;", "GetLockCanvasHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Canvas</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Start editing the pixels in the surface.  The returned Canvas can be used
 to draw into the surface's bitmap.  A null is returned if the surface has
 not been created or otherwise cannot be edited. You will usually need
 to implement
 <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)" /></c>
 to find out when the Surface is available for use.</para>
          <para tool="javadoc-to-mdoc">The content of the Surface is never preserved between unlockCanvas()
 and lockCanvas(), for this reason, every pixel within the Surface area
 must be written. The only exception to this rule is when a dirty
 rectangle is specified, in which case, non-dirty pixels will be
 preserved.</para>
          <para tool="javadoc-to-mdoc">This method can only be used if the underlying surface is not already
 owned by another producer. For instance, if the TextureView is being used
 to render the camera's preview you cannot invoke this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#lockCanvas()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.TextureView.LockCanvas(Android.Graphics.Rect)" />
        <altmember cref="M:Android.Views.TextureView.UnlockCanvasAndPost(Android.Graphics.Canvas)" />
      </Docs>
    </Member>
    <Member MemberName="LockCanvas">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Canvas LockCanvas (Android.Graphics.Rect dirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Canvas LockCanvas(class Android.Graphics.Rect dirty) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("lockCanvas", "(Landroid/graphics/Rect;)Landroid/graphics/Canvas;", "GetLockCanvas_Landroid_graphics_Rect_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Canvas</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirty" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="dirty">Area of the surface that will be modified.</param>
        <summary>Just like <c><see cref="M:Android.Views.TextureView.LockCanvas" /></c> but allows specification of a dirty
 rectangle.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Just like <c><see cref="M:Android.Views.TextureView.LockCanvas" /></c> but allows specification of a dirty
 rectangle. Every pixel within that rectangle must be written; however
 pixels outside the dirty rectangle will be preserved by the next call
 to lockCanvas().

 This method can return null if the underlying surface texture is not
 available (see <c><see cref="P:Android.Views.TextureView.IsAvailable" /></c> or if the surface texture is
 already connected to an image producer (for instance: the camera,
 OpenGL, a media player, etc.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#lockCanvas(android.graphics.Rect)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.TextureView.LockCanvas" />
        <altmember cref="M:Android.Views.TextureView.UnlockCanvasAndPost(Android.Graphics.Canvas)" />
        <altmember cref="P:Android.Views.TextureView.IsAvailable" />
      </Docs>
    </Member>
    <Member MemberName="OnDraw">
      <MemberSignature Language="C#" Value="protected override sealed void OnDraw (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDraw(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDraw", "(Landroid/graphics/Canvas;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas to which the View is rendered.
</param>
        <summary>Subclasses of TextureView cannot do their own rendering
 with the <c><see cref="T:Android.Graphics.Canvas" /></c> object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Subclasses of TextureView cannot do their own rendering
 with the <c><see cref="T:Android.Graphics.Canvas" /></c> object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#onDraw(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetOpaque">
      <MemberSignature Language="C#" Value="public virtual void SetOpaque (bool opaque);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOpaque(bool opaque) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOpaque", "(Z)V", "GetSetOpaque_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="opaque" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="opaque">True if the content of this TextureView is opaque,
               false otherwise
</param>
        <summary>Indicates whether the content of this TextureView is opaque.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether the content of this TextureView is opaque. The
 content is assumed to be opaque by default.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#setOpaque(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetTransform">
      <MemberSignature Language="C#" Value="public virtual void SetTransform (Android.Graphics.Matrix transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTransform(class Android.Graphics.Matrix transform) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTransform", "(Landroid/graphics/Matrix;)V", "GetSetTransform_Landroid_graphics_Matrix_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="Android.Graphics.Matrix" />
      </Parameters>
      <Docs>
        <param name="transform">The transform to apply to the content of
        this view.</param>
        <summary tool="true">
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Sets the transform to associate with this texture view.
 The specified transform applies to the underlying surface
 texture and does not affect the size or position of the view
 itself, only of its content.</para>
          <para tool="javadoc-to-mdoc">Some transforms might prevent the content from drawing
 all the pixels contained within this view's bounds. In such
 situations, make sure this texture view is not marked opaque.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#setTransform(android.graphics.Matrix)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.TextureView.GetTransform(Android.Graphics.Matrix)" />
        <altmember cref="M:Android.Views.TextureView.SetOpaque(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceTexture">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.SurfaceTexture SurfaceTexture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.SurfaceTexture SurfaceTexture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurfaceTexture", "()Landroid/graphics/SurfaceTexture;", "GetGetSurfaceTextureHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSurfaceTexture", "(Landroid/graphics/SurfaceTexture;)V", "GetSetSurfaceTexture_Landroid_graphics_SurfaceTexture_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.SurfaceTexture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> used by this view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getSurfaceTexture()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> used by this view. This method
 may return null if the view is not attached to a window or if the surface
 texture has not been initialized yet.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/TextureView.html#setSurfaceTexture(android.graphics.SurfaceTexture)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> for this view to use. If a <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> is already being used by this view, it is immediately
 released and not be usable any more.  The <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)" /></c> callback is <format type="text/html"><b>not</b></format>
 called for the previous <c><see cref="T:Android.Graphics.SurfaceTexture" /></c>.  Similarly, the <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html#onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)" /></c> callback is <format type="text/html"><b>not</b></format>
 called for the <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> passed to setSurfaceTexture.

 The <c><see cref="T:Android.Graphics.SurfaceTexture" /></c> object must be detached from all OpenGL ES
 contexts prior to calling this method.</para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.TextureView.IsAvailable" />
        <altmember cref="M:Android.Graphics.SurfaceTexture.DetachFromGLContext" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceTextureAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.TextureView.SurfaceTextureAvailableEventArgs&gt; SurfaceTextureAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.TextureView/SurfaceTextureAvailableEventArgs&gt; SurfaceTextureAvailable" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.TextureView+SurfaceTextureAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceTextureDestroyed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.TextureView.SurfaceTextureDestroyedEventArgs&gt; SurfaceTextureDestroyed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.TextureView/SurfaceTextureDestroyedEventArgs&gt; SurfaceTextureDestroyed" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.TextureView+SurfaceTextureDestroyedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceTextureListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.TextureView.ISurfaceTextureListener SurfaceTextureListener { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.TextureView/ISurfaceTextureListener SurfaceTextureListener" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurfaceTextureListener", "()Landroid/view/TextureView$SurfaceTextureListener;", "GetGetSurfaceTextureListenerHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSurfaceTextureListener", "(Landroid/view/TextureView$SurfaceTextureListener;)V", "GetSetSurfaceTextureListener_Landroid_view_TextureView_SurfaceTextureListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.TextureView+ISurfaceTextureListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html" /></c> currently associated with this
 texture view.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/view/TextureView.html#getSurfaceTextureListener()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html" /></c> currently associated with this
 texture view.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/view/TextureView.html#setSurfaceTextureListener(android.view.TextureView.SurfaceTextureListener)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Sets the <c><see cref="!:NoType:android/view/TextureView$SurfaceTextureListener;Href=../../../reference/android/view/TextureView.SurfaceTextureListener.html" /></c> used to listen to surface
 texture events.</para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="P:Android.Views.TextureView.SurfaceTextureListener" />
        <altmember cref="P:Android.Views.TextureView.SurfaceTextureListener" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceTextureSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.TextureView.SurfaceTextureSizeChangedEventArgs&gt; SurfaceTextureSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.TextureView/SurfaceTextureSizeChangedEventArgs&gt; SurfaceTextureSizeChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.TextureView+SurfaceTextureSizeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SurfaceTextureUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Views.TextureView.SurfaceTextureUpdatedEventArgs&gt; SurfaceTextureUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Views.TextureView/SurfaceTextureUpdatedEventArgs&gt; SurfaceTextureUpdated" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Views.TextureView+SurfaceTextureUpdatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockCanvasAndPost">
      <MemberSignature Language="C#" Value="public virtual void UnlockCanvasAndPost (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnlockCanvasAndPost(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unlockCanvasAndPost", "(Landroid/graphics/Canvas;)V", "GetUnlockCanvasAndPost_Landroid_graphics_Canvas_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">The Canvas previously returned by lockCanvas()</param>
        <summary>Finish editing pixels in the surface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Finish editing pixels in the surface. After this call, the surface's
 current pixels will be shown on the screen, but its content is lost,
 in particular there is no guarantee that the content of the Surface
 will remain unchanged when lockCanvas() is called again.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/TextureView.html#unlockCanvasAndPost(android.graphics.Canvas)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.TextureView.LockCanvas" />
        <altmember cref="M:Android.Views.TextureView.LockCanvas(Android.Graphics.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>
