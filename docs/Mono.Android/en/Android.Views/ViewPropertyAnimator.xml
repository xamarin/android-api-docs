<Type Name="ViewPropertyAnimator" FullName="Android.Views.ViewPropertyAnimator">
  <TypeSignature Language="C#" Value="public class ViewPropertyAnimator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewPropertyAnimator extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/ViewPropertyAnimator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>This class enables automatic and optimized animation of select properties on View objects.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class enables automatic and optimized animation of select properties on View objects.
 If only one or two properties on a View object are being animated, then using an
 <c><see cref="T:Android.Animation.ObjectAnimator" /></c> is fine; the property setters called by ObjectAnimator
 are well equipped to do the right thing to set the property and invalidate the view
 appropriately. But if several properties are animated simultaneously, or if you just want a
 more convenient syntax to animate a specific property, then ViewPropertyAnimator might be
 more well-suited to the task.

 </para>
      <para tool="javadoc-to-mdoc">This class may provide better performance for several simultaneous animations, because
 it will optimize invalidate calls to take place only once for several properties instead of each
 animated property independently causing its own invalidation. Also, the syntax of using this
 class could be easier to use because the caller need only tell the View object which
 property to animate, and the value to animate either to or by, and this class handles the
 details of configuring the underlying Animator class and starting it.</para>
      <para tool="javadoc-to-mdoc">This class is not constructed by the caller, but rather by the View whose properties
 it will animate. Calls to <c><see cref="M:Android.Views.View.Animate" /></c> will return a reference
 to the appropriate ViewPropertyAnimator object for that View.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewPropertyAnimator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator Alpha (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Alpha(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("alpha", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlpha_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>alpha</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>alpha</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#alpha(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="AlphaBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator AlphaBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator AlphaBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("alphaBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlphaBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>alpha</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>alpha</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#alphaBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cancel", "()V", "GetCancelHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels all property animations that are currently running or pending.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Cancels all property animations that are currently running or pending.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#cancel()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current duration of property animations.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current duration of property animations. If the duration was set on this
 object, that value is returned. Otherwise, the default value of the underlying Animator
 is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#getDuration()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.ViewPropertyAnimator.SetDuration(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ITimeInterpolator Interpolator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.ITimeInterpolator Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ITimeInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the timing interpolator that this animation uses.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the timing interpolator that this animation uses.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#getInterpolator()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator Rotation (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Rotation(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotation", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotation_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotation</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotation</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotation(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Rotation" />
      </Docs>
    </Member>
    <Member MemberName="RotationBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator RotationBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotationBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotation</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotation</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotationBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Rotation" />
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator RotationX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationX(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotationX</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotationX</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotationX(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
      </Docs>
    </Member>
    <Member MemberName="RotationXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator RotationXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationXBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationXBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotationX</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotationX</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotationXBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator RotationY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationY(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotationY</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotationY</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotationY(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="RotationYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator RotationYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationYBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("rotationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationYBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotationY</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>rotationY</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#rotationYBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator ScaleX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleX(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleX", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>scaleX</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>scaleX</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#scaleX(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleX" />
      </Docs>
    </Member>
    <Member MemberName="ScaleXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator ScaleXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleXBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleXBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>scaleX</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>scaleX</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#scaleXBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleX" />
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator ScaleY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleY(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleY", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>scaleY</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>scaleY</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#scaleY(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator ScaleYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleYBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scaleYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleYBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>scaleY</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>scaleY</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#scaleYBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleY" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetDuration(int64 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDuration", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetDuration_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of ensuing property animations, in milliseconds. The value
 cannot be negative.</param>
        <summary>Sets the duration for the underlying animator that animates the requested properties.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the duration for the underlying animator that animates the requested properties.
 By default, the animator uses the default value for ValueAnimator. Calling this method
 will cause the declared value to be used instead.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#setDuration(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator SetInterpolator (Android.Animation.ITimeInterpolator interpolator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetInterpolator(class Android.Animation.ITimeInterpolator interpolator) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)Landroid/view/ViewPropertyAnimator;", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interpolator" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="interpolator">The TimeInterpolator to be used for ensuing property animations. A value
 of <c>null</c> will result in linear interpolation.</param>
        <summary>Sets the interpolator for the underlying animator that animates the requested properties.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the interpolator for the underlying animator that animates the requested properties.
 By default, the animator uses the default interpolator for ValueAnimator. Calling this method
 will cause the declared object to be used instead.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#setInterpolator(android.animation.TimeInterpolator)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator SetListener (Android.Animation.Animator.IAnimatorListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetListener(class Android.Animation.Animator/IAnimatorListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setListener", "(Landroid/animation/Animator$AnimatorListener;)Landroid/view/ViewPropertyAnimator;", "GetSetListener_Landroid_animation_Animator_AnimatorListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to be called with AnimatorListener events. A value of
 <c>null</c> removes any existing listener.</param>
        <summary>Sets a listener for events in the underlying Animators that run the property
 animations.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a listener for events in the underlying Animators that run the property
 animations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#setListener(android.animation.Animator.AnimatorListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetStartDelay">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator SetStartDelay (long startDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetStartDelay(int64 startDelay) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStartDelay", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetStartDelay_JHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="startDelay">The delay of ensuing property animations, in milliseconds. The value
 cannot be negative.</param>
        <summary>Sets the startDelay for the underlying animator that animates the requested properties.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the startDelay for the underlying animator that animates the requested properties.
 By default, the animator uses the default value for ValueAnimator. Calling this method
 will cause the declared value to be used instead.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#setStartDelay(long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUpdateListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator SetUpdateListener (Android.Animation.ValueAnimator.IAnimatorUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetUpdateListener(class Android.Animation.ValueAnimator/IAnimatorUpdateListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)Landroid/view/ViewPropertyAnimator;", "GetSetUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.ValueAnimator+IAnimatorUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to be called with update events. A value of
 <c>null</c> removes any existing listener.</param>
        <summary>Sets a listener for update events in the underlying ValueAnimator that runs
 the property animations.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets a listener for update events in the underlying ValueAnimator that runs
 the property animations. Note that the underlying animator is animating between
 0 and 1 (these values are then turned into the actual property values internally
 by ViewPropertyAnimator). So the animator cannot give information on the current
 values of the properties being animated by this ViewPropertyAnimator, although
 the view object itself can be queried to get the current values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#setUpdateListener(android.animation.ValueAnimator.AnimatorUpdateListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the currently pending property animations immediately.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts the currently pending property animations immediately. Calling <c>start()</c>
 is optional because all animations start automatically at the next opportunity. However,
 if the animations are needed to start immediately and synchronously (not at the time when
 the next event is processed by the hierarchy, which is when the animations would begin
 otherwise), then this method can be used.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#start()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="C#" Value="public virtual long StartDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current startDelay of property animations.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current startDelay of property animations. If the startDelay was set on this
 object, that value is returned. Otherwise, the default value of the underlying Animator
 is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#getStartDelay()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.ViewPropertyAnimator.SetStartDelay(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationX(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationX</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationX</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationX(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationX" />
      </Docs>
    </Member>
    <Member MemberName="TranslationXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationXBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationXBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationX</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationX</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationXBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationX" />
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationY(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationY</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationY</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationY(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationY" />
      </Docs>
    </Member>
    <Member MemberName="TranslationYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationYBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationYBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationY</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationY</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationYBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationY" />
      </Docs>
    </Member>
    <Member MemberName="TranslationZ">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationZ (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationZ(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationZ", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZ_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationZ</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationZ</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationZ(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Views.View.TranslationZ" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="TranslationZBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator TranslationZBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationZBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("translationZBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationZ</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>translationZ</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#translationZBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="P:Android.Views.View.TranslationZ" />
      </Docs>
    </Member>
    <Member MemberName="WithEndAction">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator WithEndAction (Java.Lang.IRunnable runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithEndAction(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("withEndAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithEndAction_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">The action to run when the next animation ends.</param>
        <summary>Specifies an action to take place when the next animation ends.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies an action to take place when the next animation ends. The action is only
 run if the animation ends normally; if the ViewPropertyAnimator is canceled during
 that animation, the runnable will not run.
 This method, along with <c><see cref="M:Android.Views.ViewPropertyAnimator.WithStartAction(Java.Lang.IRunnable)" /></c>, is intended to help facilitate
 choreographing ViewPropertyAnimator animations with other animations or actions
 in the application.

 <example><code lang="java">
     Runnable endAction = new Runnable() {
         public void run() {
             view.animate().x(0);
         }
     };
     view.animate().x(200).withEndAction(endAction);
 </code></example></para>
          <para tool="javadoc-to-mdoc">For example, the following code animates a view to x=200 and then back to 0:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#withEndAction(java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WithLayer">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator WithLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithLayer() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("withLayer", "()Landroid/view/ViewPropertyAnimator;", "GetWithLayerHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The View associated with this ViewPropertyAnimator will have its
 <c><see cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType,Android.Graphics.Paint)" /></c> set to
 <c><see cref="!:Android.Views.View.LAYER_TYPE_HARDWARE" /></c> for the duration of the next animation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">The View associated with this ViewPropertyAnimator will have its
 <c><see cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType,Android.Graphics.Paint)" /></c> set to
 <c><see cref="!:Android.Views.View.LAYER_TYPE_HARDWARE" /></c> for the duration of the next animation.
 As stated in the documentation for <c><see cref="!:Android.Views.View.LAYER_TYPE_HARDWARE" /></c>,
 the actual type of layer used internally depends on the runtime situation of the
 view. If the activity and this view are hardware-accelerated, then the layer will be
 accelerated as well. If the activity or the view is not accelerated, then the layer will
 effectively be the same as <c><see cref="!:Android.Views.View.LAYER_TYPE_SOFTWARE" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">This state is not persistent, either on the View or on this ViewPropertyAnimator: the
 layer type of the View will be restored when the animation ends to what it was when this
 method was called, and this setting on ViewPropertyAnimator is only valid for the next
 animation. Note that calling this method and then independently setting the layer type of
 the View (by a direct call to <c><see cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType,Android.Graphics.Paint)" /></c>) will
 result in some inconsistency, including having the layer type restored to its pre-withLayer()
 value when the animation ends.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#withLayer()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="WithStartAction">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator WithStartAction (Java.Lang.IRunnable runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithStartAction(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("withStartAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithStartAction_Ljava_lang_Runnable_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">The action to run when the next animation starts.</param>
        <summary>Specifies an action to take place when the next animation runs.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Specifies an action to take place when the next animation runs. If there is a
 <c><see cref="M:Android.Views.ViewPropertyAnimator.SetStartDelay(System.Int64)" /></c> set on this ViewPropertyAnimator, then the
 action will run after that startDelay expires, when the actual animation begins.
 This method, along with <c><see cref="M:Android.Views.ViewPropertyAnimator.WithEndAction(Java.Lang.IRunnable)" /></c>, is intended to help facilitate
 choreographing ViewPropertyAnimator animations with other animations or actions
 in the application.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#withStartAction(java.lang.Runnable)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator X (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator X(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("x", "(F)Landroid/view/ViewPropertyAnimator;", "GetX_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>x</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>x</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#x(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetX(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="XBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator XBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator XBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("xBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetXBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>x</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>x</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#xBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetX(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator Y (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Y(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("y", "(F)Landroid/view/ViewPropertyAnimator;", "GetY_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>y</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>y</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#y(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetY(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="YBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator YBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator YBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("yBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetYBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>y</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>y</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#yBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetY(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator Z (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Z(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("z", "(F)Landroid/view/ViewPropertyAnimator;", "GetZ_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>z</c> property to be animated to the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>z</c> property to be animated to the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#z(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Views.View.SetZ(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ZBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator ZBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ZBy(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("zBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetZBy_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>z</c> property to be animated by the
 specified value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method will cause the View's <c>z</c> property to be animated by the
 specified value. Animations already running on the property will be canceled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/view/ViewPropertyAnimator.html#zBy(float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.Views.View.SetZ(System.Single)" />
      </Docs>
    </Member>
  </Members>
</Type>
