<Type Name="ViewPropertyAnimator" FullName="Android.Views.ViewPropertyAnimator">
  <TypeSignature Language="C#" Value="public class ViewPropertyAnimator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ViewPropertyAnimator extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.ViewPropertyAnimator" />
  <TypeSignature Language="F#" Value="type ViewPropertyAnimator = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/ViewPropertyAnimator", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/ViewPropertyAnimator", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="12">
    <summary>This class enables automatic and optimized animation of select properties on View objects.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 12" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ViewPropertyAnimator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.ViewPropertyAnimator : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.ViewPropertyAnimator" Usage="new Android.Views.ViewPropertyAnimator (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Alpha">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? Alpha (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Alpha(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Alpha(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Alpha : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.Alpha : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.Alpha value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("alpha", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlpha_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("alpha", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlpha_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>alpha</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#alpha(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.alpha(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="AlphaBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? AlphaBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator AlphaBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.AlphaBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member AlphaBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.AlphaBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.AlphaBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("alphaBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlphaBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("alphaBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetAlphaBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>alpha</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#alphaBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.alphaBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Alpha" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Cancel" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="viewPropertyAnimator.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "()V", "GetCancelHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancel", "()V", "GetCancelHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels all property animations that are currently running or pending.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#cancel()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.cancel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual long Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Duration" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : int64" Usage="Android.Views.ViewPropertyAnimator.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDuration", "()J", "GetGetDurationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current duration of property animations.</summary>
        <value>The duration of animations, in milliseconds.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#getDuration()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.getDuration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.ViewPropertyAnimator.SetDuration(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="Interpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Animation.ITimeInterpolator? Interpolator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Animation.ITimeInterpolator Interpolator" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.Interpolator" />
      <MemberSignature Language="F#" Value="member this.Interpolator : Android.Animation.ITimeInterpolator" Usage="Android.Views.ViewPropertyAnimator.Interpolator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Animation.ITimeInterpolator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the timing interpolator that this animation uses.</summary>
        <value>The timing interpolator for this animation.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#getInterpolator()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.getInterpolator()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.ViewPropertyAnimator.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rotation">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? Rotation (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Rotation(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Rotation(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Rotation : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.Rotation : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.Rotation value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotation", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotation_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotation", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotation_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotation</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotation(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotation(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Rotation" />
      </Docs>
    </Member>
    <Member MemberName="RotationBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? RotationBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.RotationBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RotationBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.RotationBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.RotationBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotationBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotationBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotation</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotationBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotationBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.Rotation" />
      </Docs>
    </Member>
    <Member MemberName="RotationX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? RotationX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationX(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.RotationX(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RotationX : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.RotationX : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.RotationX value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotationX</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotationX(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotationX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
      </Docs>
    </Member>
    <Member MemberName="RotationXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? RotationXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationXBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.RotationXBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RotationXBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.RotationXBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.RotationXBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationXBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationXBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotationX</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotationXBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotationXBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationX" />
      </Docs>
    </Member>
    <Member MemberName="RotationY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? RotationY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationY(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.RotationY(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RotationY : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.RotationY : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.RotationY value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>rotationY</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotationY(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotationY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="RotationYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? RotationYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator RotationYBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.RotationYBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member RotationYBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.RotationYBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.RotationYBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("rotationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationYBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("rotationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetRotationYBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>rotationY</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#rotationYBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.rotationYBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.RotationY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? ScaleX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleX(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.ScaleX(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ScaleX : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.ScaleX : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.ScaleX value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scaleX", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scaleX", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>scaleX</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#scaleX(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.scaleX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleX" />
      </Docs>
    </Member>
    <Member MemberName="ScaleXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? ScaleXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleXBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.ScaleXBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ScaleXBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.ScaleXBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.ScaleXBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scaleXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleXBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scaleXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleXBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>scaleX</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#scaleXBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.scaleXBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleX" />
      </Docs>
    </Member>
    <Member MemberName="ScaleY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? ScaleY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleY(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.ScaleY(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ScaleY : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.ScaleY : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.ScaleY value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scaleY", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scaleY", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>scaleY</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#scaleY(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.scaleY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleY" />
      </Docs>
    </Member>
    <Member MemberName="ScaleYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? ScaleYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ScaleYBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.ScaleYBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ScaleYBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.ScaleYBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.ScaleYBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scaleYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleYBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scaleYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetScaleYBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>scaleY</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#scaleYBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.scaleYBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.ScaleY" />
      </Docs>
    </Member>
    <Member MemberName="SetDuration">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? SetDuration (long duration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetDuration(int64 duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.SetDuration(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetDuration : int64 -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.SetDuration : int64 -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.SetDuration duration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDuration", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetDuration_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDuration", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetDuration_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="duration" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="duration">The length of ensuing property animations, in milliseconds. The value
            cannot be negative.</param>
        <summary>Sets the duration for the underlying animator that animates the requested properties.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#setDuration(long)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.setDuration(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetInterpolator">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? SetInterpolator (Android.Animation.ITimeInterpolator? interpolator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetInterpolator(class Android.Animation.ITimeInterpolator interpolator) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.SetInterpolator(Android.Animation.ITimeInterpolator)" />
      <MemberSignature Language="F#" Value="abstract member SetInterpolator : Android.Animation.ITimeInterpolator -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.SetInterpolator : Android.Animation.ITimeInterpolator -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.SetInterpolator interpolator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)Landroid/view/ViewPropertyAnimator;", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInterpolator", "(Landroid/animation/TimeInterpolator;)Landroid/view/ViewPropertyAnimator;", "GetSetInterpolator_Landroid_animation_TimeInterpolator_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="interpolator" Type="Android.Animation.ITimeInterpolator" />
      </Parameters>
      <Docs>
        <param name="interpolator">The TimeInterpolator to be used for ensuing property animations. A value
            of <c>null</c> will result in linear interpolation.</param>
        <summary>Sets the interpolator for the underlying animator that animates the requested properties.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#setInterpolator(android.animation.TimeInterpolator)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.setInterpolator(android.animation.TimeInterpolator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? SetListener (Android.Animation.Animator.IAnimatorListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetListener(class Android.Animation.Animator/IAnimatorListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.SetListener(Android.Animation.Animator.IAnimatorListener)" />
      <MemberSignature Language="F#" Value="abstract member SetListener : Android.Animation.Animator.IAnimatorListener -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.SetListener : Android.Animation.Animator.IAnimatorListener -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.SetListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setListener", "(Landroid/animation/Animator$AnimatorListener;)Landroid/view/ViewPropertyAnimator;", "GetSetListener_Landroid_animation_Animator_AnimatorListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setListener", "(Landroid/animation/Animator$AnimatorListener;)Landroid/view/ViewPropertyAnimator;", "GetSetListener_Landroid_animation_Animator_AnimatorListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.Animator+IAnimatorListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to be called with AnimatorListener events. A value of
            &lt;code&gt;null&lt;/code&gt; removes any existing listener.</param>
        <summary>Sets a listener for events in the underlying Animators that run the property
            animations.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#setListener(android.animation.AnimatorListener)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.setListener(android.animation.AnimatorListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="SetStartDelay">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? SetStartDelay (long startDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetStartDelay(int64 startDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.SetStartDelay(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetStartDelay : int64 -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.SetStartDelay : int64 -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.SetStartDelay startDelay" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStartDelay", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetStartDelay_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStartDelay", "(J)Landroid/view/ViewPropertyAnimator;", "GetSetStartDelay_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="startDelay">The delay of ensuing property animations, in milliseconds. The value
            cannot be negative.</param>
        <summary>Sets the startDelay for the underlying animator that animates the requested properties.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#setStartDelay(long)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.setStartDelay(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetUpdateListener">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? SetUpdateListener (Android.Animation.ValueAnimator.IAnimatorUpdateListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator SetUpdateListener(class Android.Animation.ValueAnimator/IAnimatorUpdateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.SetUpdateListener(Android.Animation.ValueAnimator.IAnimatorUpdateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetUpdateListener : Android.Animation.ValueAnimator.IAnimatorUpdateListener -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.SetUpdateListener : Android.Animation.ValueAnimator.IAnimatorUpdateListener -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.SetUpdateListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)Landroid/view/ViewPropertyAnimator;", "GetSetUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUpdateListener", "(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)Landroid/view/ViewPropertyAnimator;", "GetSetUpdateListener_Landroid_animation_ValueAnimator_AnimatorUpdateListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Animation.ValueAnimator+IAnimatorUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">The listener to be called with update events. A value of
            &lt;code&gt;null&lt;/code&gt; removes any existing listener.</param>
        <summary>Sets a listener for update events in the underlying ValueAnimator that runs
            the property animations.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#setUpdateListener(android.animation.AnimatorUpdateListener)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.setUpdateListener(android.animation.AnimatorUpdateListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="viewPropertyAnimator.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts the currently pending property animations immediately.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#start()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="StartDelay">
      <MemberSignature Language="C#" Value="public virtual long StartDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StartDelay" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.StartDelay" />
      <MemberSignature Language="F#" Value="member this.StartDelay : int64" Usage="Android.Views.ViewPropertyAnimator.StartDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartDelay", "()J", "GetGetStartDelayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current startDelay of property animations.</summary>
        <value>The startDelay of animations, in milliseconds.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#getStartDelay()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.getStartDelay()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Views.ViewPropertyAnimator.SetStartDelay(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.ViewPropertyAnimator.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.ViewPropertyAnimator.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.ViewPropertyAnimator.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslationX">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationX (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationX(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationX(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationX : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationX : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationX value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationX", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationX</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationX(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationX(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationX" />
      </Docs>
    </Member>
    <Member MemberName="TranslationXBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationXBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationXBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationXBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationXBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationXBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationXBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationXBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationXBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationXBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationX</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationXBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationXBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationX" />
      </Docs>
    </Member>
    <Member MemberName="TranslationY">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationY (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationY(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationY(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationY : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationY : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationY value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationY", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationY</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationY(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationY(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationY" />
      </Docs>
    </Member>
    <Member MemberName="TranslationYBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationYBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationYBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationYBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationYBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationYBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationYBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationYBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationYBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationYBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationY</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationYBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationYBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="P:Android.Views.View.TranslationY" />
      </Docs>
    </Member>
    <Member MemberName="TranslationZ">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationZ (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationZ(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationZ(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationZ : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationZ : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationZ value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationZ", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZ_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationZ", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZ_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>translationZ</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationZ(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationZ(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.TranslationZ" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
    <Member MemberName="TranslationZBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? TranslationZBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator TranslationZBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.TranslationZBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member TranslationZBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.TranslationZBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.TranslationZBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("translationZBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("translationZBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetTranslationZBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>translationZ</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#translationZBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.translationZBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="P:Android.Views.View.TranslationZ" />
      </Docs>
    </Member>
    <Member MemberName="WithEndAction">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? WithEndAction (Java.Lang.IRunnable? runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithEndAction(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.WithEndAction(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member WithEndAction : Java.Lang.IRunnable -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.WithEndAction : Java.Lang.IRunnable -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.WithEndAction runnable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withEndAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithEndAction_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withEndAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithEndAction_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">The action to run when the next animation ends.</param>
        <summary>Specifies an action to take place when the next animation ends.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#withEndAction(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.withEndAction(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="WithLayer">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? WithLayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithLayer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.WithLayer" />
      <MemberSignature Language="F#" Value="abstract member WithLayer : unit -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.WithLayer : unit -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.WithLayer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withLayer", "()Landroid/view/ViewPropertyAnimator;", "GetWithLayerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withLayer", "()Landroid/view/ViewPropertyAnimator;", "GetWithLayerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>The View associated with this ViewPropertyAnimator will have its
            <c>View#setLayerType(int, android.graphics.Paint) layer type</c> set to
            <c>View#LAYER_TYPE_HARDWARE</c> for the duration of the next animation.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#withLayer()" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.withLayer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="M:Android.Views.View.SetLayerType(Android.Views.LayerType, Android.Graphics.Paint)" />
      </Docs>
    </Member>
    <Member MemberName="WithStartAction">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? WithStartAction (Java.Lang.IRunnable? runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator WithStartAction(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.WithStartAction(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="abstract member WithStartAction : Java.Lang.IRunnable -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.WithStartAction : Java.Lang.IRunnable -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.WithStartAction runnable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("withStartAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithStartAction_Ljava_lang_Runnable_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("withStartAction", "(Ljava/lang/Runnable;)Landroid/view/ViewPropertyAnimator;", "GetWithStartAction_Ljava_lang_Runnable_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">The action to run when the next animation starts.</param>
        <summary>Specifies an action to take place when the next animation runs.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#withStartAction(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.withStartAction(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? X (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator X(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.X(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member X : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.X : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.X value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("x", "(F)Landroid/view/ViewPropertyAnimator;", "GetX_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("x", "(F)Landroid/view/ViewPropertyAnimator;", "GetX_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>x</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#x(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.x(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetX(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="XBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? XBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator XBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.XBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member XBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.XBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.XBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("xBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetXBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("xBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetXBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>x</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#xBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.xBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetX(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? Y (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Y(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Y(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Y : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.Y : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.Y value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("y", "(F)Landroid/view/ViewPropertyAnimator;", "GetY_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("y", "(F)Landroid/view/ViewPropertyAnimator;", "GetY_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>y</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#y(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.y(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetY(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="YBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? YBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator YBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.YBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member YBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.YBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.YBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("yBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetYBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("yBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetYBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>y</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#yBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.yBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.Views.View.SetY(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="Z">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? Z (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator Z(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.Z(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member Z : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.Z : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.Z value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("z", "(F)Landroid/view/ViewPropertyAnimator;", "GetZ_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("z", "(F)Landroid/view/ViewPropertyAnimator;", "GetZ_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The value to be animated to.</param>
        <summary>This method will cause the View's <c>z</c> property to be animated to the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#z(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.z(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.SetZ(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="ZBy">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ViewPropertyAnimator? ZBy (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.ViewPropertyAnimator ZBy(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.ViewPropertyAnimator.ZBy(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member ZBy : single -&gt; Android.Views.ViewPropertyAnimator&#xA;override this.ZBy : single -&gt; Android.Views.ViewPropertyAnimator" Usage="viewPropertyAnimator.ZBy value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("zBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetZBy_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("zBy", "(F)Landroid/view/ViewPropertyAnimator;", "GetZBy_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ViewPropertyAnimator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The amount to be animated by, as an offset from the current value.</param>
        <summary>This method will cause the View's <c>z</c> property to be animated by the
            specified value.</summary>
        <returns>This object, allowing calls to methods in this class to be chained.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/ViewPropertyAnimator#zBy(float)" title="Reference documentation">Java documentation for <code>android.view.ViewPropertyAnimator.zBy(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Views.View.SetZ(System.Single)" />
      </Docs>
    </Member>
  </Members>
</Type>
