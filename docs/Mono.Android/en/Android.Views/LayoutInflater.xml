<Type Name="LayoutInflater" FullName="Android.Views.LayoutInflater">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutInflater&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutInflater abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class LayoutInflater : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutInflater extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.LayoutInflater" />
  <TypeSignature Language="F#" Value="type LayoutInflater = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/view/LayoutInflater", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/view/LayoutInflater", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Instantiates a layout XML file into its corresponding <c>android.view.View</c>
            objects.</summary>
    <remarks>
      <para>Instantiates a layout XML file into its corresponding <c>android.view.View</c>
            objects. It is never used directly. Instead, use
            <c>android.app.Activity#getLayoutInflater()</c> or
            <c>Context#getSystemService</c> to retrieve a standard LayoutInflater instance
            that is already hooked up to the current context and correctly configured
            for the device you are running on.</para>
      <para>To create a new LayoutInflater with an additional <c>Factory</c> for your
            own views, you can use <c>#cloneInContext</c> to clone an existing
            ViewFactory, and then call <c>#setFactory</c> on it to include your
            Factory.</para>
      <para>For performance reasons, view inflation relies heavily on pre-processing of
            XML files that is done at build time. Therefore, it is not currently possible
            to use LayoutInflater with an XmlPullParser over a plain XML file at runtime;
            it only works with an XmlPullParser returned from a compiled resource
            (R.&lt;em&gt;something&lt;/em&gt; file.)</para>
      <para>&lt;strong&gt;Note:&lt;/strong&gt; This class is &lt;strong&gt;not&lt;/strong&gt; thread-safe and a given
            instance should only be accessed by a single thread.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/LayoutInflater" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (context As Context)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutInflater(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="protected LayoutInflater (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The Context in which this LayoutInflater will create its
            Views; most importantly, this supplies the theme from which the default
            values for their attributes are retrieved.</param>
        <summary>Create a new LayoutInflater instance associated with a particular Context.</summary>
        <remarks>
          <para>Create a new LayoutInflater instance associated with a particular Context.
            Applications will almost always want to use
            <c>Context#getSystemService Context.getSystemService()</c> to retrieve
            the standard <c>Context#LAYOUT_INFLATER_SERVICE Context.INFLATER_SERVICE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#LayoutInflater(android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.LayoutInflater(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As LayoutInflater, newContext As Context)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutInflater(Android::Views::LayoutInflater ^ original, Android::Content::Context ^ newContext);" />
      <MemberSignature Language="C#" Value="protected LayoutInflater (Android.Views.LayoutInflater? original, Android.Content.Context? newContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Android.Views.LayoutInflater original, class Android.Content.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(Android.Views.LayoutInflater,Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : Android.Views.LayoutInflater * Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater (original, newContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/view/LayoutInflater;Landroid/content/Context;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/view/LayoutInflater;Landroid/content/Context;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="original" Type="Android.Views.LayoutInflater" />
        <Parameter Name="newContext" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="original">The original LayoutInflater to copy.</param>
        <param name="newContext">The new Context to use.</param>
        <summary>Create a new LayoutInflater instance that is a copy of an existing
            LayoutInflater, optionally with its Context changed.</summary>
        <remarks>
          <para>Create a new LayoutInflater instance that is a copy of an existing
            LayoutInflater, optionally with its Context changed.  For use in
            implementing <c>#cloneInContext</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#LayoutInflater(android.view.LayoutInflater,%20android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.LayoutInflater(android.view.LayoutInflater, android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutInflater(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected LayoutInflater (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInContext">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CloneInContext (newContext As Context) As LayoutInflater" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Android::Views::LayoutInflater ^ CloneInContext(Android::Content::Context ^ newContext);" />
      <MemberSignature Language="C#" Value="public abstract Android.Views.LayoutInflater? CloneInContext (Android.Content.Context? newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.LayoutInflater CloneInContext(class Android.Content.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CloneInContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="abstract member CloneInContext : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="layoutInflater.CloneInContext newContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cloneInContext", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "GetCloneInContext_Landroid_content_Context_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cloneInContext", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "GetCloneInContext_Landroid_content_Context_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="newContext">The new Context to associate with the new LayoutInflater.
            May be the same as the original Context if desired.</param>
        <summary>Create a copy of the existing LayoutInflater object, with the copy
            pointing to a different Context than the original.</summary>
        <returns>Returns a brand spanking new LayoutInflater object associated with
            the given Context.</returns>
        <remarks>
          <para>Create a copy of the existing LayoutInflater object, with the copy
            pointing to a different Context than the original.  This is used by
            <c>ContextThemeWrapper</c> to create a new LayoutInflater to go along
            with the new Context theme.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#cloneInContext(android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.cloneInContext(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Context As Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::Context ^ Context { Android::Content::Context ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context? Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Context" />
      <MemberSignature Language="F#" Value="member this.Context : Android.Content.Context" Usage="Android.Views.LayoutInflater.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the context we are running in, for access to resources, class
            loader, etc.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the context we are running in, for access to resources, class
            loader, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#getContext()" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.getContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="VB.NET" Value="Public Function CreateView (name As String, prefix As String, attrs As IAttributeSet) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Views::View ^ CreateView(System::String ^ name, System::String ^ prefix, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public Android.Views.View? CreateView (string? name, string? prefix, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View CreateView(string name, string prefix, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CreateView(System.String,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="member this.CreateView : string * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.CreateView (name, prefix, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createView", "(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createView", "(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="name">The full name of the class to be instantiated.</param>
        <param name="attrs">The XML attributes supplied for this instance.</param>
        <summary>Low-level function for instantiating a view by name.</summary>
        <returns>View The newly instantiated view, or null.</returns>
        <remarks>
          <para>Low-level function for instantiating a view by name. This attempts to
            instantiate a view class of the given &lt;var&gt;name&lt;/var&gt; found in this
            LayoutInflater's ClassLoader. To use an explicit Context in the View
            constructor, use <c>#createView(Context, String, String, AttributeSet)</c> instead.</para>
          <para>There are two things that can happen in an error case: either the
            exception describing the error will be thrown, or a null will be
            returned. You must deal with both possibilities -- the former will happen
            the first time createView() is called for a class of a particular name,
            the latter every time there-after for that class name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#createView(java.lang.String,%20java.lang.String,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.createView(java.lang.String, java.lang.String, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
        <exception cref="T:Android.Views.InflateException" />
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="VB.NET" Value="Public Function CreateView (viewContext As Context, name As String, prefix As String, attrs As IAttributeSet) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Views::View ^ CreateView(Android::Content::Context ^ viewContext, System::String ^ name, System::String ^ prefix, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public Android.Views.View? CreateView (Android.Content.Context viewContext, string name, string? prefix, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View CreateView(class Android.Content.Context viewContext, string name, string prefix, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CreateView(Android.Content.Context,System.String,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="member this.CreateView : Android.Content.Context * string * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.CreateView (viewContext, name, prefix, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createView", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createView", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Android.Content.Context">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="viewContext">The context used as the context parameter of the View constructor</param>
        <param name="name">The full name of the class to be instantiated.</param>
        <param name="attrs">The XML attributes supplied for this instance.</param>
        <summary>Low-level function for instantiating a view by name.</summary>
        <returns>View The newly instantiated view, or null.</returns>
        <remarks>
          <para>Low-level function for instantiating a view by name. This attempts to
            instantiate a view class of the given &lt;var&gt;name&lt;/var&gt; found in this
            LayoutInflater's ClassLoader.</para>
          <para>There are two things that can happen in an error case: either the
            exception describing the error will be thrown, or a null will be
            returned. You must deal with both possibilities -- the former will happen
            the first time createView() is called for a class of a particular name,
            the latter every time there-after for that class name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#createView(android.content.Context,%20java.lang.String,%20java.lang.String,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.createView(android.content.Context, java.lang.String, java.lang.String, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="VB.NET" Value="Public Property Factory As LayoutInflater.IFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::LayoutInflater::IFactory ^ Factory { Android::Views::LayoutInflater::IFactory ^ get(); void set(Android::Views::LayoutInflater::IFactory ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.LayoutInflater.IFactory? Factory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFactory Factory" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Factory" />
      <MemberSignature Language="F#" Value="member this.Factory : Android.Views.LayoutInflater.IFactory with get, set" Usage="Android.Views.LayoutInflater.Factory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFactory", "()Landroid/view/LayoutInflater$Factory;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFactory", "()Landroid/view/LayoutInflater$Factory;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFactory", "(Landroid/view/LayoutInflater$Factory;)V", "GetSetFactory_Landroid_view_LayoutInflater_Factory_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFactory", "(Landroid/view/LayoutInflater$Factory;)V", "GetSetFactory_Landroid_view_LayoutInflater_Factory_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Factory</c> (or null). -or- Attach a custom Factory interface for creating views while using
            this LayoutInflater.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#getFactory()" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.getFactory()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#setFactory(android.view.Factory)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.setFactory(android.view.Factory)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Factory2">
      <MemberSignature Language="VB.NET" Value="Public Property Factory2 As LayoutInflater.IFactory2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Views::LayoutInflater::IFactory2 ^ Factory2 { Android::Views::LayoutInflater::IFactory2 ^ get(); void set(Android::Views::LayoutInflater::IFactory2 ^ value); };" />
      <MemberSignature Language="C#" Value="public Android.Views.LayoutInflater.IFactory2? Factory2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFactory2 Factory2" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Factory2" />
      <MemberSignature Language="F#" Value="member this.Factory2 : Android.Views.LayoutInflater.IFactory2 with get, set" Usage="Android.Views.LayoutInflater.Factory2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFactory2", "()Landroid/view/LayoutInflater$Factory2;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFactory2", "()Landroid/view/LayoutInflater$Factory2;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFactory2", "(Landroid/view/LayoutInflater$Factory2;)V", "GetSetFactory2_Landroid_view_LayoutInflater_Factory2_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFactory2", "(Landroid/view/LayoutInflater$Factory2;)V", "GetSetFactory2_Landroid_view_LayoutInflater_Factory2_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFactory2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Factory2</c>. -or- Like <c>#setFactory</c>, but allows you to set a <c>Factory2</c>
            interface.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#getFactory2()" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.getFactory2()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#setFactory2(android.view.Factory2)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.setFactory2(android.view.Factory2)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Filter As LayoutInflater.IFilter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::LayoutInflater::IFilter ^ Filter { Android::Views::LayoutInflater::IFilter ^ get(); void set(Android::Views::LayoutInflater::IFilter ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutInflater.IFilter? Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Filter" />
      <MemberSignature Language="F#" Value="member this.Filter : Android.Views.LayoutInflater.IFilter with get, set" Usage="Android.Views.LayoutInflater.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFilter", "()Landroid/view/LayoutInflater$Filter;", "GetGetFilterHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFilter", "()Landroid/view/LayoutInflater$Filter;", "GetGetFilterHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setFilter", "(Landroid/view/LayoutInflater$Filter;)V", "GetSetFilter_Landroid_view_LayoutInflater_Filter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setFilter", "(Landroid/view/LayoutInflater$Filter;)V", "GetSetFilter_Landroid_view_LayoutInflater_Filter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the <c>Filter</c> to by this LayoutInflater.</summary>
        <value>The <c>Filter</c> currently used by this LayoutInflater to restrict the set of Views
            that are allowed to be inflated.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#getFilter()" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.getFilter()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#setFilter(android.view.Filter)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.setFilter(android.view.Filter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="VB.NET" Value="Public Shared Function From (context As Context) As LayoutInflater" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Views::LayoutInflater ^ From(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.Views.LayoutInflater? From (Android.Content.Context? context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.LayoutInflater From(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.From(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member From : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="Android.Views.LayoutInflater.From context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("from", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("from", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Obtains the LayoutInflater from the given context.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Obtains the LayoutInflater from the given context.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#from(android.content.Context)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.from(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromContext (context As Context) As LayoutInflater" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Views::LayoutInflater ^ FromContext(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.Views.LayoutInflater? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.LayoutInflater FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="Android.Views.LayoutInflater.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Inflate (resource As Integer, root As ViewGroup) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ Inflate(int resource, Android::Views::ViewGroup ^ root);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? Inflate (int resource, Android.Views.ViewGroup? root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(int32 resource, class Android.Views.ViewGroup root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Int32,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : int * Android.Views.ViewGroup -&gt; Android.Views.View&#xA;override this.Inflate : int * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="layoutInflater.Inflate (resource, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="resource">ID for an XML layout resource to load (e.g.,
                   <c>R.layout.main_page</c>)</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Inflate a new view hierarchy from the specified xml resource. Throws
            <c>InflateException</c> if there is an error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#inflate(int,%20android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.inflate(int, android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Inflate (parser As XmlReader, root As ViewGroup) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ Inflate(System::Xml::XmlReader ^ parser, Android::Views::ViewGroup ^ root);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? Inflate (System.Xml.XmlReader? parser, Android.Views.ViewGroup? root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(class System.Xml.XmlReader parser, class Android.Views.ViewGroup root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Xml.XmlReader,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : System.Xml.XmlReader * Android.Views.ViewGroup -&gt; Android.Views.View&#xA;override this.Inflate : System.Xml.XmlReader * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="layoutInflater.Inflate (parser, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="parser">XML dom node containing the description of the view
                   hierarchy.</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <summary>Inflate a new view hierarchy from the specified xml node.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Inflate a new view hierarchy from the specified xml node. Throws
            <c>InflateException</c> if there is an error. *</para>
          <para>&lt;em&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;For performance
            reasons, view inflation relies heavily on pre-processing of XML files
            that is done at build time. Therefore, it is not currently possible to
            use LayoutInflater with an XmlPullParser over a plain XML file at runtime.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#inflate(org.xmlpull.v1.XmlPullParser,%20android.view.ViewGroup)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Inflate (resource As Integer, root As ViewGroup, attachToRoot As Boolean) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ Inflate(int resource, Android::Views::ViewGroup ^ root, bool attachToRoot);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? Inflate (int resource, Android.Views.ViewGroup? root, bool attachToRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(int32 resource, class Android.Views.ViewGroup root, bool attachToRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Int32,Android.Views.ViewGroup,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : int * Android.Views.ViewGroup * bool -&gt; Android.Views.View&#xA;override this.Inflate : int * Android.Views.ViewGroup * bool -&gt; Android.Views.View" Usage="layoutInflater.Inflate (resource, root, attachToRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
        <Parameter Name="attachToRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resource">ID for an XML layout resource to load (e.g.,
                   <c>R.layout.main_page</c>)</param>
        <param name="root">Optional view to be the parent of the generated hierarchy (if
                   &lt;em&gt;attachToRoot&lt;/em&gt; is true), or else simply an object that
                   provides a set of LayoutParams values for root of the returned
                   hierarchy (if &lt;em&gt;attachToRoot&lt;/em&gt; is false.)</param>
        <param name="attachToRoot">Whether the inflated hierarchy should be attached to
                   the root parameter? If false, root is only used to create the
                   correct subclass of LayoutParams for the root view in the XML.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied and
                    attachToRoot is true, this is root; otherwise it is the root of
                    the inflated XML file.</returns>
        <remarks>
          <para>Inflate a new view hierarchy from the specified xml resource. Throws
            <c>InflateException</c> if there is an error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#inflate(int,%20android.view.ViewGroup,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Inflate (parser As XmlReader, root As ViewGroup, attachToRoot As Boolean) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ Inflate(System::Xml::XmlReader ^ parser, Android::Views::ViewGroup ^ root, bool attachToRoot);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? Inflate (System.Xml.XmlReader? parser, Android.Views.ViewGroup? root, bool attachToRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(class System.Xml.XmlReader parser, class Android.Views.ViewGroup root, bool attachToRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Xml.XmlReader,Android.Views.ViewGroup,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : System.Xml.XmlReader * Android.Views.ViewGroup * bool -&gt; Android.Views.View&#xA;override this.Inflate : System.Xml.XmlReader * Android.Views.ViewGroup * bool -&gt; Android.Views.View" Usage="layoutInflater.Inflate (parser, root, attachToRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
        <Parameter Name="attachToRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parser">XML dom node containing the description of the view
                   hierarchy.</param>
        <param name="root">Optional view to be the parent of the generated hierarchy (if
                   &lt;em&gt;attachToRoot&lt;/em&gt; is true), or else simply an object that
                   provides a set of LayoutParams values for root of the returned
                   hierarchy (if &lt;em&gt;attachToRoot&lt;/em&gt; is false.)</param>
        <param name="attachToRoot">Whether the inflated hierarchy should be attached to
                   the root parameter? If false, root is only used to create the
                   correct subclass of LayoutParams for the root view in the XML.</param>
        <summary>Inflate a new view hierarchy from the specified XML node.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied and
                    attachToRoot is true, this is root; otherwise it is the root of
                    the inflated XML file.</returns>
        <remarks>
          <para>Inflate a new view hierarchy from the specified XML node. Throws
            <c>InflateException</c> if there is an error.</para>
          <para>&lt;em&gt;&lt;strong&gt;Important&lt;/strong&gt;&lt;/em&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;For performance
            reasons, view inflation relies heavily on pre-processing of XML files
            that is done at build time. Therefore, it is not currently possible to
            use LayoutInflater with an XmlPullParser over a plain XML file at runtime.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#inflate(org.xmlpull.v1.XmlPullParser,%20android.view.ViewGroup,%20boolean)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.LayoutInflater.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateView (name As String, attrs As IAttributeSet) As View" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Android::Views::View ^ OnCreateView(System::String ^ name, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="protected virtual Android.Views.View? OnCreateView (string? name, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.Views.View OnCreateView(string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : string * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.OnCreateView (name, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateView", "(Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Ljava_lang_String_Landroid_util_AttributeSet_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateView", "(Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Ljava_lang_String_Landroid_util_AttributeSet_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>This routine is responsible for creating the correct subclass of View
            given the xml element name.</summary>
        <returns>View The View created.</returns>
        <remarks>
          <para>This routine is responsible for creating the correct subclass of View
            given the xml element name. Override it to handle custom view objects. If
            you override this in your subclass be sure to call through to
            super.onCreateView(name) for names you do not recognize.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#onCreateView(java.lang.String,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.onCreateView(java.lang.String, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateView (parent As View, name As String, attrs As IAttributeSet) As View" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Android::Views::View ^ OnCreateView(Android::Views::View ^ parent, System::String ^ name, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="protected virtual Android.Views.View? OnCreateView (Android.Views.View? parent, string? name, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Views.View parent, string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(Android.Views.View,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.OnCreateView (parent, name, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="parent">The future parent of the returned view.  &lt;em&gt;Note that
            this may be null.&lt;/em&gt;</param>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>Version of <c>#onCreateView(String, AttributeSet)</c> that also
            takes the future parent of the view being constructed.</summary>
        <returns>View The View created.</returns>
        <remarks>
          <para>Version of <c>#onCreateView(String, AttributeSet)</c> that also
            takes the future parent of the view being constructed.  The default
            implementation simply calls <c>#onCreateView(String, AttributeSet)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#onCreateView(android.view.View,%20java.lang.String,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.onCreateView(android.view.View, java.lang.String, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCreateView (viewContext As Context, parent As View, name As String, attrs As IAttributeSet) As View" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Views::View ^ OnCreateView(Android::Content::Context ^ viewContext, Android::Views::View ^ parent, System::String ^ name, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.View? OnCreateView (Android.Content.Context viewContext, Android.Views.View? parent, string name, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Content.Context viewContext, class Android.Views.View parent, string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(Android.Content.Context,Android.Views.View,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : Android.Content.Context * Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : Android.Content.Context * Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.OnCreateView (viewContext, parent, name, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateView", "(Landroid/content/Context;Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_content_Context_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateView", "(Landroid/content/Context;Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_content_Context_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Android.Content.Context">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="name" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="viewContext">The Context to be used as a constructor parameter for the View</param>
        <param name="parent">The future parent of the returned view.  &lt;em&gt;Note that
            this may be null.&lt;/em&gt;</param>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>Version of <c>#onCreateView(View, String, AttributeSet)</c> that also
            takes the inflation context.</summary>
        <returns>View The View created.</returns>
        <remarks>
          <para>Version of <c>#onCreateView(View, String, AttributeSet)</c> that also
            takes the inflation context.  The default
            implementation simply calls <c>#onCreateView(View, String, AttributeSet)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/view/LayoutInflater#onCreateView(android.content.Context,%20android.view.View,%20java.lang.String,%20android.util.AttributeSet)" title="Reference documentation">Java documentation for <code>android.view.LayoutInflater.onCreateView(android.content.Context, android.view.View, java.lang.String, android.util.AttributeSet)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.LayoutInflater.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.LayoutInflater.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
