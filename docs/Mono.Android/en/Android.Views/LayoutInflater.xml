<Type Name="LayoutInflater" FullName="Android.Views.LayoutInflater">
  <TypeSignature Language="C#" Value="public abstract class LayoutInflater : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutInflater extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Views.LayoutInflater" />
  <TypeSignature Language="F#" Value="type LayoutInflater = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/view/LayoutInflater", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Instantiates a layout XML file into its corresponding <c>android.view.View</c>
            objects.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/view/LayoutInflater" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutInflater (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">The Context in which this LayoutInflater will create its
            Views; most importantly, this supplies the theme from which the default
            values for their attributes are retrieved.</param>
        <summary>Create a new LayoutInflater instance associated with a particular Context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutInflater (Android.Views.LayoutInflater original, Android.Content.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Android.Views.LayoutInflater original, class Android.Content.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(Android.Views.LayoutInflater,Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : Android.Views.LayoutInflater * Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater (original, newContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/view/LayoutInflater;Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="original" Type="Android.Views.LayoutInflater" />
        <Parameter Name="newContext" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="original">To be added.</param>
        <param name="newContext">To be added.</param>
        <summary>Create a new LayoutInflater instance associated with a particular Context.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutInflater (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Views.LayoutInflater : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Views.LayoutInflater" Usage="new Android.Views.LayoutInflater (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneInContext">
      <MemberSignature Language="C#" Value="public abstract Android.Views.LayoutInflater CloneInContext (Android.Content.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.LayoutInflater CloneInContext(class Android.Content.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CloneInContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="abstract member CloneInContext : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="layoutInflater.CloneInContext newContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("cloneInContext", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "GetCloneInContext_Landroid_content_Context_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="newContext">The new Context to associate with the new LayoutInflater.
            May be the same as the original Context if desired.</param>
        <summary>Create a copy of the existing LayoutInflater object, with the copy
            pointing to a different Context than the original.</summary>
        <returns>Returns a brand spanking new LayoutInflater object associated with
            the given Context.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context Context" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Context" />
      <MemberSignature Language="F#" Value="member this.Context : Android.Content.Context" Usage="Android.Views.LayoutInflater.Context" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getContext", "()Landroid/content/Context;", "GetGetContextHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the context we are running in, for access to resources, class
            loader, etc.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="public Android.Views.View CreateView (string name, string prefix, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View CreateView(string name, string prefix, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CreateView(System.String,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="member this.CreateView : string * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.CreateView (name, prefix, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createView", "(Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="name">The full name of the class to be instantiated.</param>
        <param name="prefix">To be added.</param>
        <param name="attrs">The XML attributes supplied for this instance.</param>
        <summary>Low-level function for instantiating a view by name.</summary>
        <returns>View The newly instantiated view, or null.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
        <exception cref="T:Android.Views.InflateException" />
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="public Android.Views.View CreateView (Android.Content.Context viewContext, string name, string prefix, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.View CreateView(class Android.Content.Context viewContext, string name, string prefix, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.CreateView(Android.Content.Context,System.String,System.String,Android.Util.IAttributeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createView", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Android.Content.Context" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="viewContext">The context used as the context parameter of the View constructor</param>
        <param name="name">The full name of the class to be instantiated.</param>
        <param name="prefix">To be added.</param>
        <param name="attrs">The XML attributes supplied for this instance.</param>
        <summary>Low-level function for instantiating a view by name.</summary>
        <returns>View The newly instantiated view, or null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Factory">
      <MemberSignature Language="C#" Value="public Android.Views.LayoutInflater.IFactory Factory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFactory Factory" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Factory" />
      <MemberSignature Language="F#" Value="member this.Factory : Android.Views.LayoutInflater.IFactory with get, set" Usage="Android.Views.LayoutInflater.Factory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFactory", "()Landroid/view/LayoutInflater$Factory;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFactory", "(Landroid/view/LayoutInflater$Factory;)V", "GetSetFactory_Landroid_view_LayoutInflater_Factory_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Factory</c> (or null). -or- Attach a custom Factory interface for creating views while using
            this LayoutInflater.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Factory2">
      <MemberSignature Language="C#" Value="public Android.Views.LayoutInflater.IFactory2 Factory2 { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFactory2 Factory2" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Factory2" />
      <MemberSignature Language="F#" Value="member this.Factory2 : Android.Views.LayoutInflater.IFactory2 with get, set" Usage="Android.Views.LayoutInflater.Factory2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFactory2", "()Landroid/view/LayoutInflater$Factory2;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFactory2", "(Landroid/view/LayoutInflater$Factory2;)V", "GetSetFactory2_Landroid_view_LayoutInflater_Factory2_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFactory2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the current <c>Factory2</c>. -or- Like <c>#setFactory</c>#setFactory, but allows you to set a <c>Factory2</c>Factory2
            interface.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public virtual Android.Views.LayoutInflater.IFilter Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.LayoutInflater/IFilter Filter" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.Filter" />
      <MemberSignature Language="F#" Value="member this.Filter : Android.Views.LayoutInflater.IFilter with get, set" Usage="Android.Views.LayoutInflater.Filter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFilter", "()Landroid/view/LayoutInflater$Filter;", "GetGetFilterHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setFilter", "(Landroid/view/LayoutInflater$Filter;)V", "GetSetFilter_Landroid_view_LayoutInflater_Filter_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater+IFilter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the <c>Filter</c> to by this LayoutInflater.</summary>
        <value>The <c>Filter</c> currently used by this LayoutInflater to restrict the set of Views
            that are allowed to be inflated.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public static Android.Views.LayoutInflater From (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.LayoutInflater From(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.From(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member From : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="Android.Views.LayoutInflater.From context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("from", "(Landroid/content/Context;)Landroid/view/LayoutInflater;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Obtains the LayoutInflater from the given context.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Views.LayoutInflater FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.LayoutInflater FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Views.LayoutInflater" Usage="Android.Views.LayoutInflater.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Views.LayoutInflater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View Inflate (int resource, Android.Views.ViewGroup root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(int32 resource, class Android.Views.ViewGroup root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Int32,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : int * Android.Views.ViewGroup -&gt; Android.Views.View&#xA;override this.Inflate : int * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="layoutInflater.Inflate (resource, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="resource">ID for an XML layout resource to load (e.g.,
                   &lt;code&gt;R.layout.main_page&lt;/code&gt;)</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View Inflate (System.Xml.XmlReader parser, Android.Views.ViewGroup root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(class System.Xml.XmlReader parser, class Android.Views.ViewGroup root) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Xml.XmlReader,Android.Views.ViewGroup)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : System.Xml.XmlReader * Android.Views.ViewGroup -&gt; Android.Views.View&#xA;override this.Inflate : System.Xml.XmlReader * Android.Views.ViewGroup -&gt; Android.Views.View" Usage="layoutInflater.Inflate (parser, root)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
      </Parameters>
      <Docs>
        <param name="parser">XML dom node containing the description of the view
        hierarchy.</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View Inflate (int resource, Android.Views.ViewGroup root, bool attachToRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(int32 resource, class Android.Views.ViewGroup root, bool attachToRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Int32,Android.Views.ViewGroup,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : int * Android.Views.ViewGroup * bool -&gt; Android.Views.View&#xA;override this.Inflate : int * Android.Views.ViewGroup * bool -&gt; Android.Views.View" Usage="layoutInflater.Inflate (resource, root, attachToRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(ILandroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_ILandroid_view_ViewGroup_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Int32" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
        <Parameter Name="attachToRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="resource">ID for an XML layout resource to load (e.g.,
                   &lt;code&gt;R.layout.main_page&lt;/code&gt;)</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <param name="attachToRoot">Whether the inflated hierarchy should be attached to
        the root parameter? If false, root is only used to create the
        correct subclass of LayoutParams for the root view in the XML.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View Inflate (System.Xml.XmlReader parser, Android.Views.ViewGroup root, bool attachToRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View Inflate(class System.Xml.XmlReader parser, class Android.Views.ViewGroup root, bool attachToRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.Inflate(System.Xml.XmlReader,Android.Views.ViewGroup,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Inflate : System.Xml.XmlReader * Android.Views.ViewGroup * bool -&gt; Android.Views.View&#xA;override this.Inflate : System.Xml.XmlReader * Android.Views.ViewGroup * bool -&gt; Android.Views.View" Usage="layoutInflater.Inflate (parser, root, attachToRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("inflate", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/view/ViewGroup;Z)Landroid/view/View;", "GetInflate_Lorg_xmlpull_v1_XmlPullParser_Landroid_view_ViewGroup_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parser" Type="System.Xml.XmlReader" />
        <Parameter Name="root" Type="Android.Views.ViewGroup" />
        <Parameter Name="attachToRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parser">XML dom node containing the description of the view
        hierarchy.</param>
        <param name="root">Optional view to be the parent of the generated hierarchy.</param>
        <param name="attachToRoot">Whether the inflated hierarchy should be attached to
        the root parameter? If false, root is only used to create the
        correct subclass of LayoutParams for the root view in the XML.</param>
        <summary>Inflate a new view hierarchy from the specified xml resource.</summary>
        <returns>The root View of the inflated hierarchy. If root was supplied,
                    this is the root View; otherwise it is the root of the inflated
                    XML file.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Views.LayoutInflater.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="protected virtual Android.Views.View OnCreateView (string name, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.Views.View OnCreateView(string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : string * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.OnCreateView (name, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateView", "(Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Ljava_lang_String_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>Version of <c>#onCreateView(View, String, AttributeSet)</c> that also
            takes the inflation context.</summary>
        <returns>View The View created.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="protected virtual Android.Views.View OnCreateView (Android.Views.View parent, string name, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Views.View parent, string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(Android.Views.View,System.String,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateView : Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View&#xA;override this.OnCreateView : Android.Views.View * string * Android.Util.IAttributeSet -&gt; Android.Views.View" Usage="layoutInflater.OnCreateView (parent, name, attrs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="parent">The future parent of the returned view.  &lt;em&gt;Note that
            this may be null.&lt;/em&gt;</param>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>Version of <c>#onCreateView(View, String, AttributeSet)</c> that also
            takes the inflation context.</summary>
        <returns>View The View created.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <exception cref="T:Java.Lang.ClassNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateView">
      <MemberSignature Language="C#" Value="public virtual Android.Views.View OnCreateView (Android.Content.Context viewContext, Android.Views.View parent, string name, Android.Util.IAttributeSet attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Views.View OnCreateView(class Android.Content.Context viewContext, class Android.Views.View parent, string name, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Views.LayoutInflater.OnCreateView(Android.Content.Context,Android.Views.View,System.String,Android.Util.IAttributeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreateView", "(Landroid/content/Context;Landroid/view/View;Ljava/lang/String;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_content_Context_Landroid_view_View_Ljava_lang_String_Landroid_util_AttributeSet_Handler", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.View</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewContext" Type="Android.Content.Context" />
        <Parameter Name="parent" Type="Android.Views.View" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="viewContext">The Context to be used as a constructor parameter for the View</param>
        <param name="parent">The future parent of the returned view.  &lt;em&gt;Note that
            this may be null.&lt;/em&gt;</param>
        <param name="name">The fully qualified class name of the View to be create.</param>
        <param name="attrs">An AttributeSet of attributes to apply to the View.</param>
        <summary>Version of <c>#onCreateView(View, String, AttributeSet)</c> that also
            takes the inflation context.</summary>
        <returns>View The View created.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Views.LayoutInflater.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Views.LayoutInflater.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Views.LayoutInflater.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
