<Type Name="Preferences" FullName="Java.Util.Prefs.Preferences">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Preferences&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Preferences abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class Preferences : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Preferences extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Prefs.Preferences" />
  <TypeSignature Language="F#" Value="type Preferences = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/prefs/Preferences", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/prefs/Preferences", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A node in a hierarchical collection of preference data.</summary>
    <remarks>
      <para>A node in a hierarchical collection of preference data.  This class
            allows applications to store and retrieve user and system
            preference and configuration data.  This data is stored
            persistently in an implementation-dependent backing store.  Typical
            implementations include flat files, OS-specific registries,
            directory servers and SQL databases.  The user of this class needn't
            be concerned with details of the backing store.</para>
      <para>There are two separate trees of preference nodes, one for user
            preferences and one for system preferences.  Each user has a separate user
            preference tree, and all users in a given system share the same system
            preference tree.  The precise description of "user" and "system" will vary
            from implementation to implementation.  Typical information stored in the
            user preference tree might include font choice, color choice, or preferred
            window location and size for a particular application.  Typical information
            stored in the system preference tree might include installation
            configuration data for an application.</para>
      <para>Nodes in a preference tree are named in a similar fashion to
            directories in a hierarchical file system.   Every node in a preference
            tree has a <i>node name</i> (which is not necessarily unique),
            a unique <i>absolute path name</i>, and a path name <i>relative</i> to each
            ancestor including itself.</para>
      <para>The root node has a node name of the empty string ("").  Every other
            node has an arbitrary node name, specified at the time it is created.  The
            only restrictions on this name are that it cannot be the empty string, and
            it cannot contain the slash character ('/').</para>
      <para>The root node has an absolute path name of <c>"/"</c>.  Children of
            the root node have absolute path names of <c>"/" + </c><i>&amp;lt;node
            name&amp;gt;</i>.  All other nodes have absolute path names of <i>&amp;lt;parent's
            absolute path name&amp;gt;</i><c> + "/" + </c><i>&amp;lt;node name&amp;gt;</i>.
            Note that all absolute path names begin with the slash character.</para>
      <para>A node <i>n</i>'s path name relative to its ancestor <i>a</i>
            is simply the string that must be appended to <i>a</i>'s absolute path name
            in order to form <i>n</i>'s absolute path name, with the initial slash
            character (if present) removed.  Note that:
            &lt;ul&gt;
            &lt;li&gt;No relative path names begin with the slash character.
            &lt;li&gt;Every node's path name relative to itself is the empty string.
            &lt;li&gt;Every node's path name relative to its parent is its node name (except
            for the root node, which does not have a parent).
            &lt;li&gt;Every node's path name relative to the root is its absolute path name
            with the initial slash character removed.
            &lt;/ul&gt;</para>
      <para>Note finally that:
            &lt;ul&gt;
            &lt;li&gt;No path name contains multiple consecutive slash characters.
            &lt;li&gt;No path name with the exception of the root's absolute path name
            ends in the slash character.
            &lt;li&gt;Any string that conforms to these two rules is a valid path name.
            &lt;/ul&gt;</para>
      <para>All of the methods that modify preferences data are permitted to operate
            asynchronously; they may return immediately, and changes will eventually
            propagate to the persistent backing store with an implementation-dependent
            delay.  The <c>flush</c> method may be used to synchronously force
            updates to the backing store.  Normal termination of the Java Virtual
            Machine will <i>not</i> result in the loss of pending updates -- an explicit
            <c>flush</c> invocation is <i>not</i> required upon termination to ensure
            that pending updates are made persistent.</para>
      <para>All of the methods that read preferences from a <c>Preferences</c>
            object require the invoker to provide a default value.  The default value is
            returned if no value has been previously set <i>or if the backing store is
            unavailable</i>.  The intent is to allow applications to operate, albeit
            with slightly degraded functionality, even if the backing store becomes
            unavailable.  Several methods, like <c>flush</c>, have semantics that
            prevent them from operating if the backing store is unavailable.  Ordinary
            applications should have no need to invoke any of these methods, which can
            be identified by the fact that they are declared to throw <c>BackingStoreException</c>.</para>
      <para>The methods in this class may be invoked concurrently by multiple threads
            in a single JVM without the need for external synchronization, and the
            results will be equivalent to some serial execution.  If this class is used
            concurrently <i>by multiple JVMs</i> that store their preference data in
            the same backing store, the data store will not be corrupted, but no
            other guarantees are made concerning the consistency of the preference
            data.</para>
      <para>This class contains an export/import facility, allowing preferences
            to be "exported" to an XML document, and XML documents representing
            preferences to be "imported" back into the system.  This facility
            may be used to back up all or part of a preference tree, and
            subsequently restore from the backup.</para>
      <para>The XML document has the following DOCTYPE declaration:</para>
      <code lang="text/java">{@code
            &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
            }</code>
      <para>Note that the system URI (http://java.sun.com/dtd/preferences.dtd) is
            <i>not</i> accessed when exporting or importing preferences; it merely
            serves as a string to uniquely identify the DTD, which is:</para>
      <code lang="text/java">{@code
               &lt;?xml version="1.0" encoding="UTF-8"?&gt;
            
               &lt;!-- DTD for a Preferences tree. --&gt;
            
               &lt;!-- The preferences element is at the root of an XML document
                    representing a Preferences tree. --&gt;
               &lt;!ELEMENT preferences (root)&gt;
            
               &lt;!-- The preferences element contains an optional version attribute,
                     which specifies version of DTD. --&gt;
               &lt;!ATTLIST preferences EXTERNAL_XML_VERSION CDATA "0.0" &gt;
            
               &lt;!-- The root element has a map representing the root's preferences
                    (if any), and one node for each child of the root (if any). --&gt;
               &lt;!ELEMENT root (map, node*) &gt;
            
               &lt;!-- Additionally, the root contains a type attribute, which
                    specifies whether it's the system or user root. --&gt;
               &lt;!ATTLIST root
                         type (system|user) #REQUIRED &gt;
            
               &lt;!-- Each node has a map representing its preferences (if any),
                    and one node for each child (if any). --&gt;
               &lt;!ELEMENT node (map, node*) &gt;
            
               &lt;!-- Additionally, each node has a name attribute --&gt;
               &lt;!ATTLIST node
                         name CDATA #REQUIRED &gt;
            
               &lt;!-- A map represents the preferences stored at a node (if any). --&gt;
               &lt;!ELEMENT map (entry*) &gt;
            
               &lt;!-- An entry represents a single preference, which is simply
                     a key-value pair. --&gt;
               &lt;!ELEMENT entry EMPTY &gt;
               &lt;!ATTLIST entry
                         key   CDATA #REQUIRED
                         value CDATA #REQUIRED &gt;
            }</code>
      <para>Every <c>Preferences</c> implementation must have an associated <c>PreferencesFactory</c> implementation.  Every Java(TM) SE implementation must provide
            some means of specifying which <c>PreferencesFactory</c> implementation
            is used to generate the root preferences nodes.  This allows the
            administrator to replace the default preferences implementation with an
            alternative implementation.</para>
      <para>Implementation note: In Sun's JRE, the <c>PreferencesFactory</c>
            implementation is located as follows:
            
            &lt;ol&gt;
            
            &lt;li&gt;</para>
      <para>If the system property
            <c>java.util.prefs.PreferencesFactory</c> is defined, then it is
            taken to be the fully-qualified name of a class implementing the
            <c>PreferencesFactory</c> interface.  The class is loaded and
            instantiated; if this process fails then an unspecified error is
            thrown.</para>
      <para>&lt;/li&gt;
            
            &lt;li&gt;</para>
      <para>If a <c>PreferencesFactory</c> implementation class file
            has been installed in a jar file that is visible to the
            <c>java.lang.ClassLoader#getSystemClassLoader system class loader</c>,
            and that jar file contains a provider-configuration file named
            <c>java.util.prefs.PreferencesFactory</c> in the resource
            directory <c>META-INF/services</c>, then the first class name
            specified in that file is taken.  If more than one such jar file is
            provided, the first one found will be used.  The class is loaded
            and instantiated; if this process fails then an unspecified error
            is thrown.</para>
      <para>&lt;/li&gt;
            
            &lt;li&gt;</para>
      <para>Finally, if neither the above-mentioned system property nor
            an extension jar file is provided, then the system-wide default
            <c>PreferencesFactory</c> implementation for the underlying
            platform is loaded and instantiated.</para>
      <para>&lt;/li&gt;
            
            &lt;/ol&gt;</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/prefs/Preferences" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Preferences();" />
      <MemberSignature Language="C#" Value="protected Preferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Sole constructor.</summary>
        <remarks>
          <para>Sole constructor. (For invocation by subclass constructors, typically
            implicit.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#Preferences()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.Preferences()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Preferences(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Preferences (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Prefs.Preferences : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Prefs.Preferences" Usage="new Java.Util.Prefs.Preferences (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AbsolutePath () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ AbsolutePath();" />
      <MemberSignature Language="C#" Value="public abstract string? AbsolutePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string AbsolutePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.AbsolutePath" />
      <MemberSignature Language="F#" Value="abstract member AbsolutePath : unit -&gt; string" Usage="preferences.AbsolutePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("absolutePath", "()Ljava/lang/String;", "GetAbsolutePathHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("absolutePath", "()Ljava/lang/String;", "GetAbsolutePathHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this preference node's absolute path name.</summary>
        <returns>this preference node's absolute path name.</returns>
        <remarks>
          <para>Returns this preference node's absolute path name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#absolutePath()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.absolutePath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddNodeChangeListener">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddNodeChangeListener (ncl As INodeChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddNodeChangeListener(Java::Util::Prefs::INodeChangeListener ^ ncl);" />
      <MemberSignature Language="C#" Value="public abstract void AddNodeChangeListener (Java.Util.Prefs.INodeChangeListener? ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.AddNodeChangeListener(Java.Util.Prefs.INodeChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AddNodeChangeListener : Java.Util.Prefs.INodeChangeListener -&gt; unit" Usage="preferences.AddNodeChangeListener ncl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetAddNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetAddNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">The <c>NodeChangeListener</c> to add.</param>
        <summary>Registers the specified listener to receive <i>node change events</i>
            for this node.</summary>
        <remarks>
          <para>Registers the specified listener to receive <i>node change events</i>
            for this node.  A node change event is generated when a child node is
            added to or removed from this node.  (A single <c>#removeNode()</c>
            invocation results in multiple <i>node change events</i>, one for every
            node in the subtree rooted at the removed node.)</para>
          <para>Events are only guaranteed for changes made within the same JVM
            as the registered listener, though some implementations may generate
            events for changes made outside this JVM.  Events may be generated
            before the changes have become permanent.  Events are not generated
            when indirect descendants of this node are added or removed; a
            caller desiring such events must register with each descendant.</para>
          <para>Few guarantees can be made regarding node creation.  Because nodes
            are created implicitly upon access, it may not be feasible for an
            implementation to determine whether a child node existed in the backing
            store prior to access (for example, because the backing store is
            unreachable or cached information is out of date).  Under these
            circumstances, implementations are neither required to generate node
            change events nor prohibited from doing so.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#addNodeChangeListener(java.util.prefs.NodeChangeListener)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.addNodeChangeListener(java.util.prefs.NodeChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPreferenceChangeListener">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddPreferenceChangeListener (pcl As IPreferenceChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddPreferenceChangeListener(Java::Util::Prefs::IPreferenceChangeListener ^ pcl);" />
      <MemberSignature Language="C#" Value="public abstract void AddPreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener? pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.AddPreferenceChangeListener(Java.Util.Prefs.IPreferenceChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AddPreferenceChangeListener : Java.Util.Prefs.IPreferenceChangeListener -&gt; unit" Usage="preferences.AddPreferenceChangeListener pcl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetAddPreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetAddPreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">The preference change listener to add.</param>
        <summary>Registers the specified listener to receive <i>preference change
            events</i> for this preference node.</summary>
        <remarks>
          <para>Registers the specified listener to receive <i>preference change
            events</i> for this preference node.  A preference change event is
            generated when a preference is added to this node, removed from this
            node, or when the value associated with a preference is changed.
            (Preference change events are <i>not</i> generated by the <c>#removeNode()</c> method, which generates a <i>node change event</i>.
            Preference change events <i>are</i> generated by the <c>clear</c>
            method.)</para>
          <para>Events are only guaranteed for changes made within the same JVM
            as the registered listener, though some implementations may generate
            events for changes made outside this JVM.  Events may be generated
            before the changes have been made persistent.  Events are not generated
            when preferences are modified in descendants of this node; a caller
            desiring such events must register with each descendant.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.addPreferenceChangeListener(java.util.prefs.PreferenceChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildrenNames">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChildrenNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ ChildrenNames();" />
      <MemberSignature Language="C#" Value="public abstract string[]? ChildrenNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] ChildrenNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ChildrenNames" />
      <MemberSignature Language="F#" Value="abstract member ChildrenNames : unit -&gt; string[]" Usage="preferences.ChildrenNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("childrenNames", "()[Ljava/lang/String;", "GetChildrenNamesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("childrenNames", "()[Ljava/lang/String;", "GetChildrenNamesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the children of this preference node, relative to
            this node.</summary>
        <returns>the names of the children of this preference node.</returns>
        <remarks>
          <para>Returns the names of the children of this preference node, relative to
            this node.  (The returned array will be of size zero if this node has
            no children.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#childrenNames()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.childrenNames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Clear();" />
      <MemberSignature Language="C#" Value="public abstract void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="preferences.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()V", "GetClearHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()V", "GetClearHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all of the preferences (key-value associations) in this
            preference node.</summary>
        <remarks>
          <para>Removes all of the preferences (key-value associations) in this
            preference node.  This call has no effect on any descendants
            of this node.</para>
          <para>If this implementation supports <i>stored defaults</i>, and this
            node in the preferences hierarchy contains any such defaults,
            the stored defaults will be "exposed" by this call, in the sense that
            they will be returned by succeeding calls to <c>get</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#clear()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.clear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportNode">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportNode (os As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportNode(System::IO::Stream ^ os);" />
      <MemberSignature Language="C#" Value="public abstract void ExportNode (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportNode(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ExportNode(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member ExportNode : System.IO.Stream -&gt; unit" Usage="preferences.ExportNode os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exportNode", "(Ljava/io/OutputStream;)V", "GetExportNode_Ljava_io_OutputStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exportNode", "(Ljava/io/OutputStream;)V", "GetExportNode_Ljava_io_OutputStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">the output stream on which to emit the XML document.</param>
        <summary>Emits on the specified output stream an XML document representing all
            of the preferences contained in this node (but not its descendants).</summary>
        <remarks>
          <para>Emits on the specified output stream an XML document representing all
            of the preferences contained in this node (but not its descendants).
            This XML document is, in effect, an offline backup of the node.</para>
          <para>The XML document will have the following DOCTYPE declaration:</para>
          <code lang="text/java">{@code
            &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
            }</code>
          <para>The UTF-8 character encoding will be used.</para>
          <para>This method is an exception to the general rule that the results of
            concurrently executing multiple methods in this class yields
            results equivalent to some serial execution.  If the preferences
            at this node are modified concurrently with an invocation of this
            method, the exported preferences comprise a "fuzzy snapshot" of the
            preferences contained in the node; some of the concurrent modifications
            may be reflected in the exported data while others may not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#exportNode(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.exportNode(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while exporting.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportNodeAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ExportNodeAsync (os As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ExportNodeAsync(System::IO::Stream ^ os);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExportNodeAsync (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ExportNodeAsync(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ExportNodeAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.ExportNodeAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="preferences.ExportNodeAsync os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportSubtree">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportSubtree (os As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportSubtree(System::IO::Stream ^ os);" />
      <MemberSignature Language="C#" Value="public abstract void ExportSubtree (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportSubtree(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ExportSubtree(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="abstract member ExportSubtree : System.IO.Stream -&gt; unit" Usage="preferences.ExportSubtree os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exportSubtree", "(Ljava/io/OutputStream;)V", "GetExportSubtree_Ljava_io_OutputStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exportSubtree", "(Ljava/io/OutputStream;)V", "GetExportSubtree_Ljava_io_OutputStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">the output stream on which to emit the XML document.</param>
        <summary>Emits an XML document representing all of the preferences contained
            in this node and all of its descendants.</summary>
        <remarks>
          <para>Emits an XML document representing all of the preferences contained
            in this node and all of its descendants.  This XML document is, in
            effect, an offline backup of the subtree rooted at the node.</para>
          <para>The XML document will have the following DOCTYPE declaration:</para>
          <code lang="text/java">{@code
            &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
            }</code>
          <para>The UTF-8 character encoding will be used.</para>
          <para>This method is an exception to the general rule that the results of
            concurrently executing multiple methods in this class yields
            results equivalent to some serial execution.  If the preferences
            or nodes in the subtree rooted at this node are modified concurrently
            with an invocation of this method, the exported preferences comprise a
            "fuzzy snapshot" of the subtree; some of the concurrent modifications
            may be reflected in the exported data while others may not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#exportSubtree(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.exportSubtree(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an error occurs while exporting.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ExportSubtreeAsync">
      <MemberSignature Language="VB.NET" Value="Public Function ExportSubtreeAsync (os As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ExportSubtreeAsync(System::IO::Stream ^ os);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ExportSubtreeAsync (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ExportSubtreeAsync(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ExportSubtreeAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="member this.ExportSubtreeAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="preferences.ExportSubtreeAsync os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="os">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Flush();" />
      <MemberSignature Language="C#" Value="public abstract void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Flush" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit" Usage="preferences.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Forces any changes in the contents of this preference node and its
            descendants to the persistent store.</summary>
        <remarks>
          <para>Forces any changes in the contents of this preference node and its
            descendants to the persistent store.  Once this method returns
            successfully, it is safe to assume that all changes made in the
            subtree rooted at this node prior to the method invocation have become
            permanent.</para>
          <para>Implementations are free to flush changes into the persistent store
            at any time.  They do not need to wait for this method to be called.</para>
          <para>When a flush occurs on a newly created node, it is made persistent,
            as are any ancestors (and descendants) that have yet to be made
            persistent.  Note however that any preference value changes in
            ancestors are <i>not</i> guaranteed to be made persistent.</para>
          <para>If this method is invoked on a node that has been removed with
            the <c>#removeNode()</c> method, flushSpi() is invoked on this node,
            but not on others.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#flush()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="VB.NET" Value="Public Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.FlushAsync" />
      <MemberSignature Language="F#" Value="member this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="preferences.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, def As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Get(System::String ^ key, System::String ^ def);" />
      <MemberSignature Language="C#" Value="public abstract string? Get (string? key, string? def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Get(string key, string def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Get(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; string" Usage="preferences.Get (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>.</param>
        <summary>Returns the value associated with the specified key in this preference
            node.</summary>
        <returns>the value associated with <c>key</c>, or <c>def</c>
                    if no value is associated with <c>key</c>, or the backing
                    store is inaccessible.</returns>
        <remarks>
          <para>Returns the value associated with the specified key in this preference
            node.  Returns the specified default if there is no value associated
            with the key, or the backing store is inaccessible.</para>
          <para>Some implementations may store default values in their backing
            stores.  If there is no value associated with the specified key
            but there is such a <i>stored default</i>, it is returned in
            preference to the specified default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#get(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.get(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetBoolean (key As String, def As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetBoolean(System::String ^ key, bool def);" />
      <MemberSignature Language="C#" Value="public abstract bool GetBoolean (string? key, bool def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBoolean(string key, bool def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetBoolean : string * bool -&gt; bool" Usage="preferences.GetBoolean (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBoolean", "(Ljava/lang/String;Z)Z", "GetGetBoolean_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBoolean", "(Ljava/lang/String;Z)Z", "GetGetBoolean_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a boolean.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a boolean,
                   or the backing store is inaccessible.</param>
        <summary>Returns the boolean value represented by the string associated with the
            specified key in this preference node.</summary>
        <returns>the boolean value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a boolean.</returns>
        <remarks>
          <para>Returns the boolean value represented by the string associated with the
            specified key in this preference node.  Valid strings
            are <c>"true"</c>, which represents true, and <c>"false"</c>, which
            represents false.  Case is ignored, so, for example, <c>"TRUE"</c>
            and <c>"False"</c> are also valid.  This method is intended for use in
            conjunction with <c>#putBoolean</c>.</para>
          <para>Returns the specified default if there is no value
            associated with the key, the backing store is inaccessible, or if the
            associated value is something other than <c>"true"</c> or
            <c>"false"</c>, ignoring case.</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists and is accessible, it is used in preference to the
            specified default, unless the stored default is something other than
            <c>"true"</c> or <c>"false"</c>, ignoring case, in which case the
            specified default is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getBoolean(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getBoolean(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetByteArray">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetByteArray (key As String, def As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Byte&gt; ^ GetByteArray(System::String ^ key, cli::array &lt;System::Byte&gt; ^ def);" />
      <MemberSignature Language="C#" Value="public abstract byte[]? GetByteArray (string? key, byte[]? def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetByteArray(string key, unsigned int8[] def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetByteArray(System.String,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member GetByteArray : string * byte[] -&gt; byte[]" Usage="preferences.GetByteArray (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByteArray", "(Ljava/lang/String;[B)[B", "GetGetByteArray_Ljava_lang_String_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByteArray", "(Ljava/lang/String;[B)[B", "GetGetByteArray_Ljava_lang_String_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a byte array.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a byte array,
                   or the backing store is inaccessible.</param>
        <summary>Returns the byte array value represented by the string associated with
            the specified key in this preference node.</summary>
        <returns>the byte array value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a byte array.</returns>
        <remarks>
          <para>Returns the byte array value represented by the string associated with
            the specified key in this preference node.  Valid strings are
            <i>Base64</i> encoded binary data, as defined in <see href="http://www.ietf.org/rfc/rfc2045.txt">RFC 2045</see>, Section 6.8,
            with one minor change: the string must consist solely of characters
            from the <i>Base64 Alphabet</i>; no newline characters or
            extraneous characters are permitted.  This method is intended for use
            in conjunction with <c>#putByteArray</c>.</para>
          <para>Returns the specified default if there is no value
            associated with the key, the backing store is inaccessible, or if the
            associated value is not a valid Base64 encoded byte array
            (as defined above).</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists and is accessible, it is used in preference to the
            specified default, unless the stored default is not a valid Base64
            encoded byte array (as defined above), in which case the
            specified default is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getByteArray(java.lang.String,%20byte[])" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getByteArray(java.lang.String, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetDouble (key As String, def As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract double GetDouble(System::String ^ key, double def);" />
      <MemberSignature Language="C#" Value="public abstract double GetDouble (string? key, double def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64 GetDouble(string key, float64 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetDouble(System.String,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member GetDouble : string * double -&gt; double" Usage="preferences.GetDouble (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDouble", "(Ljava/lang/String;D)D", "GetGetDouble_Ljava_lang_String_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDouble", "(Ljava/lang/String;D)D", "GetGetDouble_Ljava_lang_String_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a double.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a double,
                   or the backing store is inaccessible.</param>
        <summary>Returns the double value represented by the string associated with the
            specified key in this preference node.</summary>
        <returns>the double value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a double.</returns>
        <remarks>
          <para>Returns the double value represented by the string associated with the
            specified key in this preference node.  The string is converted to an
            integer as by <c>Double#parseDouble(String)</c>.  Returns the specified
            default if there is no value associated with the key, the backing store
            is inaccessible, or if <c>Double.parseDouble(String)</c> would throw a
            <c>NumberFormatException</c> if the associated value were passed.
            This method is intended for use in conjunction with <c>#putDouble</c>.</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists, is accessible, and could be converted to a double
            with <c>Double.parseDouble</c>, this double is returned in preference
            to the specified default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getDouble(java.lang.String,%20double)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getDouble(java.lang.String, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetFloat (key As String, def As Single) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract float GetFloat(System::String ^ key, float def);" />
      <MemberSignature Language="C#" Value="public abstract float GetFloat (string? key, float def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetFloat(string key, float32 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetFloat(System.String,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member GetFloat : string * single -&gt; single" Usage="preferences.GetFloat (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFloat", "(Ljava/lang/String;F)F", "GetGetFloat_Ljava_lang_String_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFloat", "(Ljava/lang/String;F)F", "GetGetFloat_Ljava_lang_String_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a float.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a float,
                   or the backing store is inaccessible.</param>
        <summary>Returns the float value represented by the string associated with the
            specified key in this preference node.</summary>
        <returns>the float value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a float.</returns>
        <remarks>
          <para>Returns the float value represented by the string associated with the
            specified key in this preference node.  The string is converted to an
            integer as by <c>Float#parseFloat(String)</c>.  Returns the specified
            default if there is no value associated with the key, the backing store
            is inaccessible, or if <c>Float.parseFloat(String)</c> would throw a
            <c>NumberFormatException</c> if the associated value were passed.
            This method is intended for use in conjunction with <c>#putFloat</c>.</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists, is accessible, and could be converted to a float
            with <c>Float.parseFloat</c>, this float is returned in preference to
            the specified default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getFloat(java.lang.String,%20float)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getFloat(java.lang.String, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInt (key As String, def As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetInt(System::String ^ key, int def);" />
      <MemberSignature Language="C#" Value="public abstract int GetInt (string? key, int def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetInt(string key, int32 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetInt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetInt : string * int -&gt; int" Usage="preferences.GetInt (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInt", "(Ljava/lang/String;I)I", "GetGetInt_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInt", "(Ljava/lang/String;I)I", "GetGetInt_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as an int.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as an int,
                   or the backing store is inaccessible.</param>
        <summary>Returns the int value represented by the string associated with the
            specified key in this preference node.</summary>
        <returns>the int value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    an int.</returns>
        <remarks>
          <para>Returns the int value represented by the string associated with the
            specified key in this preference node.  The string is converted to
            an integer as by <c>Integer#parseInt(String)</c>.  Returns the
            specified default if there is no value associated with the key,
            the backing store is inaccessible, or if
            <c>Integer.parseInt(String)</c> would throw a <c>NumberFormatException</c> if the associated value were passed.  This
            method is intended for use in conjunction with <c>#putInt</c>.</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists, is accessible, and could be converted to an int
            with <c>Integer.parseInt</c>, this int is returned in preference to
            the specified default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getInt(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getInt(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLong">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLong (key As String, def As Long) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract long GetLong(System::String ^ key, long def);" />
      <MemberSignature Language="C#" Value="public abstract long GetLong (string? key, long def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetLong(string key, int64 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.GetLong(System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member GetLong : string * int64 -&gt; int64" Usage="preferences.GetLong (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLong", "(Ljava/lang/String;J)J", "GetGetLong_Ljava_lang_String_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLong", "(Ljava/lang/String;J)J", "GetGetLong_Ljava_lang_String_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a long.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a long,
                   or the backing store is inaccessible.</param>
        <summary>Returns the long value represented by the string associated with the
            specified key in this preference node.</summary>
        <returns>the long value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a long.</returns>
        <remarks>
          <para>Returns the long value represented by the string associated with the
            specified key in this preference node.  The string is converted to
            a long as by <c>Long#parseLong(String)</c>.  Returns the
            specified default if there is no value associated with the key,
            the backing store is inaccessible, or if
            <c>Long.parseLong(String)</c> would throw a <c>NumberFormatException</c> if the associated value were passed.  This
            method is intended for use in conjunction with <c>#putLong</c>.</para>
          <para>If the implementation supports <i>stored defaults</i> and such a
            default exists, is accessible, and could be converted to a long
            with <c>Long.parseLong</c>, this long is returned in preference to
            the specified default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#getLong(java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.getLong(java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the parameter <c>key</c> is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportPreferences">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ImportPreferences (is As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ImportPreferences(System::IO::Stream ^ is);" />
      <MemberSignature Language="C#" Value="public static void ImportPreferences (System.IO.Stream? is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ImportPreferences(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ImportPreferences(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member ImportPreferences : System.IO.Stream -&gt; unit" Usage="Java.Util.Prefs.Preferences.ImportPreferences is" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("importPreferences", "(Ljava/io/InputStream;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("importPreferences", "(Ljava/io/InputStream;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="is">the input stream from which to read the XML document.</param>
        <summary>Imports all of the preferences represented by the XML document on the
            specified input stream.</summary>
        <remarks>
          <para>Imports all of the preferences represented by the XML document on the
            specified input stream.  The document may represent user preferences or
            system preferences.  If it represents user preferences, the preferences
            will be imported into the calling user's preference tree (even if they
            originally came from a different user's preference tree).  If any of
            the preferences described by the document inhabit preference nodes that
            do not exist, the nodes will be created.</para>
          <para>The XML document must have the following DOCTYPE declaration:</para>
          <code lang="text/java">{@code
            &lt;!DOCTYPE preferences SYSTEM "http://java.sun.com/dtd/preferences.dtd"&gt;
            }</code>
          <para>(This method is designed for use in conjunction with
            <c>#exportNode(OutputStream)</c> and
            <c>#exportSubtree(OutputStream)</c>.</para>
          <para>This method is an exception to the general rule that the results of
            concurrently executing multiple methods in this class yields
            results equivalent to some serial execution.  The method behaves
            as if implemented on top of the other public methods in this class,
            notably <c>#node(String)</c> and <c>#put(String, String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#importPreferences(java.io.InputStream)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.importPreferences(java.io.InputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.InvalidPreferencesFormatException">if the data read from the given input stream is not from a
             valid XML document.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while importing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportPreferencesAsync">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ImportPreferencesAsync (is As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Threading::Tasks::Task ^ ImportPreferencesAsync(System::IO::Stream ^ is);" />
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task ImportPreferencesAsync (System.IO.Stream? is);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task ImportPreferencesAsync(class System.IO.Stream is) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ImportPreferencesAsync(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="static member ImportPreferencesAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="Java.Util.Prefs.Preferences.ImportPreferencesAsync is" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="is" Type="System.IO.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="is">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserNode">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsUserNode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsUserNode { bool get(); };" />
      <MemberSignature Language="C#" Value="public abstract bool IsUserNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserNode" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.Preferences.IsUserNode" />
      <MemberSignature Language="F#" Value="member this.IsUserNode : bool" Usage="Java.Util.Prefs.Preferences.IsUserNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserNode", "()Z", "GetIsUserNodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserNode", "()Z", "GetIsUserNodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this is a user preference node.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.Preferences.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Prefs.Preferences.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Keys () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ Keys();" />
      <MemberSignature Language="C#" Value="public abstract string[]? Keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] Keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Keys" />
      <MemberSignature Language="F#" Value="abstract member Keys : unit -&gt; string[]" Usage="preferences.Keys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keys", "()[Ljava/lang/String;", "GetKeysHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keys", "()[Ljava/lang/String;", "GetKeysHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all of the keys that have an associated value in this
            preference node.</summary>
        <returns>an array of the keys that have an associated value in this
                    preference node.</returns>
        <remarks>
          <para>Returns all of the keys that have an associated value in this
            preference node.  (The returned array will be of size zero if
            this node has no preferences.)</para>
          <para>If the implementation supports <i>stored defaults</i> and there
            are any such defaults at this node that have not been overridden,
            by explicit preferences, the defaults are returned in the array in
            addition to any explicit preferences.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#keys()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.keys()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxKeyLength">
      <MemberSignature Language="VB.NET" Value="Public Const MaxKeyLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxKeyLength = 80;" />
      <MemberSignature Language="C#" Value="public const int MaxKeyLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxKeyLength = (80)" />
      <MemberSignature Language="DocId" Value="F:Java.Util.Prefs.Preferences.MaxKeyLength" />
      <MemberSignature Language="F#" Value="val mutable MaxKeyLength : int" Usage="Java.Util.Prefs.Preferences.MaxKeyLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_KEY_LENGTH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_KEY_LENGTH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>Maximum length of string allowed as a key (80 characters).</summary>
        <remarks>
          <para>Maximum length of string allowed as a key (80 characters).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#MAX_KEY_LENGTH" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.MAX_KEY_LENGTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxNameLength">
      <MemberSignature Language="VB.NET" Value="Public Const MaxNameLength As Integer  = 80" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxNameLength = 80;" />
      <MemberSignature Language="C#" Value="public const int MaxNameLength = 80;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxNameLength = (80)" />
      <MemberSignature Language="DocId" Value="F:Java.Util.Prefs.Preferences.MaxNameLength" />
      <MemberSignature Language="F#" Value="val mutable MaxNameLength : int" Usage="Java.Util.Prefs.Preferences.MaxNameLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_NAME_LENGTH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_NAME_LENGTH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>80</MemberValue>
      <Docs>
        <summary>Maximum length of a node name (80 characters).</summary>
        <remarks>
          <para>Maximum length of a node name (80 characters).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#MAX_NAME_LENGTH" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.MAX_NAME_LENGTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxValueLength">
      <MemberSignature Language="VB.NET" Value="Public Const MaxValueLength As Integer  = 8192" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxValueLength = 8192;" />
      <MemberSignature Language="C#" Value="public const int MaxValueLength = 8192;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxValueLength = (8192)" />
      <MemberSignature Language="DocId" Value="F:Java.Util.Prefs.Preferences.MaxValueLength" />
      <MemberSignature Language="F#" Value="val mutable MaxValueLength : int" Usage="Java.Util.Prefs.Preferences.MaxValueLength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAX_VALUE_LENGTH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAX_VALUE_LENGTH")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary>Maximum length of string allowed as a value (8192 characters).</summary>
        <remarks>
          <para>Maximum length of string allowed as a value (8192 characters).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#MAX_VALUE_LENGTH" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.MAX_VALUE_LENGTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Name () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ Name();" />
      <MemberSignature Language="C#" Value="public abstract string? Name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Name" />
      <MemberSignature Language="F#" Value="abstract member Name : unit -&gt; string" Usage="preferences.Name " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this preference node's name, relative to its parent.</summary>
        <returns>this preference node's name, relative to its parent.</returns>
        <remarks>
          <para>Returns this preference node's name, relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#name()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.name()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Node (pathName As String) As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Util::Prefs::Preferences ^ Node(System::String ^ pathName);" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.Prefs.Preferences? Node (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Prefs.Preferences Node(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Node(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Node : string -&gt; Java.Util.Prefs.Preferences" Usage="preferences.Node pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("node", "(Ljava/lang/String;)Ljava/util/prefs/Preferences;", "GetNode_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("node", "(Ljava/lang/String;)Ljava/util/prefs/Preferences;", "GetNode_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">the path name of the preference node to return.</param>
        <summary>Returns the named preference node in the same tree as this node,
            creating it and any of its ancestors if they do not already exist.</summary>
        <returns>the specified preference node.</returns>
        <remarks>
          <para>Returns the named preference node in the same tree as this node,
            creating it and any of its ancestors if they do not already exist.
            Accepts a relative or absolute path name.  Relative path names
            (which do not begin with the slash character <c>('/')</c>) are
            interpreted relative to this preference node.</para>
          <para>If the returned node did not exist prior to this call, this node and
            any ancestors that were created by this call are not guaranteed
            to become permanent until the <c>flush</c> method is called on
            the returned node (or one of its ancestors or descendants).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#node(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.node(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path name is invalid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the given path is <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="NodeExists">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NodeExists (pathName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool NodeExists(System::String ^ pathName);" />
      <MemberSignature Language="C#" Value="public abstract bool NodeExists (string? pathName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool NodeExists(string pathName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.NodeExists(System.String)" />
      <MemberSignature Language="F#" Value="abstract member NodeExists : string -&gt; bool" Usage="preferences.NodeExists pathName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nodeExists", "(Ljava/lang/String;)Z", "GetNodeExists_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nodeExists", "(Ljava/lang/String;)Z", "GetNodeExists_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathName">the path name of the node whose existence
                   is to be checked.</param>
        <summary>Returns true if the named preference node exists in the same tree
            as this node.</summary>
        <returns>true if the specified node exists.</returns>
        <remarks>
          <para>Returns true if the named preference node exists in the same tree
            as this node.  Relative path names (which do not begin with the slash
            character <c>('/')</c>) are interpreted relative to this preference
            node.</para>
          <para>If this node (or an ancestor) has already been removed with the
            <c>#removeNode()</c> method, it <i>is</i> legal to invoke this method,
            but only with the path name <c>""</c>; the invocation will return
            <c>false</c>.  Thus, the idiom <c>p.nodeExists("")</c> may be
            used to test whether <c>p</c> has been removed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#nodeExists(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.nodeExists(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed and the path is not an empty
             string.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path name is invalid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if the given path is <c>null</c>.</exception>
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Parent () As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Util::Prefs::Preferences ^ Parent();" />
      <MemberSignature Language="C#" Value="public abstract Java.Util.Prefs.Preferences? Parent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Prefs.Preferences Parent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Parent" />
      <MemberSignature Language="F#" Value="abstract member Parent : unit -&gt; Java.Util.Prefs.Preferences" Usage="preferences.Parent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parent", "()Ljava/util/prefs/Preferences;", "GetParentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parent", "()Ljava/util/prefs/Preferences;", "GetParentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the parent of this preference node, or <c>null</c> if this is
            the root.</summary>
        <returns>the parent of this preference node.</returns>
        <remarks>
          <para>Returns the parent of this preference node, or <c>null</c> if this is
            the root.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#parent()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.parent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Put (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Put(System::String ^ key, System::String ^ value);" />
      <MemberSignature Language="C#" Value="public abstract void Put (string? key, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Put(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Put(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Put : string * string -&gt; unit" Usage="preferences.Put (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPut_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPut_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is to be associated.</param>
        <param name="value">value to be associated with the specified key.</param>
        <summary>Associates the specified value with the specified key in this
            preference node.</summary>
        <remarks>
          <para>Associates the specified value with the specified key in this
            preference node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#put(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.put(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key or value is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c> or the value's length is bigger than <c>MAX_VALUE_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutBoolean">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutBoolean (key As String, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutBoolean(System::String ^ key, bool value);" />
      <MemberSignature Language="C#" Value="public abstract void PutBoolean (string? key, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutBoolean(string key, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member PutBoolean : string * bool -&gt; unit" Usage="preferences.PutBoolean (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putBoolean", "(Ljava/lang/String;Z)V", "GetPutBoolean_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putBoolean", "(Ljava/lang/String;Z)V", "GetPutBoolean_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified boolean value with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified boolean value with the
            specified key in this preference node.  The associated string is
            <c>"true"</c> if the value is true, and <c>"false"</c> if it is
            false.  This method is intended for use in conjunction with
            <c>#getBoolean</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putBoolean(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putBoolean(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutByteArray">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutByteArray (key As String, value As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutByteArray(System::String ^ key, cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="C#" Value="public abstract void PutByteArray (string? key, byte[]? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutByteArray(string key, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutByteArray(System.String,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member PutByteArray : string * byte[] -&gt; unit" Usage="preferences.PutByteArray (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putByteArray", "(Ljava/lang/String;[B)V", "GetPutByteArray_Ljava_lang_String_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putByteArray", "(Ljava/lang/String;[B)V", "GetPutByteArray_Ljava_lang_String_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified byte array with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified byte array with the
            specified key in this preference node.  The associated string is
            the <i>Base64</i> encoding of the byte array, as defined in <see href="http://www.ietf.org/rfc/rfc2045.txt">RFC 2045</see>, Section 6.8,
            with one minor change: the string will consist solely of characters
            from the <i>Base64 Alphabet</i>; it will not contain any newline
            characters.  Note that the maximum length of the byte array is limited
            to three quarters of <c>MAX_VALUE_LENGTH</c> so that the length
            of the Base64 encoded String does not exceed <c>MAX_VALUE_LENGTH</c>.
            This method is intended for use in conjunction with
            <c>#getByteArray</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putByteArray(java.lang.String,%20byte[])" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putByteArray(java.lang.String, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key or value is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c> or value's length is bigger than three
             quarters of <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutDouble">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutDouble (key As String, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutDouble(System::String ^ key, double value);" />
      <MemberSignature Language="C#" Value="public abstract void PutDouble (string? key, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutDouble(string key, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutDouble(System.String,System.Double)" />
      <MemberSignature Language="F#" Value="abstract member PutDouble : string * double -&gt; unit" Usage="preferences.PutDouble (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putDouble", "(Ljava/lang/String;D)V", "GetPutDouble_Ljava_lang_String_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putDouble", "(Ljava/lang/String;D)V", "GetPutDouble_Ljava_lang_String_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified double value with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified double value with the
            specified key in this preference node.  The associated string is the
            one that would be returned if the double value were passed to
            <c>Double#toString(double)</c>.  This method is intended for use in
            conjunction with <c>#getDouble</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putDouble(java.lang.String,%20double)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putDouble(java.lang.String, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutFloat">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutFloat (key As String, value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutFloat(System::String ^ key, float value);" />
      <MemberSignature Language="C#" Value="public abstract void PutFloat (string? key, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutFloat(string key, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutFloat(System.String,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PutFloat : string * single -&gt; unit" Usage="preferences.PutFloat (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFloat", "(Ljava/lang/String;F)V", "GetPutFloat_Ljava_lang_String_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFloat", "(Ljava/lang/String;F)V", "GetPutFloat_Ljava_lang_String_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified float value with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified float value with the
            specified key in this preference node.  The associated string is the
            one that would be returned if the float value were passed to
            <c>Float#toString(float)</c>.  This method is intended for use in
            conjunction with <c>#getFloat</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putFloat(java.lang.String,%20float)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putFloat(java.lang.String, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutInt">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutInt (key As String, value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutInt(System::String ^ key, int value);" />
      <MemberSignature Language="C#" Value="public abstract void PutInt (string? key, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutInt(string key, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutInt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member PutInt : string * int -&gt; unit" Usage="preferences.PutInt (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putInt", "(Ljava/lang/String;I)V", "GetPutInt_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putInt", "(Ljava/lang/String;I)V", "GetPutInt_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified int value with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified int value with the
            specified key in this preference node.  The associated string is the
            one that would be returned if the int value were passed to
            <c>Integer#toString(int)</c>.  This method is intended for use in
            conjunction with <c>#getInt</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putInt(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putInt(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PutLong">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PutLong (key As String, value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PutLong(System::String ^ key, long value);" />
      <MemberSignature Language="C#" Value="public abstract void PutLong (string? key, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PutLong(string key, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.PutLong(System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member PutLong : string * int64 -&gt; unit" Usage="preferences.PutLong (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putLong", "(Ljava/lang/String;J)V", "GetPutLong_Ljava_lang_String_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putLong", "(Ljava/lang/String;J)V", "GetPutLong_Ljava_lang_String_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Associates a string representing the specified long value with the
            specified key in this preference node.</summary>
        <remarks>
          <para>Associates a string representing the specified long value with the
            specified key in this preference node.  The associated string is the
            one that would be returned if the long value were passed to
            <c>Long#toString(long)</c>.  This method is intended for use in
            conjunction with <c>#getLong</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#putLong(java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.putLong(java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given key's length is bigger than <c>MAX_KEY_LENGTH</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Remove (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Remove(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public abstract void Remove (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Remove(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Remove : string -&gt; unit" Usage="preferences.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/String;)V", "GetRemove_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/String;)V", "GetRemove_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key whose mapping is to be removed from the preference node.</param>
        <summary>Removes the value associated with the specified key in this preference
            node, if any.</summary>
        <remarks>
          <para>Removes the value associated with the specified key in this preference
            node, if any.</para>
          <para>If this implementation supports <i>stored defaults</i>, and there is
            such a default for the specified preference, the stored default will be
            "exposed" by this call, in the sense that it will be returned
            by a succeeding call to <c>get</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#remove(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.remove(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the given key is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveNode ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveNode();" />
      <MemberSignature Language="C#" Value="public abstract void RemoveNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.RemoveNode" />
      <MemberSignature Language="F#" Value="abstract member RemoveNode : unit -&gt; unit" Usage="preferences.RemoveNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNode", "()V", "GetRemoveNodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNode", "()V", "GetRemoveNodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes this preference node and all of its descendants, invalidating
            any preferences contained in the removed nodes.</summary>
        <remarks>
          <para>Removes this preference node and all of its descendants, invalidating
            any preferences contained in the removed nodes.  Once a node has been
            removed, attempting any method other than <c>#name()</c>,
            <c>#absolutePath()</c>, <c>#isUserNode()</c>, <c>#flush()</c> or
            <c>#node(String) nodeExists("")</c> on the corresponding
            <c>Preferences</c> instance will fail with an
            <c>IllegalStateException</c>.  (The methods defined on <c>Object</c>
            can still be invoked on a node after it has been removed; they will not
            throw <c>IllegalStateException</c>.)</para>
          <para>The removal is not guaranteed to be persistent until the
            <c>flush</c> method is called on this node (or an ancestor).</para>
          <para>If this implementation supports <i>stored defaults</i>, removing a
            node exposes any stored defaults at or below this node.  Thus, a
            subsequent call to <c>nodeExists</c> on this node's path name may
            return <c>true</c>, and a subsequent call to <c>node</c> on this
            path name may return a (different) <c>Preferences</c> instance
            representing a non-empty collection of preferences and/or children.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#removeNode()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.removeNode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.</exception>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this is a root node.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveNodeChangeListener">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveNodeChangeListener (ncl As INodeChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveNodeChangeListener(Java::Util::Prefs::INodeChangeListener ^ ncl);" />
      <MemberSignature Language="C#" Value="public abstract void RemoveNodeChangeListener (Java.Util.Prefs.INodeChangeListener? ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.RemoveNodeChangeListener(Java.Util.Prefs.INodeChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveNodeChangeListener : Java.Util.Prefs.INodeChangeListener -&gt; unit" Usage="preferences.RemoveNodeChangeListener ncl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetRemoveNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetRemoveNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">The <c>NodeChangeListener</c> to remove.</param>
        <summary>Removes the specified <c>NodeChangeListener</c>, so it no longer
            receives change events.</summary>
        <remarks>
          <para>Removes the specified <c>NodeChangeListener</c>, so it no longer
            receives change events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#removeNodeChangeListener(java.util.prefs.NodeChangeListener)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.removeNodeChangeListener(java.util.prefs.NodeChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemovePreferenceChangeListener">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemovePreferenceChangeListener (pcl As IPreferenceChangeListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemovePreferenceChangeListener(Java::Util::Prefs::IPreferenceChangeListener ^ pcl);" />
      <MemberSignature Language="C#" Value="public abstract void RemovePreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener? pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemovePreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.RemovePreferenceChangeListener(Java.Util.Prefs.IPreferenceChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member RemovePreferenceChangeListener : Java.Util.Prefs.IPreferenceChangeListener -&gt; unit" Usage="preferences.RemovePreferenceChangeListener pcl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removePreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetRemovePreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetRemovePreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">The preference change listener to remove.</param>
        <summary>Removes the specified preference change listener, so it no longer
            receives preference change events.</summary>
        <remarks>
          <para>Removes the specified preference change listener, so it no longer
            receives preference change events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.removePreferenceChangeListener(java.util.prefs.PreferenceChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given listener is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Sync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Sync();" />
      <MemberSignature Language="C#" Value="public abstract void Sync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.Sync" />
      <MemberSignature Language="F#" Value="abstract member Sync : unit -&gt; unit" Usage="preferences.Sync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sync", "()V", "GetSyncHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sync", "()V", "GetSyncHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ensures that future reads from this preference node and its
            descendants reflect any changes that were committed to the persistent
            store (from any VM) prior to the <c>sync</c> invocation.</summary>
        <remarks>
          <para>Ensures that future reads from this preference node and its
            descendants reflect any changes that were committed to the persistent
            store (from any VM) prior to the <c>sync</c> invocation.  As a
            side-effect, forces any changes in the contents of this preference node
            and its descendants to the persistent store, as if the <c>flush</c>
            method had been invoked on this node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#sync()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.sync()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if this node has been removed.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SyncAsync">
      <MemberSignature Language="VB.NET" Value="Public Function SyncAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ SyncAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SyncAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SyncAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.SyncAsync" />
      <MemberSignature Language="F#" Value="member this.SyncAsync : unit -&gt; System.Threading.Tasks.Task" Usage="preferences.SyncAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemNodeForPackage">
      <MemberSignature Language="VB.NET" Value="Public Shared Function SystemNodeForPackage (c As Class) As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Prefs::Preferences ^ SystemNodeForPackage(Java::Lang::Class ^ c);" />
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences? SystemNodeForPackage (Java.Lang.Class? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences SystemNodeForPackage(class Java.Lang.Class c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.SystemNodeForPackage(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member SystemNodeForPackage : Java.Lang.Class -&gt; Java.Util.Prefs.Preferences" Usage="Java.Util.Prefs.Preferences.SystemNodeForPackage c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("systemNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("systemNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">the class for whose package a system preference node is desired.</param>
        <summary>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps.</summary>
        <returns>the system preference node associated with the package of which
                    <c>c</c> is a member.</returns>
        <remarks>
          <para>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps. Further, allowing apps to set
            "system wide" preferences is contrary to android's security model.
            
            Returns the preference node from the system preference tree that is
            associated (by convention) with the specified class's package.  The
            convention is as follows: the absolute path name of the node is the
            fully qualified package name, preceded by a slash (<c>'/'</c>), and
            with each period (<c>'.'</c>) replaced by a slash.  For example the
            absolute path name of the node associated with the class
            <c>com.acme.widget.Foo</c> is <c>/com/acme/widget</c>.</para>
          <para>This convention does not apply to the unnamed package, whose
            associated preference node is <c>&amp;lt;unnamed&amp;gt;</c>.  This node
            is not intended for long term use, but for convenience in the early
            development of programs that do not yet belong to a package, and
            for "throwaway" programs.  <i>Valuable data should not be stored
            at this node as it is shared by all programs that use it.</i></para>
          <para>A class <c>Foo</c> wishing to access preferences pertaining to its
            package can obtain a preference node as follows:</para>
          <code lang="text/java">static Preferences prefs = Preferences.systemNodeForPackage(Foo.class);
            </code>
          <para>This idiom obviates the need for using a string to describe the
            preferences node and decreases the likelihood of a run-time failure.
            (If the class name is misspelled, it will typically result in a
            compile-time error.)</para>
          <para>Invoking this method will result in the creation of the returned
            node and its ancestors if they do not already exist.  If the returned
            node did not exist prior to this call, this node and any ancestors that
            were created by this call are not guaranteed to become permanent until
            the <c>flush</c> method is called on the returned node (or one of its
            ancestors or descendants).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#systemNodeForPackage(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.systemNodeForPackage(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemRoot">
      <MemberSignature Language="VB.NET" Value="Public Shared Function SystemRoot () As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Prefs::Preferences ^ SystemRoot();" />
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences? SystemRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences SystemRoot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.SystemRoot" />
      <MemberSignature Language="F#" Value="static member SystemRoot : unit -&gt; Java.Util.Prefs.Preferences" Usage="Java.Util.Prefs.Preferences.SystemRoot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("systemRoot", "()Ljava/util/prefs/Preferences;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("systemRoot", "()Ljava/util/prefs/Preferences;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps.</summary>
        <returns>the root preference node for the system.</returns>
        <remarks>
          <para>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps. Further, allowing apps to set
            "system wide" preferences is contrary to android's security model.
            
            Returns the root preference node for the system.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#systemRoot()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.systemRoot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.Preferences.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Prefs.Preferences.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.Preferences.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Prefs.Preferences.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public abstract string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="preferences.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string representation of this preferences node,
            as if computed by the expression:<c>(this.isUserNode() ? "User" :
            "System") + " Preference Node: " + this.absolutePath()</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a string representation of this preferences node,
            as if computed by the expression:<c>(this.isUserNode() ? "User" :
            "System") + " Preference Node: " + this.absolutePath()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#toString()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UserNodeForPackage">
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserNodeForPackage (c As Class) As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Prefs::Preferences ^ UserNodeForPackage(Java::Lang::Class ^ c);" />
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences? UserNodeForPackage (Java.Lang.Class? c);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences UserNodeForPackage(class Java.Lang.Class c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.UserNodeForPackage(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="static member UserNodeForPackage : Java.Lang.Class -&gt; Java.Util.Prefs.Preferences" Usage="Java.Util.Prefs.Preferences.UserNodeForPackage c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("userNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("userNodeForPackage", "(Ljava/lang/Class;)Ljava/util/prefs/Preferences;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="c">the class for whose package a user preference node is desired.</param>
        <summary>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps.</summary>
        <returns>the user preference node associated with the package of which
                    <c>c</c> is a member.</returns>
        <remarks>
          <para>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps. Further, allowing apps to set
            "system wide" preferences is contrary to android's security model.
            
            Returns the preference node from the calling user's preference tree
            that is associated (by convention) with the specified class's package.
            The convention is as follows: the absolute path name of the node is the
            fully qualified package name, preceded by a slash (<c>'/'</c>), and
            with each period (<c>'.'</c>) replaced by a slash.  For example the
            absolute path name of the node associated with the class
            <c>com.acme.widget.Foo</c> is <c>/com/acme/widget</c>.</para>
          <para>This convention does not apply to the unnamed package, whose
            associated preference node is <c>&amp;lt;unnamed&amp;gt;</c>.  This node
            is not intended for long term use, but for convenience in the early
            development of programs that do not yet belong to a package, and
            for "throwaway" programs.  <i>Valuable data should not be stored
            at this node as it is shared by all programs that use it.</i></para>
          <para>A class <c>Foo</c> wishing to access preferences pertaining to its
            package can obtain a preference node as follows:</para>
          <code lang="text/java">static Preferences prefs = Preferences.userNodeForPackage(Foo.class);
            </code>
          <para>This idiom obviates the need for using a string to describe the
            preferences node and decreases the likelihood of a run-time failure.
            (If the class name is misspelled, it will typically result in a
            compile-time error.)</para>
          <para>Invoking this method will result in the creation of the returned
            node and its ancestors if they do not already exist.  If the returned
            node did not exist prior to this call, this node and any ancestors that
            were created by this call are not guaranteed to become permanent until
            the <c>flush</c> method is called on the returned node (or one of its
            ancestors or descendants).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#userNodeForPackage(java.lang.Class%3C?%3E)" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.userNodeForPackage(java.lang.Class&lt;?&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserRoot">
      <MemberSignature Language="VB.NET" Value="Public Shared Function UserRoot () As Preferences" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Prefs::Preferences ^ UserRoot();" />
      <MemberSignature Language="C#" Value="public static Java.Util.Prefs.Preferences? UserRoot ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Prefs.Preferences UserRoot() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.Preferences.UserRoot" />
      <MemberSignature Language="F#" Value="static member UserRoot : unit -&gt; Java.Util.Prefs.Preferences" Usage="Java.Util.Prefs.Preferences.UserRoot " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("userRoot", "()Ljava/util/prefs/Preferences;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("userRoot", "()Ljava/util/prefs/Preferences;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps.</summary>
        <returns>the root preference node for the calling user.</returns>
        <remarks>
          <para>&lt;strong&gt;WARNING:&lt;/strong&gt; On Android, the Preference nodes
            corresponding to the "system" and "user" preferences are stored in sections
            of the file system that are inaccessible to apps. Further, allowing apps to set
            "system wide" preferences is contrary to android's security model.
            
            Returns the root preference node for the calling user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/Preferences#userRoot()" title="Reference documentation">Java documentation for <code>java.util.prefs.Preferences.userRoot()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
