<Type Name="AbstractPreferences" FullName="Java.Util.Prefs.AbstractPreferences">
  <TypeSignature Language="C#" Value="public abstract class AbstractPreferences : Java.Util.Prefs.Preferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractPreferences extends Java.Util.Prefs.Preferences" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Prefs.AbstractPreferences" />
  <TypeSignature Language="F#" Value="type AbstractPreferences = class&#xA;    inherit Preferences" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Util.Prefs.Preferences</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/prefs/AbstractPreferences", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/prefs/AbstractPreferences", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class provides a skeletal implementation of the <c>Preferences</c>
            class, greatly easing the task of implementing it.</summary>
    <remarks>
      <para>This class provides a skeletal implementation of the <c>Preferences</c>
            class, greatly easing the task of implementing it.</para>
      <para>&lt;strong&gt;This class is for <c>Preferences</c> implementers only.
            Normal users of the <c>Preferences</c> facility should have no need to
            consult this documentation.  The <c>Preferences</c> documentation
            should suffice.&lt;/strong&gt;</para>
      <para>Implementors must override the nine abstract service-provider interface
            (SPI) methods: <c>#getSpi(String)</c>, <c>#putSpi(String,String)</c>,
            <c>#removeSpi(String)</c>, <c>#childSpi(String)</c>, <c>#removeNodeSpi()</c>, <c>#keysSpi()</c>, <c>#childrenNamesSpi()</c>, <c>#syncSpi()</c> and <c>#flushSpi()</c>.  All of the concrete methods specify
            precisely how they are implemented atop these SPI methods.  The implementor
            may, at his discretion, override one or more of the concrete methods if the
            default implementation is unsatisfactory for any reason, such as
            performance.</para>
      <para>The SPI methods fall into three groups concerning exception
            behavior. The <c>getSpi</c> method should never throw exceptions, but it
            doesn't really matter, as any exception thrown by this method will be
            intercepted by <c>#get(String,String)</c>, which will return the specified
            default value to the caller.  The <c>removeNodeSpi, keysSpi,
            childrenNamesSpi, syncSpi</c> and <c>flushSpi</c> methods are specified
            to throw <c>BackingStoreException</c>, and the implementation is required
            to throw this checked exception if it is unable to perform the operation.
            The exception propagates outward, causing the corresponding API method
            to fail.</para>
      <para>The remaining SPI methods <c>#putSpi(String,String)</c>, <c>#removeSpi(String)</c> and <c>#childSpi(String)</c> have more complicated
            exception behavior.  They are not specified to throw
            <c>BackingStoreException</c>, as they can generally obey their contracts
            even if the backing store is unavailable.  This is true because they return
            no information and their effects are not required to become permanent until
            a subsequent call to <c>Preferences#flush()</c> or
            <c>Preferences#sync()</c>. Generally speaking, these SPI methods should not
            throw exceptions.  In some implementations, there may be circumstances
            under which these calls cannot even enqueue the requested operation for
            later processing.  Even under these circumstances it is generally better to
            simply ignore the invocation and return, rather than throwing an
            exception.  Under these circumstances, however, all subsequent invocations
            of <c>flush()</c> and <c>sync</c> should return <c>false</c>, as
            returning <c>true</c> would imply that all previous operations had
            successfully been made permanent.</para>
      <para>There is one circumstance under which <c>putSpi, removeSpi and
            childSpi</c><i>should</i> throw an exception: if the caller lacks
            sufficient privileges on the underlying operating system to perform the
            requested operation.  This will, for instance, occur on most systems
            if a non-privileged user attempts to modify system preferences.
            (The required privileges will vary from implementation to
            implementation.  On some implementations, they are the right to modify the
            contents of some directory in the file system; on others they are the right
            to modify contents of some key in a registry.)  Under any of these
            circumstances, it would generally be undesirable to let the program
            continue executing as if these operations would become permanent at a later
            time.  While implementations are not required to throw an exception under
            these circumstances, they are encouraged to do so.  A <c>SecurityException</c> would be appropriate.</para>
      <para>Most of the SPI methods require the implementation to read or write
            information at a preferences node.  The implementor should beware of the
            fact that another VM may have concurrently deleted this node from the
            backing store.  It is the implementation's responsibility to recreate the
            node if it has been deleted.</para>
      <para>Implementation note: In Sun's default <c>Preferences</c>
            implementations, the user's identity is inherited from the underlying
            operating system and does not change for the lifetime of the virtual
            machine.  It is recognized that server-side <c>Preferences</c>
            implementations may have the user identity change from request to request,
            implicitly passed to <c>Preferences</c> methods via the use of a
            static <c>ThreadLocal</c> instance.  Authors of such implementations are
            <i>strongly</i> encouraged to determine the user at the time preferences
            are accessed (for example by the <c>#get(String,String)</c> or <c>#put(String,String)</c> method) rather than permanently associating a user
            with each <c>Preferences</c> instance.  The latter behavior conflicts
            with normal <c>Preferences</c> usage and would lead to great confusion.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractPreferences (Java.Util.Prefs.AbstractPreferences? parent, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Util.Prefs.AbstractPreferences parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.#ctor(Java.Util.Prefs.AbstractPreferences,System.String)" />
      <MemberSignature Language="F#" Value="new Java.Util.Prefs.AbstractPreferences : Java.Util.Prefs.AbstractPreferences * string -&gt; Java.Util.Prefs.AbstractPreferences" Usage="new Java.Util.Prefs.AbstractPreferences (parent, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/prefs/AbstractPreferences;Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parent" Type="Java.Util.Prefs.AbstractPreferences" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent">the parent of this preference node, or null if this
                          is the root.</param>
        <param name="name">the name of this preference node, relative to its parent,
                        or <c>""</c> if this is the root.</param>
        <summary>Creates a preference node with the specified parent and the specified
            name relative to its parent.</summary>
        <remarks>
          <para>Creates a preference node with the specified parent and the specified
            name relative to its parent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#AbstractPreferences(java.util.prefs.AbstractPreferences,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.AbstractPreferences(java.util.prefs.AbstractPreferences, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the name contains a slash character or is empty if <c>parent</c> is not <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractPreferences (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Prefs.AbstractPreferences : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Prefs.AbstractPreferences" Usage="new Java.Util.Prefs.AbstractPreferences (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbsolutePath">
      <MemberSignature Language="C#" Value="public override string? AbsolutePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string AbsolutePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.AbsolutePath" />
      <MemberSignature Language="F#" Value="override this.AbsolutePath : unit -&gt; string" Usage="abstractPreferences.AbsolutePath " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("absolutePath", "()Ljava/lang/String;", "GetAbsolutePathHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("absolutePath", "()Ljava/lang/String;", "GetAbsolutePathHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>absolutePath</c> method as per the specification in
            <c>Preferences#absolutePath()</c>.</summary>
        <returns>this preference node's absolute path name.</returns>
        <remarks>
          <para>Implements the <c>absolutePath</c> method as per the specification in
            <c>Preferences#absolutePath()</c>.</para>
          <para>This implementation merely returns the absolute path name that
            was computed at the time that this node was constructed (based on
            the name that was passed to this node's constructor, and the names
            that were passed to this node's ancestors' constructors).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#absolutePath()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.absolutePath()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddNodeChangeListener">
      <MemberSignature Language="C#" Value="public override void AddNodeChangeListener (Java.Util.Prefs.INodeChangeListener? ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.AddNodeChangeListener(Java.Util.Prefs.INodeChangeListener)" />
      <MemberSignature Language="F#" Value="override this.AddNodeChangeListener : Java.Util.Prefs.INodeChangeListener -&gt; unit" Usage="abstractPreferences.AddNodeChangeListener ncl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetAddNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetAddNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">the listener to be registered.</param>
        <summary>Registers a <c>NodeChangeListener</c> instance for this node, which will
 handle <c>NodeChangeEvent</c>s.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPreferenceChangeListener">
      <MemberSignature Language="C#" Value="public override void AddPreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener? pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddPreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.AddPreferenceChangeListener(Java.Util.Prefs.IPreferenceChangeListener)" />
      <MemberSignature Language="F#" Value="override this.AddPreferenceChangeListener : Java.Util.Prefs.IPreferenceChangeListener -&gt; unit" Usage="abstractPreferences.AddPreferenceChangeListener pcl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetAddPreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetAddPreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">the listener to be registered.</param>
        <summary>Registers a <c>PreferenceChangeListener</c> instance for this node,
 which will handle <c>PreferenceChangeEvent</c>s.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CachedChildren">
      <MemberSignature Language="C#" Value="protected Java.Util.Prefs.AbstractPreferences[]? CachedChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class Java.Util.Prefs.AbstractPreferences[] CachedChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.CachedChildren" />
      <MemberSignature Language="F#" Value="member this.CachedChildren : unit -&gt; Java.Util.Prefs.AbstractPreferences[]" Usage="abstractPreferences.CachedChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cachedChildren", "()[Ljava/util/prefs/AbstractPreferences;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cachedChildren", "()[Ljava/util/prefs/AbstractPreferences;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.AbstractPreferences[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all known unremoved children of this node.</summary>
        <returns>all known unremoved children of this node.</returns>
        <remarks>
          <para>Returns all known unremoved children of this node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#cachedChildren()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.cachedChildren()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenNames">
      <MemberSignature Language="C#" Value="public override string[]? ChildrenNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] ChildrenNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ChildrenNames" />
      <MemberSignature Language="F#" Value="override this.ChildrenNames : unit -&gt; string[]" Usage="abstractPreferences.ChildrenNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("childrenNames", "()[Ljava/lang/String;", "GetChildrenNamesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("childrenNames", "()[Ljava/lang/String;", "GetChildrenNamesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>children</c> method as per the specification in
            <c>Preferences#childrenNames()</c>.</summary>
        <returns>the names of the children of this preference node.</returns>
        <remarks>
          <para>Implements the <c>children</c> method as per the specification in
            <c>Preferences#childrenNames()</c>.</para>
          <para>This implementation obtains this preference node's lock, checks that
            the node has not been removed, constructs a <c>TreeSet</c> initialized
            to the names of children already cached (the children in this node's
            "child-cache"), invokes <c>#childrenNamesSpi()</c>, and adds all of the
            returned child-names into the set.  The elements of the tree set are
            dumped into a <c>String</c> array using the <c>toArray</c> method,
            and this array is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#childrenNames()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.childrenNames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="ChildrenNamesSpi">
      <MemberSignature Language="C#" Value="protected abstract string[]? ChildrenNamesSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] ChildrenNamesSpi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ChildrenNamesSpi" />
      <MemberSignature Language="F#" Value="abstract member ChildrenNamesSpi : unit -&gt; string[]" Usage="abstractPreferences.ChildrenNamesSpi " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("childrenNamesSpi", "()[Ljava/lang/String;", "GetChildrenNamesSpiHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("childrenNamesSpi", "()[Ljava/lang/String;", "GetChildrenNamesSpiHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the names of the children of this preference node.</summary>
        <returns>an array containing the names of the children of this
                    preference node.</returns>
        <remarks>
          <para>Returns the names of the children of this preference node.  (The
            returned array will be of size zero if this node has no children.)
            This method need not return the names of any nodes already cached,
            but may do so without harm.</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>If this node throws a <c>BackingStoreException</c>, the exception
            will propagate out beyond the enclosing <c>#childrenNames()</c>
            invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#childrenNamesSpi()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.childrenNamesSpi()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ChildSpi">
      <MemberSignature Language="C#" Value="protected abstract Java.Util.Prefs.AbstractPreferences? ChildSpi (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Util.Prefs.AbstractPreferences ChildSpi(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ChildSpi(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ChildSpi : string -&gt; Java.Util.Prefs.AbstractPreferences" Usage="abstractPreferences.ChildSpi name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("childSpi", "(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;", "GetChildSpi_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("childSpi", "(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;", "GetChildSpi_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.AbstractPreferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the child node to return, relative to
                   this preference node.</param>
        <summary>Returns the named child of this preference node, creating it if it does
            not already exist.</summary>
        <returns>The named child node.</returns>
        <remarks>
          <para>Returns the named child of this preference node, creating it if it does
            not already exist.  It is guaranteed that <c>name</c> is non-null,
            non-empty, does not contain the slash character ('/'), and is no longer
            than <c>#MAX_NAME_LENGTH</c> characters.  Also, it is guaranteed that
            this node has not been removed.  (The implementor needn't check for any
            of these things.)</para>
          <para>Finally, it is guaranteed that the named node has not been returned
            by a previous invocation of this method or <c>#getChild(String)</c>
            after the last time that it was removed.  In other words, a cached
            value will always be used in preference to invoking this method.
            Subclasses need not maintain their own cache of previously returned
            children.</para>
          <para>The implementer must ensure that the returned node has not been
            removed.  If a like-named child of this node was previously removed, the
            implementer must return a newly constructed <c>AbstractPreferences</c>
            node; once removed, an <c>AbstractPreferences</c> node
            cannot be "resuscitated."</para>
          <para>If this method causes a node to be created, this node is not
            guaranteed to be persistent until the <c>flush</c> method is
            invoked on this node or one of its ancestors (or descendants).</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#childSpi(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.childSpi(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Clear" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="abstractPreferences.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()V", "GetClearHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()V", "GetClearHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>clear</c> method as per the specification in
            <c>Preferences#clear()</c>.</summary>
        <remarks>
          <para>Implements the <c>clear</c> method as per the specification in
            <c>Preferences#clear()</c>.</para>
          <para>This implementation obtains this preference node's lock,
            invokes <c>#keys()</c> to obtain an array of keys, and
            iterates over the array invoking <c>#remove(String)</c> on each key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#clear()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.clear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="ExportNode">
      <MemberSignature Language="C#" Value="public override void ExportNode (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExportNode(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ExportNode(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="override this.ExportNode : System.IO.Stream -&gt; unit" Usage="abstractPreferences.ExportNode os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exportNode", "(Ljava/io/OutputStream;)V", "GetExportNode_Ljava_io_OutputStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exportNode", "(Ljava/io/OutputStream;)V", "GetExportNode_Ljava_io_OutputStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">the output stream on which to emit the XML document.</param>
        <summary>Implements the <c>exportNode</c> method as per the specification in
            <c>Preferences#exportNode(OutputStream)</c>.</summary>
        <remarks>
          <para>Implements the <c>exportNode</c> method as per the specification in
            <c>Preferences#exportNode(OutputStream)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#exportNode(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.exportNode(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="ExportSubtree">
      <MemberSignature Language="C#" Value="public override void ExportSubtree (System.IO.Stream? os);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExportSubtree(class System.IO.Stream os) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ExportSubtree(System.IO.Stream)" />
      <MemberSignature Language="F#" Value="override this.ExportSubtree : System.IO.Stream -&gt; unit" Usage="abstractPreferences.ExportSubtree os" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("exportSubtree", "(Ljava/io/OutputStream;)V", "GetExportSubtree_Ljava_io_OutputStream_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("exportSubtree", "(Ljava/io/OutputStream;)V", "GetExportSubtree_Ljava_io_OutputStream_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="os" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="os">the output stream on which to emit the XML document.</param>
        <summary>Implements the <c>exportSubtree</c> method as per the specification in
            <c>Preferences#exportSubtree(OutputStream)</c>.</summary>
        <remarks>
          <para>Implements the <c>exportSubtree</c> method as per the specification in
            <c>Preferences#exportSubtree(OutputStream)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#exportSubtree(java.io.OutputStream)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.exportSubtree(java.io.OutputStream)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Flush" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="abstractPreferences.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>flush</c> method as per the specification in
            <c>Preferences#flush()</c>.</summary>
        <remarks>
          <para>Implements the <c>flush</c> method as per the specification in
            <c>Preferences#flush()</c>.</para>
          <para>This implementation calls a recursive helper method that locks this
            node, invokes flushSpi() on it, unlocks this node, and recursively
            invokes this method on each "cached child."  A cached child is a child
            of this node that has been created in this VM and not subsequently
            removed.  In effect, this method does a depth first traversal of the
            "cached subtree" rooted at this node, calling flushSpi() on each node in
            the subTree while only that node is locked. Note that flushSpi() is
            invoked top-down.</para>
          <para>If this method is invoked on a node that has been removed with
            the <c>#removeNode()</c> method, flushSpi() is invoked on this node,
            but not on others.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#flush()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="FlushSpi">
      <MemberSignature Language="C#" Value="protected abstract void FlushSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FlushSpi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.FlushSpi" />
      <MemberSignature Language="F#" Value="abstract member FlushSpi : unit -&gt; unit" Usage="abstractPreferences.FlushSpi " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flushSpi", "()V", "GetFlushSpiHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flushSpi", "()V", "GetFlushSpiHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is invoked with this node locked.</summary>
        <remarks>
          <para>This method is invoked with this node locked.  The contract of this
            method is to force any cached changes in the contents of this
            preference node to the backing store, guaranteeing their persistence.
            (It is perfectly possible that this node does not exist on the backing
            store, either because it has been deleted by another VM, or because it
            has not yet been created.)  Note that this method should <i>not</i>
            flush the preferences in any subnodes of this node.  If the backing
            store naturally flushes an entire subtree at once, the implementer is
            encouraged to override flush(), rather than merely overriding this
            method.</para>
          <para>If this node throws a <c>BackingStoreException</c>, the exception
            will propagate out beyond the enclosing <c>#flush()</c> invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#flushSpi()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.flushSpi()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public override string? Get (string? key, string? def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Get(string key, string def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Get(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.Get : string * string -&gt; string" Usage="abstractPreferences.Get (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGet_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>.</param>
        <summary>Implements the <c>get</c> method as per the specification in
            <c>Preferences#get(String,String)</c>.</summary>
        <returns>the value associated with <c>key</c>, or <c>def</c>
                    if no value is associated with <c>key</c>.</returns>
        <remarks>
          <para>Implements the <c>get</c> method as per the specification in
            <c>Preferences#get(String,String)</c>.</para>
          <para>This implementation first checks to see if <c>key</c> is
            <c>null</c> throwing a <c>NullPointerException</c> if this is
            the case.  Then it obtains this preference node's lock,
            checks that the node has not been removed, invokes <c>#getSpi(String)</c>, and returns the result, unless the <c>getSpi</c>
            invocation returns <c>null</c> or throws an exception, in which case
            this invocation returns <c>def</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#get(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.get(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (string? key, bool def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(string key, bool def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : string * bool -&gt; bool" Usage="abstractPreferences.GetBoolean (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBoolean", "(Ljava/lang/String;Z)Z", "GetGetBoolean_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBoolean", "(Ljava/lang/String;Z)Z", "GetGetBoolean_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a boolean.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a boolean.</param>
        <summary>Implements the <c>getBoolean</c> method as per the specification in
            <c>Preferences#getBoolean(String,boolean)</c>.</summary>
        <returns>the boolean value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a boolean.</returns>
        <remarks>
          <para>Implements the <c>getBoolean</c> method as per the specification in
            <c>Preferences#getBoolean(String,boolean)</c>.</para>
          <para>This implementation invokes <c>#get(String,String) &lt;tt&gt;get(key,
            null)&lt;/tt&gt;</c>.  If the return value is non-null, it is compared with
            <c>"true"</c> using <c>String#equalsIgnoreCase(String)</c>.  If the
            comparison returns <c>true</c>, this invocation returns
            <c>true</c>.  Otherwise, the original return value is compared with
            <c>"false"</c>, again using <c>String#equalsIgnoreCase(String)</c>.
            If the comparison returns <c>true</c>, this invocation returns
            <c>false</c>.  Otherwise, this invocation returns <c>def</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getBoolean(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getBoolean(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetByteArray">
      <MemberSignature Language="C#" Value="public override byte[]? GetByteArray (string? key, byte[]? def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetByteArray(string key, unsigned int8[] def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetByteArray(System.String,System.Byte[])" />
      <MemberSignature Language="F#" Value="override this.GetByteArray : string * byte[] -&gt; byte[]" Usage="abstractPreferences.GetByteArray (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getByteArray", "(Ljava/lang/String;[B)[B", "GetGetByteArray_Ljava_lang_String_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getByteArray", "(Ljava/lang/String;[B)[B", "GetGetByteArray_Ljava_lang_String_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a byte array.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a byte array.</param>
        <summary>Implements the <c>getByteArray</c> method as per the specification in
            <c>Preferences#getByteArray(String,byte[])</c>.</summary>
        <returns>the byte array value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a byte array.</returns>
        <remarks>
          <para>Implements the <c>getByteArray</c> method as per the specification in
            <c>Preferences#getByteArray(String,byte[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getByteArray(java.lang.String,%20byte[])" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getByteArray(java.lang.String, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetChild">
      <MemberSignature Language="C#" Value="protected virtual Java.Util.Prefs.AbstractPreferences? GetChild (string? nodeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Util.Prefs.AbstractPreferences GetChild(string nodeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetChild(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetChild : string -&gt; Java.Util.Prefs.AbstractPreferences&#xA;override this.GetChild : string -&gt; Java.Util.Prefs.AbstractPreferences" Usage="abstractPreferences.GetChild nodeName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChild", "(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;", "GetGetChild_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChild", "(Ljava/lang/String;)Ljava/util/prefs/AbstractPreferences;", "GetGetChild_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.AbstractPreferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nodeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="nodeName">name of the child to be searched for.</param>
        <summary>Returns the named child if it exists, or <c>null</c> if it does not.</summary>
        <returns>the named child if it exists, or null if it does not.</returns>
        <remarks>
          <para>Returns the named child if it exists, or <c>null</c> if it does not.
            It is guaranteed that <c>nodeName</c> is non-null, non-empty,
            does not contain the slash character ('/'), and is no longer than
            <c>#MAX_NAME_LENGTH</c> characters.  Also, it is guaranteed
            that this node has not been removed.  (The implementor needn't check
            for any of these things if he chooses to override this method.)</para>
          <para>Finally, it is guaranteed that the named node has not been returned
            by a previous invocation of this method or <c>#childSpi</c> after the
            last time that it was removed.  In other words, a cached value will
            always be used in preference to invoking this method.  (The implementor
            needn't maintain his own cache of previously returned children if he
            chooses to override this method.)</para>
          <para>This implementation obtains this preference node's lock, invokes
            <c>#childrenNames()</c> to get an array of the names of this node's
            children, and iterates over the array comparing the name of each child
            with the specified node name.  If a child node has the correct name,
            the <c>#childSpi(String)</c> method is invoked and the resulting
            node is returned.  If the iteration completes without finding the
            specified name, <c>null</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getChild(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getChild(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (string? key, double def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(string key, float64 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetDouble(System.String,System.Double)" />
      <MemberSignature Language="F#" Value="override this.GetDouble : string * double -&gt; double" Usage="abstractPreferences.GetDouble (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDouble", "(Ljava/lang/String;D)D", "GetGetDouble_Ljava_lang_String_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDouble", "(Ljava/lang/String;D)D", "GetGetDouble_Ljava_lang_String_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a double.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a double.</param>
        <summary>Implements the <c>getDouble</c> method as per the specification in
            <c>Preferences#getDouble(String,double)</c>.</summary>
        <returns>the double value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a double.</returns>
        <remarks>
          <para>Implements the <c>getDouble</c> method as per the specification in
            <c>Preferences#getDouble(String,double)</c>.</para>
          <para>This implementation invokes <c>#get(String,String) &lt;tt&gt;get(key,
            null)&lt;/tt&gt;</c>.  If the return value is non-null, the implementation
            attempts to translate it to an <c>double</c> with
            <c>Double#parseDouble(String)</c>.  If the attempt succeeds, the return
            value is returned by this method.  Otherwise, <c>def</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getDouble(java.lang.String,%20double)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getDouble(java.lang.String, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (string? key, float def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(string key, float32 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetFloat(System.String,System.Single)" />
      <MemberSignature Language="F#" Value="override this.GetFloat : string * single -&gt; single" Usage="abstractPreferences.GetFloat (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFloat", "(Ljava/lang/String;F)F", "GetGetFloat_Ljava_lang_String_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFloat", "(Ljava/lang/String;F)F", "GetGetFloat_Ljava_lang_String_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a float.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a float.</param>
        <summary>Implements the <c>getFloat</c> method as per the specification in
            <c>Preferences#getFloat(String,float)</c>.</summary>
        <returns>the float value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a float.</returns>
        <remarks>
          <para>Implements the <c>getFloat</c> method as per the specification in
            <c>Preferences#getFloat(String,float)</c>.</para>
          <para>This implementation invokes <c>#get(String,String) &lt;tt&gt;get(key,
            null)&lt;/tt&gt;</c>.  If the return value is non-null, the implementation
            attempts to translate it to an <c>float</c> with
            <c>Float#parseFloat(String)</c>.  If the attempt succeeds, the return
            value is returned by this method.  Otherwise, <c>def</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getFloat(java.lang.String,%20float)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getFloat(java.lang.String, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInt">
      <MemberSignature Language="C#" Value="public override int GetInt (string? key, int def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt(string key, int32 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetInt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetInt : string * int -&gt; int" Usage="abstractPreferences.GetInt (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInt", "(Ljava/lang/String;I)I", "GetGetInt_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInt", "(Ljava/lang/String;I)I", "GetGetInt_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as an int.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as an int.</param>
        <summary>Implements the <c>getInt</c> method as per the specification in
            <c>Preferences#getInt(String,int)</c>.</summary>
        <returns>the int value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    an int.</returns>
        <remarks>
          <para>Implements the <c>getInt</c> method as per the specification in
            <c>Preferences#getInt(String,int)</c>.</para>
          <para>This implementation invokes <c>#get(String,String) &lt;tt&gt;get(key,
            null)&lt;/tt&gt;</c>.  If the return value is non-null, the implementation
            attempts to translate it to an <c>int</c> with
            <c>Integer#parseInt(String)</c>.  If the attempt succeeds, the return
            value is returned by this method.  Otherwise, <c>def</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getInt(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getInt(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLong">
      <MemberSignature Language="C#" Value="public override long GetLong (string? key, long def);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetLong(string key, int64 def) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetLong(System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="override this.GetLong : string * int64 -&gt; int64" Usage="abstractPreferences.GetLong (key, def)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLong", "(Ljava/lang/String;J)J", "GetGetLong_Ljava_lang_String_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLong", "(Ljava/lang/String;J)J", "GetGetLong_Ljava_lang_String_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="def" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">key whose associated value is to be returned as a long.</param>
        <param name="def">the value to be returned in the event that this
                   preference node has no value associated with <c>key</c>
                   or the associated value cannot be interpreted as a long.</param>
        <summary>Implements the <c>getLong</c> method as per the specification in
            <c>Preferences#getLong(String,long)</c>.</summary>
        <returns>the long value represented by the string associated with
                    <c>key</c> in this preference node, or <c>def</c> if the
                    associated value does not exist or cannot be interpreted as
                    a long.</returns>
        <remarks>
          <para>Implements the <c>getLong</c> method as per the specification in
            <c>Preferences#getLong(String,long)</c>.</para>
          <para>This implementation invokes <c>#get(String,String) &lt;tt&gt;get(key,
            null)&lt;/tt&gt;</c>.  If the return value is non-null, the implementation
            attempts to translate it to a <c>long</c> with
            <c>Long#parseLong(String)</c>.  If the attempt succeeds, the return
            value is returned by this method.  Otherwise, <c>def</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getLong(java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getLong(java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSpi">
      <MemberSignature Language="C#" Value="protected abstract string? GetSpi (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSpi(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.GetSpi(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetSpi : string -&gt; string" Usage="abstractPreferences.GetSpi key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpi", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetSpi_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpi", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetSpi_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key</param>
        <summary>Return the value associated with the specified key at this preference
            node, or <c>null</c> if there is no association for this key, or the
            association cannot be determined at this time.</summary>
        <returns>the value associated with the specified key at this preference
                     node, or <c>null</c> if there is no association for this
                     key, or the association cannot be determined at this time.</returns>
        <remarks>
          <para>Return the value associated with the specified key at this preference
            node, or <c>null</c> if there is no association for this key, or the
            association cannot be determined at this time.  It is guaranteed that
            <c>key</c> is non-null.  Also, it is guaranteed that this node has
            not been removed.  (The implementor needn't check for either of these
            things.)</para>
          <para>Generally speaking, this method should not throw an exception
            under any circumstances.  If, however, if it does throw an exception,
            the exception will be intercepted and treated as a <c>null</c>
            return value.</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#getSpi(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.getSpi(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRemoved">
      <MemberSignature Language="C#" Value="protected virtual bool IsRemoved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRemoved" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.IsRemoved" />
      <MemberSignature Language="F#" Value="member this.IsRemoved : bool" Usage="Java.Util.Prefs.AbstractPreferences.IsRemoved" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRemoved", "()Z", "GetIsRemovedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRemoved", "()Z", "GetIsRemovedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> iff this node (or an ancestor) has been
            removed with the <c>#removeNode()</c> method.</summary>
        <value>
          <c>true</c> iff this node (or an ancestor) has been
                  removed with the <c>#removeNode()</c> method.</value>
        <remarks>
          <para>Returns <c>true</c> iff this node (or an ancestor) has been
            removed with the <c>#removeNode()</c> method.  This method
            locks this node prior to returning the contents of the private
            field used to track this state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#isRemoved()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.isRemoved()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsUserNode">
      <MemberSignature Language="C#" Value="public override bool IsUserNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserNode" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.IsUserNode" />
      <MemberSignature Language="F#" Value="member this.IsUserNode : bool" Usage="Java.Util.Prefs.AbstractPreferences.IsUserNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUserNode", "()Z", "GetIsUserNodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUserNode", "()Z", "GetIsUserNodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Implements the <c>isUserNode</c> method as per the specification in
            <c>Preferences#isUserNode()</c>.</summary>
        <value>
          <c>true</c> if this preference node is in the user
                    preference tree, <c>false</c> if it's in the system
                    preference tree.</value>
        <remarks>
          <para>Implements the <c>isUserNode</c> method as per the specification in
            <c>Preferences#isUserNode()</c>.</para>
          <para>This implementation compares this node's root node (which is stored
            in a private field) with the value returned by
            <c>Preferences#userRoot()</c>.  If the two object references are
            identical, this method returns true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#isUserNode()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.isUserNode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Prefs.AbstractPreferences.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override string[]? Keys ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] Keys() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Keys" />
      <MemberSignature Language="F#" Value="override this.Keys : unit -&gt; string[]" Usage="abstractPreferences.Keys " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keys", "()[Ljava/lang/String;", "GetKeysHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keys", "()[Ljava/lang/String;", "GetKeysHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>keys</c> method as per the specification in
            <c>Preferences#keys()</c>.</summary>
        <returns>an array of the keys that have an associated value in this
                    preference node.</returns>
        <remarks>
          <para>Implements the <c>keys</c> method as per the specification in
            <c>Preferences#keys()</c>.</para>
          <para>This implementation obtains this preference node's lock, checks that
            the node has not been removed and invokes <c>#keysSpi()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#keys()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.keys()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="KeysSpi">
      <MemberSignature Language="C#" Value="protected abstract string[]? KeysSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string[] KeysSpi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.KeysSpi" />
      <MemberSignature Language="F#" Value="abstract member KeysSpi : unit -&gt; string[]" Usage="abstractPreferences.KeysSpi " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("keysSpi", "()[Ljava/lang/String;", "GetKeysSpiHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("keysSpi", "()[Ljava/lang/String;", "GetKeysSpiHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns all of the keys that have an associated value in this
            preference node.</summary>
        <returns>an array of the keys that have an associated value in this
                    preference node.</returns>
        <remarks>
          <para>Returns all of the keys that have an associated value in this
            preference node.  (The returned array will be of size zero if
            this node has no preferences.)  It is guaranteed that this node has not
            been removed.</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>If this node throws a <c>BackingStoreException</c>, the exception
            will propagate out beyond the enclosing <c>#keys()</c> invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#keysSpi()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.keysSpi()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="protected Java.Lang.Object? Lock { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Lock" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.Lock" />
      <MemberSignature Language="F#" Value="member this.Lock : Java.Lang.Object with get, set" Usage="Java.Util.Prefs.AbstractPreferences.Lock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lock")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lock")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An object whose monitor is used to lock this node.</summary>
        <value>To be added.</value>
        <remarks>
          <para>An object whose monitor is used to lock this node.  This object
            is used in preference to the node itself to reduce the likelihood of
            intentional or unintentional denial of service due to a locked node.
            To avoid deadlock, a node is <i>never</i> locked by a thread that
            holds a lock on a descendant of that node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#lock" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.lock</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string? Name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string Name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Name" />
      <MemberSignature Language="F#" Value="override this.Name : unit -&gt; string" Usage="abstractPreferences.Name " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("name", "()Ljava/lang/String;", "GetNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>name</c> method as per the specification in
            <c>Preferences#name()</c>.</summary>
        <returns>this preference node's name, relative to its parent.</returns>
        <remarks>
          <para>Implements the <c>name</c> method as per the specification in
            <c>Preferences#name()</c>.</para>
          <para>This implementation merely returns the name that was
            passed to this node's constructor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#name()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.name()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewNode">
      <MemberSignature Language="C#" Value="protected bool NewNode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewNode" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.NewNode" />
      <MemberSignature Language="F#" Value="member this.NewNode : bool with get, set" Usage="Java.Util.Prefs.AbstractPreferences.NewNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newNode")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newNode")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This field should be <c>true</c> if this node did not exist in the
            backing store prior to the creation of this object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This field should be <c>true</c> if this node did not exist in the
            backing store prior to the creation of this object.  The field
            is initialized to false, but may be set to true by a subclass
            constructor (and should not be modified thereafter).  This field
            indicates whether a node change event should be fired when
            creation is complete.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#newNode" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.newNode</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public override Java.Util.Prefs.Preferences? Node (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.Prefs.Preferences Node(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Node(System.String)" />
      <MemberSignature Language="F#" Value="override this.Node : string -&gt; Java.Util.Prefs.Preferences" Usage="abstractPreferences.Node path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("node", "(Ljava/lang/String;)Ljava/util/prefs/Preferences;", "GetNode_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("node", "(Ljava/lang/String;)Ljava/util/prefs/Preferences;", "GetNode_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path name of the preference node to return.</param>
        <summary>Implements the <c>node</c> method as per the specification in
            <c>Preferences#node(String)</c>.</summary>
        <returns>the specified preference node.</returns>
        <remarks>
          <para>Implements the <c>node</c> method as per the specification in
            <c>Preferences#node(String)</c>.</para>
          <para>This implementation obtains this preference node's lock and checks
            that the node has not been removed.  If <c>path</c> is <c>""</c>,
            this node is returned; if <c>path</c> is <c>"/"</c>, this node's
            root is returned.  If the first character in <c>path</c> is
            not <c>'/'</c>, the implementation breaks <c>path</c> into
            tokens and recursively traverses the path from this node to the
            named node, "consuming" a name and a slash from <c>path</c> at
            each step of the traversal.  At each step, the current node is locked
            and the node's child-cache is checked for the named node.  If it is
            not found, the name is checked to make sure its length does not
            exceed <c>MAX_NAME_LENGTH</c>.  Then the <c>#childSpi(String)</c>
            method is invoked, and the result stored in this node's child-cache.
            If the newly created <c>Preferences</c> object's <c>#newNode</c>
            field is <c>true</c> and there are any node change listeners,
            a notification event is enqueued for processing by the event dispatch
            thread.</para>
          <para>When there are no more tokens, the last value found in the
            child-cache or returned by <c>childSpi</c> is returned by this
            method.  If during the traversal, two <c>"/"</c> tokens occur
            consecutively, or the final token is <c>"/"</c> (rather than a name),
            an appropriate <c>IllegalArgumentException</c> is thrown.</para>
          <para>If the first character of <c>path</c> is <c>'/'</c>
            (indicating an absolute path name) this preference node's
            lock is dropped prior to breaking <c>path</c> into tokens, and
            this method recursively traverses the path starting from the root
            (rather than starting from this node).  The traversal is otherwise
            identical to the one described for relative path names.  Dropping
            the lock on this node prior to commencing the traversal at the root
            node is essential to avoid the possibility of deadlock, as per the
            <c>#lock locking invariant</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#node(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.node(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NodeExists">
      <MemberSignature Language="C#" Value="public override bool NodeExists (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NodeExists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.NodeExists(System.String)" />
      <MemberSignature Language="F#" Value="override this.NodeExists : string -&gt; bool" Usage="abstractPreferences.NodeExists path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nodeExists", "(Ljava/lang/String;)Z", "GetNodeExists_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nodeExists", "(Ljava/lang/String;)Z", "GetNodeExists_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path name of the node whose existence is to be checked.</param>
        <summary>Implements the <c>nodeExists</c> method as per the specification in
            <c>Preferences#nodeExists(String)</c>.</summary>
        <returns>true if the specified node exists.</returns>
        <remarks>
          <para>Implements the <c>nodeExists</c> method as per the specification in
            <c>Preferences#nodeExists(String)</c>.</para>
          <para>This implementation is very similar to <c>#node(String)</c>,
            except that <c>#getChild(String)</c> is used instead of <c>#childSpi(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#nodeExists(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.nodeExists(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public override Java.Util.Prefs.Preferences? Parent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.Prefs.Preferences Parent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Parent" />
      <MemberSignature Language="F#" Value="override this.Parent : unit -&gt; Java.Util.Prefs.Preferences" Usage="abstractPreferences.Parent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parent", "()Ljava/util/prefs/Preferences;", "GetParentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parent", "()Ljava/util/prefs/Preferences;", "GetParentHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Prefs.Preferences</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>parent</c> method as per the specification in
            <c>Preferences#parent()</c>.</summary>
        <returns>the parent of this preference node.</returns>
        <remarks>
          <para>Implements the <c>parent</c> method as per the specification in
            <c>Preferences#parent()</c>.</para>
          <para>This implementation obtains this preference node's lock, checks that
            the node has not been removed and returns the parent value that was
            passed to this node's constructor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#parent()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.parent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Put">
      <MemberSignature Language="C#" Value="public override void Put (string? key, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Put(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Put(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.Put : string * string -&gt; unit" Usage="abstractPreferences.Put (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("put", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPut_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("put", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPut_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key with which the specified value is to be associated.</param>
        <param name="value">value to be associated with the specified key.</param>
        <summary>Implements the <c>put</c> method as per the specification in
            <c>Preferences#put(String,String)</c>.</summary>
        <remarks>
          <para>Implements the <c>put</c> method as per the specification in
            <c>Preferences#put(String,String)</c>.</para>
          <para>This implementation checks that the key and value are legal,
            obtains this preference node's lock, checks that the node
            has not been removed, invokes <c>#putSpi(String,String)</c>, and if
            there are any preference change listeners, enqueues a notification
            event for processing by the event dispatch thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#put(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.put(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutBoolean">
      <MemberSignature Language="C#" Value="public override void PutBoolean (string? key, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutBoolean(string key, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutBoolean(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="override this.PutBoolean : string * bool -&gt; unit" Usage="abstractPreferences.PutBoolean (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putBoolean", "(Ljava/lang/String;Z)V", "GetPutBoolean_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putBoolean", "(Ljava/lang/String;Z)V", "GetPutBoolean_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putBoolean</c> method as per the specification in
            <c>Preferences#putBoolean(String,boolean)</c>.</summary>
        <remarks>
          <para>Implements the <c>putBoolean</c> method as per the specification in
            <c>Preferences#putBoolean(String,boolean)</c>.</para>
          <para>This implementation translates <c>value</c> to a string with
            <c>String#valueOf(boolean)</c> and invokes <c>#put(String,String)</c>
            on the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putBoolean(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putBoolean(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutByteArray">
      <MemberSignature Language="C#" Value="public override void PutByteArray (string? key, byte[]? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutByteArray(string key, unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutByteArray(System.String,System.Byte[])" />
      <MemberSignature Language="F#" Value="override this.PutByteArray : string * byte[] -&gt; unit" Usage="abstractPreferences.PutByteArray (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putByteArray", "(Ljava/lang/String;[B)V", "GetPutByteArray_Ljava_lang_String_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putByteArray", "(Ljava/lang/String;[B)V", "GetPutByteArray_Ljava_lang_String_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putByteArray</c> method as per the specification in
            <c>Preferences#putByteArray(String,byte[])</c>.</summary>
        <remarks>
          <para>Implements the <c>putByteArray</c> method as per the specification in
            <c>Preferences#putByteArray(String,byte[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putByteArray(java.lang.String,%20byte[])" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putByteArray(java.lang.String, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutDouble">
      <MemberSignature Language="C#" Value="public override void PutDouble (string? key, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutDouble(string key, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutDouble(System.String,System.Double)" />
      <MemberSignature Language="F#" Value="override this.PutDouble : string * double -&gt; unit" Usage="abstractPreferences.PutDouble (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putDouble", "(Ljava/lang/String;D)V", "GetPutDouble_Ljava_lang_String_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putDouble", "(Ljava/lang/String;D)V", "GetPutDouble_Ljava_lang_String_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putDouble</c> method as per the specification in
            <c>Preferences#putDouble(String,double)</c>.</summary>
        <remarks>
          <para>Implements the <c>putDouble</c> method as per the specification in
            <c>Preferences#putDouble(String,double)</c>.</para>
          <para>This implementation translates <c>value</c> to a string with
            <c>Double#toString(double)</c> and invokes <c>#put(String,String)</c>
            on the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putDouble(java.lang.String,%20double)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putDouble(java.lang.String, double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutFloat">
      <MemberSignature Language="C#" Value="public override void PutFloat (string? key, float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutFloat(string key, float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutFloat(System.String,System.Single)" />
      <MemberSignature Language="F#" Value="override this.PutFloat : string * single -&gt; unit" Usage="abstractPreferences.PutFloat (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putFloat", "(Ljava/lang/String;F)V", "GetPutFloat_Ljava_lang_String_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putFloat", "(Ljava/lang/String;F)V", "GetPutFloat_Ljava_lang_String_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putFloat</c> method as per the specification in
            <c>Preferences#putFloat(String,float)</c>.</summary>
        <remarks>
          <para>Implements the <c>putFloat</c> method as per the specification in
            <c>Preferences#putFloat(String,float)</c>.</para>
          <para>This implementation translates <c>value</c> to a string with
            <c>Float#toString(float)</c> and invokes <c>#put(String,String)</c>
            on the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putFloat(java.lang.String,%20float)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putFloat(java.lang.String, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutInt">
      <MemberSignature Language="C#" Value="public override void PutInt (string? key, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutInt(string key, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutInt(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.PutInt : string * int -&gt; unit" Usage="abstractPreferences.PutInt (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putInt", "(Ljava/lang/String;I)V", "GetPutInt_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putInt", "(Ljava/lang/String;I)V", "GetPutInt_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putInt</c> method as per the specification in
            <c>Preferences#putInt(String,int)</c>.</summary>
        <remarks>
          <para>Implements the <c>putInt</c> method as per the specification in
            <c>Preferences#putInt(String,int)</c>.</para>
          <para>This implementation translates <c>value</c> to a string with
            <c>Integer#toString(int)</c> and invokes <c>#put(String,String)</c>
            on the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putInt(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putInt(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutLong">
      <MemberSignature Language="C#" Value="public override void PutLong (string? key, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void PutLong(string key, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutLong(System.String,System.Int64)" />
      <MemberSignature Language="F#" Value="override this.PutLong : string * int64 -&gt; unit" Usage="abstractPreferences.PutLong (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putLong", "(Ljava/lang/String;J)V", "GetPutLong_Ljava_lang_String_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putLong", "(Ljava/lang/String;J)V", "GetPutLong_Ljava_lang_String_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="key">key with which the string form of value is to be associated.</param>
        <param name="value">value whose string form is to be associated with key.</param>
        <summary>Implements the <c>putLong</c> method as per the specification in
            <c>Preferences#putLong(String,long)</c>.</summary>
        <remarks>
          <para>Implements the <c>putLong</c> method as per the specification in
            <c>Preferences#putLong(String,long)</c>.</para>
          <para>This implementation translates <c>value</c> to a string with
            <c>Long#toString(long)</c> and invokes <c>#put(String,String)</c>
            on the result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putLong(java.lang.String,%20long)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putLong(java.lang.String, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PutSpi">
      <MemberSignature Language="C#" Value="protected abstract void PutSpi (string? key, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void PutSpi(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.PutSpi(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member PutSpi : string * string -&gt; unit" Usage="abstractPreferences.PutSpi (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("putSpi", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPutSpi_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("putSpi", "(Ljava/lang/String;Ljava/lang/String;)V", "GetPutSpi_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key</param>
        <param name="value">the value</param>
        <summary>Put the given key-value association into this preference node.</summary>
        <remarks>
          <para>Put the given key-value association into this preference node.  It is
            guaranteed that <c>key</c> and <c>value</c> are non-null and of
            legal length.  Also, it is guaranteed that this node has not been
            removed.  (The implementor needn't check for any of these things.)</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#putSpi(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.putSpi(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Remove(System.String)" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; unit" Usage="abstractPreferences.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("remove", "(Ljava/lang/String;)V", "GetRemove_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("remove", "(Ljava/lang/String;)V", "GetRemove_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">key whose mapping is to be removed from the preference node.</param>
        <summary>Implements the <c>remove(String)</c> method as per the specification
            in <c>Preferences#remove(String)</c>.</summary>
        <remarks>
          <para>Implements the <c>remove(String)</c> method as per the specification
            in <c>Preferences#remove(String)</c>.</para>
          <para>This implementation obtains this preference node's lock,
            checks that the node has not been removed, invokes
            <c>#removeSpi(String)</c> and if there are any preference
            change listeners, enqueues a notification event for processing by the
            event dispatch thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#remove(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.remove(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNode">
      <MemberSignature Language="C#" Value="public override void RemoveNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.RemoveNode" />
      <MemberSignature Language="F#" Value="override this.RemoveNode : unit -&gt; unit" Usage="abstractPreferences.RemoveNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNode", "()V", "GetRemoveNodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNode", "()V", "GetRemoveNodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>removeNode()</c> method as per the specification in
            <c>Preferences#removeNode()</c>.</summary>
        <remarks>
          <para>Implements the <c>removeNode()</c> method as per the specification in
            <c>Preferences#removeNode()</c>.</para>
          <para>This implementation checks to see that this node is the root; if so,
            it throws an appropriate exception.  Then, it locks this node's parent,
            and calls a recursive helper method that traverses the subtree rooted at
            this node.  The recursive method locks the node on which it was called,
            checks that it has not already been removed, and then ensures that all
            of its children are cached: The <c>#childrenNamesSpi()</c> method is
            invoked and each returned child name is checked for containment in the
            child-cache.  If a child is not already cached, the <c>#childSpi(String)</c> method is invoked to create a <c>Preferences</c>
            instance for it, and this instance is put into the child-cache.  Then
            the helper method calls itself recursively on each node contained in its
            child-cache.  Next, it invokes <c>#removeNodeSpi()</c>, marks itself
            as removed, and removes itself from its parent's child-cache.  Finally,
            if there are any node change listeners, it enqueues a notification
            event for processing by the event dispatch thread.</para>
          <para>Note that the helper method is always invoked with all ancestors up
            to the "closest non-removed ancestor" locked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#removeNode()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.removeNode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNodeChangeListener">
      <MemberSignature Language="C#" Value="public override void RemoveNodeChangeListener (Java.Util.Prefs.INodeChangeListener? ncl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveNodeChangeListener(class Java.Util.Prefs.INodeChangeListener ncl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.RemoveNodeChangeListener(Java.Util.Prefs.INodeChangeListener)" />
      <MemberSignature Language="F#" Value="override this.RemoveNodeChangeListener : Java.Util.Prefs.INodeChangeListener -&gt; unit" Usage="abstractPreferences.RemoveNodeChangeListener ncl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetRemoveNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNodeChangeListener", "(Ljava/util/prefs/NodeChangeListener;)V", "GetRemoveNodeChangeListener_Ljava_util_prefs_NodeChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ncl" Type="Java.Util.Prefs.INodeChangeListener" />
      </Parameters>
      <Docs>
        <param name="ncl">the listener to be removed.</param>
        <summary>Removes the given <c>NodeChangeListener</c> instance from this node.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveNodeSpi">
      <MemberSignature Language="C#" Value="protected abstract void RemoveNodeSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveNodeSpi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.RemoveNodeSpi" />
      <MemberSignature Language="F#" Value="abstract member RemoveNodeSpi : unit -&gt; unit" Usage="abstractPreferences.RemoveNodeSpi " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeNodeSpi", "()V", "GetRemoveNodeSpiHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeNodeSpi", "()V", "GetRemoveNodeSpiHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes this preference node, invalidating it and any preferences that
            it contains.</summary>
        <remarks>
          <para>Removes this preference node, invalidating it and any preferences that
            it contains.  The named child will have no descendants at the time this
            invocation is made (i.e., the <c>Preferences#removeNode()</c> method
            invokes this method repeatedly in a bottom-up fashion, removing each of
            a node's descendants before removing the node itself).</para>
          <para>This method is invoked with the lock held on this node and its
            parent (and all ancestors that are being removed as a
            result of a single invocation to <c>Preferences#removeNode()</c>).</para>
          <para>The removal of a node needn't become persistent until the
            <c>flush</c> method is invoked on this node (or an ancestor).</para>
          <para>If this node throws a <c>BackingStoreException</c>, the exception
            will propagate out beyond the enclosing <c>#removeNode()</c>
            invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#removeNodeSpi()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.removeNodeSpi()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RemovePreferenceChangeListener">
      <MemberSignature Language="C#" Value="public override void RemovePreferenceChangeListener (Java.Util.Prefs.IPreferenceChangeListener? pcl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemovePreferenceChangeListener(class Java.Util.Prefs.IPreferenceChangeListener pcl) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.RemovePreferenceChangeListener(Java.Util.Prefs.IPreferenceChangeListener)" />
      <MemberSignature Language="F#" Value="override this.RemovePreferenceChangeListener : Java.Util.Prefs.IPreferenceChangeListener -&gt; unit" Usage="abstractPreferences.RemovePreferenceChangeListener pcl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removePreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetRemovePreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePreferenceChangeListener", "(Ljava/util/prefs/PreferenceChangeListener;)V", "GetRemovePreferenceChangeListener_Ljava_util_prefs_PreferenceChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcl" Type="Java.Util.Prefs.IPreferenceChangeListener" />
      </Parameters>
      <Docs>
        <param name="pcl">the listener to be removed.</param>
        <summary>Removes the given <c>PreferenceChangeListener</c> instance from this
 node.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSpi">
      <MemberSignature Language="C#" Value="protected abstract void RemoveSpi (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RemoveSpi(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.RemoveSpi(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveSpi : string -&gt; unit" Usage="abstractPreferences.RemoveSpi key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeSpi", "(Ljava/lang/String;)V", "GetRemoveSpi_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeSpi", "(Ljava/lang/String;)V", "GetRemoveSpi_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">the key</param>
        <summary>Remove the association (if any) for the specified key at this
            preference node.</summary>
        <remarks>
          <para>Remove the association (if any) for the specified key at this
            preference node.  It is guaranteed that <c>key</c> is non-null.
            Also, it is guaranteed that this node has not been removed.
            (The implementor needn't check for either of these things.)</para>
          <para>This method is invoked with the lock on this node held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#removeSpi(java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.removeSpi(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sync">
      <MemberSignature Language="C#" Value="public override void Sync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Sync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.Sync" />
      <MemberSignature Language="F#" Value="override this.Sync : unit -&gt; unit" Usage="abstractPreferences.Sync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sync", "()V", "GetSyncHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sync", "()V", "GetSyncHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implements the <c>sync</c> method as per the specification in
            <c>Preferences#sync()</c>.</summary>
        <remarks>
          <para>Implements the <c>sync</c> method as per the specification in
            <c>Preferences#sync()</c>.</para>
          <para>This implementation calls a recursive helper method that locks this
            node, invokes syncSpi() on it, unlocks this node, and recursively
            invokes this method on each "cached child."  A cached child is a child
            of this node that has been created in this VM and not subsequently
            removed.  In effect, this method does a depth first traversal of the
            "cached subtree" rooted at this node, calling syncSpi() on each node in
            the subTree while only that node is locked. Note that syncSpi() is
            invoked top-down.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#sync()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.sync()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException" />
      </Docs>
    </Member>
    <Member MemberName="SyncSpi">
      <MemberSignature Language="C#" Value="protected abstract void SyncSpi ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SyncSpi() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.SyncSpi" />
      <MemberSignature Language="F#" Value="abstract member SyncSpi : unit -&gt; unit" Usage="abstractPreferences.SyncSpi " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("syncSpi", "()V", "GetSyncSpiHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("syncSpi", "()V", "GetSyncSpiHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method is invoked with this node locked.</summary>
        <remarks>
          <para>This method is invoked with this node locked.  The contract of this
            method is to synchronize any cached preferences stored at this node
            with any stored in the backing store.  (It is perfectly possible that
            this node does not exist on the backing store, either because it has
            been deleted by another VM, or because it has not yet been created.)
            Note that this method should <i>not</i> synchronize the preferences in
            any subnodes of this node.  If the backing store naturally syncs an
            entire subtree at once, the implementer is encouraged to override
            sync(), rather than merely overriding this method.</para>
          <para>If this node throws a <c>BackingStoreException</c>, the exception
            will propagate out beyond the enclosing <c>#sync()</c> invocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#syncSpi()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.syncSpi()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.Prefs.BackingStoreException">if the backing store is unavailable or causes an operation
             failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Prefs.AbstractPreferences.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Prefs.AbstractPreferences.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Prefs.AbstractPreferences.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Prefs.AbstractPreferences.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="abstractPreferences.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "GetToStringHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the absolute path name of this preferences node.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the absolute path name of this preferences node.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/prefs/AbstractPreferences#toString()" title="Reference documentation">Java documentation for <code>java.util.prefs.AbstractPreferences.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
