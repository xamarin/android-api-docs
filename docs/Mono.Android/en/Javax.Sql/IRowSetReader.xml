<Type Name="IRowSetReader" FullName="Javax.Sql.IRowSetReader">
  <TypeSignature Language="VB.NET" Value="Public Interface IRowSetReader&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRowSetReader : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IRowSetReader : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IRowSetReader implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Javax.Sql.IRowSetReader" />
  <TypeSignature Language="F#" Value="type IRowSetReader = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("javax/sql/RowSetReader", "", "Javax.Sql.IRowSetReaderInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("javax/sql/RowSetReader", "", "Javax.Sql.IRowSetReaderInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The facility that a disconnected <c>RowSet</c> object calls on
            to populate itself with rows of data.</summary>
    <remarks>
      <para>The facility that a disconnected <c>RowSet</c> object calls on
            to populate itself with rows of data. A reader (an object implementing the
            <c>RowSetReader</c> interface) may be registered with
            a <c>RowSet</c> object that supports the reader/writer paradigm.
            When the <c>RowSet</c> object's <c>execute</c> method is
            called, it in turn calls the reader's <c>readData</c> method.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/javax/sql/RowSetReader" title="Reference documentation">Java documentation for <code>javax.sql.RowSetReader</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ReadData">
      <MemberSignature Language="VB.NET" Value="Public Sub ReadData (caller As IRowSetInternal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReadData(Javax::Sql::IRowSetInternal ^ caller);" />
      <MemberSignature Language="C#" Value="public void ReadData (Javax.Sql.IRowSetInternal? caller);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReadData(class Javax.Sql.IRowSetInternal caller) cil managed" />
      <MemberSignature Language="DocId" Value="M:Javax.Sql.IRowSetReader.ReadData(Javax.Sql.IRowSetInternal)" />
      <MemberSignature Language="F#" Value="abstract member ReadData : Javax.Sql.IRowSetInternal -&gt; unit" Usage="iRowSetReader.ReadData caller" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("readData", "(Ljavax/sql/RowSetInternal;)V", "GetReadData_Ljavax_sql_RowSetInternal_Handler:Javax.Sql.IRowSetReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("readData", "(Ljavax/sql/RowSetInternal;)V", "GetReadData_Ljavax_sql_RowSetInternal_Handler:Javax.Sql.IRowSetReaderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Javax.Sql.IRowSetInternal" />
      </Parameters>
      <Docs>
        <param name="caller">the <c>RowSet</c> object (1) that has implemented the
                    <c>RowSetInternal</c> interface, (2) with which this reader is
                   registered, and (3) whose <c>execute</c> method called this reader</param>
        <summary>Reads the new contents of the calling <c>RowSet</c> object.</summary>
        <remarks>
          <para>Reads the new contents of the calling <c>RowSet</c> object.
            In order to call this method, a <c>RowSet</c>
            object must have implemented the <c>RowSetInternal</c> interface
            and registered this <c>RowSetReader</c> object as its reader.
            The <c>readData</c>  method is invoked internally
            by the <c>RowSet.execute</c> method for rowsets that support the
            reader/writer paradigm.</para>
          <para>The <c>readData</c> method adds rows to the caller.
            It can be implemented in a wide variety of ways and can even
            populate the caller with rows from a nonrelational data source.
            In general, a reader may invoke any of the rowset's methods,
            with one exception. Calling the method <c>execute</c> will
            cause an <c>SQLException</c> to be thrown
            because <c>execute</c> may not be called recursively.  Also,
            when a reader invokes <c>RowSet</c> methods, no listeners
            are notified; that is, no <c>RowSetEvent</c> objects are
            generated and no <c>RowSetListener</c> methods are invoked.
            This is true because listeners are already being notified by the method
            <c>execute</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/javax/sql/RowSetReader#readData(javax.sql.RowSetInternal)" title="Reference documentation">Java documentation for <code>javax.sql.RowSetReader.readData(javax.sql.RowSetInternal)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Sql.SQLException">if a problem occurs accessing the database or if the reader
             calls the <see cref="M:Javax.Sql.IRowSet.Execute" /> method.</exception>
        <altmember cref="T:Javax.Sql.IRowSetInternal" />
      </Docs>
    </Member>
  </Members>
</Type>
