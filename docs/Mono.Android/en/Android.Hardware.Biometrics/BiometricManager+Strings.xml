<Type Name="BiometricManager+Strings" FullName="Android.Hardware.Biometrics.BiometricManager+Strings">
  <TypeSignature Language="VB.NET" Value="Public Class BiometricManager.Strings&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class BiometricManager::Strings : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class BiometricManager.Strings : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit BiometricManager/Strings extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Hardware.Biometrics.BiometricManager.Strings" />
  <TypeSignature Language="F#" Value="type BiometricManager.Strings = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/hardware/biometrics/BiometricManager$Strings", ApiSince=31, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/hardware/biometrics/BiometricManager$Strings", ApiSince=31, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides localized strings for an application that uses <c>BiometricPrompt</c> to
            authenticate the user.</summary>
    <remarks>
      <para>Provides localized strings for an application that uses <c>BiometricPrompt</c> to
            authenticate the user.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/hardware/biometrics/BiometricManager.Strings" title="Reference documentation">Java documentation for <code>android.hardware.biometrics.BiometricManager.Strings</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Strings(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Strings (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Hardware.Biometrics.BiometricManager.Strings.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Hardware.Biometrics.BiometricManager.Strings : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Hardware.Biometrics.BiometricManager.Strings" Usage="new Android.Hardware.Biometrics.BiometricManager.Strings (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonLabel">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ButtonLabel As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ButtonLabel { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? ButtonLabel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ButtonLabel" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.ButtonLabel" />
      <MemberSignature Language="F#" Value="member this.ButtonLabel : string" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.ButtonLabel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ButtonLabelFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ButtonLabelFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ ButtonLabelFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? ButtonLabelFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence ButtonLabelFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.ButtonLabelFormatted" />
      <MemberSignature Language="F#" Value="member this.ButtonLabelFormatted : Java.Lang.ICharSequence" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.ButtonLabelFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getButtonLabel", "()Ljava/lang/CharSequence;", "GetGetButtonLabelHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getButtonLabel", "()Ljava/lang/CharSequence;", "GetGetButtonLabelHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a localized string that can be used as the label for a button that invokes
            <c>BiometricPrompt</c>.</summary>
        <value>The label for a button that invokes <c>BiometricPrompt</c> for authentication.</value>
        <remarks>
          <para>Provides a localized string that can be used as the label for a button that invokes
            <c>BiometricPrompt</c>.</para>
          <para>When possible, this method should use the given authenticator requirements to more
            precisely specify the authentication type that will be used. For example, if
            &lt;strong&gt;Class 3&lt;/strong&gt; biometric authentication is requested on a device with a
            &lt;strong&gt;Class 3&lt;/strong&gt; fingerprint sensor and a &lt;strong&gt;Class 2&lt;/strong&gt; face sensor,
            the returned string should indicate that fingerprint authentication will be used.</para>
          <para>This method should also try to specify which authentication method(s) will be used in
            practice when multiple authenticators meet the given requirements. For example, if
            biometric authentication is requested on a device with both face and fingerprint sensors
            but the user has selected face as their preferred method, the returned string should
            indicate that face authentication will be used.</para>
          <para>This method may return <c>null</c> if none of the requested authenticator types are
            available, but this should &lt;em&gt;not&lt;/em&gt; be relied upon for checking the status of
            authenticators. Instead, use <c>#canAuthenticate(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/biometrics/BiometricManager.Strings#getButtonLabel()" title="Reference documentation">Java documentation for <code>android.hardware.biometrics.BiometricManager.Strings.getButtonLabel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptMessage">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PromptMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PromptMessage { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? PromptMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PromptMessage" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.PromptMessage" />
      <MemberSignature Language="F#" Value="member this.PromptMessage : string" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.PromptMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PromptMessageFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PromptMessageFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ PromptMessageFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? PromptMessageFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence PromptMessageFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.PromptMessageFormatted" />
      <MemberSignature Language="F#" Value="member this.PromptMessageFormatted : Java.Lang.ICharSequence" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.PromptMessageFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPromptMessage", "()Ljava/lang/CharSequence;", "GetGetPromptMessageHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPromptMessage", "()Ljava/lang/CharSequence;", "GetGetPromptMessageHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a localized string that can be shown while the user is authenticating with
            <c>BiometricPrompt</c>.</summary>
        <value>The label for a button that invokes <c>BiometricPrompt</c> for authentication.</value>
        <remarks>
          <para>Provides a localized string that can be shown while the user is authenticating with
            <c>BiometricPrompt</c>.</para>
          <para>When possible, this method should use the given authenticator requirements to more
            precisely specify the authentication type that will be used. For example, if
            &lt;strong&gt;Class 3&lt;/strong&gt; biometric authentication is requested on a device with a
            &lt;strong&gt;Class 3&lt;/strong&gt; fingerprint sensor and a &lt;strong&gt;Class 2&lt;/strong&gt; face sensor,
            the returned string should indicate that fingerprint authentication will be used.</para>
          <para>This method should also try to specify which authentication method(s) will be used in
            practice when multiple authenticators meet the given requirements. For example, if
            biometric authentication is requested on a device with both face and fingerprint sensors
            but the user has selected face as their preferred method, the returned string should
            indicate that face authentication will be used.</para>
          <para>This method may return <c>null</c> if none of the requested authenticator types are
            available, but this should &lt;em&gt;not&lt;/em&gt; be relied upon for checking the status of
            authenticators. Instead, use <c>#canAuthenticate(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/biometrics/BiometricManager.Strings#getPromptMessage()" title="Reference documentation">Java documentation for <code>android.hardware.biometrics.BiometricManager.Strings.getPromptMessage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SettingName">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SettingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SettingName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? SettingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SettingName" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.SettingName" />
      <MemberSignature Language="F#" Value="member this.SettingName : string" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.SettingName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SettingNameFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SettingNameFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ SettingNameFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? SettingNameFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence SettingNameFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.SettingNameFormatted" />
      <MemberSignature Language="F#" Value="member this.SettingNameFormatted : Java.Lang.ICharSequence" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.SettingNameFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSettingName", "()Ljava/lang/CharSequence;", "GetGetSettingNameHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSettingName", "()Ljava/lang/CharSequence;", "GetGetSettingNameHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides a localized string that can be shown as the title for an app setting that
            enables authentication with <c>BiometricPrompt</c>.</summary>
        <value>The label for a button that invokes <c>BiometricPrompt</c> for authentication.</value>
        <remarks>
          <para>Provides a localized string that can be shown as the title for an app setting that
            enables authentication with <c>BiometricPrompt</c>.</para>
          <para>When possible, this method should use the given authenticator requirements to more
            precisely specify the authentication type that will be used. For example, if
            &lt;strong&gt;Class 3&lt;/strong&gt; biometric authentication is requested on a device with a
            &lt;strong&gt;Class 3&lt;/strong&gt; fingerprint sensor and a &lt;strong&gt;Class 2&lt;/strong&gt; face sensor,
            the returned string should indicate that fingerprint authentication will be used.</para>
          <para>This method should &lt;em&gt;not&lt;/em&gt; try to specify which authentication method(s) will be
            used in practice when multiple authenticators meet the given requirements. For example,
            if biometric authentication is requested on a device with both face and fingerprint
            sensors, the returned string should indicate that either face or fingerprint
            authentication may be used, regardless of whether the user has enrolled or selected
            either as their preferred method.</para>
          <para>This method may return <c>null</c> if none of the requested authenticator types are
            supported by the system, but this should &lt;em&gt;not&lt;/em&gt; be relied upon for checking the
            status of authenticators. Instead, use <c>#canAuthenticate(int)</c> or
            <c>android.content.pm.PackageManager#hasSystemFeature(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/hardware/biometrics/BiometricManager.Strings#getSettingName()" title="Reference documentation">Java documentation for <code>android.hardware.biometrics.BiometricManager.Strings.getSettingName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Hardware.Biometrics.BiometricManager.Strings.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Hardware.Biometrics.BiometricManager.Strings.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
