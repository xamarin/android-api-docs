<Type Name="CallControl" FullName="Android.Telecom.CallControl">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CallControl&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallControl sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class CallControl : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CallControl extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Telecom.CallControl" />
  <TypeSignature Language="F#" Value="type CallControl = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/telecom/CallControl", ApiSince=34, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/telecom/CallControl", ApiSince=34, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>CallControl provides client side control of a call.</summary>
    <remarks>
      <para>CallControl provides client side control of a call.  Each Call will get an individual CallControl
            instance in which the client can alter the state of the associated call.</para>
      <para>Each method is Transactional meaning that it can succeed or fail. If a transaction succeeds,
            the <c>OutcomeReceiver#onResult</c> will be called by Telecom.  Otherwise, the
            <c>OutcomeReceiver#onError</c> is called and provides a <c>CallException</c> that details why
            the operation failed.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/telecom/CallControl" title="Reference documentation">Java documentation for <code>android.telecom.CallControl</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Answer">
      <MemberSignature Language="VB.NET" Value="Public Sub Answer (videoState As CallType, executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Answer(Android::Telecom::CallType videoState, Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void Answer (Android.Telecom.CallType videoState, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Answer(valuetype Android.Telecom.CallType videoState, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.Answer(Android.Telecom.CallType,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.Answer : Android.Telecom.CallType * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.Answer (videoState, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("answer", "(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("answer", "(ILjava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="videoState" Type="Android.Telecom.CallType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="videoState">to report to Telecom. Telecom will store VideoState in the event another
                              service/device requests it in order to continue the call on another screen.</param>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                              will be called on.</param>
        <param name="callback">that will be completed on the Telecom side that details success or failure
                              of the requested operation.
            
                              <c>OutcomeReceiver#onResult</c> will be called if Telecom has successfully
                              switched the call state to active
            
                              <c>OutcomeReceiver#onError</c> will be called if Telecom has failed to set
                              the call state to active.  A <c>CallException</c> will be passed
                              that details why the operation failed.</param>
        <summary>Request Telecom answer an incoming call.</summary>
        <remarks>
          <para>Request Telecom answer an incoming call.  For outgoing calls and calls that have been placed
            on hold, use <c>CallControl#setActive(Executor, OutcomeReceiver)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#answer(int,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.answer(int, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallId">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallId As ParcelUuid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::OS::ParcelUuid ^ CallId { Android::OS::ParcelUuid ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.OS.ParcelUuid CallId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.ParcelUuid CallId" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.CallControl.CallId" />
      <MemberSignature Language="F#" Value="member this.CallId : Android.OS.ParcelUuid" Usage="Android.Telecom.CallControl.CallId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallId", "()Landroid/os/ParcelUuid;", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallId", "()Landroid/os/ParcelUuid;", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelUuid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>the callId Telecom assigned to this CallControl object which should be attached to
            an individual call.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#getCallId()" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.getCallId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="VB.NET" Value="Public Sub Disconnect (disconnectCause As DisconnectCause, executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Disconnect(Android::Telecom::DisconnectCause ^ disconnectCause, Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void Disconnect (Android.Telecom.DisconnectCause disconnectCause, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect(class Android.Telecom.DisconnectCause disconnectCause, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.Disconnect(Android.Telecom.DisconnectCause,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.Disconnect : Android.Telecom.DisconnectCause * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.Disconnect (disconnectCause, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("disconnect", "(Landroid/telecom/DisconnectCause;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("disconnect", "(Landroid/telecom/DisconnectCause;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disconnectCause" Type="Android.Telecom.DisconnectCause" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="disconnectCause">represents the cause for disconnecting the call.  The only valid
                                   codes for the <c>android.telecom.DisconnectCause</c> passed in are:
                                   &lt;ul&gt;
                                   &lt;li&gt;<c>DisconnectCause#LOCAL</c>&lt;/li&gt;
                                   &lt;li&gt;<c>DisconnectCause#REMOTE</c>&lt;/li&gt;
                                   &lt;li&gt;<c>DisconnectCause#REJECTED</c>&lt;/li&gt;
                                   &lt;li&gt;<c>DisconnectCause#MISSED</c>&lt;/li&gt;
                                   &lt;/ul&gt;</param>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                                   will be called on.</param>
        <param name="callback">That will be completed on the Telecom side that details success or
                                   failure of the requested operation.
            
                                   <c>OutcomeReceiver#onResult</c> will be called if Telecom has
                                   successfully disconnected the call.
            
                                   <c>OutcomeReceiver#onError</c> will be called if Telecom has failed
                                   to disconnect the call.  A <c>CallException</c> will be passed
                                   that details why the operation failed.
            
            &lt;p&gt;
            Note: After the call has been successfully disconnected, calling any CallControl API will
            result in the <c>OutcomeReceiver#onError</c> with
            <c>CallException#CODE_CALL_IS_NOT_BEING_TRACKED</c>.</param>
        <summary>Request Telecom disconnect the call and remove the call from telecom tracking.</summary>
        <remarks>
          <para>Request Telecom disconnect the call and remove the call from telecom tracking.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#disconnect(android.telecom.DisconnectCause,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.disconnect(android.telecom.DisconnectCause, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.CallControl.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Telecom.CallControl.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestCallEndpointChange">
      <MemberSignature Language="VB.NET" Value="Public Sub RequestCallEndpointChange (callEndpoint As CallEndpoint, executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequestCallEndpointChange(Android::Telecom::CallEndpoint ^ callEndpoint, Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void RequestCallEndpointChange (Android.Telecom.CallEndpoint callEndpoint, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequestCallEndpointChange(class Android.Telecom.CallEndpoint callEndpoint, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.RequestCallEndpointChange(Android.Telecom.CallEndpoint,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.RequestCallEndpointChange : Android.Telecom.CallEndpoint * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.RequestCallEndpointChange (callEndpoint, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestCallEndpointChange", "(Landroid/telecom/CallEndpoint;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestCallEndpointChange", "(Landroid/telecom/CallEndpoint;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callEndpoint" Type="Android.Telecom.CallEndpoint" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="callEndpoint">The <c>CallEndpoint</c> to change to.</param>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                                will be called on.</param>
        <param name="callback">The <c>OutcomeReceiver</c> that will be completed on the Telecom side
                                that details success or failure of the requested operation.
            
                                <c>OutcomeReceiver#onResult</c> will be called if Telecom has
                                successfully changed the CallEndpoint that was requested.
            
                                <c>OutcomeReceiver#onError</c> will be called if Telecom has failed to
                                switch to the requested CallEndpoint.  A <c>CallException</c> will be
                                passed that details why the operation failed.</param>
        <summary>Request a CallEndpoint change.</summary>
        <remarks>
          <para>Request a CallEndpoint change. Clients should not define their own CallEndpoint when
            requesting a change. Instead, the new endpoint should be one of the valid endpoints provided
            by <c>CallEventCallback#onAvailableCallEndpointsChanged(List)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#requestCallEndpointChange(android.telecom.CallEndpoint,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.requestCallEndpointChange(android.telecom.CallEndpoint, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendEvent">
      <MemberSignature Language="VB.NET" Value="Public Sub SendEvent (e As String, extras As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendEvent(System::String ^ e, Android::OS::Bundle ^ extras);" />
      <MemberSignature Language="C#" Value="public void SendEvent (string e, Android.OS.Bundle extras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendEvent(string e, class Android.OS.Bundle extras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.SendEvent(System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.SendEvent : string * Android.OS.Bundle -&gt; unit" Usage="callControl.SendEvent (e, extras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sendEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sendEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.String" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="event">a string event identifier agreed upon between a VoIP application and an
                         <c>android.telecom.InCallService</c></param>
        <param name="extras">a <c>android.os.Bundle</c> containing information about the event, as agreed
                         upon between a VoIP application and <c>android.telecom.InCallService</c>.</param>
        <summary>Raises an event to the <c>android.telecom.InCallService</c> implementations tracking this
            call via <c>android.telecom.Call.Callback#onConnectionEvent(Call, String, Bundle)</c>.</summary>
        <remarks>
          <para>Raises an event to the <c>android.telecom.InCallService</c> implementations tracking this
            call via <c>android.telecom.Call.Callback#onConnectionEvent(Call, String, Bundle)</c>.
            These events and the associated extra keys for the <c>Bundle</c> parameter are mutually
            defined by a VoIP application and <c>android.telecom.InCallService</c>. This API is used to
            relay additional information about a call other than what is specified in the
            <c>android.telecom.CallAttributes</c> to <c>android.telecom.InCallService</c>s. This might
            include, for example, a change to the list of participants in a meeting, or the name of the
            speakers who have their hand raised. Where appropriate, the <c>InCallService</c>s tracking
            this call may choose to render this additional information about the call. An automotive
            calling UX, for example may have enough screen real estate to indicate the number of
            participants in a meeting, but to prevent distractions could suppress the list of
            participants.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#sendEvent(java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.sendEvent(java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetActive">
      <MemberSignature Language="VB.NET" Value="Public Sub SetActive (executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetActive(Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void SetActive (Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetActive(class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.SetActive(Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.SetActive : Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.SetActive (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setActive", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setActive", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                            will be called on.</param>
        <param name="callback">that will be completed on the Telecom side that details success or failure
                            of the requested operation.
            
                            <c>OutcomeReceiver#onResult</c> will be called if Telecom has successfully
                            switched the call state to active
            
                            <c>OutcomeReceiver#onError</c> will be called if Telecom has failed to set
                            the call state to active.  A <c>CallException</c> will be passed
                            that details why the operation failed.</param>
        <summary>Request Telecom set the call state to active.</summary>
        <remarks>
          <para>Request Telecom set the call state to active. This method should be called when either an
            outgoing call is ready to go active or a held call is ready to go active again. For incoming
            calls that are ready to be answered, use
            <c>CallControl#answer(int, Executor, OutcomeReceiver)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#setActive(java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.setActive(java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInactive">
      <MemberSignature Language="VB.NET" Value="Public Sub SetInactive (executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInactive(Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void SetInactive (Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInactive(class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.SetInactive(Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.SetInactive : Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.SetInactive (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInactive", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInactive", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                            will be called on.</param>
        <param name="callback">that will be completed on the Telecom side that details success or failure
                            of the requested operation.
            
                            <c>OutcomeReceiver#onResult</c> will be called if Telecom has successfully
                            switched the call state to inactive
            
                            <c>OutcomeReceiver#onError</c> will be called if Telecom has failed to set
                            the call state to inactive.  A <c>CallException</c> will be passed
                            that details why the operation failed.</param>
        <summary>Request Telecom set the call state to inactive.</summary>
        <remarks>
          <para>Request Telecom set the call state to inactive. This the same as hold for two call endpoints
            but can be extended to setting a meeting to inactive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#setInactive(java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.setInactive(java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartCallStreaming">
      <MemberSignature Language="VB.NET" Value="Public Sub StartCallStreaming (executor As IExecutor, callback As IOutcomeReceiver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartCallStreaming(Java::Util::Concurrent::IExecutor ^ executor, Android::OS::IOutcomeReceiver ^ callback);" />
      <MemberSignature Language="C#" Value="public void StartCallStreaming (Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartCallStreaming(class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.CallControl.StartCallStreaming(Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.StartCallStreaming : Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="callControl.StartCallStreaming (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startCallStreaming", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startCallStreaming", "(Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="executor">The <c>Executor</c> on which the <c>OutcomeReceiver</c> callback
                            will be called on.</param>
        <param name="callback">that will be completed on the Telecom side that details success or failure
                            of the requested operation.
            
                            <c>OutcomeReceiver#onResult</c> will be called if Telecom has successfully
                            started the call streaming.
            
                            <c>OutcomeReceiver#onError</c> will be called if Telecom has failed to
                            start the call streaming. A <c>CallException</c> will be passed that
                            details why the operation failed.</param>
        <summary>Request start a call streaming session.</summary>
        <remarks>
          <para>Request start a call streaming session. On receiving valid request, telecom will bind to
            the <c>CallStreamingService</c> implemented by a general call streaming sender. So that the
            call streaming sender can perform streaming local device audio to another remote device and
            control the call during streaming.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/CallControl#startCallStreaming(java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.telecom.CallException%3E)" title="Reference documentation">Java documentation for <code>android.telecom.CallControl.startCallStreaming(java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.telecom.CallException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.CallControl.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Telecom.CallControl.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.CallControl.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Telecom.CallControl.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
