<Type Name="ConnectionService" FullName="Android.Telecom.ConnectionService">
  <TypeSignature Language="C#" Value="public abstract class ConnectionService : Android.App.Service" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionService extends Android.App.Service" />
  <TypeSignature Language="DocId" Value="T:Android.Telecom.ConnectionService" />
  <TypeSignature Language="F#" Value="type ConnectionService = class&#xA;    inherit Service" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.App.Service</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/telecom/ConnectionService", ApiSince=23, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/telecom/ConnectionService", ApiSince=23, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>An abstract service that should be implemented by any apps which either:
            &lt;ol&gt;
                &lt;li&gt;Can make phone calls (VoIP or otherwise) and want those calls to be integrated into the
                built-in phone app.</summary>
    <remarks>
      <para>An abstract service that should be implemented by any apps which either:
            &lt;ol&gt;
                &lt;li&gt;Can make phone calls (VoIP or otherwise) and want those calls to be integrated into the
                built-in phone app.  Referred to as a &lt;b&gt;system managed&lt;/b&gt; <c>ConnectionService</c>.&lt;/li&gt;
                &lt;li&gt;Are a standalone calling app and don't want their calls to be integrated into the
                built-in phone app.  Referred to as a &lt;b&gt;self managed&lt;/b&gt; <c>ConnectionService</c>.&lt;/li&gt;
            &lt;/ol&gt;
            Once implemented, the <c>ConnectionService</c> needs to take the following steps so that Telecom
            will bind to it:</para>
      <para>1. <i>Registration in AndroidManifest.xml</i>&lt;br/&gt;</para>
      <code lang="text/java">&amp;lt;service android:name="com.example.package.MyConnectionService"
               android:label="@string/some_label_for_my_connection_service"
               android:permission="android.permission.BIND_TELECOM_CONNECTION_SERVICE"&amp;gt;
             &amp;lt;intent-filter&amp;gt;
              &amp;lt;action android:name="android.telecom.ConnectionService" /&amp;gt;
             &amp;lt;/intent-filter&amp;gt;
            &amp;lt;/service&amp;gt;
            </code>
      <para>2. <i> Registration of <c>PhoneAccount</c> with <c>TelecomManager</c>.</i>&lt;br/&gt;
            See <c>PhoneAccount</c> and <c>TelecomManager#registerPhoneAccount</c> for more information.</para>
      <para>System managed <c>ConnectionService</c>s must be enabled by the user in the phone app settings
            before Telecom will bind to them.  Self-managed <c>ConnectionService</c>s must declare the
            <c>android.Manifest.permission#MANAGE_OWN_CALLS</c> permission in their manifest before Telecom
            will bind to them.</para>
      <para>Once registered and enabled by the user in the phone app settings or granted permission, telecom
            will bind to a <c>ConnectionService</c> implementation when it wants that
            <c>ConnectionService</c> to place a call or the service has indicated that is has an incoming
            call through <c>TelecomManager#addNewIncomingCall(PhoneAccountHandle, Bundle)</c>. The
            <c>ConnectionService</c> can then expect a call to
            <c>#onCreateIncomingConnection(PhoneAccountHandle, ConnectionRequest)</c> or
            <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>
            wherein it should provide a new instance of a <c>Connection</c> object.  It is through this
            <c>Connection</c> object that telecom receives state updates and the <c>ConnectionService</c>
            receives call-commands such as answer, reject, hold and disconnect.</para>
      <para>When there are no more live calls, telecom will unbind from the <c>ConnectionService</c>.</para>
      <para>&lt;h1&gt;Self-Managed Connection Services&lt;/h1&gt;
            A VoIP app can implement a <c>ConnectionService</c> to ensure that its calls are integrated
            into the Android platform.  There are numerous benefits to using the Telecom APIs for a VoIP app:
            &lt;ul&gt;
                &lt;li&gt;Call concurrency is handled - the user is able to swap between calls in different
                apps and on the mobile network.&lt;/li&gt;
                &lt;li&gt;Simplified audio routing - the platform provides your app with a unified list of the
                audio routes which are available
                (e.g. <c>android.telecom.Connection#onAvailableCallEndpointsChanged(List)</c>) and a
                standardized way to switch audio routes
                (e.g. <c>android.telecom.Connection#requestCallEndpointChange(CallEndpoint, Executor,
                OutcomeReceiver)</c> ).&lt;/li&gt;
                &lt;li&gt;Bluetooth integration - your calls will be visible on and controllable via
                bluetooth devices (e.g. car head units and headsets).&lt;/li&gt;
                &lt;li&gt;Companion device integration - wearable devices such as watches which implement an
                <c>InCallService</c> can optionally subscribe to see self-managed calls.  Similar to a
                bluetooth headunit, wearables will typically render your call using a generic call UX and
                provide the user with basic call controls such as hangup, answer, reject.&lt;/li&gt;
                &lt;li&gt;Automotive calling experiences - Android supports automotive optimized experiences which
                provides a means for calls to be controlled and viewed in an automobile; these experiences
                are capable of leveraging call metadata provided by your app.&lt;/li&gt;
            &lt;/ul&gt;
            &lt;h2&gt;Registering a Phone Account&lt;/h2&gt;
            Before your app can handle incoming or outgoing calls through Telecom it needs to register a
            <c>PhoneAccount</c> with Telecom indicating to the platform that your app is capable of calling.</para>
      <para>Your app should create a new instance of <c>PhoneAccount</c> which meets the following
            requirements:
            &lt;ul&gt;
                &lt;li&gt;Has <c>PhoneAccount#CAPABILITY_SELF_MANAGED</c> (set using
                <c>PhoneAccount.Builder#setCapabilities(int)</c>).  This indicates to Telecom that your
                app will report calls but that it provides a primary UI for the calls by itself.&lt;/li&gt;
                &lt;li&gt;Provide a unique identifier for the <c>PhoneAccount</c> via the
                <c>PhoneAccountHandle#getId()</c> attribute.  As per the <c>PhoneAccountHandle</c>
                documentation, you should NOT use an identifier which contains PII or other sensitive
                information.  A typical choice is a UUID.&lt;/li&gt;
            &lt;/ul&gt;
            Your app should register the new <c>PhoneAccount</c> with Telecom using
            <c>TelecomManager#registerPhoneAccount(PhoneAccount)</c>.  <c>PhoneAccount</c>s persist across
            reboot.  You can use <c>TelecomManager#getOwnSelfManagedPhoneAccounts()</c> to confirm the
            <c>PhoneAccount</c> you registered.  Your app should generally only register a single
            <c>PhoneAccount</c>.
            
            &lt;h2&gt;Implementing ConnectionService&lt;/h2&gt;
            Your app uses <c>TelecomManager#placeCall(Uri, Bundle)</c> to start new outgoing calls and
            <c>TelecomManager#addNewIncomingCall(PhoneAccountHandle, Bundle)</c> to report new incoming
            calls.  Calling these APIs causes the Telecom stack to bind to your app's
            <c>ConnectionService</c> implementation.  Telecom will either inform your app that it cannot
            handle a call request at the current time (i.e. there could be an ongoing emergency call, which
            means your app is not allowed to handle calls at the current time), or it will ask your app to
            create a new instance of <c>Connection</c> to represent a call in your app.
            
            Your app should implement the following <c>ConnectionService</c> methods:
            &lt;ul&gt;
                &lt;li&gt;<c>ConnectionService#onCreateOutgoingConnection(PhoneAccountHandle,
                ConnectionRequest)</c> - called by Telecom to ask your app to make a new <c>Connection</c>
                to represent an outgoing call your app requested via
                <c>TelecomManager#placeCall(Uri, Bundle)</c>.&lt;/li&gt;
                &lt;li&gt;&lt;<c>ConnectionService#onCreateOutgoingConnectionFailed(PhoneAccountHandle,
                ConnectionRequest)</c> - called by Telecom to inform your app that a call it reported via
                <c>TelecomManager#placeCall(Uri, Bundle)</c> cannot be handled at this time.  Your app
                should NOT place a call at the current time.&lt;/li&gt;
                &lt;li&gt;<c>ConnectionService#onCreateIncomingConnection(PhoneAccountHandle,
                ConnectionRequest)</c> - called by Telecom to ask your app to make a new <c>Connection</c>
                to represent an incoming call your app reported via
                <c>TelecomManager#addNewIncomingCall(PhoneAccountHandle, Bundle)</c>.&lt;/li&gt;
                &lt;li&gt;<c>ConnectionService#onCreateIncomingConnectionFailed(PhoneAccountHandle,
                ConnectionRequest)</c> - called by Telecom to inform your app that an incoming call it reported
                via <c>TelecomManager#addNewIncomingCall(PhoneAccountHandle, Bundle)</c> cannot be handled
                at this time.  Your app should NOT post a new incoming call notification and should silently
                reject the call.&lt;/li&gt;
            &lt;/ul&gt;
            
            &lt;h2&gt;Implementing a Connection&lt;/h2&gt;
            Your app should extend the <c>Connection</c> class to represent calls in your app.  When you
            create new instances of your <c>Connection</c>, you should ensure the following properties are
            set on the new <c>Connection</c> instance returned by your <c>ConnectionService</c>:
            &lt;ul&gt;
                &lt;li&gt;<c>Connection#setAddress(Uri, int)</c> - the identifier for the other party.  For
                apps that user phone numbers the <c>Uri</c> can be a <c>PhoneAccount#SCHEME_TEL</c> URI
                representing the phone number.&lt;/li&gt;
                &lt;li&gt;<c>Connection#setCallerDisplayName(String, int)</c> - the display name of the other
                party.  This is what will be shown on Bluetooth devices and other calling surfaces such
                as wearable devices.  This is particularly important for calls that do not use a phone
                number to identify the caller or called party.&lt;/li&gt;
                &lt;li&gt;<c>Connection#setConnectionProperties(int)</c> - ensure you set
                <c>Connection#PROPERTY_SELF_MANAGED</c> to identify to the platform that the call is
                handled by your app.&lt;/li&gt;
                &lt;li&gt;<c>Connection#setConnectionCapabilities(int)</c> - if your app supports making calls
                inactive (i.e. holding calls) you should get <c>Connection#CAPABILITY_SUPPORT_HOLD</c> and
                <c>Connection#CAPABILITY_HOLD</c> to indicate to the platform that you calls can potentially
                be held for concurrent calling scenarios.&lt;/li&gt;
                &lt;li&gt;<c>Connection#setAudioModeIsVoip(boolean)</c> - set to <c>true</c> to ensure that the
                platform knows your call is a VoIP call.&lt;/li&gt;
                &lt;li&gt;For newly created <c>Connection</c> instances, do NOT change the state of your call
                using <c>Connection#setActive()</c>, <c>Connection#setOnHold()</c> until the call is added
                to Telecom (ie you have returned it via
                <c>ConnectionService#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>
                or
                <c>ConnectionService#onCreateIncomingConnection(PhoneAccountHandle, ConnectionRequest)</c>).
                &lt;/li&gt;
            &lt;/ul&gt;
            
            &lt;h2&gt;How to Place Outgoing Calls&lt;/h2&gt;
            When your app wants to place an outgoing call it calls
            <c>TelecomManager#placeCall(Uri, Bundle)</c>.  You should specify a <c>Uri</c> to identify
            who the call is being placed to, and specify the <c>PhoneAccountHandle</c> associated with the
            <c>PhoneAccount</c> you registered for your app using
            <c>TelecomManager#EXTRA_PHONE_ACCOUNT_HANDLE</c> in the <c>Bundle</c> parameter.</para>
      <para>Telecom will bind to your app's <c>ConnectionService</c> implementation and call either:
            &lt;ul&gt;
                &lt;li&gt;<c>ConnectionService#onCreateOutgoingConnection(PhoneAccountHandle,
                ConnectionRequest)</c> - the <c>ConnectionRequest#getAddress()</c> will match the address
                you specified when placing the call.  You should return a new instance of your app's
                <c>Connection</c> class to represent the outgoing call.&lt;/li&gt;
                &lt;li&gt;<c>ConnectionService#onCreateOutgoingConnectionFailed(PhoneAccountHandle,
                ConnectionRequest)</c> - your app should not place the call at this time; the call should be
                cancelled and the user informed that the call cannot be placed.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>New outgoing calls will start in a <c>Connection#STATE_DIALING</c> state.  This state indicates
            that your app is in the process of connecting the call to the other party.</para>
      <para>Once the other party answers the call (or it is set up successfully), your app should call
            <c>Connection#setActive()</c> to inform Telecom that the call is now active.
            
            &lt;h2&gt;How to Add Incoming Calls&lt;/h2&gt;
            When your app receives an incoming call, it should call
            <c>TelecomManager#addNewIncomingCall(PhoneAccountHandle, Bundle)</c>.  Set the
            <c>PhoneAccountHandle</c> parameter to the <c>PhoneAccountHandle</c> associated with your
            app's <c>PhoneAccount</c>.</para>
      <para>Telecom will bind to your app's <c>ConnectionService</c> implementation and call either:
            &lt;ul&gt;
                &lt;li&gt;<c>ConnectionService#onCreateIncomingConnection(PhoneAccountHandle,
                ConnectionRequest)</c> - You should return a new instance of your app's
                <c>Connection</c> class to represent the incoming call.&lt;/li&gt;
                &lt;li&gt;<c>ConnectionService#onCreateIncomingConnectionFailed(PhoneAccountHandle,
                ConnectionRequest)</c> - your app should not receive the call at this time; the call should be
                rejected silently; the user may be informed of a missed call.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>New incoming calls will start with a <c>Connection#STATE_RINGING</c> state.  This state
            indicates that your app has a new incoming call pending.  Telecom will NOT play a ringtone or
            post a notification for your app.  It is up to your app to post an incoming call notification
            with an associated ringtone.  Telecom will call <c>Connection#onShowIncomingCallUi()</c> on the
            <c>Connection</c> when your app can post its incoming call notification.  See
            <c>Connection#onShowIncomingCallUi() the docs</c> for more information on how to post the
            notification.</para>
      <para>Your incoming call notification (or full screen UI) will typically have an "answer" and "decline"
            action which the user chooses.  When your app receives the "answer" or "decline"
            <c>android.app.PendingIntent</c>, you should must call either <c>Connection#setActive()</c> to
            inform Telecom that the call was answered, or
            <c>Connection#setDisconnected(DisconnectCause)</c> to inform Telecom that the call was rejected.
            If the call was rejected, supply an instance of <c>DisconnectCause</c> with
            <c>DisconnectCause#REJECTED</c>, and then call <c>Connection#destroy()</c>.</para>
      <para>In addition to handling requests to answer or decline the call via notification actions, your
            app should also be implement the <c>Connection#onAnswer(int)</c> and
            <c>Connection#onAnswer()</c> methods on the <c>Connection</c>.  These will be raised if the
            user answers your call via a Bluetooth device or another device like a wearable or automotive
            calling UX.  In response, your app should call <c>Connection#setActive()</c> to inform Telecom
            that the call was answered.</para>
      <para>Additionally, your app should implement <c>Connection#onReject()</c> to handle requests to
            reject the call which are raised via Bluetooth or other calling surfaces.  Your app should call
            <c>Connection#setDisconnected(DisconnectCause)</c> and supply an instance of
            <c>DisconnectCause</c> with <c>DisconnectCause#REJECTED</c> in this case.
            
            &lt;h2&gt;Ending Calls&lt;/h2&gt;
            When an ongoing active call (incoming or outgoing) has ended, your app is responsible for
            informing Telecom that the call ended.</para>
      <para>Your app calls:
            &lt;ul&gt;
                &lt;li&gt;<c>Connection#setDisconnected(DisconnectCause)</c> - this informs Telecom that the
                call has terminated.  You should provide a new instance of <c>DisconnectCause</c> with
                either <c>DisconnectCause#LOCAL</c> or <c>DisconnectCause#REMOTE</c> to indicate where the
                call disconnection took place.  <c>DisconnectCause#LOCAL</c> indicates that the call
                terminated in your app on the current device (i.e. via user action), where
                <c>DisconnectCause#REMOTE</c> indicates that the call terminates on the remote device.&lt;/li&gt;
                &lt;li&gt;<c>Connection#destroy()</c> - this informs Telecom that your call instance can be
                cleaned up.  You should always call this when you are finished with a call.&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>Similar to answering incoming calls, requests to disconnect your call may originate from outside
            your app.  You can handle these by implementing <c>Connection#onDisconnect()</c>.  Your app
            should call <c>Connection#setDisconnected(DisconnectCause)</c> with an instance of
            <c>DisconnectCause</c> and reason <c>DisconnectCause#LOCAL</c> to indicate to Telecom that your
            app has disconnected the call as requested based on the user's request.
            
            &lt;h2&gt;Holding and Unholding Calls&lt;/h2&gt;
            When your app specifies <c>Connection#CAPABILITY_SUPPORT_HOLD</c> and
            <c>Connection#CAPABILITY_HOLD</c> on your <c>Connection</c> instance, it is telling Telecom
            that your calls can be placed into a suspended, or "held" state if required.  If your app
            supports holding its calls, it will be possible for the user to switch between calls in your app
            and holdable calls in another app or on the mobile network.  If your app does not support
            holding its calls, you may receive a request to disconnect the call from Telecom if the user
            opts to answer an incoming call in another app or on the mobile network; this ensures that the
            user can only be in one call at a time.</para>
      <para>Your app is free to change a call between the held and active state using
            <c>Connection#setOnHold()</c> and <c>Connection#setActive()</c>.</para>
      <para>Your app may receive a request from Telecom to hold or unhold a call via
            <c>Connection#onHold()</c> and <c>Connection#onUnhold()</c>.  Telecom can ask your app to
            hold or unhold its <c>Connection</c> either if the user requests this action through another
            calling surface such as Bluetooth, or if the user answers or switches to a call in a different
            app or on the mobile network.</para>
      <para>When your app receives an <c>Connection#onHold()</c> it must call <c>Connection#setOnHold()</c>
            to inform Telecom that the call has been held successfully.</para>
      <para>When your app receives an <c>Connection#onUnhold()</c> it must call
            <c>Connection#setActive()</c> to inform Telecom that the call has been resumed successfully.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/telecom/ConnectionService" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConnectionService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConnectionService (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Telecom.ConnectionService : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Telecom.ConnectionService" Usage="new Android.Telecom.ConnectionService (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConference">
      <MemberSignature Language="C#" Value="public void AddConference (Android.Telecom.Conference? conference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConference(class Android.Telecom.Conference conference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.AddConference(Android.Telecom.Conference)" />
      <MemberSignature Language="F#" Value="member this.AddConference : Android.Telecom.Conference -&gt; unit" Usage="connectionService.AddConference conference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addConference", "(Landroid/telecom/Conference;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addConference", "(Landroid/telecom/Conference;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conference" Type="Android.Telecom.Conference" />
      </Parameters>
      <Docs>
        <param name="conference">The new conference object.</param>
        <summary>Adds a new conference call.</summary>
        <remarks>
          <para>Adds a new conference call. When a conference call is created either as a result of an
            explicit request via <c>#onConference</c> or otherwise, the connection service should supply
            an instance of <c>Conference</c> by invoking this method. A conference call provided by this
            method will persist until <c>Conference#destroy</c> is invoked on the conference instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#addConference(android.telecom.Conference)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.addConference(android.telecom.Conference)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddExistingConnection">
      <MemberSignature Language="C#" Value="public void AddExistingConnection (Android.Telecom.PhoneAccountHandle? phoneAccountHandle, Android.Telecom.Connection? connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddExistingConnection(class Android.Telecom.PhoneAccountHandle phoneAccountHandle, class Android.Telecom.Connection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.AddExistingConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.Connection)" />
      <MemberSignature Language="F#" Value="member this.AddExistingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.Connection -&gt; unit" Usage="connectionService.AddExistingConnection (phoneAccountHandle, connection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addExistingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/Connection;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addExistingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/Connection;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phoneAccountHandle" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="connection" Type="Android.Telecom.Connection" />
      </Parameters>
      <Docs>
        <param name="phoneAccountHandle">The phone account handle for the connection.</param>
        <param name="connection">The connection to add.</param>
        <summary>Adds a connection created by the <c>ConnectionService</c> and informs telecom of the new
            connection.</summary>
        <remarks>
          <para>Adds a connection created by the <c>ConnectionService</c> and informs telecom of the new
            connection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#addExistingConnection(android.telecom.PhoneAccountHandle,%20android.telecom.Connection)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.addExistingConnection(android.telecom.PhoneAccountHandle, android.telecom.Connection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllConferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Android.Telecom.Conference&gt;? AllConferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Android.Telecom.Conference&gt; AllConferences" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.ConnectionService.AllConferences" />
      <MemberSignature Language="F#" Value="member this.AllConferences : System.Collections.Generic.ICollection&lt;Android.Telecom.Conference&gt;" Usage="Android.Telecom.ConnectionService.AllConferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllConferences", "()Ljava/util/Collection;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllConferences", "()Ljava/util/Collection;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Android.Telecom.Conference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns all the active <c>Conference</c>s for which this <c>ConnectionService</c>
            has taken responsibility.</summary>
        <value>A collection of <c>Conference</c>s created by this <c>ConnectionService</c>.</value>
        <remarks>
          <para>Returns all the active <c>Conference</c>s for which this <c>ConnectionService</c>
            has taken responsibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#getAllConferences()" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.getAllConferences()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllConnections">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Android.Telecom.Connection&gt;? AllConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Android.Telecom.Connection&gt; AllConnections" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.ConnectionService.AllConnections" />
      <MemberSignature Language="F#" Value="member this.AllConnections : System.Collections.Generic.ICollection&lt;Android.Telecom.Connection&gt;" Usage="Android.Telecom.ConnectionService.AllConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllConnections", "()Ljava/util/Collection;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllConnections", "()Ljava/util/Collection;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Android.Telecom.Connection&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns all the active <c>Connection</c>s for which this <c>ConnectionService</c>
            has taken responsibility.</summary>
        <value>A collection of <c>Connection</c>s created by this <c>ConnectionService</c>.</value>
        <remarks>
          <para>Returns all the active <c>Connection</c>s for which this <c>ConnectionService</c>
            has taken responsibility.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#getAllConnections()" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.getAllConnections()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConferenceRemoteConnections">
      <MemberSignature Language="C#" Value="public void ConferenceRemoteConnections (Android.Telecom.RemoteConnection? remoteConnection1, Android.Telecom.RemoteConnection? remoteConnection2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConferenceRemoteConnections(class Android.Telecom.RemoteConnection remoteConnection1, class Android.Telecom.RemoteConnection remoteConnection2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.ConferenceRemoteConnections(Android.Telecom.RemoteConnection,Android.Telecom.RemoteConnection)" />
      <MemberSignature Language="F#" Value="member this.ConferenceRemoteConnections : Android.Telecom.RemoteConnection * Android.Telecom.RemoteConnection -&gt; unit" Usage="connectionService.ConferenceRemoteConnections (remoteConnection1, remoteConnection2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("conferenceRemoteConnections", "(Landroid/telecom/RemoteConnection;Landroid/telecom/RemoteConnection;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("conferenceRemoteConnections", "(Landroid/telecom/RemoteConnection;Landroid/telecom/RemoteConnection;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteConnection1" Type="Android.Telecom.RemoteConnection" />
        <Parameter Name="remoteConnection2" Type="Android.Telecom.RemoteConnection" />
      </Parameters>
      <Docs>
        <param name="remoteConnection1">The first of the remote connections to conference.</param>
        <param name="remoteConnection2">The second of the remote connections to conference.</param>
        <summary>Indicates to the relevant <c>RemoteConnectionService</c> that the specified
            <c>RemoteConnection</c>s should be merged into a conference call.</summary>
        <remarks>
          <para>Indicates to the relevant <c>RemoteConnectionService</c> that the specified
            <c>RemoteConnection</c>s should be merged into a conference call.</para>
          <para>If the conference request is successful, the method <c>#onRemoteConferenceAdded</c> will
            be invoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#conferenceRemoteConnections(android.telecom.RemoteConnection,%20android.telecom.RemoteConnection)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.conferenceRemoteConnections(android.telecom.RemoteConnection, android.telecom.RemoteConnection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionServiceFocusReleased">
      <MemberSignature Language="C#" Value="public void ConnectionServiceFocusReleased ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ConnectionServiceFocusReleased() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.ConnectionServiceFocusReleased" />
      <MemberSignature Language="F#" Value="member this.ConnectionServiceFocusReleased : unit -&gt; unit" Usage="connectionService.ConnectionServiceFocusReleased " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connectionServiceFocusReleased", "()V", "", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connectionServiceFocusReleased", "()V", "", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call to inform Telecom that your <c>ConnectionService</c> has released call resources (e.</summary>
        <remarks>
          <para>Call to inform Telecom that your <c>ConnectionService</c> has released call resources (e.g
            microphone, camera).</para>
          <para>The <c>ConnectionService</c> will be disconnected when it failed to call this method within
            5 seconds after <c>#onConnectionServiceFocusLost()</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#connectionServiceFocusReleased()" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.connectionServiceFocusReleased()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteIncomingConference">
      <MemberSignature Language="C#" Value="public Android.Telecom.RemoteConference? CreateRemoteIncomingConference (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Telecom.RemoteConference CreateRemoteIncomingConference(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.CreateRemoteIncomingConference(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="member this.CreateRemoteIncomingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.RemoteConference" Usage="connectionService.CreateRemoteIncomingConference (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createRemoteIncomingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConference;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createRemoteIncomingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConference;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.RemoteConference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                     <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the incoming conference call.</param>
        <summary>Ask some other <c>ConnectionService</c> to create a <c>RemoteConference</c> given an
            incoming request.</summary>
        <returns>The <c>RemoteConference</c> object to satisfy this call, or <c>null</c> to not
                    handle the call.</returns>
        <remarks>
          <para>Ask some other <c>ConnectionService</c> to create a <c>RemoteConference</c> given an
            incoming request. This is used by <c>ConnectionService</c>s that are registered with
            <c>PhoneAccount#CAPABILITY_ADHOC_CONFERENCE_CALLING</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#createRemoteIncomingConference(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.createRemoteIncomingConference(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteIncomingConnection">
      <MemberSignature Language="C#" Value="public Android.Telecom.RemoteConnection? CreateRemoteIncomingConnection (Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Telecom.RemoteConnection CreateRemoteIncomingConnection(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.CreateRemoteIncomingConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="member this.CreateRemoteIncomingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.RemoteConnection" Usage="connectionService.CreateRemoteIncomingConnection (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createRemoteIncomingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConnection;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createRemoteIncomingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConnection;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.RemoteConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the incoming call.</param>
        <summary>Ask some other <c>ConnectionService</c> to create a <c>RemoteConnection</c> given an
            incoming request.</summary>
        <returns>The <c>Connection</c> object to satisfy this call, or <c>null</c> to
                    not handle the call.</returns>
        <remarks>
          <para>Ask some other <c>ConnectionService</c> to create a <c>RemoteConnection</c> given an
            incoming request. This is used by <c>ConnectionService</c>s that are registered with
            <c>PhoneAccount#CAPABILITY_CONNECTION_MANAGER</c> and want to be able to manage
            SIM-based incoming calls.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#createRemoteIncomingConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.createRemoteIncomingConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteOutgoingConference">
      <MemberSignature Language="C#" Value="public Android.Telecom.RemoteConference? CreateRemoteOutgoingConference (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Telecom.RemoteConference CreateRemoteOutgoingConference(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.CreateRemoteOutgoingConference(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="member this.CreateRemoteOutgoingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.RemoteConference" Usage="connectionService.CreateRemoteOutgoingConference (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createRemoteOutgoingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConference;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createRemoteOutgoingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConference;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.RemoteConference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                     <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the outgoing conference call.</param>
        <summary>Ask some other <c>ConnectionService</c> to create a <c>RemoteConference</c> given an
            outgoing request.</summary>
        <returns>The <c>RemoteConference</c> object to satisfy this call, or <c>null</c> to not
                    handle the call.</returns>
        <remarks>
          <para>Ask some other <c>ConnectionService</c> to create a <c>RemoteConference</c> given an
            outgoing request. This is used by <c>ConnectionService</c>s that are registered with
            <c>PhoneAccount#CAPABILITY_ADHOC_CONFERENCE_CALLING</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#createRemoteOutgoingConference(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.createRemoteOutgoingConference(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRemoteOutgoingConnection">
      <MemberSignature Language="C#" Value="public Android.Telecom.RemoteConnection? CreateRemoteOutgoingConnection (Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Telecom.RemoteConnection CreateRemoteOutgoingConnection(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.CreateRemoteOutgoingConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="member this.CreateRemoteOutgoingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.RemoteConnection" Usage="connectionService.CreateRemoteOutgoingConnection (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createRemoteOutgoingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConnection;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createRemoteOutgoingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/RemoteConnection;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.RemoteConnection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the outgoing call.</param>
        <summary>Ask some other <c>ConnectionService</c> to create a <c>RemoteConnection</c> given an
            outgoing request.</summary>
        <returns>The <c>Connection</c> object to satisfy this call, or <c>null</c> to
                    not handle the call.</returns>
        <remarks>
          <para>Ask some other <c>ConnectionService</c> to create a <c>RemoteConnection</c> given an
            outgoing request. This is used by <c>ConnectionService</c>s that are registered with
            <c>PhoneAccount#CAPABILITY_CONNECTION_MANAGER</c> and want to be able to use the
            SIM-based <c>ConnectionService</c> to place its outgoing calls.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.createRemoteOutgoingConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.ConnectionService.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Telecom.ConnectionService.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBind">
      <MemberSignature Language="C#" Value="public override sealed Android.OS.IBinder? OnBind (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.OS.IBinder OnBind(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnBind(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.OnBind : Android.Content.Intent -&gt; Android.OS.IBinder" Usage="connectionService.OnBind intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onBind(android.content.Intent)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onBind(android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConference">
      <MemberSignature Language="C#" Value="public virtual void OnConference (Android.Telecom.Connection? connection1, Android.Telecom.Connection? connection2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConference(class Android.Telecom.Connection connection1, class Android.Telecom.Connection connection2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnConference(Android.Telecom.Connection,Android.Telecom.Connection)" />
      <MemberSignature Language="F#" Value="abstract member OnConference : Android.Telecom.Connection * Android.Telecom.Connection -&gt; unit&#xA;override this.OnConference : Android.Telecom.Connection * Android.Telecom.Connection -&gt; unit" Usage="connectionService.OnConference (connection1, connection2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConference", "(Landroid/telecom/Connection;Landroid/telecom/Connection;)V", "GetOnConference_Landroid_telecom_Connection_Landroid_telecom_Connection_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConference", "(Landroid/telecom/Connection;Landroid/telecom/Connection;)V", "GetOnConference_Landroid_telecom_Connection_Landroid_telecom_Connection_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection1" Type="Android.Telecom.Connection" />
        <Parameter Name="connection2" Type="Android.Telecom.Connection" />
      </Parameters>
      <Docs>
        <param name="connection1">A connection to merge into a conference call.</param>
        <param name="connection2">A connection to merge into a conference call.</param>
        <summary>Conference two specified connections.</summary>
        <remarks>
          <para>Conference two specified connections. Invoked when the user has made a request to merge the
            specified connections into a conference call. In response, the connection service should
            create an instance of <c>Conference</c> and pass it into <c>#addConference</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onConference(android.telecom.Connection,%20android.telecom.Connection)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onConference(android.telecom.Connection, android.telecom.Connection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionServiceFocusGained">
      <MemberSignature Language="C#" Value="public virtual void OnConnectionServiceFocusGained ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConnectionServiceFocusGained() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnConnectionServiceFocusGained" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionServiceFocusGained : unit -&gt; unit&#xA;override this.OnConnectionServiceFocusGained : unit -&gt; unit" Usage="connectionService.OnConnectionServiceFocusGained " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConnectionServiceFocusGained", "()V", "GetOnConnectionServiceFocusGainedHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConnectionServiceFocusGained", "()V", "GetOnConnectionServiceFocusGainedHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the <c>ConnectionService</c> has gained the call focus.</summary>
        <remarks>
          <para>Called when the <c>ConnectionService</c> has gained the call focus. The
            <c>ConnectionService</c> can acquire the call resources at this time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onConnectionServiceFocusGained()" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onConnectionServiceFocusGained()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnConnectionServiceFocusLost">
      <MemberSignature Language="C#" Value="public virtual void OnConnectionServiceFocusLost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnConnectionServiceFocusLost() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnConnectionServiceFocusLost" />
      <MemberSignature Language="F#" Value="abstract member OnConnectionServiceFocusLost : unit -&gt; unit&#xA;override this.OnConnectionServiceFocusLost : unit -&gt; unit" Usage="connectionService.OnConnectionServiceFocusLost " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onConnectionServiceFocusLost", "()V", "GetOnConnectionServiceFocusLostHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onConnectionServiceFocusLost", "()V", "GetOnConnectionServiceFocusLostHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called when the <c>ConnectionService</c> has lost the call focus.</summary>
        <remarks>
          <para>Called when the <c>ConnectionService</c> has lost the call focus.
            The <c>ConnectionService</c> should release the call resources and invokes
            <c>ConnectionService#connectionServiceFocusReleased()</c> to inform telecom that it has
            released the call resources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onConnectionServiceFocusLost()" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onConnectionServiceFocusLost()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateIncomingConference">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Conference? OnCreateIncomingConference (Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Conference OnCreateIncomingConference(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateIncomingConference(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateIncomingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Conference&#xA;override this.OnCreateIncomingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Conference" Usage="connectionService.OnCreateIncomingConference (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateIncomingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Conference;", "GetOnCreateIncomingConference_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateIncomingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Conference;", "GetOnCreateIncomingConference_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Conference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the incoming conference call.</param>
        <summary>Create a <c>Conference</c> given an incoming request.</summary>
        <returns>The <c>Conference</c> object to satisfy this call. If the conference attempt is
                    failed, the return value will be a result of an invocation of
                    <c>Connection#createFailedConnection(DisconnectCause)</c>.
                    Return <c>null</c> if the <c>ConnectionService</c> cannot handle the call.</returns>
        <remarks>
          <para>Create a <c>Conference</c> given an incoming request. This is used to attach to an incoming
            conference call initiated via
            <c>TelecomManager#addNewIncomingConference(PhoneAccountHandle, Bundle)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateIncomingConference(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateIncomingConference(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateIncomingConferenceFailed">
      <MemberSignature Language="C#" Value="public virtual void OnCreateIncomingConferenceFailed (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateIncomingConferenceFailed(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateIncomingConferenceFailed(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateIncomingConferenceFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit&#xA;override this.OnCreateIncomingConferenceFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit" Usage="connectionService.OnCreateIncomingConferenceFailed (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateIncomingConferenceFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateIncomingConferenceFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateIncomingConferenceFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateIncomingConferenceFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">The incoming connection request.</param>
        <summary>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            incoming <c>Conference</c> was denied.</summary>
        <remarks>
          <para>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            incoming <c>Conference</c> was denied.</para>
          <para>Used when a self-managed <c>ConnectionService</c> attempts to create a new incoming
            <c>Conference</c>, but Telecom has determined that the call cannot be allowed at this time.
            The <c>ConnectionService</c> is responsible for silently rejecting the new incoming
            <c>Conference</c>.</para>
          <para>See <c>TelecomManager#isIncomingCallPermitted(PhoneAccountHandle)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateIncomingConferenceFailed(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateIncomingConferenceFailed(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateIncomingConnection">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Connection? OnCreateIncomingConnection (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Connection OnCreateIncomingConnection(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateIncomingConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateIncomingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection&#xA;override this.OnCreateIncomingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection" Usage="connectionService.OnCreateIncomingConnection (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateIncomingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateIncomingConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateIncomingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateIncomingConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">Details about the incoming call.</param>
        <summary>Create a <c>Connection</c> given an incoming request.</summary>
        <returns>The <c>Connection</c> object to satisfy this call, or <c>null</c> to
                    not handle the call.</returns>
        <remarks>
          <para>Create a <c>Connection</c> given an incoming request. This is used to attach to existing
            incoming calls.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateIncomingConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateIncomingConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateIncomingConnectionFailed">
      <MemberSignature Language="C#" Value="public virtual void OnCreateIncomingConnectionFailed (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateIncomingConnectionFailed(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateIncomingConnectionFailed(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateIncomingConnectionFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit&#xA;override this.OnCreateIncomingConnectionFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit" Usage="connectionService.OnCreateIncomingConnectionFailed (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateIncomingConnectionFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateIncomingConnectionFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateIncomingConnectionFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateIncomingConnectionFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">The incoming connection request.</param>
        <summary>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            incoming <c>Connection</c> was denied.</summary>
        <remarks>
          <para>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            incoming <c>Connection</c> was denied.</para>
          <para>Used when a self-managed <c>ConnectionService</c> attempts to create a new incoming
            <c>Connection</c>, but Telecom has determined that the call cannot be allowed at this time.
            The <c>ConnectionService</c> is responsible for silently rejecting the new incoming
            <c>Connection</c>.</para>
          <para>See <c>TelecomManager#isIncomingCallPermitted(PhoneAccountHandle)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateIncomingConnectionFailed(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateIncomingConnectionFailed(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateIncomingHandoverConnection">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Connection? OnCreateIncomingHandoverConnection (Android.Telecom.PhoneAccountHandle? fromPhoneAccountHandle, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Connection OnCreateIncomingHandoverConnection(class Android.Telecom.PhoneAccountHandle fromPhoneAccountHandle, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateIncomingHandoverConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateIncomingHandoverConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection&#xA;override this.OnCreateIncomingHandoverConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection" Usage="connectionService.OnCreateIncomingHandoverConnection (fromPhoneAccountHandle, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateIncomingHandoverConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateIncomingHandoverConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateIncomingHandoverConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateIncomingHandoverConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPhoneAccountHandle" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="fromPhoneAccountHandle">
          <c>PhoneAccountHandle</c> associated with the
                                          ConnectionService which needs to handover the call.</param>
        <param name="request">Details about the call which needs to be handover.</param>
        <summary>Called by Telecom to request that a <c>ConnectionService</c> creates an instance of an
            incoming handover <c>Connection</c>.</summary>
        <returns>
          <c>Connection</c> instance corresponding to the handover call.</returns>
        <remarks>
          <para>Called by Telecom to request that a <c>ConnectionService</c> creates an instance of an
            incoming handover <c>Connection</c>.</para>
          <para>A call handover is the process where an ongoing call is transferred from one app (i.e.
            <c>ConnectionService</c> to another app.  The user could, for example, choose to continue a
            mobile network call in a video calling app.  The mobile network call via the Telephony stack
            is referred to as the source of the handover, and the video calling app is referred to as the
            destination.</para>
          <para>When considering a handover scenario the &lt;em&gt;initiating&lt;/em&gt; device is where a user initiated
            the handover process (e.g. by calling <c>android.telecom.Call#handoverTo(
            PhoneAccountHandle, int, Bundle)</c>, and the other device is considered the &lt;em&gt;receiving&lt;/em&gt;
            device.</para>
          <para>This method is called on the destination app on the &lt;em&gt;receiving&lt;/em&gt; device when the
            destination app calls <c>TelecomManager#acceptHandover(Uri, int, PhoneAccountHandle)</c> to
            accept an incoming handover from the &lt;em&gt;initiating&lt;/em&gt; device.</para>
          <para>For a full discussion of the handover process and the APIs involved, see
            <c>android.telecom.Call#handoverTo(PhoneAccountHandle, int, Bundle)</c>.</para>
          <para>Implementations of this method should return an instance of <c>Connection</c> which
            represents the handover.  The code below shows an example of how this is done.</para>
          <code lang="text/java">{@code
            public Connection onCreateIncomingHandoverConnection(PhoneAccountHandle
                fromPhoneAccountHandle, ConnectionRequest request) {
              // Given that your app requested to accept the handover, you should not return null here.
              MyConnection connection = new MyConnection();
              connection.setAddress(request.getAddress(), TelecomManager.PRESENTATION_ALLOWED);
              connection.setVideoState(request.getVideoState());
              return connection;
            }
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateIncomingHandoverConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateIncomingHandoverConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateOutgoingConference">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Conference? OnCreateOutgoingConference (Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Conference OnCreateOutgoingConference(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateOutgoingConference(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOutgoingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Conference&#xA;override this.OnCreateOutgoingConference : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Conference" Usage="connectionService.OnCreateOutgoingConference (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOutgoingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Conference;", "GetOnCreateOutgoingConference_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOutgoingConference", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Conference;", "GetOnCreateOutgoingConference_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Conference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">The connection manager account to use for managing
                    this call.
                    &lt;p&gt;
                    If this parameter is not <c>null</c>, it means that this <c>ConnectionService</c>
                    has registered one or more <c>PhoneAccount</c>s having
                    <c>PhoneAccount#CAPABILITY_CONNECTION_MANAGER</c>. This parameter will contain
                    one of these <c>PhoneAccount</c>s, while the <c>request</c> will contain another
                    (usually but not always distinct) <c>PhoneAccount</c> to be used for actually
                    making the connection.
                    &lt;p&gt;
                    If this parameter is <c>null</c>, it means that this <c>ConnectionService</c> is
                    being asked to make a direct connection. The
                    <c>ConnectionRequest#getAccountHandle()</c> of parameter <c>request</c> will be
                    a <c>PhoneAccount</c> registered by this <c>ConnectionService</c> to use for
                    making the connection.</param>
        <param name="request">Details about the outgoing call.</param>
        <summary>Create a <c>Conference</c> given an outgoing request.</summary>
        <returns>The <c>Conference</c> object to satisfy this call. If the conference attempt is
                    failed, the return value will be a result of an invocation of
                    <c>Connection#createFailedConnection(DisconnectCause)</c>.
                    Return <c>null</c> if the <c>ConnectionService</c> cannot handle the call.</returns>
        <remarks>
          <para>Create a <c>Conference</c> given an outgoing request. This is used to initiate new
            outgoing conference call requested via
            <c>TelecomManager#startConference(List, Bundle)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateOutgoingConference(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateOutgoingConference(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateOutgoingConferenceFailed">
      <MemberSignature Language="C#" Value="public virtual void OnCreateOutgoingConferenceFailed (Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateOutgoingConferenceFailed(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateOutgoingConferenceFailed(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOutgoingConferenceFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit&#xA;override this.OnCreateOutgoingConferenceFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit" Usage="connectionService.OnCreateOutgoingConferenceFailed (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOutgoingConferenceFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateOutgoingConferenceFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOutgoingConferenceFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateOutgoingConferenceFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">The outgoing connection request.</param>
        <summary>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            outgoing <c>Conference</c> was denied.</summary>
        <remarks>
          <para>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            outgoing <c>Conference</c> was denied.</para>
          <para>Used when a self-managed <c>ConnectionService</c> attempts to create a new outgoing
            <c>Conference</c>, but Telecom has determined that the call cannot be placed at this time.
            The <c>ConnectionService</c> is responisible for informing the user that the
            <c>Conference</c> cannot be made at this time.</para>
          <para>See <c>TelecomManager#isOutgoingCallPermitted(PhoneAccountHandle)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateOutgoingConferenceFailed(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateOutgoingConferenceFailed(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateOutgoingConnection">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Connection? OnCreateOutgoingConnection (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Connection OnCreateOutgoingConnection(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateOutgoingConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOutgoingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection&#xA;override this.OnCreateOutgoingConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection" Usage="connectionService.OnCreateOutgoingConnection (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOutgoingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateOutgoingConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOutgoingConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateOutgoingConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">The connection manager account to use for managing
                    this call.
                    &lt;p&gt;
                    If this parameter is not <c>null</c>, it means that this <c>ConnectionService</c>
                    has registered one or more <c>PhoneAccount</c>s having
                    <c>PhoneAccount#CAPABILITY_CONNECTION_MANAGER</c>. This parameter will contain
                    one of these <c>PhoneAccount</c>s, while the <c>request</c> will contain another
                    (usually but not always distinct) <c>PhoneAccount</c> to be used for actually
                    making the connection.
                    &lt;p&gt;
                    If this parameter is <c>null</c>, it means that this <c>ConnectionService</c> is
                    being asked to make a direct connection. The
                    <c>ConnectionRequest#getAccountHandle()</c> of parameter <c>request</c> will be
                    a <c>PhoneAccount</c> registered by this <c>ConnectionService</c> to use for
                    making the connection.</param>
        <param name="request">Details about the outgoing call.</param>
        <summary>Create a <c>Connection</c> given an outgoing request.</summary>
        <returns>The <c>Connection</c> object to satisfy this call, or the result of an invocation
                    of <c>Connection#createFailedConnection(DisconnectCause)</c> to not handle the call.</returns>
        <remarks>
          <para>Create a <c>Connection</c> given an outgoing request. This is used to initiate new
            outgoing calls.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateOutgoingConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateOutgoingConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateOutgoingConnectionFailed">
      <MemberSignature Language="C#" Value="public virtual void OnCreateOutgoingConnectionFailed (Android.Telecom.PhoneAccountHandle? connectionManagerPhoneAccount, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreateOutgoingConnectionFailed(class Android.Telecom.PhoneAccountHandle connectionManagerPhoneAccount, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateOutgoingConnectionFailed(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOutgoingConnectionFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit&#xA;override this.OnCreateOutgoingConnectionFailed : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; unit" Usage="connectionService.OnCreateOutgoingConnectionFailed (connectionManagerPhoneAccount, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOutgoingConnectionFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateOutgoingConnectionFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOutgoingConnectionFailed", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)V", "GetOnCreateOutgoingConnectionFailed_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionManagerPhoneAccount" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="connectionManagerPhoneAccount">See description at
                    <c>#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)</c>.</param>
        <param name="request">The outgoing connection request.</param>
        <summary>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            outgoing <c>Connection</c> was denied.</summary>
        <remarks>
          <para>Called by Telecom to inform the <c>ConnectionService</c> that its request to create a new
            outgoing <c>Connection</c> was denied.</para>
          <para>Used when a self-managed <c>ConnectionService</c> attempts to create a new outgoing
            <c>Connection</c>, but Telecom has determined that the call cannot be placed at this time.
            The <c>ConnectionService</c> is responisible for informing the user that the
            <c>Connection</c> cannot be made at this time.</para>
          <para>See <c>TelecomManager#isOutgoingCallPermitted(PhoneAccountHandle)</c> for more information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateOutgoingConnectionFailed(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateOutgoingConnectionFailed(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateOutgoingHandoverConnection">
      <MemberSignature Language="C#" Value="public virtual Android.Telecom.Connection? OnCreateOutgoingHandoverConnection (Android.Telecom.PhoneAccountHandle? fromPhoneAccountHandle, Android.Telecom.ConnectionRequest? request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Telecom.Connection OnCreateOutgoingHandoverConnection(class Android.Telecom.PhoneAccountHandle fromPhoneAccountHandle, class Android.Telecom.ConnectionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnCreateOutgoingHandoverConnection(Android.Telecom.PhoneAccountHandle,Android.Telecom.ConnectionRequest)" />
      <MemberSignature Language="F#" Value="abstract member OnCreateOutgoingHandoverConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection&#xA;override this.OnCreateOutgoingHandoverConnection : Android.Telecom.PhoneAccountHandle * Android.Telecom.ConnectionRequest -&gt; Android.Telecom.Connection" Usage="connectionService.OnCreateOutgoingHandoverConnection (fromPhoneAccountHandle, request)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreateOutgoingHandoverConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateOutgoingHandoverConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreateOutgoingHandoverConnection", "(Landroid/telecom/PhoneAccountHandle;Landroid/telecom/ConnectionRequest;)Landroid/telecom/Connection;", "GetOnCreateOutgoingHandoverConnection_Landroid_telecom_PhoneAccountHandle_Landroid_telecom_ConnectionRequest_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Telecom.Connection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromPhoneAccountHandle" Type="Android.Telecom.PhoneAccountHandle" />
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
      </Parameters>
      <Docs>
        <param name="fromPhoneAccountHandle">
          <c>PhoneAccountHandle</c> associated with the
                                          ConnectionService which needs to handover the call.</param>
        <param name="request">Details about the call to handover.</param>
        <summary>Called by Telecom to request that a <c>ConnectionService</c> creates an instance of an
            outgoing handover <c>Connection</c>.</summary>
        <returns>
          <c>Connection</c> instance corresponding to the handover call.</returns>
        <remarks>
          <para>Called by Telecom to request that a <c>ConnectionService</c> creates an instance of an
            outgoing handover <c>Connection</c>.</para>
          <para>A call handover is the process where an ongoing call is transferred from one app (i.e.
            <c>ConnectionService</c> to another app.  The user could, for example, choose to continue a
            mobile network call in a video calling app.  The mobile network call via the Telephony stack
            is referred to as the source of the handover, and the video calling app is referred to as the
            destination.</para>
          <para>When considering a handover scenario the &lt;em&gt;initiating&lt;/em&gt; device is where a user initiated
            the handover process (e.g. by calling <c>android.telecom.Call#handoverTo(
            PhoneAccountHandle, int, Bundle)</c>, and the other device is considered the &lt;em&gt;receiving&lt;/em&gt;
            device.</para>
          <para>This method is called on the destination <c>ConnectionService</c> on &lt;em&gt;initiating&lt;/em&gt;
            device when the user initiates a handover request from one app to another.  The user request
            originates in the <c>InCallService</c> via
            <c>android.telecom.Call#handoverTo(PhoneAccountHandle, int, Bundle)</c>.</para>
          <para>For a full discussion of the handover process and the APIs involved, see
            <c>android.telecom.Call#handoverTo(PhoneAccountHandle, int, Bundle)</c>.</para>
          <para>Implementations of this method should return an instance of <c>Connection</c> which
            represents the handover.  If your app does not wish to accept a handover to it at this time,
            you can return <c>null</c>.  The code below shows an example of how this is done.</para>
          <code lang="text/java">{@code
            public Connection onCreateIncomingHandoverConnection(PhoneAccountHandle
                fromPhoneAccountHandle, ConnectionRequest request) {
              if (!isHandoverAvailable()) {
                  return null;
              }
              MyConnection connection = new MyConnection();
              connection.setAddress(request.getAddress(), TelecomManager.PRESENTATION_ALLOWED);
              connection.setVideoState(request.getVideoState());
              return connection;
            }
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onCreateOutgoingHandoverConnection(android.telecom.PhoneAccountHandle,%20android.telecom.ConnectionRequest)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onCreateOutgoingHandoverConnection(android.telecom.PhoneAccountHandle, android.telecom.ConnectionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnHandoverFailed">
      <MemberSignature Language="C#" Value="public virtual void OnHandoverFailed (Android.Telecom.ConnectionRequest? request, Android.Telecom.HandoverFailureReason error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnHandoverFailed(class Android.Telecom.ConnectionRequest request, valuetype Android.Telecom.HandoverFailureReason error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnHandoverFailed(Android.Telecom.ConnectionRequest,Android.Telecom.HandoverFailureReason)" />
      <MemberSignature Language="F#" Value="abstract member OnHandoverFailed : Android.Telecom.ConnectionRequest * Android.Telecom.HandoverFailureReason -&gt; unit&#xA;override this.OnHandoverFailed : Android.Telecom.ConnectionRequest * Android.Telecom.HandoverFailureReason -&gt; unit" Usage="connectionService.OnHandoverFailed (request, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onHandoverFailed", "(Landroid/telecom/ConnectionRequest;I)V", "GetOnHandoverFailed_Landroid_telecom_ConnectionRequest_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onHandoverFailed", "(Landroid/telecom/ConnectionRequest;I)V", "GetOnHandoverFailed_Landroid_telecom_ConnectionRequest_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Telecom.ConnectionRequest" />
        <Parameter Name="error" Type="Android.Telecom.HandoverFailureReason">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="request">Details about the call which failed to handover.</param>
        <param name="error">Reason for handover failure.  Will be one of the</param>
        <summary>Called by Telecom in response to a <c>TelecomManager#acceptHandover()</c>
            invocation which failed.</summary>
        <remarks>
          <para>Called by Telecom in response to a <c>TelecomManager#acceptHandover()</c>
            invocation which failed.</para>
          <para>For a full discussion of the handover process and the APIs involved, see
            <c>android.telecom.Call#handoverTo(PhoneAccountHandle, int, Bundle)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onHandoverFailed(android.telecom.ConnectionRequest,%20int)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onHandoverFailed(android.telecom.ConnectionRequest, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoteConferenceAdded">
      <MemberSignature Language="C#" Value="public virtual void OnRemoteConferenceAdded (Android.Telecom.RemoteConference? conference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRemoteConferenceAdded(class Android.Telecom.RemoteConference conference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnRemoteConferenceAdded(Android.Telecom.RemoteConference)" />
      <MemberSignature Language="F#" Value="abstract member OnRemoteConferenceAdded : Android.Telecom.RemoteConference -&gt; unit&#xA;override this.OnRemoteConferenceAdded : Android.Telecom.RemoteConference -&gt; unit" Usage="connectionService.OnRemoteConferenceAdded conference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRemoteConferenceAdded", "(Landroid/telecom/RemoteConference;)V", "GetOnRemoteConferenceAdded_Landroid_telecom_RemoteConference_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRemoteConferenceAdded", "(Landroid/telecom/RemoteConference;)V", "GetOnRemoteConferenceAdded_Landroid_telecom_RemoteConference_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="conference" Type="Android.Telecom.RemoteConference" />
      </Parameters>
      <Docs>
        <param name="conference">The remote conference call.</param>
        <summary>Indicates that a remote conference has been created for existing <c>RemoteConnection</c>s.</summary>
        <remarks>
          <para>Indicates that a remote conference has been created for existing <c>RemoteConnection</c>s.
            When this method is invoked, this <c>ConnectionService</c> should create its own
            representation of the conference call and send it to telecom using <c>#addConference</c>.</para>
          <para>This is only relevant to <c>ConnectionService</c>s which are registered with
            <c>PhoneAccount#CAPABILITY_CONNECTION_MANAGER</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onRemoteConferenceAdded(android.telecom.RemoteConference)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onRemoteConferenceAdded(android.telecom.RemoteConference)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRemoteExistingConnectionAdded">
      <MemberSignature Language="C#" Value="public virtual void OnRemoteExistingConnectionAdded (Android.Telecom.RemoteConnection? connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnRemoteExistingConnectionAdded(class Android.Telecom.RemoteConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Telecom.ConnectionService.OnRemoteExistingConnectionAdded(Android.Telecom.RemoteConnection)" />
      <MemberSignature Language="F#" Value="abstract member OnRemoteExistingConnectionAdded : Android.Telecom.RemoteConnection -&gt; unit&#xA;override this.OnRemoteExistingConnectionAdded : Android.Telecom.RemoteConnection -&gt; unit" Usage="connectionService.OnRemoteExistingConnectionAdded connection" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onRemoteExistingConnectionAdded", "(Landroid/telecom/RemoteConnection;)V", "GetOnRemoteExistingConnectionAdded_Landroid_telecom_RemoteConnection_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onRemoteExistingConnectionAdded", "(Landroid/telecom/RemoteConnection;)V", "GetOnRemoteExistingConnectionAdded_Landroid_telecom_RemoteConnection_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connection" Type="Android.Telecom.RemoteConnection" />
      </Parameters>
      <Docs>
        <param name="connection">The existing connection which was added.</param>
        <summary>Called when an existing connection is added remotely.</summary>
        <remarks>
          <para>Called when an existing connection is added remotely.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#onRemoteExistingConnectionAdded(android.telecom.RemoteConnection)" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.onRemoteExistingConnectionAdded(android.telecom.RemoteConnection)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceInterface">
      <MemberSignature Language="C#" Value="public const string ServiceInterface;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ServiceInterface" />
      <MemberSignature Language="DocId" Value="F:Android.Telecom.ConnectionService.ServiceInterface" />
      <MemberSignature Language="F#" Value="val mutable ServiceInterface : string" Usage="Android.Telecom.ConnectionService.ServiceInterface" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERVICE_INTERFACE", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERVICE_INTERFACE", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Intent</c> that must be declared as handled by the service.</summary>
        <remarks>
          <para>The <c>Intent</c> that must be declared as handled by the service.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/telecom/ConnectionService#SERVICE_INTERFACE" title="Reference documentation">Java documentation for <code>android.telecom.ConnectionService.SERVICE_INTERFACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.ConnectionService.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Telecom.ConnectionService.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Telecom.ConnectionService.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Telecom.ConnectionService.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
