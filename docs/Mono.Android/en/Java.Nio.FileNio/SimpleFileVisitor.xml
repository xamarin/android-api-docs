<Type Name="SimpleFileVisitor" FullName="Java.Nio.FileNio.SimpleFileVisitor">
  <TypeSignature Language="C#" Value="public class SimpleFileVisitor : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Nio.FileNio.IFileVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleFileVisitor extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Nio.FileNio.IFileVisitor, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.FileNio.SimpleFileVisitor" />
  <TypeSignature Language="F#" Value="type SimpleFileVisitor = class&#xA;    inherit Object&#xA;    interface IFileVisitor&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Nio.FileNio.IFileVisitor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/file/SimpleFileVisitor", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/file/SimpleFileVisitor", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">The type of reference to the files</param>
    <summary>A simple visitor of files with default behavior to visit all files and to
            re-throw I/O errors.</summary>
    <remarks>
      <para>A simple visitor of files with default behavior to visit all files and to
            re-throw I/O errors.</para>
      <para>Methods in this class may be overridden subject to their general contract.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleFileVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor#SimpleFileVisitor()" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor.SimpleFileVisitor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleFileVisitor (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.FileNio.SimpleFileVisitor : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.FileNio.SimpleFileVisitor" Usage="new Java.Nio.FileNio.SimpleFileVisitor (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.SimpleFileVisitor.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.FileNio.SimpleFileVisitor.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostVisitDirectory">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.FileVisitResult? PostVisitDirectory (Java.Lang.Object? dir, Java.IO.IOException? exc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileVisitResult PostVisitDirectory(class Java.Lang.Object dir, class Java.IO.IOException exc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.PostVisitDirectory(Java.Lang.Object,Java.IO.IOException)" />
      <MemberSignature Language="F#" Value="abstract member PostVisitDirectory : Java.Lang.Object * Java.IO.IOException -&gt; Java.Nio.FileNio.FileVisitResult&#xA;override this.PostVisitDirectory : Java.Lang.Object * Java.IO.IOException -&gt; Java.Nio.FileNio.FileVisitResult" Usage="simpleFileVisitor.PostVisitDirectory (dir, exc)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.IFileVisitor.PostVisitDirectory(Java.Lang.Object,Java.IO.IOException)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("postVisitDirectory", "(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;", "GetPostVisitDirectory_Ljava_lang_Object_Ljava_io_IOException_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("postVisitDirectory", "(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;", "GetPostVisitDirectory_Ljava_lang_Object_Ljava_io_IOException_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileVisitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="Java.Lang.Object" />
        <Parameter Name="exc" Type="Java.IO.IOException" />
      </Parameters>
      <Docs>
        <param name="dir">To be added.</param>
        <param name="exc">To be added.</param>
        <summary>Invoked for a directory after entries in the directory, and all of their
            descendants, have been visited.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Invoked for a directory after entries in the directory, and all of their
            descendants, have been visited.</para>
          <para>Unless overridden, this method returns <c>FileVisitResult#CONTINUE
            CONTINUE</c> if the directory iteration completes without an I/O exception;
            otherwise this method re-throws the I/O exception that caused the iteration
            of the directory to terminate prematurely.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor#postVisitDirectory(T,%20java.io.IOException)" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor.postVisitDirectory(T, java.io.IOException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreVisitDirectory">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.FileVisitResult? PreVisitDirectory (Java.Lang.Object? dir, Java.Nio.FileNio.Attributes.IBasicFileAttributes? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileVisitResult PreVisitDirectory(class Java.Lang.Object dir, class Java.Nio.FileNio.Attributes.IBasicFileAttributes attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.PreVisitDirectory(Java.Lang.Object,Java.Nio.FileNio.Attributes.IBasicFileAttributes)" />
      <MemberSignature Language="F#" Value="abstract member PreVisitDirectory : Java.Lang.Object * Java.Nio.FileNio.Attributes.IBasicFileAttributes -&gt; Java.Nio.FileNio.FileVisitResult&#xA;override this.PreVisitDirectory : Java.Lang.Object * Java.Nio.FileNio.Attributes.IBasicFileAttributes -&gt; Java.Nio.FileNio.FileVisitResult" Usage="simpleFileVisitor.PreVisitDirectory (dir, attrs)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.IFileVisitor.PreVisitDirectory(Java.Lang.Object,Java.Nio.FileNio.Attributes.IBasicFileAttributes)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("preVisitDirectory", "(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;", "GetPreVisitDirectory_Ljava_lang_Object_Ljava_nio_file_attribute_BasicFileAttributes_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("preVisitDirectory", "(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;", "GetPreVisitDirectory_Ljava_lang_Object_Ljava_nio_file_attribute_BasicFileAttributes_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileVisitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="Java.Lang.Object" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IBasicFileAttributes" />
      </Parameters>
      <Docs>
        <param name="dir">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Invoked for a directory before entries in the directory are visited.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Invoked for a directory before entries in the directory are visited.</para>
          <para>Unless overridden, this method returns <c>FileVisitResult#CONTINUE
            CONTINUE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor#preVisitDirectory(T,%20java.nio.file.attribute.BasicFileAttributes)" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor.preVisitDirectory(T, java.nio.file.attribute.BasicFileAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.SimpleFileVisitor.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.FileNio.SimpleFileVisitor.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.SimpleFileVisitor.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.FileNio.SimpleFileVisitor.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFile">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.FileVisitResult? VisitFile (Java.Lang.Object? file, Java.Nio.FileNio.Attributes.IBasicFileAttributes? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileVisitResult VisitFile(class Java.Lang.Object file, class Java.Nio.FileNio.Attributes.IBasicFileAttributes attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.VisitFile(Java.Lang.Object,Java.Nio.FileNio.Attributes.IBasicFileAttributes)" />
      <MemberSignature Language="F#" Value="abstract member VisitFile : Java.Lang.Object * Java.Nio.FileNio.Attributes.IBasicFileAttributes -&gt; Java.Nio.FileNio.FileVisitResult&#xA;override this.VisitFile : Java.Lang.Object * Java.Nio.FileNio.Attributes.IBasicFileAttributes -&gt; Java.Nio.FileNio.FileVisitResult" Usage="simpleFileVisitor.VisitFile (file, attrs)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.IFileVisitor.VisitFile(Java.Lang.Object,Java.Nio.FileNio.Attributes.IBasicFileAttributes)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("visitFile", "(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;", "GetVisitFile_Ljava_lang_Object_Ljava_nio_file_attribute_BasicFileAttributes_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("visitFile", "(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;", "GetVisitFile_Ljava_lang_Object_Ljava_nio_file_attribute_BasicFileAttributes_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileVisitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.Lang.Object" />
        <Parameter Name="attrs" Type="Java.Nio.FileNio.Attributes.IBasicFileAttributes" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>Invoked for a file in a directory.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Invoked for a file in a directory.</para>
          <para>Unless overridden, this method returns <c>FileVisitResult#CONTINUE
            CONTINUE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor#visitFile(T,%20java.nio.file.attribute.BasicFileAttributes)" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor.visitFile(T, java.nio.file.attribute.BasicFileAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFileFailed">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.FileNio.FileVisitResult? VisitFileFailed (Java.Lang.Object? file, Java.IO.IOException? exc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.FileVisitResult VisitFileFailed(class Java.Lang.Object file, class Java.IO.IOException exc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.SimpleFileVisitor.VisitFileFailed(Java.Lang.Object,Java.IO.IOException)" />
      <MemberSignature Language="F#" Value="abstract member VisitFileFailed : Java.Lang.Object * Java.IO.IOException -&gt; Java.Nio.FileNio.FileVisitResult&#xA;override this.VisitFileFailed : Java.Lang.Object * Java.IO.IOException -&gt; Java.Nio.FileNio.FileVisitResult" Usage="simpleFileVisitor.VisitFileFailed (file, exc)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Nio.FileNio.IFileVisitor.VisitFileFailed(Java.Lang.Object,Java.IO.IOException)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("visitFileFailed", "(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;", "GetVisitFileFailed_Ljava_lang_Object_Ljava_io_IOException_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("visitFileFailed", "(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;", "GetVisitFileFailed_Ljava_lang_Object_Ljava_io_IOException_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.FileVisitResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.Lang.Object" />
        <Parameter Name="exc" Type="Java.IO.IOException" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <param name="exc">To be added.</param>
        <summary>Invoked for a file that could not be visited.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Invoked for a file that could not be visited.</para>
          <para>Unless overridden, this method re-throws the I/O exception that prevented
            the file from being visited.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/SimpleFileVisitor#visitFileFailed(T,%20java.io.IOException)" title="Reference documentation">Java documentation for <code>java.nio.file.SimpleFileVisitor.visitFileFailed(T, java.io.IOException)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
