<Type Name="FileSystem" FullName="Java.Nio.FileNio.FileSystem">
  <TypeSignature Language="C#" Value="public abstract class FileSystem : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileSystem extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ICloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.FileNio.FileSystem" />
  <TypeSignature Language="F#" Value="type FileSystem = class&#xA;    inherit Object&#xA;    interface ICloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/file/FileSystem", ApiSince=26, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/file/FileSystem", ApiSince=26, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides an interface to a file system and is the factory for objects to
            access files and other objects in the file system.</summary>
    <remarks>
      <para>Provides an interface to a file system and is the factory for objects to
            access files and other objects in the file system.</para>
      <para>The default file system, obtained by invoking the <c>FileSystems#getDefault
            FileSystems.getDefault</c> method, provides access to the file system that is
            accessible to the Java virtual machine. The <c>FileSystems</c> class defines
            methods to create file systems that provide access to other types of (custom)
            file systems.</para>
      <para>A file system is the factory for several types of objects:
            
            &lt;ul&gt;
              &lt;li&gt;</para>
      <para>The <c>#getPath getPath</c> method converts a system dependent
                &lt;em&gt;path string&lt;/em&gt;, returning a <c>Path</c> object that may be used
                to locate and access a file.</para>
      <para>&lt;/li&gt;
              &lt;li&gt;</para>
      <para>The <c>#getPathMatcher  getPathMatcher</c> method is used
                to create a <c>PathMatcher</c> that performs match operations on
                paths.</para>
      <para>&lt;/li&gt;
              &lt;li&gt;</para>
      <para>The <c>#getFileStores getFileStores</c> method returns an iterator
                over the underlying <c>FileStore file-stores</c>.</para>
      <para>&lt;/li&gt;
              &lt;li&gt;</para>
      <para>The <c>#getUserPrincipalLookupService getUserPrincipalLookupService</c>
                method returns the <c>UserPrincipalLookupService</c> to lookup users or
                groups by name.</para>
      <para>&lt;/li&gt;
              &lt;li&gt;</para>
      <para>The <c>#newWatchService newWatchService</c> method creates a
                <c>WatchService</c> that may be used to watch objects for changes and
                events.</para>
      <para>&lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>File systems vary greatly. In some cases the file system is a single
            hierarchy of files with one top-level root directory. In other cases it may
            have several distinct file hierarchies, each with its own top-level root
            directory. The <c>#getRootDirectories getRootDirectories</c> method may be
            used to iterate over the root directories in the file system. A file system
            is typically composed of one or more underlying <c>FileStore file-stores</c>
            that provide the storage for the files. Theses file stores can also vary in
            the features they support, and the file attributes or &lt;em&gt;meta-data&lt;/em&gt; that
            they associate with files.</para>
      <para>A file system is open upon creation and can be closed by invoking its
            <c>#close() close</c> method. Once closed, any further attempt to access
            objects in the file system cause <c>ClosedFileSystemException</c> to be
            thrown. File systems created by the default <c>FileSystemProvider provider</c>
            cannot be closed.</para>
      <para>A <c>FileSystem</c> can provide read-only or read-write access to the
            file system. Whether or not a file system provides read-only access is
            established when the <c>FileSystem</c> is created and can be tested by invoking
            its <c>#isReadOnly() isReadOnly</c> method. Attempts to write to file stores
            by means of an object associated with a read-only file system throws <c>ReadOnlyFileSystemException</c>.</para>
      <para>File systems are safe for use by multiple concurrent threads. The <c>#close close</c> method may be invoked at any time to close a file system but
            whether a file system is <i>asynchronously closeable</i> is provider specific
            and therefore unspecified. In other words, if a thread is accessing an
            object in a file system, and another thread invokes the <c>close</c> method
            then it may require to block until the first operation is complete. Closing
            a file system causes all open channels, watch services, and other <c>Closeable closeable</c> objects associated with the file system to be closed.</para>
      <para>Added in 1.7.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/file/FileSystem" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of this class.</summary>
        <remarks>
          <para>Initializes a new instance of this class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#FileSystem()" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.FileSystem()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FileSystem (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.FileNio.FileSystem : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.FileNio.FileSystem" Usage="new Java.Nio.FileNio.FileSystem (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public abstract void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="fileSystem.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.IO.ICloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes this file system.</summary>
        <remarks>
          <para>Closes this file system.</para>
          <para>After a file system is closed then all subsequent access to the file
            system, either by methods defined by this class or on objects associated
            with this file system, throw <c>ClosedFileSystemException</c>. If the
            file system is already closed then invoking this method has no effect.</para>
          <para>Closing a file system will close all open <c>java.nio.channels.Channel channels</c>, <c>DirectoryStream directory-streams</c>,
            <c>WatchService watch-service</c>, and other closeable objects associated
            with this file system. The <c>FileSystems#getDefault default</c> file
            system cannot be closed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#close()" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FileStores">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.IIterable? FileStores { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.IIterable FileStores" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.FileStores" />
      <MemberSignature Language="F#" Value="member this.FileStores : Java.Lang.IIterable" Usage="Java.Nio.FileNio.FileSystem.FileStores" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFileStores", "()Ljava/lang/Iterable;", "GetGetFileStoresHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFileStores", "()Ljava/lang/Iterable;", "GetGetFileStoresHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IIterable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPath">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.IPath? GetPath (string? first, params string[]? more);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IPath GetPath(string first, string[] more) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.GetPath(System.String,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member GetPath : string * string[] -&gt; Java.Nio.FileNio.IPath" Usage="fileSystem.GetPath (first, more)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPath", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;", "GetGetPath_Ljava_lang_String_arrayLjava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPath", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;", "GetGetPath_Ljava_lang_String_arrayLjava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="first" Type="System.String" />
        <Parameter Name="more" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="first">the path string or initial part of the path string</param>
        <param name="more">additional strings to be joined to form the path string</param>
        <summary>Converts a path string, or a sequence of strings that when joined form
            a path string, to a <c>Path</c>.</summary>
        <returns>the resulting <c>Path</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#getPath(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.getPath(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPathMatcher">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.IPathMatcher? GetPathMatcher (string? syntaxAndPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IPathMatcher GetPathMatcher(string syntaxAndPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.GetPathMatcher(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPathMatcher : string -&gt; Java.Nio.FileNio.IPathMatcher" Usage="fileSystem.GetPathMatcher syntaxAndPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPathMatcher", "(Ljava/lang/String;)Ljava/nio/file/PathMatcher;", "GetGetPathMatcher_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPathMatcher", "(Ljava/lang/String;)Ljava/nio/file/PathMatcher;", "GetGetPathMatcher_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IPathMatcher</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxAndPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="syntaxAndPattern">The syntax and pattern</param>
        <summary>Returns a <c>PathMatcher</c> that performs match operations on the
            <c>String</c> representation of <c>Path</c> objects by interpreting a
            given pattern.</summary>
        <returns>A path matcher that may be used to match paths against the pattern</returns>
        <remarks>
          <para>Returns a <c>PathMatcher</c> that performs match operations on the
            <c>String</c> representation of <c>Path</c> objects by interpreting a
            given pattern.
            
            The <c>syntaxAndPattern</c> parameter identifies the syntax and the
            pattern and takes the form:
            &lt;blockquote&gt;</para>
          <code lang="text/java">&lt;i&gt;syntax&lt;/i&gt;&lt;b&gt;:&lt;/b&gt;&lt;i&gt;pattern&lt;/i&gt;
            </code>
          <para>&lt;/blockquote&gt;
            where <c>':'</c> stands for itself.</para>
          <para>A <c>FileSystem</c> implementation supports the "<c>glob</c>" and
            "<c>regex</c>" syntaxes, and may support others. The value of the syntax
            component is compared without regard to case.</para>
          <para>When the syntax is "<c>glob</c>" then the <c>String</c>
            representation of the path is matched using a limited pattern language
            that resembles regular expressions but with a simpler syntax. For example:
            
            &lt;table class="striped" style="text-align:left; margin-left:2em"&gt;
            &lt;caption style="display:none"&gt;Pattern Language&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;
              &lt;th scope="col"&gt;Example
              &lt;th scope="col"&gt;Description
            &lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>*.java</c>&lt;/th&gt;
              &lt;td&gt;Matches a path that represents a file name ending in <c>.java</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>*.*</c>&lt;/th&gt;
              &lt;td&gt;Matches file names containing a dot&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>*.{java,class</c>}&lt;/th&gt;
              &lt;td&gt;Matches file names ending with <c>.java</c> or <c>.class</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>foo.?</c>&lt;/th&gt;
              &lt;td&gt;Matches file names starting with <c>foo.</c> and a single
              character extension&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>&amp;#47;home&amp;#47;*&amp;#47;*</c>&lt;td&gt;Matches <c>&amp;#47;home&amp;#47;gus&amp;#47;data</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
              &lt;th scope="row"&gt;<c>&amp;#47;home&amp;#47;**</c>&lt;td&gt;Matches <c>&amp;#47;home&amp;#47;gus</c> and
              <c>&amp;#47;home&amp;#47;gus&amp;#47;data</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;</para>
          <para>The following rules are used to interpret glob patterns:
            
            &lt;ul&gt;
              &lt;li&gt;</para>
          <para>The <c>*</c> character matches zero or more <c>Character
              characters</c> of a <c>Path#getName(int) name</c> component without
              crossing directory boundaries.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The <c>**</c> characters matches zero or more <c>Character
              characters</c> crossing directory boundaries.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The <c>?</c> character matches exactly one character of a
              name component.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The backslash character (<c>\</c>) is used to escape characters
              that would otherwise be interpreted as special characters. The expression
              <c>\\</c> matches a single backslash and "\{" matches a left brace
              for example.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The <c>[ ]</c> characters are a <i>bracket expression</i> that
              match a single character of a name component out of a set of characters.
              For example, <c>[abc]</c> matches <c>"a"</c>, <c>"b"</c>, or <c>"c"</c>.
              The hyphen (<c>-</c>) may be used to specify a range so <c>[a-z]</c>
              specifies a range that matches from <c>"a"</c> to <c>"z"</c> (inclusive).
              These forms can be mixed so [abce-g] matches <c>"a"</c>, <c>"b"</c>,
              <c>"c"</c>, <c>"e"</c>, <c>"f"</c> or <c>"g"</c>. If the character
              after the <c>[</c> is a <c>!</c> then it is used for negation so <c>[!a-c]</c> matches any character except <c>"a"</c>, <c>"b"</c>, or <c>"c"</c>.</para>
          <para>Within a bracket expression the <c>*</c>, <c>?</c> and <c>\</c>
              characters match themselves. The (<c>-</c>) character matches itself if
              it is the first character within the brackets, or the first character
              after the <c>!</c> if negating.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The <c>{</c>} characters are a group of subpatterns, where
              the group matches if any subpattern in the group matches. The <c>","</c>
              character is used to separate the subpatterns. Groups cannot be nested.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>Leading period<c>&amp;#47;</c>dot characters in file name are
              treated as regular characters in match operations. For example,
              the <c>"*"</c> glob pattern matches file name <c>".login"</c>.
              The <c>Files#isHidden</c> method may be used to test whether a file
              is considered hidden.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>All other characters match themselves in an implementation
              dependent manner. This includes characters representing any <c>FileSystem#getSeparator name-separators</c>.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>The matching of <c>Path#getRoot root</c> components is highly
              implementation-dependent and is not specified.</para>
          <para>&lt;/li&gt;
            
            &lt;/ul&gt;</para>
          <para>When the syntax is "<c>regex</c>" then the pattern component is a
            regular expression as defined by the <c>java.util.regex.Pattern</c>
            class.</para>
          <para>For both the glob and regex syntaxes, the matching details, such as
            whether the matching is case sensitive, are implementation-dependent
            and therefore not specified.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#getPathMatcher(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.getPathMatcher(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOpen">
      <MemberSignature Language="C#" Value="public abstract bool IsOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOpen" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.IsOpen" />
      <MemberSignature Language="F#" Value="member this.IsOpen : bool" Usage="Java.Nio.FileNio.FileSystem.IsOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOpen", "()Z", "GetIsOpenHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.IsReadOnly" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Java.Nio.FileNio.FileSystem.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isReadOnly", "()Z", "GetIsReadOnlyHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.FileNio.FileSystem.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWatchService">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.IWatchService? NewWatchService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.IWatchService NewWatchService() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.NewWatchService" />
      <MemberSignature Language="F#" Value="abstract member NewWatchService : unit -&gt; Java.Nio.FileNio.IWatchService" Usage="fileSystem.NewWatchService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newWatchService", "()Ljava/nio/file/WatchService;", "GetNewWatchServiceHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newWatchService", "()Ljava/nio/file/WatchService;", "GetNewWatchServiceHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.IWatchService</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a new <c>WatchService</c><i>(optional operation)</i>.</summary>
        <returns>a new watch service</returns>
        <remarks>
          <para>Constructs a new <c>WatchService</c><i>(optional operation)</i>.</para>
          <para>This method constructs a new watch service that may be used to watch
            registered objects for changes and events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#newWatchService()" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.newWatchService()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.Spi.FileSystemProvider? Provider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.FileNio.Spi.FileSystemProvider Provider() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.Provider" />
      <MemberSignature Language="F#" Value="abstract member Provider : unit -&gt; Java.Nio.FileNio.Spi.FileSystemProvider" Usage="fileSystem.Provider " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("provider", "()Ljava/nio/file/spi/FileSystemProvider;", "GetProviderHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("provider", "()Ljava/nio/file/spi/FileSystemProvider;", "GetProviderHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.Spi.FileSystemProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the provider that created this file system.</summary>
        <returns>The provider that created this file system.</returns>
        <remarks>
          <para>Returns the provider that created this file system.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#provider()" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.provider()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootDirectories">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.IIterable? RootDirectories { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.IIterable RootDirectories" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.RootDirectories" />
      <MemberSignature Language="F#" Value="member this.RootDirectories : Java.Lang.IIterable" Usage="Java.Nio.FileNio.FileSystem.RootDirectories" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRootDirectories", "()Ljava/lang/Iterable;", "GetGetRootDirectoriesHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRootDirectories", "()Ljava/lang/Iterable;", "GetGetRootDirectoriesHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IIterable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public abstract string? Separator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Separator" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.Separator" />
      <MemberSignature Language="F#" Value="member this.Separator : string" Usage="Java.Nio.FileNio.FileSystem.Separator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSeparator", "()Ljava/lang/String;", "GetGetSeparatorHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSeparator", "()Ljava/lang/String;", "GetGetSeparatorHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedFileAttributeViews">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.ICollection&lt;string&gt;? SupportedFileAttributeViews ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; SupportedFileAttributeViews() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.FileNio.FileSystem.SupportedFileAttributeViews" />
      <MemberSignature Language="F#" Value="abstract member SupportedFileAttributeViews : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="fileSystem.SupportedFileAttributeViews " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("supportedFileAttributeViews", "()Ljava/util/Set;", "GetSupportedFileAttributeViewsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("supportedFileAttributeViews", "()Ljava/util/Set;", "GetSupportedFileAttributeViewsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the set of the <c>FileAttributeView#name names</c> of the file
            attribute views supported by this <c>FileSystem</c>.</summary>
        <returns>An unmodifiable set of the names of the supported file attribute
                     views</returns>
        <remarks>
          <para>Returns the set of the <c>FileAttributeView#name names</c> of the file
            attribute views supported by this <c>FileSystem</c>.</para>
          <para>The <c>BasicFileAttributeView</c> is required to be supported and
            therefore the set contains at least one element, "basic".</para>
          <para>The <c>FileStore#supportsFileAttributeView(String)
            supportsFileAttributeView(String)</c> method may be used to test if an
            underlying <c>FileStore</c> supports the file attributes identified by a
            file attribute view.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/file/FileSystem#supportedFileAttributeViews()" title="Reference documentation">Java documentation for <code>java.nio.file.FileSystem.supportedFileAttributeViews()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.FileNio.FileSystem.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.FileNio.FileSystem.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserPrincipalLookupService">
      <MemberSignature Language="C#" Value="public abstract Java.Nio.FileNio.Attributes.UserPrincipalLookupService? UserPrincipalLookupService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.FileNio.Attributes.UserPrincipalLookupService UserPrincipalLookupService" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.FileNio.FileSystem.UserPrincipalLookupService" />
      <MemberSignature Language="F#" Value="member this.UserPrincipalLookupService : Java.Nio.FileNio.Attributes.UserPrincipalLookupService" Usage="Java.Nio.FileNio.FileSystem.UserPrincipalLookupService" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserPrincipalLookupService", "()Ljava/nio/file/attribute/UserPrincipalLookupService;", "GetGetUserPrincipalLookupServiceHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserPrincipalLookupService", "()Ljava/nio/file/attribute/UserPrincipalLookupService;", "GetGetUserPrincipalLookupServiceHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.FileNio.Attributes.UserPrincipalLookupService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
