<Type Name="IEntityResolver2" FullName="Org.Xml.Sax.Ext.IEntityResolver2">
  <TypeSignature Language="C#" Value="public interface IEntityResolver2 : IDisposable, Java.Interop.IJavaPeerable, Org.Xml.Sax.IEntityResolver" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEntityResolver2 implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Xml.Sax.IEntityResolver, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.Ext.IEntityResolver2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEntityResolver2&#xA;Implements IDisposable, IEntityResolver, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEntityResolver2 : IDisposable, Java::Interop::IJavaPeerable, Org::Xml::Sax::IEntityResolver" />
  <TypeSignature Language="F#" Value="type IEntityResolver2 = interface&#xA;    interface IEntityResolver&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.IEntityResolver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/ext/EntityResolver2", "", "Org.Xml.Sax.Ext.IEntityResolver2Invoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/ext/EntityResolver2", "", "Org.Xml.Sax.Ext.IEntityResolver2Invoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Extended interface for mapping external entity references to input
            sources, or providing a missing external subset.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/ext/EntityResolver2" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.EntityResolver2</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="GetExternalSubset">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.InputSource? GetExternalSubset (string? name, string? baseURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource GetExternalSubset(string name, string baseURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.IEntityResolver2.GetExternalSubset(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExternalSubset (name As String, baseURI As String) As InputSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::Xml::Sax::InputSource ^ GetExternalSubset(System::String ^ name, System::String ^ baseURI);" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSubset : string * string -&gt; Org.Xml.Sax.InputSource" Usage="iEntityResolver2.GetExternalSubset (name, baseURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExternalSubset", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetGetExternalSubset_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.IEntityResolver2Invoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getExternalSubset", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetGetExternalSubset_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.IEntityResolver2Invoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the document root element.  This name comes
               from a DOCTYPE declaration (where available) or from the actual
               root element.</param>
        <param name="baseURI">The document's base URI, serving as an additional
               hint for selecting the external subset.  This is always an absolute
               URI, unless it is null because the XMLReader was given an InputSource
               without one.</param>
        <summary>Allows applications to provide an external subset for documents
            that don't explicitly define one.</summary>
        <returns>An InputSource object describing the new external subset
               to be used by the parser, or null to indicate that no external
               subset is provided.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/EntityResolver2#getExternalSubset(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.EntityResolver2.getExternalSubset(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public Org.Xml.Sax.InputSource? ResolveEntity (string? name, string? publicId, string? baseURI, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource ResolveEntity(string name, string publicId, string baseURI, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.IEntityResolver2.ResolveEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ResolveEntity (name As String, publicId As String, baseURI As String, systemId As String) As InputSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::Xml::Sax::InputSource ^ ResolveEntity(System::String ^ name, System::String ^ publicId, System::String ^ baseURI, System::String ^ systemId);" />
      <MemberSignature Language="F#" Value="abstract member ResolveEntity : string * string * string * string -&gt; Org.Xml.Sax.InputSource" Usage="iEntityResolver2.ResolveEntity (name, publicId, baseURI, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.IEntityResolver2Invoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.IEntityResolver2Invoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the external entity being resolved.
               Either "[dtd]" for the external subset, or a name starting
               with "%" to indicate a parameter entity, or else the name of
               a general entity.  This is never null when invoked by a SAX2
               parser.</param>
        <param name="publicId">The public identifier of the external entity being
               referenced (normalized as required by the XML specification), or
               null if none was supplied.</param>
        <param name="baseURI">The URI with respect to which relative systemIDs
               are interpreted.  This is always an absolute URI, unless it is
               null (likely because the XMLReader was given an InputSource without
             one).  This URI is defined by the XML specification to be the one
               associated with the "&amp;lt;" starting the relevant declaration.</param>
        <param name="systemId">The system identifier of the external entity
               being referenced; either a relative or absolute URI.
             This is never null when invoked by a SAX2 parser; only declared
               entities, and any external subset, are resolved by such parsers.</param>
        <summary>Allows applications to map references to external entities into input
            sources, or tell the parser it should use conventional URI resolution.</summary>
        <returns>An InputSource object describing the new input source to
               be used by the parser.  Returning null directs the parser to
               resolve the system ID against the base URI and open a connection
               to resulting URI.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/EntityResolver2#resolveEntity(java.lang.String,%20java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.EntityResolver2.resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
