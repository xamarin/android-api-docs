<Type Name="ILexicalHandler" FullName="Org.Xml.Sax.Ext.ILexicalHandler">
  <TypeSignature Language="C#" Value="public interface ILexicalHandler : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILexicalHandler implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/ext/LexicalHandler", "", "Org.Xml.Sax.Ext.ILexicalHandlerInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SAX2 extension handler for lexical events.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">SAX2 extension handler for lexical events.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i>
 See 
 for further information.
 </blockquote></format></para>
      <para tool="javadoc-to-mdoc">This is an optional extension handler for SAX2 to provide
 lexical information about an XML document, such as comments
 and CDATA section boundaries.
 XML readers are not required to recognize this handler, and it
 is not part of core-only SAX2 distributions.</para>
      <para tool="javadoc-to-mdoc">The events in the lexical handler apply to the entire document,
 not just to the document element, and all lexical handler events
 must appear between the content handler's startDocument and
 endDocument events.</para>
      <para tool="javadoc-to-mdoc">To set the LexicalHandler for an XML reader, use the
 <c><see cref="M:Org.Xml.Sax.IXMLReader.SetProperty(System.String,Java.Lang.Object)" /></c> method
 with the property name
 <c>http://xml.org/sax/properties/lexical-handler</c>
 and an object implementing this interface (or null) as the value.
 If the reader does not report lexical events, it will throw a
 <c><see cref="T:Org.Xml.Sax.SAXNotRecognizedException" /></c>
 when you attempt to register the handler.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public void Comment (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comment(char[] ch, int32 start, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("comment", "([CII)V", "GetComment_arrayCIIHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array holding the characters in the comment.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use from the array.</param>
        <summary>Report an XML comment anywhere in the document.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report an XML comment anywhere in the document.

 </para>
          <para tool="javadoc-to-mdoc">This callback will be used for comments inside or outside the
 document element, including comments in the external DTD
 subset (if read).  Comments in the DTD must be properly
 nested inside start/endDTD and start/endEntity events (if
 used).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#comment(char[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EndCDATA">
      <MemberSignature Language="C#" Value="public void EndCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCDATA() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endCDATA", "()V", "GetEndCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of a CDATA section.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of a CDATA section.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#endCDATA()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartCDATA" />
      </Docs>
    </Member>
    <Member MemberName="EndDTD">
      <MemberSignature Language="C#" Value="public void EndDTD ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDTD() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDTD", "()V", "GetEndDTDHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of DTD declarations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of DTD declarations.

 </para>
          <para tool="javadoc-to-mdoc">This method is intended to report the end of the
 DOCTYPE declaration; if the document has no DOCTYPE declaration,
 this method will not be invoked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#endDTD()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartDTD(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndEntity">
      <MemberSignature Language="C#" Value="public void EndEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndEntity(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endEntity", "(Ljava/lang/String;)V", "GetEndEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity that is ending.</param>
        <summary>Report the end of an entity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of an entity.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#endEntity(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartCDATA">
      <MemberSignature Language="C#" Value="public void StartCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCDATA() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startCDATA", "()V", "GetStartCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the start of a CDATA section.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the start of a CDATA section.

 </para>
          <para tool="javadoc-to-mdoc">The contents of the CDATA section will be reported through
 the regular <c><see cref="M:Org.Xml.Sax.IContentHandler.Characters(System.Char[],System.Int32,System.Int32)" /></c> event; this event is intended only to report
 the boundary.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#startCDATA()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndCDATA" />
      </Docs>
    </Member>
    <Member MemberName="StartDTD">
      <MemberSignature Language="C#" Value="public void StartDTD (string name, string publicId, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDTD(string name, string publicId, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDTD", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetStartDTD_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The document type name.</param>
        <param name="publicId">The declared public identifier for the
        external DTD subset, or null if none was declared.</param>
        <param name="systemId">The declared system identifier for the
        external DTD subset, or null if none was declared.
        (Note that this is not resolved against the document
        base URI.)</param>
        <summary>Report the start of DTD declarations, if any.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the start of DTD declarations, if any.

 </para>
          <para tool="javadoc-to-mdoc">This method is intended to report the beginning of the
 DOCTYPE declaration; if the document has no DOCTYPE declaration,
 this method will not be invoked.</para>
          <para tool="javadoc-to-mdoc">All declarations reported through
 <c><see cref="T:Org.Xml.Sax.IDTDHandler" /></c> or
 <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c> events must appear
 between the startDTD and <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD" /></c> events.
 Declarations are assumed to belong to the internal DTD subset
 unless they appear between <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" /></c>
 and <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)" /></c> events.  Comments and
 processing instructions from the DTD should also be reported
 between the startDTD and endDTD events, in their original
 order of (logical) occurrence; they are not required to
 appear in their correct locations relative to DTDHandler
 or DeclHandler events, however.</para>
          <para tool="javadoc-to-mdoc">Note that the start/endDTD events will appear within
 the start/endDocument events from ContentHandler and
 before the first
 <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c>
 event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#startDTD(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an
            exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD" />
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartEntity">
      <MemberSignature Language="C#" Value="public void StartEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartEntity(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startEntity", "(Ljava/lang/String;)V", "GetStartEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%', and if it is the
        external DTD subset, it will be "[dtd]".</param>
        <summary>Report the beginning of some internal and external XML entities.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the beginning of some internal and external XML entities.

 </para>
          <para tool="javadoc-to-mdoc">The reporting of parameter entities (including
 the external DTD subset) is optional, and SAX2 drivers that
 report LexicalHandler events may not implement it; you can use the
 <c>http://xml.org/sax/features/lexical-handler/parameter-entities</c>
 feature to query or control the reporting of parameter entities.</para>
          <para tool="javadoc-to-mdoc">General entities are reported with their regular names,
 parameter entities have '%' prepended to their names, and
 the external DTD subset has the pseudo-entity name "[dtd]".</para>
          <para tool="javadoc-to-mdoc">When a SAX2 driver is providing these events, all other
 events must be properly nested within start/end entity
 events.  There is no additional requirement that events from
 <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c> or
 <c><see cref="T:Org.Xml.Sax.IDTDHandler" /></c> be properly ordered.</para>
          <para tool="javadoc-to-mdoc">Note that skipped entities will be reported through the
 <c><see cref="M:Org.Xml.Sax.IContentHandler.SkippedEntity(System.String)" /></c>
 event, which is part of the ContentHandler interface.</para>
          <para tool="javadoc-to-mdoc">Because of the streaming event model that SAX uses, some
 entity boundaries cannot be reported under any
 circumstances:<list type="bullet"><item><term>general entities within attribute values</term></item><item><term>parameter entities within declarations</term></item></list></para>
          <para tool="javadoc-to-mdoc">These will be silently expanded, with no indication of where
 the original entity boundaries were.</para>
          <para tool="javadoc-to-mdoc">Note also that the boundaries of character references (which
 are not really entities anyway) are not reported.</para>
          <para tool="javadoc-to-mdoc">All start/endEntity events must be properly nested.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/LexicalHandler.html#startEntity(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)" />
        <altmember cref="M:Org.Xml.Sax.Ext.IDeclHandler.InternalEntityDecl(System.String, System.String)" />
        <altmember cref="M:Org.Xml.Sax.Ext.IDeclHandler.ExternalEntityDecl(System.String, System.String, System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
