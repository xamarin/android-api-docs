<Type Name="ILexicalHandler" FullName="Org.Xml.Sax.Ext.ILexicalHandler">
  <TypeSignature Language="C#" Value="public interface ILexicalHandler : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ILexicalHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.Ext.ILexicalHandler" />
  <TypeSignature Language="F#" Value="type ILexicalHandler = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xml/sax/ext/LexicalHandler", "", "Org.Xml.Sax.Ext.ILexicalHandlerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xml/sax/ext/LexicalHandler", "", "Org.Xml.Sax.Ext.ILexicalHandlerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SAX2 extension handler for lexical events.</summary>
    <remarks>
      <para>SAX2 extension handler for lexical events.
            
            &lt;blockquote&gt;
            &lt;em&gt;This module, both source code and documentation, is in the
            Public Domain, and comes with &lt;strong&gt;NO WARRANTY&lt;/strong&gt;.&lt;/em&gt;
            See <see href="http://www.saxproject.org">http://www.saxproject.org</see>
            for further information.
            &lt;/blockquote&gt;</para>
      <para>This is an optional extension handler for SAX2 to provide
            lexical information about an XML document, such as comments
            and CDATA section boundaries.
            XML readers are not required to recognize this handler, and it
            is not part of core-only SAX2 distributions.</para>
      <para>The events in the lexical handler apply to the entire document,
            not just to the document element, and all lexical handler events
            must appear between the content handler's startDocument and
            endDocument events.</para>
      <para>To set the LexicalHandler for an XML reader, use the
            <c>org.xml.sax.XMLReader#setProperty setProperty</c> method
            with the property name
            <c>http://xml.org/sax/properties/lexical-handler</c>
            and an object implementing this interface (or null) as the value.
            If the reader does not report lexical events, it will throw a
            <c>org.xml.sax.SAXNotRecognizedException SAXNotRecognizedException</c>
            when you attempt to register the handler.</para>
      <para>Added in SAX 2.0 (extensions 1.0).</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public void Comment (char[]? ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comment(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.Comment(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Comment : char[] * int * int -&gt; unit" Usage="iLexicalHandler.Comment (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("comment", "([CII)V", "GetComment_arrayCIIHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("comment", "([CII)V", "GetComment_arrayCIIHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array holding the characters in the comment.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use from the array.</param>
        <summary>Report an XML comment anywhere in the document.</summary>
        <remarks>
          <para>Report an XML comment anywhere in the document.</para>
          <para>This callback will be used for comments inside or outside the
            document element, including comments in the external DTD
            subset (if read).  Comments in the DTD must be properly
            nested inside start/endDTD and start/endEntity events (if
            used).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#comment(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.comment(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EndCDATA">
      <MemberSignature Language="C#" Value="public void EndCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCDATA() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.EndCDATA" />
      <MemberSignature Language="F#" Value="abstract member EndCDATA : unit -&gt; unit" Usage="iLexicalHandler.EndCDATA " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endCDATA", "()V", "GetEndCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endCDATA", "()V", "GetEndCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of a CDATA section.</summary>
        <remarks>
          <para>Report the end of a CDATA section.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#endCDATA()" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.endCDATA()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartCDATA" />
      </Docs>
    </Member>
    <Member MemberName="EndDTD">
      <MemberSignature Language="C#" Value="public void EndDTD ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDTD() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD" />
      <MemberSignature Language="F#" Value="abstract member EndDTD : unit -&gt; unit" Usage="iLexicalHandler.EndDTD " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endDTD", "()V", "GetEndDTDHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endDTD", "()V", "GetEndDTDHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of DTD declarations.</summary>
        <remarks>
          <para>Report the end of DTD declarations.</para>
          <para>This method is intended to report the end of the
            DOCTYPE declaration; if the document has no DOCTYPE declaration,
            this method will not be invoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#endDTD()" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.endDTD()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartDTD(System.String, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndEntity">
      <MemberSignature Language="C#" Value="public void EndEntity (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndEntity : string -&gt; unit" Usage="iLexicalHandler.EndEntity name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("endEntity", "(Ljava/lang/String;)V", "GetEndEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("endEntity", "(Ljava/lang/String;)V", "GetEndEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity that is ending.</param>
        <summary>Report the end of an entity.</summary>
        <remarks>
          <para>Report the end of an entity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#endEntity(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.endEntity(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartCDATA">
      <MemberSignature Language="C#" Value="public void StartCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCDATA() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.StartCDATA" />
      <MemberSignature Language="F#" Value="abstract member StartCDATA : unit -&gt; unit" Usage="iLexicalHandler.StartCDATA " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startCDATA", "()V", "GetStartCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startCDATA", "()V", "GetStartCDATAHandler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the start of a CDATA section.</summary>
        <remarks>
          <para>Report the start of a CDATA section.</para>
          <para>The contents of the CDATA section will be reported through
            the regular <c>org.xml.sax.ContentHandler#characters
            characters</c> event; this event is intended only to report
            the boundary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#startCDATA()" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.startCDATA()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndCDATA" />
      </Docs>
    </Member>
    <Member MemberName="StartDTD">
      <MemberSignature Language="C#" Value="public void StartDTD (string? name, string? publicId, string? systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDTD(string name, string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.StartDTD(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartDTD : string * string * string -&gt; unit" Usage="iLexicalHandler.StartDTD (name, publicId, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startDTD", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetStartDTD_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startDTD", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetStartDTD_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The document type name.</param>
        <param name="publicId">The declared public identifier for the
                   external DTD subset, or null if none was declared.</param>
        <param name="systemId">The declared system identifier for the
                   external DTD subset, or null if none was declared.
                   (Note that this is not resolved against the document
                   base URI.)</param>
        <summary>Report the start of DTD declarations, if any.</summary>
        <remarks>
          <para>Report the start of DTD declarations, if any.</para>
          <para>This method is intended to report the beginning of the
            DOCTYPE declaration; if the document has no DOCTYPE declaration,
            this method will not be invoked.</para>
          <para>All declarations reported through
            <c>org.xml.sax.DTDHandler DTDHandler</c> or
            <c>org.xml.sax.ext.DeclHandler DeclHandler</c> events must appear
            between the startDTD and <c>#endDTD endDTD</c> events.
            Declarations are assumed to belong to the internal DTD subset
            unless they appear between <c>#startEntity startEntity</c>
            and <c>#endEntity endEntity</c> events.  Comments and
            processing instructions from the DTD should also be reported
            between the startDTD and endDTD events, in their original
            order of (logical) occurrence; they are not required to
            appear in their correct locations relative to DTDHandler
            or DeclHandler events, however.</para>
          <para>Note that the start/endDTD events will appear within
            the start/endDocument events from ContentHandler and
            before the first
            <c>org.xml.sax.ContentHandler#startElement startElement</c>
            event.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#startDTD(java.lang.String,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.startDTD(java.lang.String, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an
            exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD" />
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartEntity">
      <MemberSignature Language="C#" Value="public void StartEntity (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartEntity : string -&gt; unit" Usage="iLexicalHandler.StartEntity name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startEntity", "(Ljava/lang/String;)V", "GetStartEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startEntity", "(Ljava/lang/String;)V", "GetStartEntity_Ljava_lang_String_Handler:Org.Xml.Sax.Ext.ILexicalHandlerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
                   entity, the name will begin with '%', and if it is the
                   external DTD subset, it will be "[dtd]".</param>
        <summary>Report the beginning of some internal and external XML entities.</summary>
        <remarks>
          <para>Report the beginning of some internal and external XML entities.</para>
          <para>The reporting of parameter entities (including
            the external DTD subset) is optional, and SAX2 drivers that
            report LexicalHandler events may not implement it; you can use the
            <c>http://xml.org/sax/features/lexical-handler/parameter-entities</c>
            feature to query or control the reporting of parameter entities.</para>
          <para>General entities are reported with their regular names,
            parameter entities have '%' prepended to their names, and
            the external DTD subset has the pseudo-entity name "[dtd]".</para>
          <para>When a SAX2 driver is providing these events, all other
            events must be properly nested within start/end entity
            events.  There is no additional requirement that events from
            <c>org.xml.sax.ext.DeclHandler DeclHandler</c> or
            <c>org.xml.sax.DTDHandler DTDHandler</c> be properly ordered.</para>
          <para>Note that skipped entities will be reported through the
            <c>org.xml.sax.ContentHandler#skippedEntity skippedEntity</c>
            event, which is part of the ContentHandler interface.</para>
          <para>Because of the streaming event model that SAX uses, some
            entity boundaries cannot be reported under any
            circumstances:</para>
          <para>&lt;ul&gt;
            &lt;li&gt;general entities within attribute values&lt;/li&gt;
            &lt;li&gt;parameter entities within declarations&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>These will be silently expanded, with no indication of where
            the original entity boundaries were.</para>
          <para>Note also that the boundaries of character references (which
            are not really entities anyway) are not reported.</para>
          <para>All start/endEntity events must be properly nested.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xml/sax/ext/LexicalHandler#startEntity(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xml.sax.ext.LexicalHandler.startEntity(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">The application may raise an exception.</exception>
        <altmember cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)" />
        <altmember cref="M:Org.Xml.Sax.Ext.IDeclHandler.InternalEntityDecl(System.String, System.String)" />
        <altmember cref="M:Org.Xml.Sax.Ext.IDeclHandler.ExternalEntityDecl(System.String, System.String, System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
