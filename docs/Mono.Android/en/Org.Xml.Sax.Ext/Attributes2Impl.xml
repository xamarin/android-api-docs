<Type Name="Attributes2Impl" FullName="Org.Xml.Sax.Ext.Attributes2Impl">
  <TypeSignature Language="C#" Value="public class Attributes2Impl : Org.Xml.Sax.Helpers.AttributesImpl, IDisposable, Org.Xml.Sax.Ext.IAttributes2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Attributes2Impl extends Org.Xml.Sax.Helpers.AttributesImpl implements class Android.Runtime.IJavaObject, class Org.Xml.Sax.Ext.IAttributes2, class Org.Xml.Sax.IAttributes, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Org.Xml.Sax.Helpers.AttributesImpl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.IAttributes2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/ext/Attributes2Impl", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>SAX2 extension helper for additional Attributes information,
 implementing the <c><see cref="T:Org.Xml.Sax.Ext.IAttributes2" /></c> interface.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">SAX2 extension helper for additional Attributes information,
 implementing the <c><see cref="T:Org.Xml.Sax.Ext.IAttributes2" /></c> interface.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i></blockquote></format></para>
      <para tool="javadoc-to-mdoc">This is not part of core-only SAX2 distributions.</para>
      <para tool="javadoc-to-mdoc">The <i>specified</i> flag for each attribute will always
 be true, unless it has been set to false in the copy constructor
 or using <c><see cref="M:Org.Xml.Sax.Ext.Attributes2Impl.SetSpecified(System.Int32,System.Boolean)" /></c>.
 Similarly, the <i>declared</i> flag for each attribute will
 always be false, except for defaulted attributes (<i>specified</i>
 is false), non-CDATA attributes, or when it is set to true using
 <c><see cref="M:Org.Xml.Sax.Ext.Attributes2Impl.SetDeclared(System.Int32,System.Boolean)" /></c>.
 If you change an attribute's type by hand, you may need to modify
 its <i>declared</i> flag to match.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attributes2Impl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Construct a new, empty Attributes2Impl object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Construct a new, empty Attributes2Impl object.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#Attributes2Impl()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attributes2Impl (Org.Xml.Sax.IAttributes atts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.Xml.Sax.IAttributes atts) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/xml/sax/Attributes;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="atts" Type="Org.Xml.Sax.IAttributes" />
      </Parameters>
      <Docs>
        <param name="atts">To be added.</param>
        <summary>Copy an existing Attributes or Attributes2 object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an existing Attributes or Attributes2 object.
 If the object implements Attributes2, values of the
 <i>specified</i> and <i>declared</i> flags for each
 attribute are copied.
 Otherwise the flag values are defaulted to assume no DTD was used,
 unless there is evidence to the contrary (such as attributes with
 type other than CDATA, which must have been <i>declared</i>).

 </para>
          <para tool="javadoc-to-mdoc">This constructor is especially useful inside a
 <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c> event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#Attributes2Impl(org.xml.sax.Attributes)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Attributes2Impl (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public virtual bool IsDeclared (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclared(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDeclared", "(I)Z", "GetIsDeclared_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The attribute index (zero-based).</param>
        <summary>Returns false unless the attribute was declared in the DTD.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns false unless the attribute was declared in the DTD.
 This helps distinguish two kinds of attributes that SAX reports
 as CDATA:  ones that were declared (and hence are usually valid),
 and those that were not (and which are never valid).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isDeclared(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public virtual bool IsDeclared (string qName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclared(string qName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDeclared", "(Ljava/lang/String;)Z", "GetIsDeclared_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qName">The XML qualified (prefixed) name.</param>
        <summary>Returns false unless the attribute was declared in the DTD.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns false unless the attribute was declared in the DTD.
 This helps distinguish two kinds of attributes that SAX reports
 as CDATA:  ones that were declared (and hence are usually valid),
 and those that were not (and which are never valid).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isDeclared(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDeclared">
      <MemberSignature Language="C#" Value="public virtual bool IsDeclared (string uri, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeclared(string uri, string localName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isDeclared", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetIsDeclared_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The Namespace URI, or the empty string if
        the name has no Namespace URI.</param>
        <param name="localName">The attribute's local name.</param>
        <summary>Returns false unless the attribute was declared in the DTD.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns false unless the attribute was declared in the DTD.
 This helps distinguish two kinds of attributes that SAX reports
 as CDATA:  ones that were declared (and hence are usually valid),
 and those that were not (and which are never valid).

 </para>
          <para tool="javadoc-to-mdoc">Remember that since DTDs do not "understand" namespaces, the
 namespace URI associated with an attribute may not have come from
 the DTD.  The declaration will have applied to the attribute's
 <i>qName</i>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isDeclared(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecified">
      <MemberSignature Language="C#" Value="public virtual bool IsSpecified (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSpecified(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpecified", "(I)Z", "GetIsSpecified_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The attribute index (zero-based).</param>
        <summary>Returns the current value of an attribute's "specified" flag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current value of an attribute's "specified" flag.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isSpecified(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">When the
            supplied index does not identify an attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSpecified">
      <MemberSignature Language="C#" Value="public virtual bool IsSpecified (string qName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSpecified(string qName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpecified", "(Ljava/lang/String;)Z", "GetIsSpecified_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="qName">The XML qualified (prefixed) name.</param>
        <summary>Returns the current value of an attribute's "specified" flag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current value of an attribute's "specified" flag.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isSpecified(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">When the
            supplied name does not identify an attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSpecified">
      <MemberSignature Language="C#" Value="public virtual bool IsSpecified (string uri, string localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSpecified(string uri, string localName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSpecified", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetIsSpecified_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">The Namespace URI, or the empty string if
        the name has no Namespace URI.</param>
        <param name="localName">The attribute's local name.</param>
        <summary>Returns the current value of an attribute's "specified" flag.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current value of an attribute's "specified" flag.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#isSpecified(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">When the
            supplied names do not identify an attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetDeclared">
      <MemberSignature Language="C#" Value="public virtual void SetDeclared (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDeclared(int32 index, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDeclared", "(IZ)V", "GetSetDeclared_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute (zero-based).</param>
        <param name="value">The desired flag value.</param>
        <summary>Assign a value to the "declared" flag of a specific attribute.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a value to the "declared" flag of a specific attribute.
 This is normally needed only for attributes of type CDATA,
 including attributes whose type is changed to or from CDATA.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#setDeclared(int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">When the
            supplied index does not identify an attribute.</exception>
        <altmember cref="M:Org.Xml.Sax.Helpers.AttributesImpl.SetType(System.Int32, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetSpecified">
      <MemberSignature Language="C#" Value="public virtual void SetSpecified (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpecified(int32 index, bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSpecified", "(IZ)V", "GetSetSpecified_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">The index of the attribute (zero-based).</param>
        <param name="value">The desired flag value.</param>
        <summary>Assign a value to the "specified" flag of a specific attribute.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Assign a value to the "specified" flag of a specific attribute.
 This is the only way this flag can be cleared, except clearing
 by initialization with the copy constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/Attributes2Impl.html#setSpecified(int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.ArrayIndexOutOfBoundsException">When the
            supplied index does not identify an attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
