<Type Name="DefaultHandler2" FullName="Org.Xml.Sax.Ext.DefaultHandler2">
  <TypeSignature Language="C#" Value="public class DefaultHandler2 : Org.Xml.Sax.Helpers.DefaultHandler, IDisposable, Java.Interop.IJavaPeerable, Org.Xml.Sax.Ext.IDeclHandler, Org.Xml.Sax.Ext.IEntityResolver2, Org.Xml.Sax.Ext.ILexicalHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHandler2 extends Org.Xml.Sax.Helpers.DefaultHandler implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.Xml.Sax.Ext.IDeclHandler, class Org.Xml.Sax.Ext.IEntityResolver2, class Org.Xml.Sax.Ext.ILexicalHandler, class Org.Xml.Sax.IEntityResolver, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.Xml.Sax.Ext.DefaultHandler2" />
  <TypeSignature Language="F#" Value="type DefaultHandler2 = class&#xA;    inherit DefaultHandler&#xA;    interface IDeclHandler&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IEntityResolver2&#xA;    interface IEntityResolver&#xA;    interface ILexicalHandler" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Org.Xml.Sax.Helpers.DefaultHandler</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.IDeclHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.IEntityResolver2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.ILexicalHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/ext/DefaultHandler2", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class extends the SAX2 base handler class to support the
            SAX2 <c>LexicalHandler</c>, <c>DeclHandler</c>, and
            <c>EntityResolver2</c> extensions.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHandler2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a handler which ignores all parsing events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultHandler2 (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Org.Xml.Sax.Ext.DefaultHandler2 : nativeint * Android.Runtime.JniHandleOwnership -&gt; Org.Xml.Sax.Ext.DefaultHandler2" Usage="new Org.Xml.Sax.Ext.DefaultHandler2 (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeDecl">
      <MemberSignature Language="C#" Value="public virtual void AttributeDecl (string eName, string aName, string type, string mode, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttributeDecl(string eName, string aName, string type, string mode, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.AttributeDecl(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AttributeDecl : string * string * string * string * string -&gt; unit&#xA;override this.AttributeDecl : string * string * string * string * string -&gt; unit" Usage="defaultHandler2.AttributeDecl (eName, aName, type, mode, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attributeDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetAttributeDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eName" Type="System.String" />
        <Parameter Name="aName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eName">The name of the associated element.</param>
        <param name="aName">The name of the attribute.</param>
        <param name="type">A string representing the attribute type.</param>
        <param name="mode">A string representing the attribute defaulting mode
        ("#IMPLIED", "#REQUIRED", or "#FIXED") or null if
        none of these applies.</param>
        <param name="value">A string representing the attribute's default value,
        or null if there is none.</param>
        <summary>Report an attribute type declaration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IDeclHandler.AttributeDecl(System.String,System.String,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual void Comment (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comment(char[] ch, int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.Comment(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Comment : char[] * int * int -&gt; unit&#xA;override this.Comment : char[] * int * int -&gt; unit" Usage="defaultHandler2.Comment (ch, start, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("comment", "([CII)V", "GetComment_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array holding the characters in the comment.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use from the array.</param>
        <summary>Report an XML comment anywhere in the document.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.Comment(System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ElementDecl">
      <MemberSignature Language="C#" Value="public virtual void ElementDecl (string name, string model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ElementDecl(string name, string model) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.ElementDecl(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ElementDecl : string * string -&gt; unit&#xA;override this.ElementDecl : string * string -&gt; unit" Usage="defaultHandler2.ElementDecl (name, model)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("elementDecl", "(Ljava/lang/String;Ljava/lang/String;)V", "GetElementDecl_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="model" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The element type name.</param>
        <param name="model">The content model as a normalized string.</param>
        <summary>Report an element type declaration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IDeclHandler.ElementDecl(System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndCDATA">
      <MemberSignature Language="C#" Value="public virtual void EndCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCDATA() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.EndCDATA" />
      <MemberSignature Language="F#" Value="abstract member EndCDATA : unit -&gt; unit&#xA;override this.EndCDATA : unit -&gt; unit" Usage="defaultHandler2.EndCDATA " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endCDATA", "()V", "GetEndCDATAHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of a CDATA section.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.EndCDATA</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndDTD">
      <MemberSignature Language="C#" Value="public virtual void EndDTD ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDTD() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.EndDTD" />
      <MemberSignature Language="F#" Value="abstract member EndDTD : unit -&gt; unit&#xA;override this.EndDTD : unit -&gt; unit" Usage="defaultHandler2.EndDTD " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDTD", "()V", "GetEndDTDHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of DTD declarations.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="EndEntity">
      <MemberSignature Language="C#" Value="public virtual void EndEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.EndEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member EndEntity : string -&gt; unit&#xA;override this.EndEntity : string -&gt; unit" Usage="defaultHandler2.EndEntity name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endEntity", "(Ljava/lang/String;)V", "GetEndEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity that is ending.</param>
        <summary>Report the end of an entity.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ExternalEntityDecl">
      <MemberSignature Language="C#" Value="public virtual void ExternalEntityDecl (string name, string publicId, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExternalEntityDecl(string name, string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.ExternalEntityDecl(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ExternalEntityDecl : string * string * string -&gt; unit&#xA;override this.ExternalEntityDecl : string * string * string -&gt; unit" Usage="defaultHandler2.ExternalEntityDecl (name, publicId, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("externalEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetExternalEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%'.</param>
        <param name="publicId">The entity's public identifier, or null if none
        was given.</param>
        <param name="systemId">The entity's system identifier.</param>
        <summary>Report a parsed external entity declaration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IDeclHandler.ExternalEntityDecl(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="GetExternalSubset">
      <MemberSignature Language="C#" Value="public virtual Org.Xml.Sax.InputSource GetExternalSubset (string name, string baseURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource GetExternalSubset(string name, string baseURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.GetExternalSubset(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetExternalSubset : string * string -&gt; Org.Xml.Sax.InputSource&#xA;override this.GetExternalSubset : string * string -&gt; Org.Xml.Sax.InputSource" Usage="defaultHandler2.GetExternalSubset (name, baseURI)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalSubset", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetGetExternalSubset_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the document root element.  This name comes
               from a DOCTYPE declaration (where available) or from the actual
               root element. The parameter is ignored.</param>
        <param name="baseURI">The document's base URI, serving as an additional
               hint for selecting the external subset.  This is always an absolute
               URI, unless it is null because the XMLReader was given an InputSource
               without one. The parameter is ignored.</param>
        <summary>Tells the parser that if no external subset has been declared
            in the document text, none should be used.</summary>
        <returns>null (always).</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IEntityResolver2.GetExternalSubset(System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="InternalEntityDecl">
      <MemberSignature Language="C#" Value="public virtual void InternalEntityDecl (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InternalEntityDecl(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.InternalEntityDecl(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member InternalEntityDecl : string * string -&gt; unit&#xA;override this.InternalEntityDecl : string * string -&gt; unit" Usage="defaultHandler2.InternalEntityDecl (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("internalEntityDecl", "(Ljava/lang/String;Ljava/lang/String;)V", "GetInternalEntityDecl_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%'.</param>
        <param name="value">The replacement text of the entity.</param>
        <summary>Report an internal entity declaration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IDeclHandler.InternalEntityDecl(System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Ext.DefaultHandler2.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Org.Xml.Sax.Ext.DefaultHandler2.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public virtual Org.Xml.Sax.InputSource ResolveEntity (string name, string publicId, string baseURI, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource ResolveEntity(string name, string publicId, string baseURI, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.ResolveEntity(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.ResolveEntity : string * string * string * string -&gt; Org.Xml.Sax.InputSource" Usage="defaultHandler2.ResolveEntity (name, publicId, baseURI, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the external entity being resolved.
    Either "[dtd]" for the external subset, or a name starting
    with "%" to indicate a parameter entity, or else the name of
    a general entity.  This is never null when invoked by a SAX2
    parser.</param>
        <param name="publicId">The public identifier of the external entity being
               referenced (normalized as required by the XML specification), or
               null if none was supplied.</param>
        <param name="baseURI">The URI with respect to which relative systemIDs
    are interpreted.  This is always an absolute URI, unless it is
    null (likely because the XMLReader was given an InputSource without
  one).  This URI is defined by the XML specification to be the one
    associated with the "&lt;" starting the relevant declaration.</param>
        <param name="systemId">The system identifier of the external entity
               being referenced; either a relative or absolute URI.
             This is never null when invoked by a SAX2 parser; only declared
               entities, and any external subset, are resolved by such parsers.</param>
        <summary>Invokes
            <c>EntityResolver2#resolveEntity EntityResolver2.resolveEntity()</c>
            with null entity name and base URI.</summary>
        <returns>An InputSource object describing the new input source.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.IEntityResolver2.ResolveEntity(System.String,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartCDATA">
      <MemberSignature Language="C#" Value="public virtual void StartCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCDATA() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.StartCDATA" />
      <MemberSignature Language="F#" Value="abstract member StartCDATA : unit -&gt; unit&#xA;override this.StartCDATA : unit -&gt; unit" Usage="defaultHandler2.StartCDATA " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startCDATA", "()V", "GetStartCDATAHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the start of a CDATA section.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.StartCDATA</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartDTD">
      <MemberSignature Language="C#" Value="public virtual void StartDTD (string name, string publicId, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDTD(string name, string publicId, string systemId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.StartDTD(System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartDTD : string * string * string -&gt; unit&#xA;override this.StartDTD : string * string * string -&gt; unit" Usage="defaultHandler2.StartDTD (name, publicId, systemId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDTD", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetStartDTD_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The document type name.</param>
        <param name="publicId">The declared public identifier for the
        external DTD subset, or null if none was declared.</param>
        <param name="systemId">The declared system identifier for the
        external DTD subset, or null if none was declared.
        (Note that this is not resolved against the document
        base URI.)</param>
        <summary>Report the start of DTD declarations, if any.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.StartDTD(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="StartEntity">
      <MemberSignature Language="C#" Value="public virtual void StartEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartEntity(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.Xml.Sax.Ext.DefaultHandler2.StartEntity(System.String)" />
      <MemberSignature Language="F#" Value="abstract member StartEntity : string -&gt; unit&#xA;override this.StartEntity : string -&gt; unit" Usage="defaultHandler2.StartEntity name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startEntity", "(Ljava/lang/String;)V", "GetStartEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%', and if it is the
        external DTD subset, it will be "[dtd]".</param>
        <summary>Report the beginning of some internal and external XML entities.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Ext.DefaultHandler2.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Org.Xml.Sax.Ext.DefaultHandler2.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Org.Xml.Sax.Ext.DefaultHandler2.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Org.Xml.Sax.Ext.DefaultHandler2.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
