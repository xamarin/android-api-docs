<Type Name="DefaultHandler2" FullName="Org.Xml.Sax.Ext.DefaultHandler2">
  <TypeSignature Language="C#" Value="public class DefaultHandler2 : Org.Xml.Sax.Helpers.DefaultHandler, IDisposable, Org.Xml.Sax.Ext.IDeclHandler, Org.Xml.Sax.Ext.IEntityResolver2, Org.Xml.Sax.Ext.ILexicalHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultHandler2 extends Org.Xml.Sax.Helpers.DefaultHandler implements class Android.Runtime.IJavaObject, class Org.Xml.Sax.Ext.IDeclHandler, class Org.Xml.Sax.Ext.IEntityResolver2, class Org.Xml.Sax.Ext.ILexicalHandler, class Org.Xml.Sax.IEntityResolver, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Org.Xml.Sax.Helpers.DefaultHandler</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.IDeclHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.IEntityResolver2</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.Xml.Sax.Ext.ILexicalHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xml/sax/ext/DefaultHandler2", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class extends the SAX2 base handler class to support the
 SAX2 <c><see cref="T:Org.Xml.Sax.Ext.ILexicalHandler" /></c>, <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c>, and
 <c><see cref="T:Org.Xml.Sax.Ext.IEntityResolver2" /></c> extensions.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class extends the SAX2 base handler class to support the
 SAX2 <c><see cref="T:Org.Xml.Sax.Ext.ILexicalHandler" /></c>, <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c>, and
 <c><see cref="T:Org.Xml.Sax.Ext.IEntityResolver2" /></c> extensions.  Except for overriding the
 original SAX1 <c><see cref="M:Org.Xml.Sax.Helpers.DefaultHandler.ResolveEntity(System.String,System.String)" /></c>
 method the added handler methods just return.  Subclassers may
 override everything on a method-by-method basis.

 <format type="text/html"><blockquote><i>This module, both source code and documentation, is in the
 Public Domain, and comes with <i>NO WARRANTY</i>.</i></blockquote></format></para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> this class might yet learn that the
 <i>ContentHandler.setDocumentLocator()</i> call might be passed a
 <c><see cref="T:Org.Xml.Sax.Ext.ILocator2" /></c> object, and that the
 <i>ContentHandler.startElement()</i> call might be passed a
 <c><see cref="T:Org.Xml.Sax.Ext.IAttributes2" /></c> object.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DefaultHandler2 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a handler which ignores all parsing events.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a handler which ignores all parsing events. </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#DefaultHandler2()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultHandler2 (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeDecl">
      <MemberSignature Language="C#" Value="public virtual void AttributeDecl (string eName, string aName, string type, string mode, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttributeDecl(string eName, string aName, string type, string mode, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attributeDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetAttributeDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eName" Type="System.String" />
        <Parameter Name="aName" Type="System.String" />
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="mode" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eName">The name of the associated element.</param>
        <param name="aName">The name of the attribute.</param>
        <param name="type">A string representing the attribute type.</param>
        <param name="mode">A string representing the attribute defaulting mode
        ("#IMPLIED", "#REQUIRED", or "#FIXED") or null if
        none of these applies.</param>
        <param name="value">A string representing the attribute's default value,
        or null if there is none.</param>
        <summary>Report an attribute type declaration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report an attribute type declaration.

 </para>
          <para tool="javadoc-to-mdoc">Only the effective (first) declaration for an attribute will
 be reported.  The type will be one of the strings "CDATA",
 "ID", "IDREF", "IDREFS", "NMTOKEN", "NMTOKENS", "ENTITY",
 "ENTITIES", a parenthesized token group with
 the separator "|" and all whitespace removed, or the word
 "NOTATION" followed by a space followed by a parenthesized
 token group with all whitespace removed.</para>
          <para tool="javadoc-to-mdoc">The value will be the value as reported to applications,
 appropriately normalized and with entity and character
 references expanded.  </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#attributeDecl(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public virtual void Comment (char[] ch, int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Comment(char[] ch, int32 start, int32 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("comment", "([CII)V", "GetComment_arrayCIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ch" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ch">An array holding the characters in the comment.</param>
        <param name="start">The starting position in the array.</param>
        <param name="length">The number of characters to use from the array.</param>
        <summary>Report an XML comment anywhere in the document.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report an XML comment anywhere in the document.

 </para>
          <para tool="javadoc-to-mdoc">This callback will be used for comments inside or outside the
 document element, including comments in the external DTD
 subset (if read).  Comments in the DTD must be properly
 nested inside start/endDTD and start/endEntity events (if
 used).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#comment(char[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="ElementDecl">
      <MemberSignature Language="C#" Value="public virtual void ElementDecl (string name, string model);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ElementDecl(string name, string model) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("elementDecl", "(Ljava/lang/String;Ljava/lang/String;)V", "GetElementDecl_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="model" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The element type name.</param>
        <param name="model">The content model as a normalized string.</param>
        <summary>Report an element type declaration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report an element type declaration.

 </para>
          <para tool="javadoc-to-mdoc">The content model will consist of the string "EMPTY", the
 string "ANY", or a parenthesised group, optionally followed
 by an occurrence indicator.  The model will be normalized so
 that all parameter entities are fully resolved and all whitespace
 is removed,and will include the enclosing parentheses.  Other
 normalization (such as removing redundant parentheses or
 simplifying occurrence indicators) is at the discretion of the
 parser.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#elementDecl(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="EndCDATA">
      <MemberSignature Language="C#" Value="public virtual void EndCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCDATA() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endCDATA", "()V", "GetEndCDATAHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of a CDATA section.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of a CDATA section.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#endCDATA()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="EndDTD">
      <MemberSignature Language="C#" Value="public virtual void EndDTD ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDTD() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endDTD", "()V", "GetEndDTDHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the end of DTD declarations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of DTD declarations.

 </para>
          <para tool="javadoc-to-mdoc">This method is intended to report the end of the
 DOCTYPE declaration; if the document has no DOCTYPE declaration,
 this method will not be invoked.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#endDTD()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="EndEntity">
      <MemberSignature Language="C#" Value="public virtual void EndEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndEntity(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("endEntity", "(Ljava/lang/String;)V", "GetEndEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity that is ending.</param>
        <summary>Report the end of an entity.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the end of an entity.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#endEntity(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="ExternalEntityDecl">
      <MemberSignature Language="C#" Value="public virtual void ExternalEntityDecl (string name, string publicId, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExternalEntityDecl(string name, string publicId, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("externalEntityDecl", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetExternalEntityDecl_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%'.</param>
        <param name="publicId">The entity's public identifier, or null if none
        was given.</param>
        <param name="systemId">The entity's system identifier.</param>
        <summary>Report a parsed external entity declaration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report a parsed external entity declaration.

 </para>
          <para tool="javadoc-to-mdoc">Only the effective (first) declaration for each entity
 will be reported.</para>
          <para tool="javadoc-to-mdoc">If the system identifier is a URL, the parser must resolve it
 fully before passing it to the application.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#externalEntityDecl(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalSubset">
      <MemberSignature Language="C#" Value="public virtual Org.Xml.Sax.InputSource GetExternalSubset (string name, string baseURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource GetExternalSubset(string name, string baseURI) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalSubset", "(Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetGetExternalSubset_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the document root element.  This name comes
    from a DOCTYPE declaration (where available) or from the actual
    root element. The parameter is ignored.</param>
        <param name="baseURI">The document's base URI, serving as an additional
    hint for selecting the external subset.  This is always an absolute
    URI, unless it is null because the XMLReader was given an InputSource
    without one. The parameter is ignored.</param>
        <summary>Tells the parser that if no external subset has been declared
 in the document text, none should be used.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells the parser that if no external subset has been declared
 in the document text, none should be used.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#getExternalSubset(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InternalEntityDecl">
      <MemberSignature Language="C#" Value="public virtual void InternalEntityDecl (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InternalEntityDecl(string name, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("internalEntityDecl", "(Ljava/lang/String;Ljava/lang/String;)V", "GetInternalEntityDecl_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%'.</param>
        <param name="value">The replacement text of the entity.</param>
        <summary>Report an internal entity declaration.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report an internal entity declaration.

 </para>
          <para tool="javadoc-to-mdoc">Only the effective (first) declaration for each entity
 will be reported.  All parameter entities in the value
 will be expanded, but general entities will not.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#internalEntityDecl(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="ResolveEntity">
      <MemberSignature Language="C#" Value="public virtual Org.Xml.Sax.InputSource ResolveEntity (string name, string publicId, string baseURI, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.Xml.Sax.InputSource ResolveEntity(string name, string publicId, string baseURI, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resolveEntity", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xml/sax/InputSource;", "GetResolveEntity_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Xml.Sax.InputSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="baseURI" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Identifies the external entity being resolved.
    Either "[dtd]" for the external subset, or a name starting
    with "%" to indicate a parameter entity, or else the name of
    a general entity.  This is never null when invoked by a SAX2
    parser.</param>
        <param name="publicId">The public identifier of the external entity being
    referenced (normalized as required by the XML specification), or
    null if none was supplied.</param>
        <param name="baseURI">The URI with respect to which relative systemIDs
    are interpreted.  This is always an absolute URI, unless it is
    null (likely because the XMLReader was given an InputSource without
  one).  This URI is defined by the XML specification to be the one
    associated with the "&lt;" starting the relevant declaration.</param>
        <param name="systemId">The system identifier of the external entity
    being referenced; either a relative or absolute URI.
  This is never null when invoked by a SAX2 parser; only declared
    entities, and any external subset, are resolved by such parsers.</param>
        <summary>Tells the parser to resolve the systemId against the baseURI
 and read the entity text from that resulting absolute URI.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tells the parser to resolve the systemId against the baseURI
 and read the entity text from that resulting absolute URI.
 Note that because the older
 <c><see cref="M:Org.Xml.Sax.Helpers.DefaultHandler.ResolveEntity(System.String,System.String)" /></c>,
 method is overridden to call this one, this method may sometimes
 be invoked with null <i>name</i> and <i>baseURI</i>, and
 with the <i>systemId</i> already absolutized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#resolveEntity(java.lang.String, java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException">Any SAX exception, possibly wrapping
    another exception.</exception>
        <exception cref="T:Java.IO.IOException">Probably indicating a failure to create
    a new InputStream or Reader, or an illegal URL.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StartCDATA">
      <MemberSignature Language="C#" Value="public virtual void StartCDATA ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartCDATA() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startCDATA", "()V", "GetStartCDATAHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Report the start of a CDATA section.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the start of a CDATA section.

 </para>
          <para tool="javadoc-to-mdoc">The contents of the CDATA section will be reported through
 the regular <c><see cref="M:Org.Xml.Sax.IContentHandler.Characters(System.Char[],System.Int32,System.Int32)" /></c> event; this event is intended only to report
 the boundary.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#startCDATA()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="StartDTD">
      <MemberSignature Language="C#" Value="public virtual void StartDTD (string name, string publicId, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartDTD(string name, string publicId, string systemId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startDTD", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V", "GetStartDTD_Ljava_lang_String_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="publicId" Type="System.String" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The document type name.</param>
        <param name="publicId">The declared public identifier for the
        external DTD subset, or null if none was declared.</param>
        <param name="systemId">The declared system identifier for the
        external DTD subset, or null if none was declared.
        (Note that this is not resolved against the document
        base URI.)</param>
        <summary>Report the start of DTD declarations, if any.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the start of DTD declarations, if any.

 </para>
          <para tool="javadoc-to-mdoc">This method is intended to report the beginning of the
 DOCTYPE declaration; if the document has no DOCTYPE declaration,
 this method will not be invoked.</para>
          <para tool="javadoc-to-mdoc">All declarations reported through
 <c><see cref="T:Org.Xml.Sax.IDTDHandler" /></c> or
 <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c> events must appear
 between the startDTD and <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndDTD" /></c> events.
 Declarations are assumed to belong to the internal DTD subset
 unless they appear between <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.StartEntity(System.String)" /></c>
 and <c><see cref="M:Org.Xml.Sax.Ext.ILexicalHandler.EndEntity(System.String)" /></c> events.  Comments and
 processing instructions from the DTD should also be reported
 between the startDTD and endDTD events, in their original
 order of (logical) occurrence; they are not required to
 appear in their correct locations relative to DTDHandler
 or DeclHandler events, however.</para>
          <para tool="javadoc-to-mdoc">Note that the start/endDTD events will appear within
 the start/endDocument events from ContentHandler and
 before the first
 <c><see cref="M:Org.Xml.Sax.IContentHandler.StartElement(System.String,System.String,System.String,System.String)" /></c>
 event.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#startDTD(java.lang.String, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="StartEntity">
      <MemberSignature Language="C#" Value="public virtual void StartEntity (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartEntity(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startEntity", "(Ljava/lang/String;)V", "GetStartEntity_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity.  If it is a parameter
        entity, the name will begin with '%', and if it is the
        external DTD subset, it will be "[dtd]".</param>
        <summary>Report the beginning of some internal and external XML entities.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Report the beginning of some internal and external XML entities.

 </para>
          <para tool="javadoc-to-mdoc">The reporting of parameter entities (including
 the external DTD subset) is optional, and SAX2 drivers that
 report LexicalHandler events may not implement it; you can use the
 <c>http://xml.org/sax/features/lexical-handler/parameter-entities</c>
 feature to query or control the reporting of parameter entities.</para>
          <para tool="javadoc-to-mdoc">General entities are reported with their regular names,
 parameter entities have '%' prepended to their names, and
 the external DTD subset has the pseudo-entity name "[dtd]".</para>
          <para tool="javadoc-to-mdoc">When a SAX2 driver is providing these events, all other
 events must be properly nested within start/end entity
 events.  There is no additional requirement that events from
 <c><see cref="T:Org.Xml.Sax.Ext.IDeclHandler" /></c> or
 <c><see cref="T:Org.Xml.Sax.IDTDHandler" /></c> be properly ordered.</para>
          <para tool="javadoc-to-mdoc">Note that skipped entities will be reported through the
 <c><see cref="M:Org.Xml.Sax.IContentHandler.SkippedEntity(System.String)" /></c>
 event, which is part of the ContentHandler interface.</para>
          <para tool="javadoc-to-mdoc">Because of the streaming event model that SAX uses, some
 entity boundaries cannot be reported under any
 circumstances:<list type="bullet"><item><term>general entities within attribute values</term></item><item><term>parameter entities within declarations</term></item></list></para>
          <para tool="javadoc-to-mdoc">These will be silently expanded, with no indication of where
 the original entity boundaries were.</para>
          <para tool="javadoc-to-mdoc">Note also that the boundaries of character references (which
 are not really entities anyway) are not reported.</para>
          <para tool="javadoc-to-mdoc">All start/endEntity events must be properly nested.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xml/sax/ext/DefaultHandler2.html#startEntity(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.Xml.Sax.SAXException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
