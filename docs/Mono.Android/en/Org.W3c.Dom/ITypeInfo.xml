<Type Name="ITypeInfo" FullName="Org.W3c.Dom.ITypeInfo">
  <TypeSignature Language="VB.NET" Value="Public Interface ITypeInfo&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITypeInfo : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface ITypeInfo : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITypeInfo implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.ITypeInfo" />
  <TypeSignature Language="F#" Value="type ITypeInfo = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/TypeInfo", "", "Org.W3c.Dom.ITypeInfoInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/TypeInfo", "", "Org.W3c.Dom.ITypeInfoInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>The <c>TypeInfo</c> interface represents a type referenced from
            <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
            associated with the document.</summary>
    <remarks>
      <para>The <c>TypeInfo</c> interface represents a type referenced from
            <c>Element</c> or <c>Attr</c> nodes, specified in the schemas
            associated with the document. The type is a pair of a namespace URI and
            name properties, and depends on the document's schema.</para>
      <para>If the document's schema is an XML DTD [<see href="http://www.w3.org/TR/2004/REC-xml-20040204">XML 1.0</see>], the values
            are computed as follows:
            &lt;ul&gt;
            &lt;li&gt; If this type is referenced from an
            <c>Attr</c> node, <c>typeNamespace</c> is
            <c>"http://www.w3.org/TR/REC-xml"</c> and <c>typeName</c>
            represents the &lt;b&gt;[attribute type]&lt;/b&gt; property in the [<see href="http://www.w3.org/TR/2004/REC-xml-infoset-20040204/">XML Information Set</see>]
            . If there is no declaration for the attribute, <c>typeNamespace</c>
             and <c>typeName</c> are <c>null</c>.
            &lt;/li&gt;
            &lt;li&gt; If this type is
            referenced from an <c>Element</c> node, <c>typeNamespace</c>
            and <c>typeName</c> are <c>null</c>.
            &lt;/li&gt;
            &lt;/ul&gt;</para>
      <para>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , the values are computed as follows using the post-schema-validation
            infoset contributions (also called PSVI contributions):
            &lt;ul&gt;
            &lt;li&gt; If the &lt;b&gt;[validity]&lt;/b&gt; property exists AND is &lt;em&gt;"invalid"&lt;/em&gt; or &lt;em&gt;"notKnown"&lt;/em&gt;: the {target namespace} and {name} properties of the declared type if
            available, otherwise <c>null</c>.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  At the time of writing, the XML Schema specification does
            not require exposing the declared type. Thus, DOM implementations might
            choose not to provide type information if validity is not valid.
            &lt;/li&gt;
            &lt;li&gt; If the &lt;b&gt;[validity]&lt;/b&gt; property exists and is &lt;em&gt;"valid"&lt;/em&gt;:
            &lt;ol&gt;
            &lt;li&gt; If &lt;b&gt;[member type definition]&lt;/b&gt; exists:
            &lt;ol&gt;
            &lt;li&gt;If {name} is not absent, then expose {name} and {target
            namespace} properties of the &lt;b&gt;[member type definition]&lt;/b&gt; property;
            &lt;/li&gt;
            &lt;li&gt;Otherwise, expose the namespace and local name of the
            corresponding anonymous type name.
            &lt;/li&gt;
            &lt;/ol&gt;
            &lt;/li&gt;
            &lt;li&gt; If the &lt;b&gt;[type definition]&lt;/b&gt; property exists:
            &lt;ol&gt;
            &lt;li&gt;If {name} is not absent, then expose {name} and {target
            namespace} properties of the &lt;b&gt;[type definition]&lt;/b&gt; property;
            &lt;/li&gt;
            &lt;li&gt;Otherwise, expose the namespace and local name of the
            corresponding anonymous type name.
            &lt;/li&gt;
            &lt;/ol&gt;
            &lt;/li&gt;
            &lt;li&gt; If the &lt;b&gt;[member type definition anonymous]&lt;/b&gt; exists:
            &lt;ol&gt;
            &lt;li&gt;If it is false, then expose &lt;b&gt;[member type definition name]&lt;/b&gt; and &lt;b&gt;[member type definition namespace]&lt;/b&gt; properties;
            &lt;/li&gt;
            &lt;li&gt;Otherwise, expose the namespace and local name of the
            corresponding anonymous type name.
            &lt;/li&gt;
            &lt;/ol&gt;
            &lt;/li&gt;
            &lt;li&gt; If the &lt;b&gt;[type definition anonymous]&lt;/b&gt; exists:
            &lt;ol&gt;
            &lt;li&gt;If it is false, then expose &lt;b&gt;[type definition name]&lt;/b&gt; and &lt;b&gt;[type definition namespace]&lt;/b&gt; properties;
            &lt;/li&gt;
            &lt;li&gt;Otherwise, expose the namespace and local name of the
            corresponding anonymous type name.
            &lt;/li&gt;
            &lt;/ol&gt;
            &lt;/li&gt;
            &lt;/ol&gt;
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  Other schema languages are outside the scope of the W3C
            and therefore should define how to represent their type systems using
            <c>TypeInfo</c>.</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">Document Object Model (DOM) Level 3 Core Specification</see>.</para>
      <para>Added in DOM Level 3.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="DerivationExtension">
      <MemberSignature Language="VB.NET" Value="Public Const DerivationExtension As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int DerivationExtension = 2;" />
      <MemberSignature Language="C#" Value="public const int DerivationExtension = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationExtension = (2)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.ITypeInfo.DerivationExtension" />
      <MemberSignature Language="F#" Value="val mutable DerivationExtension : int" Usage="Org.W3c.Dom.ITypeInfo.DerivationExtension" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DERIVATION_EXTENSION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DERIVATION_EXTENSION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the derivation by <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeExtension">
            extension</see>.</summary>
        <remarks>
          <para>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the derivation by <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeExtension">
            extension</see>.
            &lt;br&gt;  The reference type definition is derived by extension from the
            other type definition if the other type definition can be reached
            recursively following the {base type definition} property from the
            reference type definition, and at least one of the &lt;em&gt;derivation methods&lt;/em&gt; involved is an extension.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo#DERIVATION_EXTENSION" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo.DERIVATION_EXTENSION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationList">
      <MemberSignature Language="VB.NET" Value="Public Const DerivationList As Integer  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: int DerivationList = 8;" />
      <MemberSignature Language="C#" Value="public const int DerivationList = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationList = (8)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.ITypeInfo.DerivationList" />
      <MemberSignature Language="F#" Value="val mutable DerivationList : int" Usage="Org.W3c.Dom.ITypeInfo.DerivationList" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DERIVATION_LIST")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DERIVATION_LIST")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-list">list</see>.</summary>
        <remarks>
          <para>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-list">list</see>.
            &lt;br&gt; The reference type definition is derived by list from the other
            type definition if there exists two type definitions T1 and T2 such
            as the reference type definition is derived from T1 by
            <c>DERIVATION_RESTRICTION</c> or
            <c>DERIVATION_EXTENSION</c>, T2 is derived from the other type
            definition by <c>DERIVATION_RESTRICTION</c>, T1 has {variety}&lt;em&gt;list&lt;/em&gt;, and T2 is the {item type definition}. Note that T1 could be the same as
            the reference type definition, and T2 could be the same as the other
            type definition.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo#DERIVATION_LIST" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo.DERIVATION_LIST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationRestriction">
      <MemberSignature Language="VB.NET" Value="Public Const DerivationRestriction As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int DerivationRestriction = 1;" />
      <MemberSignature Language="C#" Value="public const int DerivationRestriction = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationRestriction = (1)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.ITypeInfo.DerivationRestriction" />
      <MemberSignature Language="F#" Value="val mutable DerivationRestriction : int" Usage="Org.W3c.Dom.ITypeInfo.DerivationRestriction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DERIVATION_RESTRICTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DERIVATION_RESTRICTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the derivation by <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeRestriction">
            restriction</see> if complex types are involved, or a <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-restriction">
            restriction</see> if simple types are involved.</summary>
        <remarks>
          <para>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the derivation by <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-typeRestriction">
            restriction</see> if complex types are involved, or a <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-restriction">
            restriction</see> if simple types are involved.
            &lt;br&gt;  The reference type definition is derived by restriction from the
            other type definition if the other type definition is the same as the
            reference type definition, or if the other type definition can be
            reached recursively following the {base type definition} property
            from the reference type definition, and all the &lt;em&gt;derivation methods&lt;/em&gt; involved are restriction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo#DERIVATION_RESTRICTION" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo.DERIVATION_RESTRICTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivationUnion">
      <MemberSignature Language="VB.NET" Value="Public Const DerivationUnion As Integer  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: int DerivationUnion = 4;" />
      <MemberSignature Language="C#" Value="public const int DerivationUnion = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DerivationUnion = (4)" />
      <MemberSignature Language="DocId" Value="F:Org.W3c.Dom.ITypeInfo.DerivationUnion" />
      <MemberSignature Language="F#" Value="val mutable DerivationUnion : int" Usage="Org.W3c.Dom.ITypeInfo.DerivationUnion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DERIVATION_UNION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DERIVATION_UNION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-union">
            union</see> if simple types are involved.</summary>
        <remarks>
          <para>If the document's schema is an XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , this constant represents the <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#element-union">
            union</see> if simple types are involved.
            &lt;br&gt; The reference type definition is derived by union from the other
            type definition if there exists two type definitions T1 and T2 such
            as the reference type definition is derived from T1 by
            <c>DERIVATION_RESTRICTION</c> or
            <c>DERIVATION_EXTENSION</c>, T2 is derived from the other type
            definition by <c>DERIVATION_RESTRICTION</c>, T1 has {variety}&lt;em&gt;union&lt;/em&gt;, and one of the {member type definitions} is T2. Note that T1 could be
            the same as the reference type definition, and T2 could be the same
            as the other type definition.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo#DERIVATION_UNION" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo.DERIVATION_UNION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="VB.NET" Value="Public Function IsDerivedFrom (typeNamespaceArg As String, typeNameArg As String, derivationMethod As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsDerivedFrom(System::String ^ typeNamespaceArg, System::String ^ typeNameArg, int derivationMethod);" />
      <MemberSignature Language="C#" Value="public bool IsDerivedFrom (string? typeNamespaceArg, string? typeNameArg, int derivationMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDerivedFrom(string typeNamespaceArg, string typeNameArg, int32 derivationMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.ITypeInfo.IsDerivedFrom(System.String,System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsDerivedFrom : string * string * int -&gt; bool" Usage="iTypeInfo.IsDerivedFrom (typeNamespaceArg, typeNameArg, derivationMethod)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDerivedFrom", "(Ljava/lang/String;Ljava/lang/String;I)Z", "GetIsDerivedFrom_Ljava_lang_String_Ljava_lang_String_IHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDerivedFrom", "(Ljava/lang/String;Ljava/lang/String;I)Z", "GetIsDerivedFrom_Ljava_lang_String_Ljava_lang_String_IHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNamespaceArg" Type="System.String" />
        <Parameter Name="typeNameArg" Type="System.String" />
        <Parameter Name="derivationMethod" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="typeNamespaceArg">the namespace of the other type definition.</param>
        <param name="typeNameArg">the name of the other type definition.</param>
        <param name="derivationMethod">the type of derivation and conditions applied
              between two types, as described in the list of constants provided
              in this interface.</param>
        <summary>This method returns if there is a derivation between the reference
            type definition, i.</summary>
        <returns>If the document's schema is a DTD or no schema is associated
              with the document, this method will always return <c>false</c>
              .  If the document's schema is an XML Schema, the method will
              <c>true</c> if the reference type definition is derived from
              the other type definition according to the derivation parameter. If
              the value of the parameter is <c>0</c> (no bit is set to
              <c>1</c> for the <c>derivationMethod</c> parameter),
              the method will return <c>true</c> if the other type
              definition can be reached by recursing any combination of {base
              type definition}, {item type definition}, or {member type
              definitions} from the reference type definition.</returns>
        <remarks>
          <para>This method returns if there is a derivation between the reference
            type definition, i.e. the <c>TypeInfo</c> on which the method
            is being called, and the other type definition, i.e. the one passed
            as parameters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/TypeInfo#isDerivedFrom(java.lang.String,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>org.w3c.dom.TypeInfo.isDerivedFrom(java.lang.String, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? TypeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.ITypeInfo.TypeName" />
      <MemberSignature Language="F#" Value="member this.TypeName : string" Usage="Org.W3c.Dom.ITypeInfo.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeName", "()Ljava/lang/String;", "GetGetTypeNameHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeName", "()Ljava/lang/String;", "GetGetTypeNameHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of a type declared for the associated element or attribute,
 or <c>null</c> if unknown.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="TypeNamespace">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeNamespace { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? TypeNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeNamespace" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.ITypeInfo.TypeNamespace" />
      <MemberSignature Language="F#" Value="member this.TypeNamespace : string" Usage="Org.W3c.Dom.ITypeInfo.TypeNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTypeNamespace", "()Ljava/lang/String;", "GetGetTypeNamespaceHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTypeNamespace", "()Ljava/lang/String;", "GetGetTypeNamespaceHandler:Org.W3c.Dom.ITypeInfoInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The namespace of the type declared for the associated element or
 attribute or <c>null</c> if the element does not have
 declaration or if no namespace information is available.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
