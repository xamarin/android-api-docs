<Type Name="IDocumentFragment" FullName="Org.W3c.Dom.IDocumentFragment">
  <TypeSignature Language="VB.NET" Value="Public Interface IDocumentFragment&#xA;Implements IDisposable, IJavaPeerable, INode" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDocumentFragment : IDisposable, Java::Interop::IJavaPeerable, Org::W3c::Dom::INode" />
  <TypeSignature Language="C#" Value="public interface IDocumentFragment : IDisposable, Java.Interop.IJavaPeerable, Org.W3c.Dom.INode" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDocumentFragment implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.W3c.Dom.INode, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.IDocumentFragment" />
  <TypeSignature Language="F#" Value="type IDocumentFragment = interface&#xA;    interface INode&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.W3c.Dom.INode</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/DocumentFragment", "", "Org.W3c.Dom.IDocumentFragmentInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/DocumentFragment", "", "Org.W3c.Dom.IDocumentFragmentInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>DocumentFragment</c> is a "lightweight" or "minimal"
            <c>Document</c> object.</summary>
    <remarks>
      <para>
        <c>DocumentFragment</c> is a "lightweight" or "minimal"
            <c>Document</c> object. It is very common to want to be able to
            extract a portion of a document's tree or to create a new fragment of a
            document. Imagine implementing a user command like cut or rearranging a
            document by moving fragments around. It is desirable to have an object
            which can hold such fragments and it is quite natural to use a Node for
            this purpose. While it is true that a <c>Document</c> object could
            fulfill this role, a <c>Document</c> object can potentially be a
            heavyweight object, depending on the underlying implementation. What is
            really needed for this is a very lightweight object.
            <c>DocumentFragment</c> is such an object.</para>
      <para>Furthermore, various operations -- such as inserting nodes as children
            of another <c>Node</c> -- may take <c>DocumentFragment</c>
            objects as arguments; this results in all the child nodes of the
            <c>DocumentFragment</c> being moved to the child list of this node.</para>
      <para>The children of a <c>DocumentFragment</c> node are zero or more
            nodes representing the tops of any sub-trees defining the structure of
            the document. <c>DocumentFragment</c> nodes do not need to be
            well-formed XML documents (although they do need to follow the rules
            imposed upon well-formed XML parsed entities, which can have multiple top
            nodes). For example, a <c>DocumentFragment</c> might have only one
            child and that child node could be a <c>Text</c> node. Such a
            structure model represents neither an HTML document nor a well-formed XML
            document.</para>
      <para>When a <c>DocumentFragment</c> is inserted into a
            <c>Document</c> (or indeed any other <c>Node</c> that may
            take children) the children of the <c>DocumentFragment</c> and not
            the <c>DocumentFragment</c> itself are inserted into the
            <c>Node</c>. This makes the <c>DocumentFragment</c> very
            useful when the user wishes to create nodes that are siblings; the
            <c>DocumentFragment</c> acts as the parent of these nodes so that
            the user can use the standard methods from the <c>Node</c>
            interface, such as <c>Node.insertBefore</c> and
            <c>Node.appendChild</c>.</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">Document Object Model (DOM) Level 3 Core Specification</see>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/DocumentFragment" title="Reference documentation">Java documentation for <code>org.w3c.dom.DocumentFragment</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members />
</Type>
