<Type Name="IAttr" FullName="Org.W3c.Dom.IAttr">
  <TypeSignature Language="C#" Value="public interface IAttr : IDisposable, Java.Interop.IJavaPeerable, Org.W3c.Dom.INode" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAttr implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.W3c.Dom.INode, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.IAttr" />
  <TypeSignature Language="F#" Value="type IAttr = interface&#xA;    interface INode&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.W3c.Dom.INode</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/Attr", "", "Org.W3c.Dom.IAttrInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/Attr", "", "Org.W3c.Dom.IAttrInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Attr</c> interface represents an attribute in an
            <c>Element</c> object.</summary>
    <remarks>
      <para>The <c>Attr</c> interface represents an attribute in an
            <c>Element</c> object. Typically the allowable values for the
            attribute are defined in a schema associated with the document.</para>
      <para>
        <c>Attr</c> objects inherit the <c>Node</c> interface, but
            since they are not actually child nodes of the element they describe, the
            DOM does not consider them part of the document tree. Thus, the
            <c>Node</c> attributes <c>parentNode</c>,
            <c>previousSibling</c>, and <c>nextSibling</c> have a
            <c>null</c> value for <c>Attr</c> objects. The DOM takes the
            view that attributes are properties of elements rather than having a
            separate identity from the elements they are associated with; this should
            make it more efficient to implement such features as default attributes
            associated with all elements of a given type. Furthermore,
            <c>Attr</c> nodes may not be immediate children of a
            <c>DocumentFragment</c>. However, they can be associated with
            <c>Element</c> nodes contained within a
            <c>DocumentFragment</c>. In short, users and implementors of the
            DOM need to be aware that <c>Attr</c> nodes have some things in
            common with other objects inheriting the <c>Node</c> interface, but
            they also are quite distinct.</para>
      <para>The attribute's effective value is determined as follows: if this
            attribute has been explicitly assigned any value, that value is the
            attribute's effective value; otherwise, if there is a declaration for
            this attribute, and that declaration includes a default value, then that
            default value is the attribute's effective value; otherwise, the
            attribute does not exist on this element in the structure model until it
            has been explicitly added. Note that the <c>Node.nodeValue</c>
            attribute on the <c>Attr</c> instance can also be used to retrieve
            the string version of the attribute's value(s).</para>
      <para>If the attribute was not explicitly given a value in the instance
            document but has a default value provided by the schema associated with
            the document, an attribute node will be created with
            <c>specified</c> set to <c>false</c>. Removing attribute
            nodes for which a default value is defined in the schema generates a new
            attribute node with the default value and <c>specified</c> set to
            <c>false</c>. If validation occurred while invoking
            <c>Document.normalizeDocument()</c>, attribute nodes with
            <c>specified</c> equals to <c>false</c> are recomputed
            according to the default attribute values provided by the schema. If no
            default value is associate with this attribute in the schema, the
            attribute node is discarded.</para>
      <para>In XML, where the value of an attribute can contain entity references,
            the child nodes of the <c>Attr</c> node may be either
            <c>Text</c> or <c>EntityReference</c> nodes (when these are
            in use; see the description of <c>EntityReference</c> for
            discussion).</para>
      <para>The DOM Core represents all attribute values as simple strings, even if
            the DTD or schema associated with the document declares them of some
            specific type such as tokenized.</para>
      <para>The way attribute value normalization is performed by the DOM
            implementation depends on how much the implementation knows about the
            schema in use. Typically, the <c>value</c> and
            <c>nodeValue</c> attributes of an <c>Attr</c> node initially
            returns the normalized value given by the parser. It is also the case
            after <c>Document.normalizeDocument()</c> is called (assuming the
            right options have been set). But this may not be the case after
            mutation, independently of whether the mutation is performed by setting
            the string value directly or by changing the <c>Attr</c> child
            nodes. In particular, this is true when <see href="http://www.w3.org/TR/2004/REC-xml-20040204#dt-charref">character
            references</see> are involved, given that they are not represented in the DOM and they
            impact attribute value normalization. On the other hand, if the
            implementation knows about the schema in use when the attribute value is
            changed, and it is of a different type than CDATA, it may normalize it
            again at that time. This is especially true of specialized DOM
            implementations, such as SVG DOM implementations, which store attribute
            values in an internal form different from a string.</para>
      <para>The following table gives some examples of the relations between the
            attribute value in the original document (parsed attribute), the value as
            exposed in the DOM, and the serialization of the value:
            &lt;table border='1' cellpadding='3'&gt;
            &lt;tr&gt;
            &lt;th&gt;Examples&lt;/th&gt;
            &lt;th&gt;Parsed
            attribute value&lt;/th&gt;
            &lt;th&gt;Initial <c>Attr.value</c>&lt;/th&gt;
            &lt;th&gt;Serialized attribute value&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
            Character reference&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x&amp;amp;#178;=5"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x\u00b2=5"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x&amp;amp;#178;=5"</code>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;Built-in
            character entity&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"y&amp;amp;lt;6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"y&amp;lt;6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"y&amp;amp;lt;6"</code>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;Literal newline between&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5&amp;amp;#10;y=6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5 y=6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5&amp;amp;#10;y=6"</code>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;Normalized newline between&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5
            y=6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5 y=6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">"x=5 y=6"</code>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;Entity <c>e</c> with literal newline&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;</para>
      <code lang="text/java">&amp;lt;!ENTITY e '...&amp;amp;#10;...'&amp;gt; [...]&amp;gt; "x=5&amp;amp;e;y=6"</code>
      <para>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;&lt;em&gt;Dependent on Implementation and Load Options&lt;/em&gt;&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;&lt;em&gt;Dependent on Implementation and Load/Save Options&lt;/em&gt;&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">Document Object Model (DOM) Level 3 Core Specification</see>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/Attr" title="Reference documentation">Java documentation for <code>org.w3c.dom.Attr</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="IsId">
      <MemberSignature Language="C#" Value="public bool IsId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsId" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.IsId" />
      <MemberSignature Language="F#" Value="member this.IsId : bool" Usage="Org.W3c.Dom.IAttr.IsId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isId", "()Z", "GetIsIdHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isId", "()Z", "GetIsIdHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns whether this attribute is known to be of type ID (i.e. to
 contain an identifier for its owner element) or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Org.W3c.Dom.IAttr.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this attribute.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OwnerElement">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IElement? OwnerElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IElement OwnerElement" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.OwnerElement" />
      <MemberSignature Language="F#" Value="member this.OwnerElement : Org.W3c.Dom.IElement" Usage="Org.W3c.Dom.IAttr.OwnerElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOwnerElement", "()Lorg/w3c/dom/Element;", "GetGetOwnerElementHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOwnerElement", "()Lorg/w3c/dom/Element;", "GetGetOwnerElementHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Element</c> node this attribute is attached to or
 <c>null</c> if this attribute is not in use.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SchemaTypeInfo">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.ITypeInfo? SchemaTypeInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.ITypeInfo SchemaTypeInfo" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.SchemaTypeInfo" />
      <MemberSignature Language="F#" Value="member this.SchemaTypeInfo : Org.W3c.Dom.ITypeInfo" Usage="Org.W3c.Dom.IAttr.SchemaTypeInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSchemaTypeInfo", "()Lorg/w3c/dom/TypeInfo;", "GetGetSchemaTypeInfoHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSchemaTypeInfo", "()Lorg/w3c/dom/TypeInfo;", "GetGetSchemaTypeInfoHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ITypeInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The type information associated with this attribute.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="Specified">
      <MemberSignature Language="C#" Value="public bool Specified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Specified" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.Specified" />
      <MemberSignature Language="F#" Value="member this.Specified : bool" Usage="Org.W3c.Dom.IAttr.Specified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSpecified", "()Z", "GetGetSpecifiedHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSpecified", "()Z", "GetGetSpecifiedHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>True</c> if this attribute was explicitly given a value in
 the instance document, <c>false</c> otherwise.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string? Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IAttr.Value" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="Org.W3c.Dom.IAttr.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getValue", "()Ljava/lang/String;", "GetGetValueHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getValue", "()Ljava/lang/String;", "GetGetValueHandler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setValue", "(Ljava/lang/String;)V", "GetSetValue_Ljava_lang_String_Handler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setValue", "(Ljava/lang/String;)V", "GetSetValue_Ljava_lang_String_Handler:Org.W3c.Dom.IAttrInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>On retrieval, the value of the attribute is returned as a string.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
