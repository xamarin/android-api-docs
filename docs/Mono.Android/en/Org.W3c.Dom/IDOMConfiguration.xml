<Type Name="IDOMConfiguration" FullName="Org.W3c.Dom.IDOMConfiguration">
  <TypeSignature Language="C#" Value="public interface IDOMConfiguration : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDOMConfiguration implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.IDOMConfiguration" />
  <TypeSignature Language="F#" Value="type IDOMConfiguration = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/DOMConfiguration", "", "Org.W3c.Dom.IDOMConfigurationInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/DOMConfiguration", "", "Org.W3c.Dom.IDOMConfigurationInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>The <c>DOMConfiguration</c> interface represents the configuration
            of a document and maintains a table of recognized parameters.</summary>
    <remarks>
      <para>The <c>DOMConfiguration</c> interface represents the configuration
            of a document and maintains a table of recognized parameters. Using the
            configuration, it is possible to change
            <c>Document.normalizeDocument()</c> behavior, such as replacing the
            <c>CDATASection</c> nodes with <c>Text</c> nodes or
            specifying the type of the schema that must be used when the validation
            of the <c>Document</c> is requested. <c>DOMConfiguration</c>
            objects are also used in [<see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407">DOM Level 3 Load and Save</see>]
             in the <c>DOMParser</c> and <c>DOMSerializer</c> interfaces.</para>
      <para>The parameter names used by the <c>DOMConfiguration</c> object
            are defined throughout the DOM Level 3 specifications. Names are
            case-insensitive. To avoid possible conflicts, as a convention, names
            referring to parameters defined outside the DOM specification should be
            made unique. Because parameters are exposed as properties in the , names
            are recommended to follow the section 5.16 Identifiers of [Unicode] with the addition of the character '-' (HYPHEN-MINUS) but it is not
            enforced by the DOM implementation. DOM Level 3 Core Implementations are
            required to recognize all parameters defined in this specification. Some
            parameter values may also be required to be supported by the
            implementation. Refer to the definition of the parameter to know if a
            value must be supported or not.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  Parameters are similar to features and properties used in
            SAX2 [<see href="http://www.saxproject.org/">SAX</see>].</para>
      <para>The following list of parameters defined in the DOM:
            &lt;dl&gt;
            &lt;dt&gt;
            <c>"canonical-form"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Canonicalize the document according to the rules specified in [<see href="http://www.w3.org/TR/2001/REC-xml-c14n-20010315">Canonical XML</see>],
            such as removing the <c>DocumentType</c> node (if any) from the
            tree, or removing superfluous namespace declarations from each element.
            Note that this is limited to what can be represented in the DOM; in
            particular, there is no way to specify the order of the attributes in the
            DOM. In addition,  Setting this parameter to <c>true</c> will also
            set the state of the parameters listed below. Later changes to the state
            of one of those parameters will revert "canonical-form" back to
            <c>false</c>. Parameters set to <c>false</c>: "entities", "
            normalize-characters", "cdata-sections". Parameters set to
            <c>true</c>: "namespaces", "namespace-declarations", "well-formed",
            "element-content-whitespace". Other parameters are not changed unless
            explicitly specified in the description of the parameters.&lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Do not canonicalize the document.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"cdata-sections"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Keep <c>CDATASection</c> nodes in the document.&lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;]Transform <c>CDATASection</c> nodes in the document into
            <c>Text</c> nodes. The new <c>Text</c> node is then combined
            with any adjacent <c>Text</c> node.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;
            <c>"check-character-normalization"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Check if the characters in the document are <see href="http://www.w3.org/TR/2004/REC-xml11-20040204/#dt-fullnorm">fully
            normalized</see>, as defined in appendix B of [<see href="http://www.w3.org/TR/2004/REC-xml11-20040204/">XML 1.1</see>]. When a
            sequence of characters is encountered that fails normalization checking,
            an error with the <c>DOMError.type</c> equals to
            "check-character-normalization-failure" is issued. &lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Do not check if characters are normalized.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"comments"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Keep <c>Comment</c> nodes in the document.&lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;]Discard <c>Comment</c> nodes in the document.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;
            <c>"datatype-normalization"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Expose schema normalized values in the tree, such as <see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/#key-nv">XML
            Schema normalized values</see> in the case of XML Schema. Since this parameter requires to have schema
            information, the "validate" parameter will also be set to
            <c>true</c>. Having this parameter activated when "validate" is
            <c>false</c> has no effect and no schema-normalization will happen.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  Since the document contains the result of the XML 1.0
            processing, this parameter does not apply to attribute value
            normalization as defined in section 3.3.3 of [<see href="http://www.w3.org/TR/2004/REC-xml-20040204">XML 1.0</see>] and is only
            meant for schema languages other than Document Type Definition (DTD). &lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) Do not perform schema normalization on the tree. &lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;
            <c>"element-content-whitespace"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Keep all whitespaces in the document.&lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Discard all <c>Text</c> nodes that contain whitespaces in element
            content, as described in <see href="http://www.w3.org/TR/2004/REC-xml-infoset-20040204#infoitem.character">
            [element content whitespace]</see>. The implementation is expected to use the attribute
            <c>Text.isElementContentWhitespace</c> to determine if a
            <c>Text</c> node should be discarded or not.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"entities"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Keep <c>EntityReference</c> nodes in the document.&lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] Remove all <c>EntityReference</c> nodes from the document,
            putting the entity expansions directly in their place. <c>Text</c>
            nodes are normalized, as defined in <c>Node.normalize</c>. Only <see href="http://www.w3.org/TR/2004/REC-xml-infoset-20040204/#infoitem.rse">
            unexpanded entity references</see> are kept in the document. &lt;/dd&gt;
            &lt;/dl&gt;
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  This parameter does not affect <c>Entity</c> nodes. &lt;/dd&gt;
            &lt;dt&gt;
            <c>"error-handler"</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] Contains a <c>DOMErrorHandler</c> object. If an error is
            encountered in the document, the implementation will call back the
            <c>DOMErrorHandler</c> registered using this parameter. The
            implementation may provide a default <c>DOMErrorHandler</c> object.
             When called, <c>DOMError.relatedData</c> will contain the closest
            node to where the error occurred. If the implementation is unable to
            determine the node where the error occurs,
            <c>DOMError.relatedData</c> will contain the <c>Document</c>
            node. Mutations to the document from within an error handler will result
            in implementation dependent behavior. &lt;/dd&gt;
            &lt;dt&gt;<c>"infoset"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;]Keep in the document the information defined in the XML Information Set [<see href="http://www.w3.org/TR/2004/REC-xml-infoset-20040204/">XML Information Set</see>]
            .This forces the following parameters to <c>false</c>: "
            validate-if-schema", "entities", "datatype-normalization", "cdata-sections
            ".This forces the following parameters to <c>true</c>: "
            namespace-declarations", "well-formed", "element-content-whitespace", "
            comments", "namespaces".Other parameters are not changed unless
            explicitly specified in the description of the parameters. Note that
            querying this parameter with <c>getParameter</c> returns
            <c>true</c> only if the individual parameters specified above are
            appropriately set.&lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;Setting <c>infoset</c> to
            <c>false</c> has no effect.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"namespaces"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) Perform the namespace processing as defined in . &lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Do not perform the namespace processing. &lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;
            <c>"namespace-declarations"</c>&lt;/dt&gt;
            &lt;dd&gt; This parameter has no effect if the
            parameter "namespaces" is set to <c>false</c>.
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) Include namespace declaration attributes, specified or defaulted from
            the schema, in the document. See also the sections "Declaring Namespaces"
            in [<see href="http://www.w3.org/TR/1999/REC-xml-names-19990114/">XML Namespaces</see>]
             and [<see href="http://www.w3.org/TR/2004/REC-xml-names11-20040204/">XML Namespaces 1.1</see>]
            .&lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;]Discard all namespace declaration attributes. The namespace prefixes (
            <c>Node.prefix</c>) are retained even if this parameter is set to
            <c>false</c>.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"normalize-characters"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] <see href="http://www.w3.org/TR/2004/REC-xml11-20040204/#dt-fullnorm">Fully
            normalized</see> the characters in the document as defined in appendix B of [<see href="http://www.w3.org/TR/2004/REC-xml11-20040204/">XML 1.1</see>]. &lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Do not perform character normalization.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"schema-location"</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Represent a <c>DOMString</c> object containing a list of URIs,
            separated by whitespaces (characters matching the <see href="http://www.w3.org/TR/2004/REC-xml-20040204#NT-S">nonterminal
            production S</see> defined in section 2.3 [<see href="http://www.w3.org/TR/2004/REC-xml-20040204">XML 1.0</see>]), that
            represents the schemas against which validation should occur, i.e. the
            current schema. The types of schemas referenced in this list must match
            the type specified with <c>schema-type</c>, otherwise the behavior
            of an implementation is undefined.  The schemas specified using this
            property take precedence to the schema information specified in the
            document itself. For namespace aware schema, if a schema specified using
            this property and a schema specified in the document instance (i.e. using
            the <c>schemaLocation</c> attribute) in a schema document (i.e.
            using schema <c>import</c> mechanisms) share the same
            <c>targetNamespace</c>, the schema specified by the user using this
            property will be used. If two schemas specified using this property share
            the same <c>targetNamespace</c> or have no namespace, the behavior
            is implementation dependent.  If no location has been provided, this
            parameter is <c>null</c>.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  The <c>"schema-location"</c> parameter is ignored
            unless the "schema-type" parameter value is set. It is strongly
            recommended that <c>Document.documentURI</c> will be set so that an
            implementation can successfully resolve any external entities referenced. &lt;/dd&gt;
            &lt;dt&gt;
            <c>"schema-type"</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Represent a <c>DOMString</c> object containing an absolute URI
            and representing the type of the schema language used to validate a
            document against. Note that no lexical checking is done on the absolute
            URI.  If this parameter is not set, a default value may be provided by
            the implementation, based on the schema languages supported and on the
            schema language used at load time. If no value is provided, this
            parameter is <c>null</c>.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  For XML Schema [<see href="http://www.w3.org/TR/2001/REC-xmlschema-1-20010502/">XML Schema Part 1</see>]
            , applications must use the value
            <c>"http://www.w3.org/2001/XMLSchema"</c>. For XML DTD [<see href="http://www.w3.org/TR/2004/REC-xml-20040204">XML 1.0</see>],
            applications must use the value
            <c>"http://www.w3.org/TR/REC-xml"</c>. Other schema languages are
            outside the scope of the W3C and therefore should recommend an absolute
            URI in order to use this method. &lt;/dd&gt;
            &lt;dt&gt;<c>"split-cdata-sections"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;
            <c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;)Split CDATA sections containing the CDATA section termination marker
            ']]&amp;gt;'. When a CDATA section is split a warning is issued with a
            <c>DOMError.type</c> equals to
            <c>"cdata-sections-splitted"</c> and
            <c>DOMError.relatedData</c> equals to the first
            <c>CDATASection</c> node in document order resulting from the split.&lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;]Signal an error if a <c>CDATASection</c> contains an
            unrepresentable character.&lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"validate"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Require the validation against a schema (i.e. XML schema, DTD, any
            other type or representation of schema) of the document as it is being
            normalized as defined by [<see href="http://www.w3.org/TR/2004/REC-xml-20040204">XML 1.0</see>]. If
            validation errors are found, or no schema was found, the error handler is
            notified. Schema-normalized values will not be exposed according to the
            schema in used unless the parameter "datatype-normalization" is
            <c>true</c>.  This parameter will reevaluate:
            &lt;ul&gt;
            &lt;li&gt; Attribute nodes with
            <c>Attr.specified</c> equals to <c>false</c>, as specified in
            the description of the <c>Attr</c> interface;
            &lt;/li&gt;
            &lt;li&gt; The value of the
            attribute <c>Text.isElementContentWhitespace</c> for all
            <c>Text</c> nodes;
            &lt;/li&gt;
            &lt;li&gt; The value of the attribute
            <c>Attr.isId</c> for all <c>Attr</c> nodes;
            &lt;/li&gt;
            &lt;li&gt; The attributes
            <c>Element.schemaTypeInfo</c> and <c>Attr.schemaTypeInfo</c>.
            &lt;/li&gt;
            &lt;/ul&gt;
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  "validate-if-schema" and "validate" are mutually
            exclusive, setting one of them to <c>true</c> will set the other
            one to <c>false</c>. Applications should also consider setting the
            parameter "well-formed" to <c>true</c>, which is the default for
            that option, when validating the document. &lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) Do not accomplish schema processing, including the internal subset
            processing. Default attribute values information are kept. Note that
            validation might still happen if "validate-if-schema" is <c>true</c>
            . &lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"validate-if-schema"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;]Enable validation only if a declaration for the document element can be
            found in a schema (independently of where it is found, i.e. XML schema,
            DTD, or any other type or representation of schema). If validation is
            enabled, this parameter has the same behavior as the parameter "validate"
            set to <c>true</c>.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  "validate-if-schema" and "validate" are mutually
            exclusive, setting one of them to <c>true</c> will set the other
            one to <c>false</c>. &lt;/dd&gt;
            &lt;dt&gt;<c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) No schema processing should be performed if the document has a schema,
            including internal subset processing. Default attribute values
            information are kept. Note that validation must still happen if "validate
            " is <c>true</c>. &lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;dt&gt;<c>"well-formed"</c>&lt;/dt&gt;
            &lt;dd&gt;
            &lt;dl&gt;
            &lt;dt&gt;<c>true</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;required&lt;/em&gt;] (&lt;em&gt;default&lt;/em&gt;) Check if all nodes are XML well formed according to the XML version in
            use in <c>Document.xmlVersion</c>:
            &lt;ul&gt;
            &lt;li&gt; check if the attribute
            <c>Node.nodeName</c> contains invalid characters according to its
            node type and generate a <c>DOMError</c> of type
            <c>"wf-invalid-character-in-node-name"</c>, with a
            <c>DOMError.SEVERITY_ERROR</c> severity, if necessary;
            &lt;/li&gt;
            &lt;li&gt; check if
            the text content inside <c>Attr</c>, <c>Element</c>,
            <c>Comment</c>, <c>Text</c>, <c>CDATASection</c> nodes
            for invalid characters and generate a <c>DOMError</c> of type
            <c>"wf-invalid-character"</c>, with a
            <c>DOMError.SEVERITY_ERROR</c> severity, if necessary;
            &lt;/li&gt;
            &lt;li&gt; check if
            the data inside <c>ProcessingInstruction</c> nodes for invalid
            characters and generate a <c>DOMError</c> of type
            <c>"wf-invalid-character"</c>, with a
            <c>DOMError.SEVERITY_ERROR</c> severity, if necessary;
            &lt;/li&gt;
            &lt;/ul&gt;&lt;/dd&gt;
            &lt;dt&gt;
            <c>false</c>&lt;/dt&gt;
            &lt;dd&gt;[&lt;em&gt;optional&lt;/em&gt;] Do not check for XML well-formedness. &lt;/dd&gt;
            &lt;/dl&gt;&lt;/dd&gt;
            &lt;/dl&gt;</para>
      <para>The resolution of the system identifiers associated with entities is
            done using <c>Document.documentURI</c>. However, when the feature
            "LS" defined in [<see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407">DOM Level 3 Load and Save</see>]
             is supported by the DOM implementation, the parameter
            "resource-resolver" can also be used on <c>DOMConfiguration</c>
            objects attached to <c>Document</c> nodes. If this parameter is
            set, <c>Document.normalizeDocument()</c> will invoke the resource
            resolver instead of using <c>Document.documentURI</c>.</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">Document Object Model (DOM) Level 3 Core Specification</see>.</para>
      <para>Added in DOM Level 3.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/DOMConfiguration" title="Reference documentation">Java documentation for <code>org.w3c.dom.DOMConfiguration</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="CanSetParameter">
      <MemberSignature Language="C#" Value="public bool CanSetParameter (string? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanSetParameter(string name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDOMConfiguration.CanSetParameter(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member CanSetParameter : string * Java.Lang.Object -&gt; bool" Usage="iDOMConfiguration.CanSetParameter (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canSetParameter", "(Ljava/lang/String;Ljava/lang/Object;)Z", "GetCanSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canSetParameter", "(Ljava/lang/String;Ljava/lang/Object;)Z", "GetCanSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the parameter to check.</param>
        <param name="value">An object. if <c>null</c>, the returned value is
              <c>true</c>.</param>
        <summary>Check if setting a parameter to a specific value is supported.</summary>
        <returns>
          <c>true</c> if the parameter could be successfully set
              to the specified value, or <c>false</c> if the parameter is
              not recognized or the requested value is not supported. This does
              not change the current value of the parameter itself.</returns>
        <remarks>
          <para>Check if setting a parameter to a specific value is supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/DOMConfiguration#canSetParameter(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>org.w3c.dom.DOMConfiguration.canSetParameter(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetParameter">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetParameter (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetParameter(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDOMConfiguration.GetParameter(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetParameter : string -&gt; Java.Lang.Object" Usage="iDOMConfiguration.GetParameter name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameter", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetParameter_Ljava_lang_String_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParameter", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetParameter_Ljava_lang_String_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the parameter.</param>
        <summary>Return the value of a parameter if known.</summary>
        <returns>The current object associated with the specified parameter or
              <c>null</c> if no object has been associated or if the
              parameter is not supported.</returns>
        <remarks>
          <para>Return the value of a parameter if known.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/DOMConfiguration#getParameter(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.DOMConfiguration.getParameter(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_FOUND_ERR: Raised when the parameter name is not recognized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParameterNames">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDOMStringList? ParameterNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDOMStringList ParameterNames" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDOMConfiguration.ParameterNames" />
      <MemberSignature Language="F#" Value="member this.ParameterNames : Org.W3c.Dom.IDOMStringList" Usage="Org.W3c.Dom.IDOMConfiguration.ParameterNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getParameterNames", "()Lorg/w3c/dom/DOMStringList;", "GetGetParameterNamesHandler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getParameterNames", "()Lorg/w3c/dom/DOMStringList;", "GetGetParameterNamesHandler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDOMStringList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The list of the parameters supported by this
 <c>DOMConfiguration</c> object and for which at least one value
 can be set by the application.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetParameter">
      <MemberSignature Language="C#" Value="public void SetParameter (string? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameter(string name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDOMConfiguration.SetParameter(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetParameter : string * Java.Lang.Object -&gt; unit" Usage="iDOMConfiguration.SetParameter (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParameter", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetParameter_Ljava_lang_String_Ljava_lang_Object_Handler:Org.W3c.Dom.IDOMConfigurationInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">The name of the parameter to set.</param>
        <param name="value">The new value or <c>null</c> if the user wishes to
              unset the parameter. While the type of the value parameter is
              defined as <c>DOMUserData</c>, the object type must match the
              type defined by the definition of the parameter. For example, if
              the parameter is "error-handler", the value must be of type
              <c>DOMErrorHandler</c>.</param>
        <summary>Set the value of a parameter.</summary>
        <remarks>
          <para>Set the value of a parameter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/DOMConfiguration#setParameter(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>org.w3c.dom.DOMConfiguration.setParameter(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_FOUND_ERR: Raised when the parameter name is not recognized.
   <format type="text/html"><br /></format> NOT_SUPPORTED_ERR: Raised when the parameter name is recognized
   but the requested value cannot be set.
   <format type="text/html"><br /></format> TYPE_MISMATCH_ERR: Raised if the value type for this parameter
   name is incompatible with the expected value type.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
