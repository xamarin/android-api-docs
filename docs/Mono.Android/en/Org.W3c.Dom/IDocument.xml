<Type Name="IDocument" FullName="Org.W3c.Dom.IDocument">
  <TypeSignature Language="C#" Value="public interface IDocument : IDisposable, Java.Interop.IJavaPeerable, Org.W3c.Dom.INode" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IDocument implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Org.W3c.Dom.INode, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.W3c.Dom.IDocument" />
  <TypeSignature Language="F#" Value="type IDocument = interface&#xA;    interface INode&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Org.W3c.Dom.INode</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/w3c/dom/Document", "", "Org.W3c.Dom.IDocumentInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/w3c/dom/Document", "", "Org.W3c.Dom.IDocumentInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The <c>Document</c> interface represents the entire HTML or XML
            document.</summary>
    <remarks>
      <para>The <c>Document</c> interface represents the entire HTML or XML
            document. Conceptually, it is the root of the document tree, and provides
            the primary access to the document's data.</para>
      <para>Since elements, text nodes, comments, processing instructions, etc.
            cannot exist outside the context of a <c>Document</c>, the
            <c>Document</c> interface also contains the factory methods needed
            to create these objects. The <c>Node</c> objects created have a
            <c>ownerDocument</c> attribute which associates them with the
            <c>Document</c> within whose context they were created.</para>
      <para>See also the <see href="http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407">Document Object Model (DOM) Level 3 Core Specification</see>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/w3c/dom/Document" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AdoptNode">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INode? AdoptNode (Org.W3c.Dom.INode? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INode AdoptNode(class Org.W3c.Dom.INode source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.AdoptNode(Org.W3c.Dom.INode)" />
      <MemberSignature Language="F#" Value="abstract member AdoptNode : Org.W3c.Dom.INode -&gt; Org.W3c.Dom.INode" Usage="iDocument.AdoptNode source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adoptNode", "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;", "GetAdoptNode_Lorg_w3c_dom_Node_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adoptNode", "(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;", "GetAdoptNode_Lorg_w3c_dom_Node_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Org.W3c.Dom.INode" />
      </Parameters>
      <Docs>
        <param name="source">The node to move into this document.</param>
        <summary>Attempts to adopt a node from another document to this document.</summary>
        <returns>The adopted node, or <c>null</c> if this operation
              fails, such as when the source node comes from a different
              implementation.</returns>
        <remarks>
          <para>Attempts to adopt a node from another document to this document. If
            supported, it changes the <c>ownerDocument</c> of the source
            node, its children, as well as the attached attribute nodes if there
            are any. If the source node has a parent it is first removed from the
            child list of its parent. This effectively allows moving a subtree
            from one document to another (unlike <c>importNode()</c> which
            create a copy of the source node instead of moving it). When it
            fails, applications should use <c>Document.importNode()</c>
            instead. Note that if the adopted node is already part of this
            document (i.e. the source and target document are the same), this
            method still has the effect of removing the source node from the
            child list of its parent, if any. The following list describes the
            specifics for each type of node.
            &lt;dl&gt;
            &lt;dt&gt;ATTRIBUTE_NODE&lt;/dt&gt;
            &lt;dd&gt;The
            <c>ownerElement</c> attribute is set to <c>null</c> and
            the <c>specified</c> flag is set to <c>true</c> on the
            adopted <c>Attr</c>. The descendants of the source
            <c>Attr</c> are recursively adopted.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_FRAGMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;The
            descendants of the source node are recursively adopted.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;
            <c>Document</c> nodes cannot be adopted.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_TYPE_NODE&lt;/dt&gt;
            &lt;dd&gt;
            <c>DocumentType</c> nodes cannot be adopted.&lt;/dd&gt;
            &lt;dt&gt;ELEMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;&lt;em&gt;Specified&lt;/em&gt; attribute nodes of the source element are adopted. Default attributes
            are discarded, though if the document being adopted into defines
            default attributes for this element name, those are assigned. The
            descendants of the source element are recursively adopted.&lt;/dd&gt;
            &lt;dt&gt;ENTITY_NODE&lt;/dt&gt;
            &lt;dd&gt;
            <c>Entity</c> nodes cannot be adopted.&lt;/dd&gt;
            &lt;dt&gt;ENTITY_REFERENCE_NODE&lt;/dt&gt;
            &lt;dd&gt;Only
            the <c>EntityReference</c> node itself is adopted, the
            descendants are discarded, since the source and destination documents
            might have defined the entity differently. If the document being
            imported into provides a definition for this entity name, its value
            is assigned.&lt;/dd&gt;
            &lt;dt&gt;NOTATION_NODE&lt;/dt&gt;
            &lt;dd&gt;<c>Notation</c> nodes cannot be
            adopted.&lt;/dd&gt;
            &lt;dt&gt;PROCESSING_INSTRUCTION_NODE, TEXT_NODE, CDATA_SECTION_NODE,
            COMMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;These nodes can all be adopted. No specifics.&lt;/dd&gt;
            &lt;/dl&gt;
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt;  Since it does not create new nodes unlike the
            <c>Document.importNode()</c> method, this method does not raise
            an <c>INVALID_CHARACTER_ERR</c> exception, and applications
            should use the <c>Document.normalizeDocument()</c> method to
            check if an imported name is not an XML name according to the XML
            version in use.</para>
          <para>Added in DOM Level 3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#adoptNode(org.w3c.dom.Node)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.adoptNode(org.w3c.dom.Node)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the source node is of type
   <c>DOCUMENT</c>, <c>DOCUMENT_TYPE</c>.
   <format type="text/html"><br /></format>NO_MODIFICATION_ALLOWED_ERR: Raised when the source node is
   readonly.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttribute">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IAttr? CreateAttribute (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IAttr CreateAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateAttribute(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAttribute : string -&gt; Org.W3c.Dom.IAttr" Usage="iDocument.CreateAttribute name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAttribute", "(Ljava/lang/String;)Lorg/w3c/dom/Attr;", "GetCreateAttribute_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAttribute", "(Ljava/lang/String;)Lorg/w3c/dom/Attr;", "GetCreateAttribute_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IAttr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the attribute.</param>
        <summary>Creates an <c>Attr</c> of the given name.</summary>
        <returns>A new <c>Attr</c> object with the <c>nodeName</c>
              attribute set to <c>name</c>, and <c>localName</c>,
              <c>prefix</c>, and <c>namespaceURI</c> set to
              <c>null</c>. The value of the attribute is the empty string.</returns>
        <remarks>
          <para>Creates an <c>Attr</c> of the given name. Note that the
            <c>Attr</c> instance can then be set on an <c>Element</c>
            using the <c>setAttributeNode</c> method.
            &lt;br&gt;To create an attribute with a qualified name and namespace URI, use
            the <c>createAttributeNS</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createAttribute(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createAttribute(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified name is not an XML
   name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateAttributeNS">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IAttr? CreateAttributeNS (string? namespaceURI, string? qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IAttr CreateAttributeNS(string namespaceURI, string qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateAttributeNS(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAttributeNS : string * string -&gt; Org.W3c.Dom.IAttr" Usage="iDocument.CreateAttributeNS (namespaceURI, qualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAttributeNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;", "GetCreateAttributeNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAttributeNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Attr;", "GetCreateAttributeNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IAttr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="qualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">The namespace URI of the attribute to create.</param>
        <param name="qualifiedName">The qualified name of the attribute to
              instantiate.</param>
        <summary>Creates an attribute of the given qualified name and namespace URI.</summary>
        <returns>A new <c>Attr</c> object with the following attributes:
            &lt;table border='1' cellpadding='3'&gt;
            &lt;tr&gt;
            &lt;th&gt;
              Attribute&lt;/th&gt;
            &lt;th&gt;Value&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.nodeName</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;qualifiedName&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>Node.namespaceURI</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>namespaceURI</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>Node.prefix</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;prefix, extracted from
              <c>qualifiedName</c>, or <c>null</c> if there is no
              prefix&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.localName</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;local name, extracted from
              <c>qualifiedName</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Attr.name</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>qualifiedName</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.nodeValue</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;the empty
              string&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;</returns>
        <remarks>
          <para>Creates an attribute of the given qualified name and namespace URI.
            &lt;br&gt;Per [<see href="http://www.w3.org/TR/1999/REC-xml-names-19990114/">XML Namespaces</see>]
            , applications must use the value <c>null</c> as the
            <c>namespaceURI</c> parameter for methods if they wish to have
            no namespace.</para>
          <para>Added in DOM Level 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createAttributeNS(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createAttributeNS(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified
   <c>qualifiedName</c> is not an XML name according to the XML
   version in use specified in the <c>Document.xmlVersion</c>
   attribute.
   <format type="text/html"><br /></format>NAMESPACE_ERR: Raised if the <c>qualifiedName</c> is a
   malformed qualified name, if the <c>qualifiedName</c> has a
   prefix and the <c>namespaceURI</c> is <c>null</c>, if
   the <c>qualifiedName</c> has a prefix that is "xml" and the
   <c>namespaceURI</c> is different from "", if the <c>qualifiedName</c> or its prefix is "xmlns" and the
   <c>namespaceURI</c> is different from "", or if the <c>namespaceURI</c> is "" and neither the <c>qualifiedName</c> nor its prefix is "xmlns".
   <format type="text/html"><br /></format>NOT_SUPPORTED_ERR: Always thrown if the current document does not
   support the <c>"XML"</c> feature, since namespaces were
   defined by XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCDATASection">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.ICDATASection? CreateCDATASection (string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.ICDATASection CreateCDATASection(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateCDATASection(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateCDATASection : string -&gt; Org.W3c.Dom.ICDATASection" Usage="iDocument.CreateCDATASection data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCDATASection", "(Ljava/lang/String;)Lorg/w3c/dom/CDATASection;", "GetCreateCDATASection_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCDATASection", "(Ljava/lang/String;)Lorg/w3c/dom/CDATASection;", "GetCreateCDATASection_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.ICDATASection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The data for the <c>CDATASection</c> contents.</param>
        <summary>Creates a <c>CDATASection</c> node whose value is the specified
            string.</summary>
        <returns>The new <c>CDATASection</c> object.</returns>
        <remarks>
          <para>Creates a <c>CDATASection</c> node whose value is the specified
            string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createCDATASection(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createCDATASection(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if this document is an HTML document.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateComment">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IComment? CreateComment (string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IComment CreateComment(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateComment(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateComment : string -&gt; Org.W3c.Dom.IComment" Usage="iDocument.CreateComment data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createComment", "(Ljava/lang/String;)Lorg/w3c/dom/Comment;", "GetCreateComment_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createComment", "(Ljava/lang/String;)Lorg/w3c/dom/Comment;", "GetCreateComment_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IComment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The data for the node.</param>
        <summary>Creates a <c>Comment</c> node given the specified string.</summary>
        <returns>The new <c>Comment</c> object.</returns>
        <remarks>
          <para>Creates a <c>Comment</c> node given the specified string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createComment(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createComment(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateDocumentFragment">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDocumentFragment? CreateDocumentFragment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IDocumentFragment CreateDocumentFragment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateDocumentFragment" />
      <MemberSignature Language="F#" Value="abstract member CreateDocumentFragment : unit -&gt; Org.W3c.Dom.IDocumentFragment" Usage="iDocument.CreateDocumentFragment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createDocumentFragment", "()Lorg/w3c/dom/DocumentFragment;", "GetCreateDocumentFragmentHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createDocumentFragment", "()Lorg/w3c/dom/DocumentFragment;", "GetCreateDocumentFragmentHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocumentFragment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an empty <c>DocumentFragment</c> object.</summary>
        <returns>A new <c>DocumentFragment</c>.</returns>
        <remarks>
          <para>Creates an empty <c>DocumentFragment</c> object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createDocumentFragment()" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createDocumentFragment()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateElement">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IElement? CreateElement (string? tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IElement CreateElement(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateElement(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateElement : string -&gt; Org.W3c.Dom.IElement" Usage="iDocument.CreateElement tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createElement", "(Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetCreateElement_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createElement", "(Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetCreateElement_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">The name of the element type to instantiate. For XML,
              this is case-sensitive, otherwise it depends on the
              case-sensitivity of the markup language in use. In that case, the
              name is mapped to the canonical form of that markup by the DOM
              implementation.</param>
        <summary>Creates an element of the type specified.</summary>
        <returns>A new <c>Element</c> object with the
              <c>nodeName</c> attribute set to <c>tagName</c>, and
              <c>localName</c>, <c>prefix</c>, and
              <c>namespaceURI</c> set to <c>null</c>.</returns>
        <remarks>
          <para>Creates an element of the type specified. Note that the instance
            returned implements the <c>Element</c> interface, so attributes
            can be specified directly on the returned object.
            &lt;br&gt;In addition, if there are known attributes with default values,
            <c>Attr</c> nodes representing them are automatically created
            and attached to the element.
            &lt;br&gt;To create an element with a qualified name and namespace URI, use
            the <c>createElementNS</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createElement(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createElement(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified name is not an XML
   name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateElementNS">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IElement? CreateElementNS (string? namespaceURI, string? qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IElement CreateElementNS(string namespaceURI, string qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateElementNS(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateElementNS : string * string -&gt; Org.W3c.Dom.IElement" Usage="iDocument.CreateElementNS (namespaceURI, qualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createElementNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetCreateElementNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createElementNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetCreateElementNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="qualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">The namespace URI of the element to create.</param>
        <param name="qualifiedName">The qualified name of the element type to
              instantiate.</param>
        <summary>Creates an element of the given qualified name and namespace URI.</summary>
        <returns>A new <c>Element</c> object with the following
              attributes:
            &lt;table border='1' cellpadding='3'&gt;
            &lt;tr&gt;
            &lt;th&gt;Attribute&lt;/th&gt;
            &lt;th&gt;Value&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.nodeName</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>qualifiedName</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.namespaceURI</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>namespaceURI</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.prefix</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;prefix, extracted
              from <c>qualifiedName</c>, or <c>null</c> if there is
              no prefix&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Node.localName</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;local name, extracted from
              <c>qualifiedName</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;<c>Element.tagName</c>&lt;/td&gt;
            &lt;td valign='top' rowspan='1' colspan='1'&gt;
              <c>qualifiedName</c>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;</returns>
        <remarks>
          <para>Creates an element of the given qualified name and namespace URI.
            &lt;br&gt;Per [<see href="http://www.w3.org/TR/1999/REC-xml-names-19990114/">XML Namespaces</see>]
            , applications must use the value <c>null</c> as the
            namespaceURI parameter for methods if they wish to have no namespace.</para>
          <para>Added in DOM Level 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createElementNS(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createElementNS(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified
   <c>qualifiedName</c> is not an XML name according to the XML
   version in use specified in the <c>Document.xmlVersion</c>
   attribute.
   <format type="text/html"><br /></format>NAMESPACE_ERR: Raised if the <c>qualifiedName</c> is a
   malformed qualified name, if the <c>qualifiedName</c> has a
   prefix and the <c>namespaceURI</c> is <c>null</c>, or
   if the <c>qualifiedName</c> has a prefix that is "xml" and
   the <c>namespaceURI</c> is different from "" []
   , or if the <c>qualifiedName</c> or its prefix is "xmlns" and
   the <c>namespaceURI</c> is different from "", or if the <c>namespaceURI</c> is "" and neither the <c>qualifiedName</c> nor its prefix is "xmlns".
   <format type="text/html"><br /></format>NOT_SUPPORTED_ERR: Always thrown if the current document does not
   support the <c>"XML"</c> feature, since namespaces were
   defined by XML.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntityReference">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IEntityReference? CreateEntityReference (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IEntityReference CreateEntityReference(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateEntityReference(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateEntityReference : string -&gt; Org.W3c.Dom.IEntityReference" Usage="iDocument.CreateEntityReference name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createEntityReference", "(Ljava/lang/String;)Lorg/w3c/dom/EntityReference;", "GetCreateEntityReference_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createEntityReference", "(Ljava/lang/String;)Lorg/w3c/dom/EntityReference;", "GetCreateEntityReference_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IEntityReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the entity to reference.Unlike
              <c>Document.createElementNS</c> or
              <c>Document.createAttributeNS</c>, no namespace well-formed
              checking is done on the entity name. Applications should invoke
              <c>Document.normalizeDocument()</c> with the parameter "
              namespaces" set to <c>true</c> in order to ensure that the
              entity name is namespace well-formed.</param>
        <summary>Creates an <c>EntityReference</c> object.</summary>
        <returns>The new <c>EntityReference</c> object.</returns>
        <remarks>
          <para>Creates an <c>EntityReference</c> object. In addition, if the
            referenced entity is known, the child list of the
            <c>EntityReference</c> node is made the same as that of the
            corresponding <c>Entity</c> node.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt; If any descendant of the <c>Entity</c> node has
            an unbound namespace prefix, the corresponding descendant of the
            created <c>EntityReference</c> node is also unbound; (its
            <c>namespaceURI</c> is <c>null</c>). The DOM Level 2 and
            3 do not support any mechanism to resolve namespace prefixes in this
            case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createEntityReference(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createEntityReference(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified name is not an XML
   name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute.
   <format type="text/html"><br /></format>NOT_SUPPORTED_ERR: Raised if this document is an HTML document.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProcessingInstruction">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IProcessingInstruction? CreateProcessingInstruction (string? target, string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IProcessingInstruction CreateProcessingInstruction(string target, string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateProcessingInstruction(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateProcessingInstruction : string * string -&gt; Org.W3c.Dom.IProcessingInstruction" Usage="iDocument.CreateProcessingInstruction (target, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createProcessingInstruction", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/ProcessingInstruction;", "GetCreateProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createProcessingInstruction", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/ProcessingInstruction;", "GetCreateProcessingInstruction_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IProcessingInstruction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target">The target part of the processing instruction.Unlike
              <c>Document.createElementNS</c> or
              <c>Document.createAttributeNS</c>, no namespace well-formed
              checking is done on the target name. Applications should invoke
              <c>Document.normalizeDocument()</c> with the parameter "
              namespaces" set to <c>true</c> in order to ensure that the
              target name is namespace well-formed.</param>
        <param name="data">The data for the node.</param>
        <summary>Creates a <c>ProcessingInstruction</c> node given the specified
            name and data strings.</summary>
        <returns>The new <c>ProcessingInstruction</c> object.</returns>
        <remarks>
          <para>Creates a <c>ProcessingInstruction</c> node given the specified
            name and data strings.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createProcessingInstruction(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createProcessingInstruction(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">INVALID_CHARACTER_ERR: Raised if the specified target is not an XML
   name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute.
   <format type="text/html"><br /></format>NOT_SUPPORTED_ERR: Raised if this document is an HTML document.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateTextNode">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IText? CreateTextNode (string? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IText CreateTextNode(string data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.CreateTextNode(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateTextNode : string -&gt; Org.W3c.Dom.IText" Usage="iDocument.CreateTextNode data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createTextNode", "(Ljava/lang/String;)Lorg/w3c/dom/Text;", "GetCreateTextNode_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createTextNode", "(Ljava/lang/String;)Lorg/w3c/dom/Text;", "GetCreateTextNode_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="data">The data for the node.</param>
        <summary>Creates a <c>Text</c> node given the specified string.</summary>
        <returns>The new <c>Text</c> object.</returns>
        <remarks>
          <para>Creates a <c>Text</c> node given the specified string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#createTextNode(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.createTextNode(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Doctype">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDocumentType? Doctype { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDocumentType Doctype" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.Doctype" />
      <MemberSignature Language="F#" Value="member this.Doctype : Org.W3c.Dom.IDocumentType" Usage="Org.W3c.Dom.IDocument.Doctype" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDoctype", "()Lorg/w3c/dom/DocumentType;", "GetGetDoctypeHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDoctype", "()Lorg/w3c/dom/DocumentType;", "GetGetDoctypeHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDocumentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The Document Type Declaration (see <c>DocumentType</c>)
 associated with this document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DocumentElement">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IElement? DocumentElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IElement DocumentElement" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.DocumentElement" />
      <MemberSignature Language="F#" Value="member this.DocumentElement : Org.W3c.Dom.IElement" Usage="Org.W3c.Dom.IDocument.DocumentElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDocumentElement", "()Lorg/w3c/dom/Element;", "GetGetDocumentElementHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDocumentElement", "()Lorg/w3c/dom/Element;", "GetGetDocumentElementHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is a convenience attribute that allows direct access to the child
 node that is the document element of the document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DocumentURI">
      <MemberSignature Language="C#" Value="public string? DocumentURI { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentURI" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.DocumentURI" />
      <MemberSignature Language="F#" Value="member this.DocumentURI : string with get, set" Usage="Org.W3c.Dom.IDocument.DocumentURI" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDocumentURI", "()Ljava/lang/String;", "GetGetDocumentURIHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDocumentURI", "()Ljava/lang/String;", "GetGetDocumentURIHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDocumentURI", "(Ljava/lang/String;)V", "GetSetDocumentURI_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDocumentURI", "(Ljava/lang/String;)V", "GetSetDocumentURI_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The location of the document or <c>null</c> if undefined or if
 the <c>Document</c> was created using
 <c>DOMImplementation.createDocument</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DomConfig">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDOMConfiguration? DomConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDOMConfiguration DomConfig" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.DomConfig" />
      <MemberSignature Language="F#" Value="member this.DomConfig : Org.W3c.Dom.IDOMConfiguration" Usage="Org.W3c.Dom.IDocument.DomConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDomConfig", "()Lorg/w3c/dom/DOMConfiguration;", "GetGetDomConfigHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDomConfig", "()Lorg/w3c/dom/DOMConfiguration;", "GetGetDomConfigHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDOMConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The configuration used when <c>Document.normalizeDocument()</c>
 is invoked.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetElementById">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IElement? GetElementById (string? elementId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.IElement GetElementById(string elementId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.GetElementById(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetElementById : string -&gt; Org.W3c.Dom.IElement" Usage="iDocument.GetElementById elementId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getElementById", "(Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetGetElementById_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getElementById", "(Ljava/lang/String;)Lorg/w3c/dom/Element;", "GetGetElementById_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementId">The unique <c>id</c> value for an element.</param>
        <summary>Returns the <c>Element</c> that has an ID attribute with the
            given value.</summary>
        <returns>The matching element or <c>null</c> if there is none.</returns>
        <remarks>
          <para>Returns the <c>Element</c> that has an ID attribute with the
            given value. If no such element exists, this returns <c>null</c>
            . If more than one element has an ID attribute with that value, what
            is returned is undefined.
            &lt;br&gt; The DOM implementation is expected to use the attribute
            <c>Attr.isId</c> to determine if an attribute is of type ID.
            &lt;p &gt;&lt;b&gt;Note:&lt;/b&gt; Attributes with the name "ID" or "id" are not of type
            ID unless so defined.</para>
          <para>Added in DOM Level 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#getElementById(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.getElementById(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagName">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INodeList? GetElementsByTagName (string? tagname);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INodeList GetElementsByTagName(string tagname) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.GetElementsByTagName(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagName : string -&gt; Org.W3c.Dom.INodeList" Usage="iDocument.GetElementsByTagName tagname" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getElementsByTagName", "(Ljava/lang/String;)Lorg/w3c/dom/NodeList;", "GetGetElementsByTagName_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getElementsByTagName", "(Ljava/lang/String;)Lorg/w3c/dom/NodeList;", "GetGetElementsByTagName_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagname" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagname">The name of the tag to match on. The special value "*"
              matches all tags. For XML, the <c>tagname</c> parameter is
              case-sensitive, otherwise it depends on the case-sensitivity of the
              markup language in use.</param>
        <summary>Returns a <c>NodeList</c> of all the <c>Elements</c> in
            document order with a given tag name and are contained in the
            document.</summary>
        <returns>A new <c>NodeList</c> object containing all the matched
              <c>Elements</c>.</returns>
        <remarks>
          <para>Returns a <c>NodeList</c> of all the <c>Elements</c> in
            document order with a given tag name and are contained in the
            document.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#getElementsByTagName(java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.getElementsByTagName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetElementsByTagNameNS">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INodeList? GetElementsByTagNameNS (string? namespaceURI, string? localName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INodeList GetElementsByTagNameNS(string namespaceURI, string localName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.GetElementsByTagNameNS(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetElementsByTagNameNS : string * string -&gt; Org.W3c.Dom.INodeList" Usage="iDocument.GetElementsByTagNameNS (namespaceURI, localName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getElementsByTagNameNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/NodeList;", "GetGetElementsByTagNameNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getElementsByTagNameNS", "(Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/NodeList;", "GetGetElementsByTagNameNS_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INodeList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="localName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceURI">The namespace URI of the elements to match on. The
              special value <c>"*"</c> matches all namespaces.</param>
        <param name="localName">The local name of the elements to match on. The
              special value "*" matches all local names.</param>
        <summary>Returns a <c>NodeList</c> of all the <c>Elements</c> with a
            given local name and namespace URI in document order.</summary>
        <returns>A new <c>NodeList</c> object containing all the matched
              <c>Elements</c>.</returns>
        <remarks>
          <para>Returns a <c>NodeList</c> of all the <c>Elements</c> with a
            given local name and namespace URI in document order.</para>
          <para>Added in DOM Level 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#getElementsByTagNameNS(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.getElementsByTagNameNS(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Implementation">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.IDOMImplementation? Implementation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.IDOMImplementation Implementation" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.Implementation" />
      <MemberSignature Language="F#" Value="member this.Implementation : Org.W3c.Dom.IDOMImplementation" Usage="Org.W3c.Dom.IDocument.Implementation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getImplementation", "()Lorg/w3c/dom/DOMImplementation;", "GetGetImplementationHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getImplementation", "()Lorg/w3c/dom/DOMImplementation;", "GetGetImplementationHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.IDOMImplementation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>DOMImplementation</c> object that handles this document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImportNode">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INode? ImportNode (Org.W3c.Dom.INode? importedNode, bool deep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INode ImportNode(class Org.W3c.Dom.INode importedNode, bool deep) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.ImportNode(Org.W3c.Dom.INode,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ImportNode : Org.W3c.Dom.INode * bool -&gt; Org.W3c.Dom.INode" Usage="iDocument.ImportNode (importedNode, deep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("importNode", "(Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;", "GetImportNode_Lorg_w3c_dom_Node_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("importNode", "(Lorg/w3c/dom/Node;Z)Lorg/w3c/dom/Node;", "GetImportNode_Lorg_w3c_dom_Node_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedNode" Type="Org.W3c.Dom.INode" />
        <Parameter Name="deep" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="importedNode">The node to import.</param>
        <param name="deep">If <c>true</c>, recursively import the subtree under
              the specified node; if <c>false</c>, import only the node
              itself, as explained above. This has no effect on nodes that cannot
              have any children, and on <c>Attr</c>, and
              <c>EntityReference</c> nodes.</param>
        <summary>Imports a node from another document to this document, without altering
            or removing the source node from the original document; this method
            creates a new copy of the source node.</summary>
        <returns>The imported node that belongs to this <c>Document</c>.</returns>
        <remarks>
          <para>Imports a node from another document to this document, without altering
            or removing the source node from the original document; this method
            creates a new copy of the source node. The returned node has no
            parent; (<c>parentNode</c> is <c>null</c>).
            &lt;br&gt;For all nodes, importing a node creates a node object owned by the
            importing document, with attribute values identical to the source
            node's <c>nodeName</c> and <c>nodeType</c>, plus the
            attributes related to namespaces (<c>prefix</c>,
            <c>localName</c>, and <c>namespaceURI</c>). As in the
            <c>cloneNode</c> operation, the source node is not altered.
            User data associated to the imported node is not carried over.
            However, if any <c>UserDataHandlers</c> has been specified
            along with the associated data these handlers will be called with the
            appropriate parameters before this method returns.
            &lt;br&gt;Additional information is copied as appropriate to the
            <c>nodeType</c>, attempting to mirror the behavior expected if
            a fragment of XML or HTML source was copied from one document to
            another, recognizing that the two documents may have different DTDs
            in the XML case. The following list describes the specifics for each
            type of node.
            &lt;dl&gt;
            &lt;dt&gt;ATTRIBUTE_NODE&lt;/dt&gt;
            &lt;dd&gt;The <c>ownerElement</c> attribute
            is set to <c>null</c> and the <c>specified</c> flag is
            set to <c>true</c> on the generated <c>Attr</c>. The
            descendants of the source <c>Attr</c> are recursively imported
            and the resulting nodes reassembled to form the corresponding subtree.
            Note that the <c>deep</c> parameter has no effect on
            <c>Attr</c> nodes; they always carry their children with them
            when imported.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_FRAGMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;If the <c>deep</c> option
            was set to <c>true</c>, the descendants of the source
            <c>DocumentFragment</c> are recursively imported and the
            resulting nodes reassembled under the imported
            <c>DocumentFragment</c> to form the corresponding subtree.
            Otherwise, this simply generates an empty
            <c>DocumentFragment</c>.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;<c>Document</c>
            nodes cannot be imported.&lt;/dd&gt;
            &lt;dt&gt;DOCUMENT_TYPE_NODE&lt;/dt&gt;
            &lt;dd&gt;<c>DocumentType</c>
            nodes cannot be imported.&lt;/dd&gt;
            &lt;dt&gt;ELEMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;&lt;em&gt;Specified&lt;/em&gt; attribute nodes of the source element are imported, and the generated
            <c>Attr</c> nodes are attached to the generated
            <c>Element</c>. Default attributes are &lt;em&gt;not&lt;/em&gt; copied, though if the document being imported into defines default
            attributes for this element name, those are assigned. If the
            <c>importNode</c><c>deep</c> parameter was set to
            <c>true</c>, the descendants of the source element are
            recursively imported and the resulting nodes reassembled to form the
            corresponding subtree.&lt;/dd&gt;
            &lt;dt&gt;ENTITY_NODE&lt;/dt&gt;
            &lt;dd&gt;<c>Entity</c> nodes can be
            imported, however in the current release of the DOM the
            <c>DocumentType</c> is readonly. Ability to add these imported
            nodes to a <c>DocumentType</c> will be considered for addition
            to a future release of the DOM.On import, the <c>publicId</c>,
            <c>systemId</c>, and <c>notationName</c> attributes are
            copied. If a <c>deep</c> import is requested, the descendants
            of the the source <c>Entity</c> are recursively imported and
            the resulting nodes reassembled to form the corresponding subtree.&lt;/dd&gt;
            &lt;dt&gt;
            ENTITY_REFERENCE_NODE&lt;/dt&gt;
            &lt;dd&gt;Only the <c>EntityReference</c> itself is
            copied, even if a <c>deep</c> import is requested, since the
            source and destination documents might have defined the entity
            differently. If the document being imported into provides a
            definition for this entity name, its value is assigned.&lt;/dd&gt;
            &lt;dt&gt;NOTATION_NODE&lt;/dt&gt;
            &lt;dd&gt;
            <c>Notation</c> nodes can be imported, however in the current
            release of the DOM the <c>DocumentType</c> is readonly. Ability
            to add these imported nodes to a <c>DocumentType</c> will be
            considered for addition to a future release of the DOM.On import, the
            <c>publicId</c> and <c>systemId</c> attributes are copied.
            Note that the <c>deep</c> parameter has no effect on this type
            of nodes since they cannot have any children.&lt;/dd&gt;
            &lt;dt&gt;
            PROCESSING_INSTRUCTION_NODE&lt;/dt&gt;
            &lt;dd&gt;The imported node copies its
            <c>target</c> and <c>data</c> values from those of the
            source node.Note that the <c>deep</c> parameter has no effect
            on this type of nodes since they cannot have any children.&lt;/dd&gt;
            &lt;dt&gt;TEXT_NODE,
            CDATA_SECTION_NODE, COMMENT_NODE&lt;/dt&gt;
            &lt;dd&gt;These three types of nodes inheriting
            from <c>CharacterData</c> copy their <c>data</c> and
            <c>length</c> attributes from those of the source node.Note
            that the <c>deep</c> parameter has no effect on these types of
            nodes since they cannot have any children.&lt;/dd&gt;
            &lt;/dl&gt;</para>
          <para>Added in DOM Level 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#importNode(org.w3c.dom.Node,%20boolean)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.importNode(org.w3c.dom.Node, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the type of node being imported is not
   supported.
   <format type="text/html"><br /></format>INVALID_CHARACTER_ERR: Raised if one of the imported names is not
   an XML name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute. This may happen when
   importing an XML 1.1 [] element
   into an XML 1.0 document, for instance.</exception>
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public string? InputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputEncoding" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.InputEncoding" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : string" Usage="Org.W3c.Dom.IDocument.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputEncoding", "()Ljava/lang/String;", "GetGetInputEncodingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputEncoding", "()Ljava/lang/String;", "GetGetInputEncodingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An attribute specifying the encoding used for this document at the time
 of the parsing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="NormalizeDocument">
      <MemberSignature Language="C#" Value="public void NormalizeDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NormalizeDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.NormalizeDocument" />
      <MemberSignature Language="F#" Value="abstract member NormalizeDocument : unit -&gt; unit" Usage="iDocument.NormalizeDocument " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("normalizeDocument", "()V", "GetNormalizeDocumentHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("normalizeDocument", "()V", "GetNormalizeDocumentHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method acts as if the document was going through a save and load
            cycle, putting the document in a "normal" form.</summary>
        <remarks>
          <para>This method acts as if the document was going through a save and load
            cycle, putting the document in a "normal" form. As a consequence,
            this method updates the replacement tree of
            <c>EntityReference</c> nodes and normalizes <c>Text</c>
            nodes, as defined in the method <c>Node.normalize()</c>.
            &lt;br&gt; Otherwise, the actual result depends on the features being set on
            the <c>Document.domConfig</c> object and governing what
            operations actually take place. Noticeably this method could also
            make the document namespace well-formed according to the algorithm
            described in , check the character normalization, remove the
            <c>CDATASection</c> nodes, etc. See
            <c>DOMConfiguration</c> for details.</para>
          <code lang="text/java">// Keep in the document
            the information defined // in the XML Information Set (Java example)
            DOMConfiguration docConfig = myDocument.getDomConfig();
            docConfig.setParameter("infoset", Boolean.TRUE);
            myDocument.normalizeDocument();</code>
          <para>&lt;br&gt;Mutation events, when supported, are generated to reflect the
            changes occurring on the document.
            &lt;br&gt; If errors occur during the invocation of this method, such as an
            attempt to update a read-only node or a <c>Node.nodeName</c>
            contains an invalid character according to the XML version in use,
            errors or warnings (<c>DOMError.SEVERITY_ERROR</c> or
            <c>DOMError.SEVERITY_WARNING</c>) will be reported using the
            <c>DOMErrorHandler</c> object associated with the "error-handler
            " parameter. Note this method might also report fatal errors (
            <c>DOMError.SEVERITY_FATAL_ERROR</c>) if an implementation
            cannot recover from an error.</para>
          <para>Added in DOM Level 3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#normalizeDocument()" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.normalizeDocument()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RenameNode">
      <MemberSignature Language="C#" Value="public Org.W3c.Dom.INode? RenameNode (Org.W3c.Dom.INode? n, string? namespaceURI, string? qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Org.W3c.Dom.INode RenameNode(class Org.W3c.Dom.INode n, string namespaceURI, string qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.W3c.Dom.IDocument.RenameNode(Org.W3c.Dom.INode,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RenameNode : Org.W3c.Dom.INode * string * string -&gt; Org.W3c.Dom.INode" Usage="iDocument.RenameNode (n, namespaceURI, qualifiedName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("renameNode", "(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Node;", "GetRenameNode_Lorg_w3c_dom_Node_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("renameNode", "(Lorg/w3c/dom/Node;Ljava/lang/String;Ljava/lang/String;)Lorg/w3c/dom/Node;", "GetRenameNode_Lorg_w3c_dom_Node_Ljava_lang_String_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="n" Type="Org.W3c.Dom.INode" />
        <Parameter Name="namespaceURI" Type="System.String" />
        <Parameter Name="qualifiedName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="n">The node to rename.</param>
        <param name="namespaceURI">The new namespace URI.</param>
        <param name="qualifiedName">The new qualified name.</param>
        <summary>Rename an existing node of type <c>ELEMENT_NODE</c> or
            <c>ATTRIBUTE_NODE</c>.</summary>
        <returns>The renamed node. This is either the specified node or the new
              node that was created to replace the specified node.</returns>
        <remarks>
          <para>Rename an existing node of type <c>ELEMENT_NODE</c> or
            <c>ATTRIBUTE_NODE</c>.
            &lt;br&gt;When possible this simply changes the name of the given node,
            otherwise this creates a new node with the specified name and
            replaces the existing node with the new node as described below.
            &lt;br&gt;If simply changing the name of the given node is not possible, the
            following operations are performed: a new node is created, any
            registered event listener is registered on the new node, any user
            data attached to the old node is removed from that node, the old node
            is removed from its parent if it has one, the children are moved to
            the new node, if the renamed node is an <c>Element</c> its
            attributes are moved to the new node, the new node is inserted at the
            position the old node used to have in its parent's child nodes list
            if it has one, the user data that was attached to the old node is
            attached to the new node.
            &lt;br&gt;When the node being renamed is an <c>Element</c> only the
            specified attributes are moved, default attributes originated from
            the DTD are updated according to the new element name. In addition,
            the implementation may update default attributes from other schemas.
            Applications should use <c>Document.normalizeDocument()</c> to
            guarantee these attributes are up-to-date.
            &lt;br&gt;When the node being renamed is an <c>Attr</c> that is
            attached to an <c>Element</c>, the node is first removed from
            the <c>Element</c> attributes map. Then, once renamed, either
            by modifying the existing node or creating a new one as described
            above, it is put back.
            &lt;br&gt;In addition,
            &lt;ul&gt;
            &lt;li&gt; a user data event <c>NODE_RENAMED</c> is fired,
            &lt;/li&gt;
            &lt;li&gt;
            when the implementation supports the feature "MutationNameEvents",
            each mutation operation involved in this method fires the appropriate
            event, and in the end the event {<c>http://www.w3.org/2001/xml-events</c>,
            <c>DOMElementNameChanged</c>} or {<c>http://www.w3.org/2001/xml-events</c>,
            <c>DOMAttributeNameChanged</c>} is fired.
            &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Added in DOM Level 3.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/w3c/dom/Document#renameNode(org.w3c.dom.Node,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.w3c.dom.Document.renameNode(org.w3c.dom.Node, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised when the type of the specified node is
   neither <c>ELEMENT_NODE</c> nor <c>ATTRIBUTE_NODE</c>,
   or if the implementation does not support the renaming of the
   document element.
   <format type="text/html"><br /></format>INVALID_CHARACTER_ERR: Raised if the new qualified name is not an
   XML name according to the XML version in use specified in the
   <c>Document.xmlVersion</c> attribute.
   <format type="text/html"><br /></format>WRONG_DOCUMENT_ERR: Raised when the specified node was created
   from a different document than this document.
   <format type="text/html"><br /></format>NAMESPACE_ERR: Raised if the <c>qualifiedName</c> is a
   malformed qualified name, if the <c>qualifiedName</c> has a
   prefix and the <c>namespaceURI</c> is <c>null</c>, or
   if the <c>qualifiedName</c> has a prefix that is "xml" and
   the <c>namespaceURI</c> is different from "" []
   . Also raised, when the node being renamed is an attribute, if the
   <c>qualifiedName</c>, or its prefix, is "xmlns" and the
   <c>namespaceURI</c> is different from "".</exception>
      </Docs>
    </Member>
    <Member MemberName="StrictErrorChecking">
      <MemberSignature Language="C#" Value="public bool StrictErrorChecking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StrictErrorChecking" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.StrictErrorChecking" />
      <MemberSignature Language="F#" Value="member this.StrictErrorChecking : bool with get, set" Usage="Org.W3c.Dom.IDocument.StrictErrorChecking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrictErrorChecking", "()Z", "GetGetStrictErrorCheckingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrictErrorChecking", "()Z", "GetGetStrictErrorCheckingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setStrictErrorChecking", "(Z)V", "GetSetStrictErrorChecking_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setStrictErrorChecking", "(Z)V", "GetSetStrictErrorChecking_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An attribute specifying whether error checking is enforced or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="XmlEncoding">
      <MemberSignature Language="C#" Value="public string? XmlEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlEncoding" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.XmlEncoding" />
      <MemberSignature Language="F#" Value="member this.XmlEncoding : string" Usage="Org.W3c.Dom.IDocument.XmlEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getXmlEncoding", "()Ljava/lang/String;", "GetGetXmlEncodingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getXmlEncoding", "()Ljava/lang/String;", "GetGetXmlEncodingHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An attribute specifying, as part of the , the encoding of this document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="XmlStandalone">
      <MemberSignature Language="C#" Value="public bool XmlStandalone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XmlStandalone" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.XmlStandalone" />
      <MemberSignature Language="F#" Value="member this.XmlStandalone : bool with get, set" Usage="Org.W3c.Dom.IDocument.XmlStandalone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getXmlStandalone", "()Z", "GetGetXmlStandaloneHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getXmlStandalone", "()Z", "GetGetXmlStandaloneHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setXmlStandalone", "(Z)V", "GetSetXmlStandalone_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setXmlStandalone", "(Z)V", "GetSetXmlStandalone_ZHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An attribute specifying, as part of the , whether this document is standalone.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if this document does not support the
   "XML" feature.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlVersion">
      <MemberSignature Language="C#" Value="public string? XmlVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlVersion" />
      <MemberSignature Language="DocId" Value="P:Org.W3c.Dom.IDocument.XmlVersion" />
      <MemberSignature Language="F#" Value="member this.XmlVersion : string with get, set" Usage="Org.W3c.Dom.IDocument.XmlVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getXmlVersion", "()Ljava/lang/String;", "GetGetXmlVersionHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getXmlVersion", "()Ljava/lang/String;", "GetGetXmlVersionHandler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setXmlVersion", "(Ljava/lang/String;)V", "GetSetXmlVersion_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setXmlVersion", "(Ljava/lang/String;)V", "GetSetXmlVersion_Ljava_lang_String_Handler:Org.W3c.Dom.IDocumentInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An attribute specifying, as part of the , the version number of this document.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Org.W3c.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the version is set to a value that is
   not supported by this <c>Document</c> or if this document
   does not support the "XML" feature.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
