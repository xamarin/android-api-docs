<Type Name="AtomicIntegerFieldUpdater" FullName="Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater">
  <TypeSignature Language="C#" Value="public abstract class AtomicIntegerFieldUpdater : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AtomicIntegerFieldUpdater extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater" />
  <TypeSignature Language="F#" Value="type AtomicIntegerFieldUpdater = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/atomic/AtomicIntegerFieldUpdater", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/atomic/AtomicIntegerFieldUpdater", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;T&gt;&lt;T&gt;">The type of the object holding the updatable field</param>
    <summary>A reflection-based utility that enables atomic updates to
            designated <c>volatile int</c> fields of designated classes.</summary>
    <remarks>
      <para>A reflection-based utility that enables atomic updates to
            designated <c>volatile int</c> fields of designated classes.
            This class is designed for use in atomic data structures in which
            several fields of the same node are independently subject to atomic
            updates.</para>
      <para>Note that the guarantees of the <c>compareAndSet</c>
            method in this class are weaker than in other atomic classes.
            Because this class cannot ensure that all uses of the field
            are appropriate for purposes of atomic access, it can
            guarantee atomicity only with respect to other invocations of
            <c>compareAndSet</c> and <c>set</c> on the same updater.</para>
      <para>Object arguments for parameters of type <c>T</c> that are not
            instances of the class passed to <c>#newUpdater</c> will result in
            a <c>ClassCastException</c> being thrown.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicIntegerFieldUpdater ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Protected do-nothing constructor for use by subclasses.</summary>
        <remarks>
          <para>Protected do-nothing constructor for use by subclasses.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#AtomicIntegerFieldUpdater()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.AtomicIntegerFieldUpdater()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicIntegerFieldUpdater (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater" Usage="new Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccumulateAndGet">
      <MemberSignature Language="C#" Value="public int AccumulateAndGet (Java.Lang.Object? obj, int x, Java.Util.Functions.IIntBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AccumulateAndGet(class Java.Lang.Object obj, int32 x, class Java.Util.Functions.IIntBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.AccumulateAndGet(Java.Lang.Object,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.AccumulateAndGet : Java.Lang.Object * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="atomicIntegerFieldUpdater.AccumulateAndGet (obj, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("accumulateAndGet", "(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("accumulateAndGet", "(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given function
            to the current and given values, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given function
            to the current and given values, returning the updated value.
            The function should be side-effect-free, since it may be
            re-applied when attempted updates fail due to contention among
            threads.  The function is applied with the current value as its
            first argument, and the given update as the second argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#accumulateAndGet(T,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.accumulateAndGet(T, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAndGet">
      <MemberSignature Language="C#" Value="public virtual int AddAndGet (Java.Lang.Object? obj, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddAndGet(class Java.Lang.Object obj, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.AddAndGet(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AddAndGet : Java.Lang.Object * int -&gt; int&#xA;override this.AddAndGet : Java.Lang.Object * int -&gt; int" Usage="atomicIntegerFieldUpdater.AddAndGet (obj, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAndGet", "(Ljava/lang/Object;I)I", "GetAddAndGet_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAndGet", "(Ljava/lang/Object;I)I", "GetAddAndGet_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value of the field of
            the given object managed by this updater.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically adds the given value to the current value of the field of
            the given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#addAndGet(T,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.addAndGet(T, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="C#" Value="public abstract bool CompareAndSet (Java.Lang.Object? obj, int expect, int update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareAndSet(class Java.Lang.Object obj, int32 expect, int32 update) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.CompareAndSet(Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CompareAndSet : Java.Lang.Object * int * int -&gt; bool" Usage="atomicIntegerFieldUpdater.CompareAndSet (obj, expect, update)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndSet", "(Ljava/lang/Object;II)Z", "GetCompareAndSet_Ljava_lang_Object_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndSet", "(Ljava/lang/Object;II)Z", "GetCompareAndSet_Ljava_lang_Object_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="expect" Type="System.Int32" />
        <Parameter Name="update" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to conditionally set</param>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the field of the given object managed by this updater
            to the given updated value if the current value <c>==</c> the
            expected value.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Atomically sets the field of the given object managed by this updater
            to the given updated value if the current value <c>==</c> the
            expected value. This method is guaranteed to be atomic with respect to
            other calls to <c>compareAndSet</c> and <c>set</c>, but not
            necessarily with respect to other changes in the field.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#compareAndSet(T,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(T, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecrementAndGet">
      <MemberSignature Language="C#" Value="public virtual int DecrementAndGet (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DecrementAndGet(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.DecrementAndGet(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member DecrementAndGet : Java.Lang.Object -&gt; int&#xA;override this.DecrementAndGet : Java.Lang.Object -&gt; int" Usage="atomicIntegerFieldUpdater.DecrementAndGet obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decrementAndGet", "(Ljava/lang/Object;)I", "GetDecrementAndGet_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decrementAndGet", "(Ljava/lang/Object;)I", "GetDecrementAndGet_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <summary>Atomically decrements by one the current value of the field of the
            given object managed by this updater.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically decrements by one the current value of the field of the
            given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#decrementAndGet(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract int Get (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Get(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.Get(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Get : Java.Lang.Object -&gt; int" Usage="atomicIntegerFieldUpdater.Get obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(Ljava/lang/Object;)I", "GetGet_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(Ljava/lang/Object;)I", "GetGet_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get</param>
        <summary>Returns the current value held in the field of the given object
            managed by this updater.</summary>
        <returns>the current value</returns>
        <remarks>
          <para>Returns the current value held in the field of the given object
            managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#get(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.get(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndAccumulate">
      <MemberSignature Language="C#" Value="public int GetAndAccumulate (Java.Lang.Object? obj, int x, Java.Util.Functions.IIntBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndAccumulate(class Java.Lang.Object obj, int32 x, class Java.Util.Functions.IIntBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndAccumulate(Java.Lang.Object,System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndAccumulate : Java.Lang.Object * int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndAccumulate (obj, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAccumulate", "(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAccumulate", "(Ljava/lang/Object;ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given function
            to the current and given values, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given function
            to the current and given values, returning the previous value.
            The function should be side-effect-free, since it may be
            re-applied when attempted updates fail due to contention among
            threads.  The function is applied with the current value as its
            first argument, and the given update as the second argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndAccumulate(T,%20int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAccumulate(T, int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndAdd">
      <MemberSignature Language="C#" Value="public virtual int GetAndAdd (Java.Lang.Object? obj, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAndAdd(class Java.Lang.Object obj, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndAdd(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAndAdd : Java.Lang.Object * int -&gt; int&#xA;override this.GetAndAdd : Java.Lang.Object * int -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndAdd (obj, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAdd", "(Ljava/lang/Object;I)I", "GetGetAndAdd_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAdd", "(Ljava/lang/Object;I)I", "GetGetAndAdd_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value of the field of
            the given object managed by this updater.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically adds the given value to the current value of the field of
            the given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndAdd(T,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAdd(T, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndDecrement">
      <MemberSignature Language="C#" Value="public virtual int GetAndDecrement (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAndDecrement(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndDecrement(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetAndDecrement : Java.Lang.Object -&gt; int&#xA;override this.GetAndDecrement : Java.Lang.Object -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndDecrement obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndDecrement", "(Ljava/lang/Object;)I", "GetGetAndDecrement_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndDecrement", "(Ljava/lang/Object;)I", "GetGetAndDecrement_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <summary>Atomically decrements by one the current value of the field of the
            given object managed by this updater.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically decrements by one the current value of the field of the
            given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndDecrement(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndDecrement(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndIncrement">
      <MemberSignature Language="C#" Value="public virtual int GetAndIncrement (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAndIncrement(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndIncrement(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetAndIncrement : Java.Lang.Object -&gt; int&#xA;override this.GetAndIncrement : Java.Lang.Object -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndIncrement obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndIncrement", "(Ljava/lang/Object;)I", "GetGetAndIncrement_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndIncrement", "(Ljava/lang/Object;)I", "GetGetAndIncrement_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <summary>Atomically increments by one the current value of the field of the
            given object managed by this updater.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically increments by one the current value of the field of the
            given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndIncrement(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndIncrement(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndSet">
      <MemberSignature Language="C#" Value="public virtual int GetAndSet (Java.Lang.Object? obj, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAndSet(class Java.Lang.Object obj, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndSet(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAndSet : Java.Lang.Object * int -&gt; int&#xA;override this.GetAndSet : Java.Lang.Object * int -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndSet (obj, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndSet", "(Ljava/lang/Object;I)I", "GetGetAndSet_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndSet", "(Ljava/lang/Object;I)I", "GetGetAndSet_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the field of the given object managed by this updater
            to the given value and returns the old value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically sets the field of the given object managed by this updater
            to the given value and returns the old value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndSet(T,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet(T, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndUpdate">
      <MemberSignature Language="C#" Value="public int GetAndUpdate (Java.Lang.Object? obj, Java.Util.Functions.IIntUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndUpdate(class Java.Lang.Object obj, class Java.Util.Functions.IIntUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.GetAndUpdate(Java.Lang.Object,Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndUpdate : Java.Lang.Object * Java.Util.Functions.IIntUnaryOperator -&gt; int" Usage="atomicIntegerFieldUpdater.GetAndUpdate (obj, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndUpdate", "(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndUpdate", "(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given
            function, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given
            function, returning the previous value. The function should be
            side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#getAndUpdate(T,%20java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndUpdate(T, java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementAndGet">
      <MemberSignature Language="C#" Value="public virtual int IncrementAndGet (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IncrementAndGet(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.IncrementAndGet(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member IncrementAndGet : Java.Lang.Object -&gt; int&#xA;override this.IncrementAndGet : Java.Lang.Object -&gt; int" Usage="atomicIntegerFieldUpdater.IncrementAndGet obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("incrementAndGet", "(Ljava/lang/Object;)I", "GetIncrementAndGet_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("incrementAndGet", "(Ljava/lang/Object;)I", "GetIncrementAndGet_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <summary>Atomically increments by one the current value of the field of the
            given object managed by this updater.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically increments by one the current value of the field of the
            given object managed by this updater.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#incrementAndGet(T)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LazySet">
      <MemberSignature Language="C#" Value="public abstract void LazySet (Java.Lang.Object? obj, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LazySet(class Java.Lang.Object obj, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.LazySet(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member LazySet : Java.Lang.Object * int -&gt; unit" Usage="atomicIntegerFieldUpdater.LazySet (obj, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lazySet", "(Ljava/lang/Object;I)V", "GetLazySet_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lazySet", "(Ljava/lang/Object;I)V", "GetLazySet_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to set</param>
        <param name="newValue">the new value</param>
        <summary>Eventually sets the field of the given object managed by this
            updater to the given updated value.</summary>
        <remarks>
          <para>Eventually sets the field of the given object managed by this
            updater to the given updated value.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#lazySet(T,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.lazySet(T, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewUpdater">
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater? NewUpdater (Java.Lang.Class? tclass, string? fieldName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater NewUpdater(class Java.Lang.Class tclass, string fieldName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.NewUpdater(Java.Lang.Class,System.String)" />
      <MemberSignature Language="F#" Value="static member NewUpdater : Java.Lang.Class * string -&gt; Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater" Usage="Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.NewUpdater (tclass, fieldName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newUpdater", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newUpdater", "(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "U" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "U" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tclass" Type="Java.Lang.Class" />
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tclass">the class of the objects holding the field</param>
        <param name="fieldName">the name of the field to be updated</param>
        <param name="&lt;U&gt;&lt;U&gt;">the type of instances of tclass</param>
        <summary>Creates and returns an updater for objects with the given field.</summary>
        <returns>the updater</returns>
        <remarks>
          <para>Creates and returns an updater for objects with the given field.
            The Class argument is needed to check that reflective types and
            generic types match.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#newUpdater(java.lang.Class%3CU%3E,%20java.lang.String)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(java.lang.Class&lt;U&gt;, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (Java.Lang.Object? obj, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Java.Lang.Object obj, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.Set(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Set : Java.Lang.Object * int -&gt; unit" Usage="atomicIntegerFieldUpdater.Set (obj, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Ljava/lang/Object;I)V", "GetSet_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Ljava/lang/Object;I)V", "GetSet_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to set</param>
        <param name="newValue">the new value</param>
        <summary>Sets the field of the given object managed by this updater to the
            given updated value.</summary>
        <remarks>
          <para>Sets the field of the given object managed by this updater to the
            given updated value. This operation is guaranteed to act as a volatile
            store with respect to subsequent invocations of <c>compareAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#set(T,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.set(T, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAndGet">
      <MemberSignature Language="C#" Value="public int UpdateAndGet (Java.Lang.Object? obj, Java.Util.Functions.IIntUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 UpdateAndGet(class Java.Lang.Object obj, class Java.Util.Functions.IIntUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.UpdateAndGet(Java.Lang.Object,Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.UpdateAndGet : Java.Lang.Object * Java.Util.Functions.IIntUnaryOperator -&gt; int" Usage="atomicIntegerFieldUpdater.UpdateAndGet (obj, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAndGet", "(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAndGet", "(Ljava/lang/Object;Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to get and set</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given
            function, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the field of the given object managed
            by this updater with the results of applying the given
            function, returning the updated value. The function should be
            side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#updateAndGet(T,%20java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.updateAndGet(T, java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="C#" Value="public abstract bool WeakCompareAndSet (Java.Lang.Object? obj, int expect, int update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WeakCompareAndSet(class Java.Lang.Object obj, int32 expect, int32 update) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicIntegerFieldUpdater.WeakCompareAndSet(Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WeakCompareAndSet : Java.Lang.Object * int * int -&gt; bool" Usage="atomicIntegerFieldUpdater.WeakCompareAndSet (obj, expect, update)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSet", "(Ljava/lang/Object;II)Z", "GetWeakCompareAndSet_Ljava_lang_Object_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSet", "(Ljava/lang/Object;II)Z", "GetWeakCompareAndSet_Ljava_lang_Object_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="expect" Type="System.Int32" />
        <Parameter Name="update" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="obj">An object whose field to conditionally set</param>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the field of the given object managed by this updater
            to the given updated value if the current value <c>==</c> the
            expected value.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Atomically sets the field of the given object managed by this updater
            to the given updated value if the current value <c>==</c> the
            expected value. This method is guaranteed to be atomic with respect to
            other calls to <c>compareAndSet</c> and <c>set</c>, but not
            necessarily with respect to other changes in the field.</para>
          <para>This operation may fail spuriously and does not provide
            ordering guarantees, so is only rarely an appropriate
            alternative to <c>compareAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicIntegerFieldUpdater#weakCompareAndSet(T,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicIntegerFieldUpdater.weakCompareAndSet(T, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
