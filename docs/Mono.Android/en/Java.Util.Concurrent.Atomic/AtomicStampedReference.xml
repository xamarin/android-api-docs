<Type Name="AtomicStampedReference" FullName="Java.Util.Concurrent.Atomic.AtomicStampedReference">
  <TypeSignature Language="C#" Value="public class AtomicStampedReference : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicStampedReference extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Atomic.AtomicStampedReference" />
  <TypeSignature Language="F#" Value="type AtomicStampedReference = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/atomic/AtomicStampedReference", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/atomic/AtomicStampedReference", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;V&gt;&lt;V&gt;">The type of object referred to by this reference</param>
    <summary>An <c>AtomicStampedReference</c> maintains an object reference
            along with an integer "stamp", that can be updated atomically.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicStampedReference (Java.Lang.Object? initialRef, int initialStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Object initialRef, int32 initialStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.#ctor(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicStampedReference : Java.Lang.Object * int -&gt; Java.Util.Concurrent.Atomic.AtomicStampedReference" Usage="new Java.Util.Concurrent.Atomic.AtomicStampedReference (initialRef, initialStamp)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/Object;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/Object;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialRef" Type="Java.Lang.Object" />
        <Parameter Name="initialStamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialRef">the initial reference</param>
        <param name="initialStamp">the initial stamp</param>
        <summary>Creates a new <c>AtomicStampedReference</c> with the given
            initial values.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#AtomicStampedReference(V,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.AtomicStampedReference(V, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicStampedReference (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicStampedReference : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.Atomic.AtomicStampedReference" Usage="new Java.Util.Concurrent.Atomic.AtomicStampedReference (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttemptStamp">
      <MemberSignature Language="C#" Value="public virtual bool AttemptStamp (Java.Lang.Object? expectedReference, int newStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AttemptStamp(class Java.Lang.Object expectedReference, int32 newStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.AttemptStamp(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AttemptStamp : Java.Lang.Object * int -&gt; bool&#xA;override this.AttemptStamp : Java.Lang.Object * int -&gt; bool" Usage="atomicStampedReference.AttemptStamp (expectedReference, newStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("attemptStamp", "(Ljava/lang/Object;I)Z", "GetAttemptStamp_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("attemptStamp", "(Ljava/lang/Object;I)Z", "GetAttemptStamp_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedReference" Type="Java.Lang.Object" />
        <Parameter Name="newStamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedReference">the expected value of the reference</param>
        <param name="newStamp">the new value for the stamp</param>
        <summary>Atomically sets the value of the stamp to the given update value
            if the current reference is <c>==</c> to the expected
            reference.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#attemptStamp(V,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.attemptStamp(V, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="C#" Value="public virtual bool CompareAndSet (Java.Lang.Object? expectedReference, Java.Lang.Object? newReference, int expectedStamp, int newStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CompareAndSet(class Java.Lang.Object expectedReference, class Java.Lang.Object newReference, int32 expectedStamp, int32 newStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.CompareAndSet(Java.Lang.Object,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CompareAndSet : Java.Lang.Object * Java.Lang.Object * int * int -&gt; bool&#xA;override this.CompareAndSet : Java.Lang.Object * Java.Lang.Object * int * int -&gt; bool" Usage="atomicStampedReference.CompareAndSet (expectedReference, newReference, expectedStamp, newStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndSet", "(Ljava/lang/Object;Ljava/lang/Object;II)Z", "GetCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndSet", "(Ljava/lang/Object;Ljava/lang/Object;II)Z", "GetCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedReference" Type="Java.Lang.Object" />
        <Parameter Name="newReference" Type="Java.Lang.Object" />
        <Parameter Name="expectedStamp" Type="System.Int32" />
        <Parameter Name="newStamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedReference">the expected value of the reference</param>
        <param name="newReference">the new value for the reference</param>
        <param name="expectedStamp">the expected value of the stamp</param>
        <param name="newStamp">the new value for the stamp</param>
        <summary>Atomically sets the value of both the reference and stamp
            to the given update values if the
            current reference is <c>==</c> to the expected reference
            and the current stamp is equal to the expected stamp.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#compareAndSet(V,%20V,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.compareAndSet(V, V, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Get (int[]? stampHolder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Get(int32[] stampHolder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.Get(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Get : int[] -&gt; Java.Lang.Object&#xA;override this.Get : int[] -&gt; Java.Lang.Object" Usage="atomicStampedReference.Get stampHolder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "([I)Ljava/lang/Object;", "GetGet_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "([I)Ljava/lang/Object;", "GetGet_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stampHolder" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="stampHolder">an array of size of at least one.  On return,
            <c>stampHolder[0]</c> will hold the value of the stamp.</param>
        <summary>Returns the current values of both the reference and the stamp.</summary>
        <returns>the current value of the reference</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#get(int[])" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.get(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicStampedReference.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.Atomic.AtomicStampedReference.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Reference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Reference" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicStampedReference.Reference" />
      <MemberSignature Language="F#" Value="member this.Reference : Java.Lang.Object" Usage="Java.Util.Concurrent.Atomic.AtomicStampedReference.Reference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReference", "()Ljava/lang/Object;", "GetGetReferenceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReference", "()Ljava/lang/Object;", "GetGetReferenceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current value of the reference.</summary>
        <value>the current value of the reference</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#getReference()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.getReference()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public virtual void Set (Java.Lang.Object? newReference, int newStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class Java.Lang.Object newReference, int32 newStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.Set(Java.Lang.Object,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Set : Java.Lang.Object * int -&gt; unit&#xA;override this.Set : Java.Lang.Object * int -&gt; unit" Usage="atomicStampedReference.Set (newReference, newStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(Ljava/lang/Object;I)V", "GetSet_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(Ljava/lang/Object;I)V", "GetSet_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReference" Type="Java.Lang.Object" />
        <Parameter Name="newStamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newReference">the new value for the reference</param>
        <param name="newStamp">the new value for the stamp</param>
        <summary>Unconditionally sets the value of both the reference and stamp.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#set(V,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.set(V, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stamp">
      <MemberSignature Language="C#" Value="public virtual int Stamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Stamp" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicStampedReference.Stamp" />
      <MemberSignature Language="F#" Value="member this.Stamp : int" Usage="Java.Util.Concurrent.Atomic.AtomicStampedReference.Stamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStamp", "()I", "GetGetStampHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStamp", "()I", "GetGetStampHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current value of the stamp.</summary>
        <value>the current value of the stamp</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#getStamp()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.getStamp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicStampedReference.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.Atomic.AtomicStampedReference.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicStampedReference.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.Atomic.AtomicStampedReference.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="C#" Value="public virtual bool WeakCompareAndSet (Java.Lang.Object? expectedReference, Java.Lang.Object? newReference, int expectedStamp, int newStamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WeakCompareAndSet(class Java.Lang.Object expectedReference, class Java.Lang.Object newReference, int32 expectedStamp, int32 newStamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicStampedReference.WeakCompareAndSet(Java.Lang.Object,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member WeakCompareAndSet : Java.Lang.Object * Java.Lang.Object * int * int -&gt; bool&#xA;override this.WeakCompareAndSet : Java.Lang.Object * Java.Lang.Object * int * int -&gt; bool" Usage="atomicStampedReference.WeakCompareAndSet (expectedReference, newReference, expectedStamp, newStamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSet", "(Ljava/lang/Object;Ljava/lang/Object;II)Z", "GetWeakCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSet", "(Ljava/lang/Object;Ljava/lang/Object;II)Z", "GetWeakCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedReference" Type="Java.Lang.Object" />
        <Parameter Name="newReference" Type="Java.Lang.Object" />
        <Parameter Name="expectedStamp" Type="System.Int32" />
        <Parameter Name="newStamp" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedReference">the expected value of the reference</param>
        <param name="newReference">the new value for the reference</param>
        <param name="expectedStamp">the expected value of the stamp</param>
        <param name="newStamp">the new value for the stamp</param>
        <summary>Atomically sets the value of both the reference and stamp
            to the given update values if the
            current reference is <c>==</c> to the expected reference
            and the current stamp is equal to the expected stamp.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicStampedReference#weakCompareAndSet(V,%20V,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicStampedReference.weakCompareAndSet(V, V, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
