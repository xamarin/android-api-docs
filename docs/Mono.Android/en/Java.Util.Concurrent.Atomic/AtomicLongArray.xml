<Type Name="AtomicLongArray" FullName="Java.Util.Concurrent.Atomic.AtomicLongArray">
  <TypeSignature Language="C#" Value="public class AtomicLongArray : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicLongArray extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Atomic.AtomicLongArray" />
  <TypeSignature Language="F#" Value="type AtomicLongArray = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/atomic/AtomicLongArray", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/atomic/AtomicLongArray", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>long</c> array in which elements may be updated atomically.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicLongArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicLongArray : int -&gt; Java.Util.Concurrent.Atomic.AtomicLongArray" Usage="new Java.Util.Concurrent.Atomic.AtomicLongArray length" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">the length of the array</param>
        <summary>Creates a new AtomicLongArray of the given length, with all
            elements initially zero.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#AtomicLongArray(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.AtomicLongArray(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicLongArray (long[]? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int64[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.#ctor(System.Int64[])" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicLongArray : int64[] -&gt; Java.Util.Concurrent.Atomic.AtomicLongArray" Usage="new Java.Util.Concurrent.Atomic.AtomicLongArray array" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="array" Type="System.Int64[]" />
      </Parameters>
      <Docs>
        <param name="array">To be added.</param>
        <param name="length">the length of the array</param>
        <summary>Creates a new AtomicLongArray of the given length, with all
            elements initially zero.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#AtomicLongArray(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.AtomicLongArray(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if array is null
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicLongArray (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicLongArray : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.Atomic.AtomicLongArray" Usage="new Java.Util.Concurrent.Atomic.AtomicLongArray (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccumulateAndGet">
      <MemberSignature Language="C#" Value="public long AccumulateAndGet (int i, long x, Java.Util.Functions.ILongBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 AccumulateAndGet(int32 i, int64 x, class Java.Util.Functions.ILongBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.AccumulateAndGet(System.Int32,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.AccumulateAndGet : int * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="atomicLongArray.AccumulateAndGet (i, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("accumulateAndGet", "(IJLjava/util/function/LongBinaryOperator;)J", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("accumulateAndGet", "(IJLjava/util/function/LongBinaryOperator;)J", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int64" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates the element at index <c>i</c> with the
            results of applying the given function to the current and
            given values, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#accumulateAndGet(int,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.accumulateAndGet(int, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAndGet">
      <MemberSignature Language="C#" Value="public virtual long AddAndGet (int i, long delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 AddAndGet(int32 i, int64 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.AddAndGet(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member AddAndGet : int * int64 -&gt; int64&#xA;override this.AddAndGet : int * int64 -&gt; int64" Usage="atomicLongArray.AddAndGet (i, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAndGet", "(IJ)J", "GetAddAndGet_IJHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAndGet", "(IJ)J", "GetAddAndGet_IJHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the element at index <c>i</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#addAndGet(int,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.addAndGet(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="C#" Value="public bool CompareAndSet (int i, long expect, long update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CompareAndSet(int32 i, int64 expect, int64 update) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.CompareAndSet(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.CompareAndSet : int * int64 * int64 -&gt; bool" Usage="atomicLongArray.CompareAndSet (i, expect, update)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndSet", "(IJJ)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndSet", "(IJJ)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expect" Type="System.Int64" />
        <Parameter Name="update" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the element at position <c>i</c> to the given
            updated value if the current value <c>==</c> the expected value.</summary>
        <returns>
          <c>true</c> if successful. False return indicates that
            the actual value was not equal to the expected value.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#compareAndSet(int,%20long,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int, long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecrementAndGet">
      <MemberSignature Language="C#" Value="public long DecrementAndGet (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 DecrementAndGet(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.DecrementAndGet(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.DecrementAndGet : int -&gt; int64" Usage="atomicLongArray.DecrementAndGet i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decrementAndGet", "(I)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decrementAndGet", "(I)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Atomically decrements by one the element at index <c>i</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#decrementAndGet(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.decrementAndGet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public long Get (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 Get(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.Get(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; int64" Usage="atomicLongArray.Get i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(I)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(I)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Gets the current value at position <c>i</c>.</summary>
        <returns>the current value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#get(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.get(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndAccumulate">
      <MemberSignature Language="C#" Value="public long GetAndAccumulate (int i, long x, Java.Util.Functions.ILongBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndAccumulate(int32 i, int64 x, class Java.Util.Functions.ILongBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndAccumulate(System.Int32,System.Int64,Java.Util.Functions.ILongBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndAccumulate : int * int64 * Java.Util.Functions.ILongBinaryOperator -&gt; int64" Usage="atomicLongArray.GetAndAccumulate (i, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAccumulate", "(IJLjava/util/function/LongBinaryOperator;)J", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAccumulate", "(IJLjava/util/function/LongBinaryOperator;)J", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int64" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.ILongBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates the element at index <c>i</c> with the
            results of applying the given function to the current and
            given values, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndAccumulate(int,%20long,%20java.util.function.LongBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndAccumulate(int, long, java.util.function.LongBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndAdd">
      <MemberSignature Language="C#" Value="public long GetAndAdd (int i, long delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndAdd(int32 i, int64 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndAdd(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.GetAndAdd : int * int64 -&gt; int64" Usage="atomicLongArray.GetAndAdd (i, delta)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAdd", "(IJ)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAdd", "(IJ)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the element at index <c>i</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndAdd(int,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndAdd(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndDecrement">
      <MemberSignature Language="C#" Value="public long GetAndDecrement (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndDecrement(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndDecrement(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetAndDecrement : int -&gt; int64" Usage="atomicLongArray.GetAndDecrement i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndDecrement", "(I)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndDecrement", "(I)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Atomically decrements by one the element at index <c>i</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndDecrement(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndDecrement(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndIncrement">
      <MemberSignature Language="C#" Value="public long GetAndIncrement (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndIncrement(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndIncrement(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetAndIncrement : int -&gt; int64" Usage="atomicLongArray.GetAndIncrement i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndIncrement", "(I)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndIncrement", "(I)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Atomically increments by one the element at index <c>i</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndIncrement(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndIncrement(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndSet">
      <MemberSignature Language="C#" Value="public long GetAndSet (int i, long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndSet(int32 i, int64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndSet(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.GetAndSet : int * int64 -&gt; int64" Usage="atomicLongArray.GetAndSet (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndSet", "(IJ)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndSet", "(IJ)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at position <c>i</c> to the given value
            and returns the old value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndSet(int,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndSet(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndUpdate">
      <MemberSignature Language="C#" Value="public long GetAndUpdate (int i, Java.Util.Functions.ILongUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetAndUpdate(int32 i, class Java.Util.Functions.ILongUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.GetAndUpdate(System.Int32,Java.Util.Functions.ILongUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndUpdate : int * Java.Util.Functions.ILongUnaryOperator -&gt; int64" Usage="atomicLongArray.GetAndUpdate (i, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndUpdate", "(ILjava/util/function/LongUnaryOperator;)J", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndUpdate", "(ILjava/util/function/LongUnaryOperator;)J", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.ILongUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates the element at index <c>i</c> with the results
            of applying the given function, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#getAndUpdate(int,%20java.util.function.LongUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.getAndUpdate(int, java.util.function.LongUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementAndGet">
      <MemberSignature Language="C#" Value="public long IncrementAndGet (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 IncrementAndGet(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.IncrementAndGet(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IncrementAndGet : int -&gt; int64" Usage="atomicLongArray.IncrementAndGet i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("incrementAndGet", "(I)J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("incrementAndGet", "(I)J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Atomically increments by one the element at index <c>i</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#incrementAndGet(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.incrementAndGet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicLongArray.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.Atomic.AtomicLongArray.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LazySet">
      <MemberSignature Language="C#" Value="public void LazySet (int i, long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LazySet(int32 i, int64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.LazySet(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.LazySet : int * int64 -&gt; unit" Usage="atomicLongArray.LazySet (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lazySet", "(IJ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lazySet", "(IJ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Eventually sets the element at position <c>i</c> to the given value.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#lazySet(int,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.lazySet(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.Length" />
      <MemberSignature Language="F#" Value="member this.Length : unit -&gt; int" Usage="atomicLongArray.Length " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("length", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("length", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of the array.</summary>
        <returns>the length of the array</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#length()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int i, long newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 i, int64 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.Set(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.Set : int * int64 -&gt; unit" Usage="atomicLongArray.Set (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(IJ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(IJ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at position <c>i</c> to the given value.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#set(int,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.set(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicLongArray.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.Atomic.AtomicLongArray.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicLongArray.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.Atomic.AtomicLongArray.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAndGet">
      <MemberSignature Language="C#" Value="public long UpdateAndGet (int i, Java.Util.Functions.ILongUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 UpdateAndGet(int32 i, class Java.Util.Functions.ILongUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.UpdateAndGet(System.Int32,Java.Util.Functions.ILongUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.UpdateAndGet : int * Java.Util.Functions.ILongUnaryOperator -&gt; int64" Usage="atomicLongArray.UpdateAndGet (i, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAndGet", "(ILjava/util/function/LongUnaryOperator;)J", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAndGet", "(ILjava/util/function/LongUnaryOperator;)J", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.ILongUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates the element at index <c>i</c> with the results
            of applying the given function, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#updateAndGet(int,%20java.util.function.LongUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.updateAndGet(int, java.util.function.LongUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSet (int i, long expect, long update);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSet(int32 i, int64 expect, int64 update) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicLongArray.WeakCompareAndSet(System.Int32,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSet : int * int64 * int64 -&gt; bool" Usage="atomicLongArray.WeakCompareAndSet (i, expect, update)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSet", "(IJJ)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSet", "(IJJ)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expect" Type="System.Int64" />
        <Parameter Name="update" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expect">the expected value</param>
        <param name="update">the new value</param>
        <summary>Atomically sets the element at position <c>i</c> to the given
            updated value if the current value <c>==</c> the expected value.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicLongArray#weakCompareAndSet(int,%20long,%20long)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet(int, long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
