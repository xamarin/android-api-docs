<Type Name="AtomicReferenceArray" FullName="Java.Util.Concurrent.Atomic.AtomicReferenceArray">
  <TypeSignature Language="C#" Value="public class AtomicReferenceArray : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicReferenceArray extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Atomic.AtomicReferenceArray" />
  <TypeSignature Language="F#" Value="type AtomicReferenceArray = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/atomic/AtomicReferenceArray", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/atomic/AtomicReferenceArray", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "E" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "E" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;E&gt;&lt;E&gt;">The base class of elements held in this array</param>
    <summary>An array of object references in which elements may be updated
            atomically.</summary>
    <remarks>
      <para>An array of object references in which elements may be updated
            atomically.  See the <c>VarHandle</c> specification for
            descriptions of the properties of atomic accesses.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicReferenceArray (Java.Lang.Object[]? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.Object[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.#ctor(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicReferenceArray : Java.Lang.Object[] -&gt; Java.Util.Concurrent.Atomic.AtomicReferenceArray" Usage="new Java.Util.Concurrent.Atomic.AtomicReferenceArray array" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object[]" />
      </Parameters>
      <Docs>
        <param name="array">the array to copy elements from</param>
        <summary>Creates a new AtomicReferenceArray with the same length as, and
            all elements copied from, the given array.</summary>
        <remarks>
          <para>Creates a new AtomicReferenceArray with the same length as, and
            all elements copied from, the given array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#AtomicReferenceArray(E[])" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.AtomicReferenceArray(E[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AtomicReferenceArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicReferenceArray : int -&gt; Java.Util.Concurrent.Atomic.AtomicReferenceArray" Usage="new Java.Util.Concurrent.Atomic.AtomicReferenceArray length" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">the length of the array</param>
        <summary>Creates a new AtomicReferenceArray of the given length, with all
            elements initially null.</summary>
        <remarks>
          <para>Creates a new AtomicReferenceArray of the given length, with all
            elements initially null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#AtomicReferenceArray(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.AtomicReferenceArray(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AtomicReferenceArray (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicReferenceArray : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.Atomic.AtomicReferenceArray" Usage="new Java.Util.Concurrent.Atomic.AtomicReferenceArray (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccumulateAndGet">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? AccumulateAndGet (int i, Java.Lang.Object? x, Java.Util.Functions.IBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object AccumulateAndGet(int32 i, class Java.Lang.Object x, class Java.Util.Functions.IBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.AccumulateAndGet(System.Int32,Java.Lang.Object,Java.Util.Functions.IBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.AccumulateAndGet : int * Java.Lang.Object * Java.Util.Functions.IBinaryOperator -&gt; Java.Lang.Object" Usage="atomicReferenceArray.AccumulateAndGet (i, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("accumulateAndGet", "(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("accumulateAndGet", "(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="x" Type="Java.Lang.Object" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function to the current and
            given values, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function to the current and
            given values, returning the updated value. The function should
            be side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.  The function is
            applied with the current value of the element at index <c>i</c>
            as its first argument, and the given update as the second
            argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#accumulateAndGet(int,%20E,%20java.util.function.BinaryOperator%3CE%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.accumulateAndGet(int, E, java.util.function.BinaryOperator&lt;E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchange">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? CompareAndExchange (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object CompareAndExchange(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.CompareAndExchange(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchange : int * Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="atomicReferenceArray.CompareAndExchange (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchange", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchange", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchange</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchange</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#compareAndExchange(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.compareAndExchange(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchangeAcquire">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? CompareAndExchangeAcquire (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object CompareAndExchangeAcquire(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.CompareAndExchangeAcquire(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchangeAcquire : int * Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="atomicReferenceArray.CompareAndExchangeAcquire (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchangeAcquire", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchangeAcquire", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeAcquire</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#compareAndExchangeAcquire(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.compareAndExchangeAcquire(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchangeRelease">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? CompareAndExchangeRelease (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object CompareAndExchangeRelease(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.CompareAndExchangeRelease(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchangeRelease : int * Java.Lang.Object * Java.Lang.Object -&gt; Java.Lang.Object" Usage="atomicReferenceArray.CompareAndExchangeRelease (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchangeRelease", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchangeRelease", "(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeRelease</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value, referred to as the &lt;em&gt;witness
            value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#compareAndExchangeRelease(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.compareAndExchangeRelease(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="C#" Value="public bool CompareAndSet (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CompareAndSet(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.CompareAndSet(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.CompareAndSet : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.CompareAndSet (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndSet", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndSet", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#compareAndSet</c>.</summary>
        <returns>
          <c>true</c> if successful. False return indicates that
            the actual value was not equal to the expected value.</returns>
        <remarks>
          <para>Atomically sets the element at index <c>i</c> to <c>newValue</c>
            if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#compareAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#compareAndSet(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Get (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Get(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.Get(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Get : int -&gt; Java.Lang.Object" Usage="atomicReferenceArray.Get i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(I)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(I)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>the current value</returns>
        <remarks>
          <para>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#get(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.get(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAcquire">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetAcquire (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetAcquire(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetAcquire(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetAcquire : int -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetAcquire i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAcquire", "(I)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAcquire", "(I)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getAcquire</c>.</summary>
        <returns>the value</returns>
        <remarks>
          <para>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getAcquire(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getAcquire(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndAccumulate">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetAndAccumulate (int i, Java.Lang.Object? x, Java.Util.Functions.IBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetAndAccumulate(int32 i, class Java.Lang.Object x, class Java.Util.Functions.IBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetAndAccumulate(System.Int32,Java.Lang.Object,Java.Util.Functions.IBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndAccumulate : int * Java.Lang.Object * Java.Util.Functions.IBinaryOperator -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetAndAccumulate (i, x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAccumulate", "(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAccumulate", "(ILjava/lang/Object;Ljava/util/function/BinaryOperator;)Ljava/lang/Object;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="x" Type="Java.Lang.Object" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function to the current and
            given values, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function to the current and
            given values, returning the previous value. The function should
            be side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.  The function is
            applied with the current value of the element at index <c>i</c>
            as its first argument, and the given update as the second
            argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getAndAccumulate(int,%20E,%20java.util.function.BinaryOperator%3CE%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getAndAccumulate(int, E, java.util.function.BinaryOperator&lt;E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndSet">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetAndSet (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetAndSet(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetAndSet(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.GetAndSet : int * Java.Lang.Object -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetAndSet (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndSet", "(ILjava/lang/Object;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndSet", "(ILjava/lang/Object;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the element at index <c>i</c> to <c>newValue</c> and returns the old value,
            with memory effects as specified by <c>VarHandle#getAndSet</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically sets the element at index <c>i</c> to <c>newValue</c> and returns the old value,
            with memory effects as specified by <c>VarHandle#getAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getAndSet(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getAndSet(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndUpdate">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetAndUpdate (int i, Java.Util.Functions.IUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetAndUpdate(int32 i, class Java.Util.Functions.IUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetAndUpdate(System.Int32,Java.Util.Functions.IUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndUpdate : int * Java.Util.Functions.IUnaryOperator -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetAndUpdate (i, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndUpdate", "(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndUpdate", "(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function, returning the
            previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function, returning the
            previous value. The function should be side-effect-free, since
            it may be re-applied when attempted updates fail due to
            contention among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getAndUpdate(int,%20java.util.function.UnaryOperator%3CE%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getAndUpdate(int, java.util.function.UnaryOperator&lt;E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOpaque">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetOpaque (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetOpaque(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetOpaque(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOpaque : int -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetOpaque i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOpaque", "(I)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOpaque", "(I)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getOpaque</c>.</summary>
        <returns>the value</returns>
        <remarks>
          <para>Returns the current value of the element at index <c>i</c>,
            with memory effects as specified by <c>VarHandle#getOpaque</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getOpaque(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getOpaque(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPlain">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetPlain (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object GetPlain(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.GetPlain(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetPlain : int -&gt; Java.Lang.Object" Usage="atomicReferenceArray.GetPlain i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPlain", "(I)Ljava/lang/Object;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPlain", "(I)Ljava/lang/Object;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <summary>Returns the current value of the element at index <c>i</c>,
            with memory semantics of reading as if the variable was declared
            non-<c>volatile</c>.</summary>
        <returns>the value</returns>
        <remarks>
          <para>Returns the current value of the element at index <c>i</c>,
            with memory semantics of reading as if the variable was declared
            non-<c>volatile</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#getPlain(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.getPlain(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicReferenceArray.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.Atomic.AtomicReferenceArray.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LazySet">
      <MemberSignature Language="C#" Value="public void LazySet (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LazySet(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.LazySet(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.LazySet : int * Java.Lang.Object -&gt; unit" Usage="atomicReferenceArray.LazySet (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lazySet", "(ILjava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lazySet", "(ILjava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</summary>
        <remarks>
          <para>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#lazySet(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.lazySet(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.Length" />
      <MemberSignature Language="F#" Value="member this.Length : unit -&gt; int" Usage="atomicReferenceArray.Length " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("length", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("length", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the length of the array.</summary>
        <returns>the length of the array</returns>
        <remarks>
          <para>Returns the length of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#length()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public void Set (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.Set(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.Set : int * Java.Lang.Object -&gt; unit" Usage="atomicReferenceArray.Set (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(ILjava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(ILjava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setVolatile</c>.</summary>
        <remarks>
          <para>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#set(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.set(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOpaque">
      <MemberSignature Language="C#" Value="public void SetOpaque (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOpaque(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.SetOpaque(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.SetOpaque : int * Java.Lang.Object -&gt; unit" Usage="atomicReferenceArray.SetOpaque (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOpaque", "(ILjava/lang/Object;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOpaque", "(ILjava/lang/Object;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setOpaque</c>.</summary>
        <remarks>
          <para>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setOpaque</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#setOpaque(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.setOpaque(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlain">
      <MemberSignature Language="C#" Value="public void SetPlain (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPlain(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.SetPlain(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.SetPlain : int * Java.Lang.Object -&gt; unit" Usage="atomicReferenceArray.SetPlain (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPlain", "(ILjava/lang/Object;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPlain", "(ILjava/lang/Object;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory semantics of setting as if the variable was
            declared non-<c>volatile</c> and non-<c>final</c>.</summary>
        <remarks>
          <para>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory semantics of setting as if the variable was
            declared non-<c>volatile</c> and non-<c>final</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#setPlain(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.setPlain(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRelease">
      <MemberSignature Language="C#" Value="public void SetRelease (int i, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRelease(int32 i, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.SetRelease(System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.SetRelease : int * Java.Lang.Object -&gt; unit" Usage="atomicReferenceArray.SetRelease (i, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRelease", "(ILjava/lang/Object;)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRelease", "(ILjava/lang/Object;)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="newValue">the new value</param>
        <summary>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</summary>
        <remarks>
          <para>Sets the element at index <c>i</c> to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#setRelease(int,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.setRelease(int, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicReferenceArray.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.Atomic.AtomicReferenceArray.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicReferenceArray.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.Atomic.AtomicReferenceArray.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAndGet">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? UpdateAndGet (int i, Java.Util.Functions.IUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object UpdateAndGet(int32 i, class Java.Util.Functions.IUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.UpdateAndGet(System.Int32,Java.Util.Functions.IUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.UpdateAndGet : int * Java.Util.Functions.IUnaryOperator -&gt; Java.Lang.Object" Usage="atomicReferenceArray.UpdateAndGet (i, updateFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAndGet", "(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAndGet", "(ILjava/util/function/UnaryOperator;)Ljava/lang/Object;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function, returning the
            updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the element at index <c>i</c> with
            the results of applying the given function, returning the
            updated value. The function should be side-effect-free, since it
            may be re-applied when attempted updates fail due to contention
            among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#updateAndGet(int,%20java.util.function.UnaryOperator%3CE%3E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.updateAndGet(int, java.util.function.UnaryOperator&lt;E&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSet (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSet(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.WeakCompareAndSet(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSet : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.WeakCompareAndSet (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSet", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSet", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</para>
          <para>This member is deprecated. This method has plain memory effects but the method
            name implies volatile memory effects (see methods such as
            <c>#compareAndExchange</c> and <c>#compareAndSet</c>).  To avoid
            confusion over plain or volatile memory effects it is recommended that
            the method <c>#weakCompareAndSetPlain</c> be used instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#weakCompareAndSet(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSet(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetAcquire">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetAcquire (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetAcquire(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.WeakCompareAndSetAcquire(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetAcquire : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.WeakCompareAndSetAcquire (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetAcquire", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetAcquire", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetAcquire</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#weakCompareAndSetAcquire(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSetAcquire(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetPlain">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetPlain (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetPlain(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.WeakCompareAndSetPlain(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetPlain : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.WeakCompareAndSetPlain (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetPlain", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetPlain", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#weakCompareAndSetPlain(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSetPlain(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetRelease">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetRelease (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetRelease(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.WeakCompareAndSetRelease(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetRelease : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.WeakCompareAndSetRelease (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetRelease", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetRelease", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetRelease</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#weakCompareAndSetRelease(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSetRelease(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetVolatile">
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetVolatile (int i, Java.Lang.Object? expectedValue, Java.Lang.Object? newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetVolatile(int32 i, class Java.Lang.Object expectedValue, class Java.Lang.Object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicReferenceArray.WeakCompareAndSetVolatile(System.Int32,Java.Lang.Object,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetVolatile : int * Java.Lang.Object * Java.Lang.Object -&gt; bool" Usage="atomicReferenceArray.WeakCompareAndSetVolatile (i, expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetVolatile", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetVolatile", "(ILjava/lang/Object;Ljava/lang/Object;)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="expectedValue" Type="Java.Lang.Object" />
        <Parameter Name="newValue" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="i">the index</param>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSet</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the element at index <c>i</c> to
            <c>newValue</c> if the element's current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSet</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicReferenceArray#weakCompareAndSetVolatile(int,%20E,%20E)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSetVolatile(int, E, E)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
