<Type Name="AtomicInteger" FullName="Java.Util.Concurrent.Atomic.AtomicInteger">
  <TypeSignature Language="VB.NET" Value="Public Class AtomicInteger&#xA;Inherits Number&#xA;Implements IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AtomicInteger : Java::Lang::Number, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class AtomicInteger : Java.Lang.Number, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AtomicInteger extends Java.Lang.Number implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Concurrent.Atomic.AtomicInteger" />
  <TypeSignature Language="F#" Value="type AtomicInteger = class&#xA;    inherit Number&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Number</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/concurrent/atomic/AtomicInteger", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/concurrent/atomic/AtomicInteger", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An <c>int</c> value that may be updated atomically.</summary>
    <remarks>
      <para>An <c>int</c> value that may be updated atomically.  See the
            <c>VarHandle</c> specification for descriptions of the properties
            of atomic accesses. An <c>AtomicInteger</c> is used in
            applications such as atomically incremented counters, and cannot be
            used as a replacement for an <c>java.lang.Integer</c>. However,
            this class does extend <c>Number</c> to allow uniform access by
            tools and utilities that deal with numerically-based classes.</para>
      <para>Added in 1.5.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AtomicInteger();" />
      <MemberSignature Language="C#" Value="public AtomicInteger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new AtomicInteger with initial value <c>0</c>.</summary>
        <remarks>
          <para>Creates a new AtomicInteger with initial value <c>0</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#AtomicInteger()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.AtomicInteger()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (initialValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AtomicInteger(int initialValue);" />
      <MemberSignature Language="C#" Value="public AtomicInteger (int initialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 initialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.#ctor(System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicInteger : int -&gt; Java.Util.Concurrent.Atomic.AtomicInteger" Usage="new Java.Util.Concurrent.Atomic.AtomicInteger initialValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="initialValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="initialValue">the initial value</param>
        <summary>Creates a new AtomicInteger with the given initial value.</summary>
        <remarks>
          <para>Creates a new AtomicInteger with the given initial value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#AtomicInteger(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.AtomicInteger(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AtomicInteger(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AtomicInteger (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Util.Concurrent.Atomic.AtomicInteger : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Util.Concurrent.Atomic.AtomicInteger" Usage="new Java.Util.Concurrent.Atomic.AtomicInteger (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccumulateAndGet">
      <MemberSignature Language="VB.NET" Value="Public Function AccumulateAndGet (x As Integer, accumulatorFunction As IIntBinaryOperator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AccumulateAndGet(int x, Java::Util::Functions::IIntBinaryOperator ^ accumulatorFunction);" />
      <MemberSignature Language="C#" Value="public int AccumulateAndGet (int x, Java.Util.Functions.IIntBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AccumulateAndGet(int32 x, class Java.Util.Functions.IIntBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.AccumulateAndGet(System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.AccumulateAndGet : int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="atomicInteger.AccumulateAndGet (x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("accumulateAndGet", "(ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("accumulateAndGet", "(ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function to the current and given values,
            returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function to the current and given values,
            returning the updated value. The function should be
            side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.  The function is
            applied with the current value as its first argument, and the
            given update as the second argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#accumulateAndGet(int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.accumulateAndGet(int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Acquire As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Acquire { int get(); };" />
      <MemberSignature Language="C#" Value="public int Acquire { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Acquire" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.Acquire" />
      <MemberSignature Language="F#" Value="member this.Acquire : int" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.Acquire" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAcquire", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAcquire", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current value,
            with memory effects as specified by <c>VarHandle#getAcquire</c>.</summary>
        <value>the value</value>
        <remarks>
          <para>Returns the current value,
            with memory effects as specified by <c>VarHandle#getAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAcquire()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAcquire()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAndGet">
      <MemberSignature Language="VB.NET" Value="Public Function AddAndGet (delta As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int AddAndGet(int delta);" />
      <MemberSignature Language="C#" Value="public int AddAndGet (int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 AddAndGet(int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.AddAndGet(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.AddAndGet : int -&gt; int" Usage="atomicInteger.AddAndGet delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addAndGet", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addAndGet", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically adds the given value to the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#addAndGet(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.addAndGet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AndDecrement">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AndDecrement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AndDecrement { int get(); };" />
      <MemberSignature Language="C#" Value="public int AndDecrement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AndDecrement" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.AndDecrement" />
      <MemberSignature Language="F#" Value="member this.AndDecrement : int" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.AndDecrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This property was generated for getAndDecrement() method, while it does not make sense. It will be removed in the future version")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property was generated for getAndDecrement() method, while it does not make sense. It will be removed in the future version")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Atomically decrements by one the current value.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AndIncrement">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AndIncrement As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AndIncrement { int get(); };" />
      <MemberSignature Language="C#" Value="public int AndIncrement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AndIncrement" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.AndIncrement" />
      <MemberSignature Language="F#" Value="member this.AndIncrement : int" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.AndIncrement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This property was generated for getAndIncrement() method, while it does not make sense. It will be removed in the future version")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This property was generated for getAndIncrement() method, while it does not make sense. It will be removed in the future version")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Atomically increments by one the current value.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchange">
      <MemberSignature Language="VB.NET" Value="Public Function CompareAndExchange (expectedValue As Integer, newValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareAndExchange(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public int CompareAndExchange (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareAndExchange(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.CompareAndExchange(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchange : int * int -&gt; int" Usage="atomicInteger.CompareAndExchange (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchange", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchange", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchange</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchange</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#compareAndExchange(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.compareAndExchange(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchangeAcquire">
      <MemberSignature Language="VB.NET" Value="Public Function CompareAndExchangeAcquire (expectedValue As Integer, newValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareAndExchangeAcquire(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public int CompareAndExchangeAcquire (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareAndExchangeAcquire(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.CompareAndExchangeAcquire(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchangeAcquire : int * int -&gt; int" Usage="atomicInteger.CompareAndExchangeAcquire (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchangeAcquire", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchangeAcquire", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeAcquire</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#compareAndExchangeAcquire(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.compareAndExchangeAcquire(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndExchangeRelease">
      <MemberSignature Language="VB.NET" Value="Public Function CompareAndExchangeRelease (expectedValue As Integer, newValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareAndExchangeRelease(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public int CompareAndExchangeRelease (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareAndExchangeRelease(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.CompareAndExchangeRelease(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CompareAndExchangeRelease : int * int -&gt; int" Usage="atomicInteger.CompareAndExchangeRelease (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndExchangeRelease", "(II)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndExchangeRelease", "(II)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeRelease</c>.</summary>
        <returns>the witness value, which will be the same as the
            expected value if successful</returns>
        <remarks>
          <para>Atomically sets the value to <c>newValue</c> if the current value,
            referred to as the &lt;em&gt;witness value&lt;/em&gt;, <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#compareAndExchangeRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#compareAndExchangeRelease(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.compareAndExchangeRelease(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareAndSet">
      <MemberSignature Language="VB.NET" Value="Public Function CompareAndSet (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CompareAndSet(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool CompareAndSet (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CompareAndSet(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.CompareAndSet(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CompareAndSet : int * int -&gt; bool" Usage="atomicInteger.CompareAndSet (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareAndSet", "(II)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareAndSet", "(II)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#compareAndSet</c>.</summary>
        <returns>
          <c>true</c> if successful. False return indicates that
            the actual value was not equal to the expected value.</returns>
        <remarks>
          <para>Atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#compareAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#compareAndSet(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.compareAndSet(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DecrementAndGet">
      <MemberSignature Language="VB.NET" Value="Public Function DecrementAndGet () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DecrementAndGet();" />
      <MemberSignature Language="C#" Value="public int DecrementAndGet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DecrementAndGet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.DecrementAndGet" />
      <MemberSignature Language="F#" Value="member this.DecrementAndGet : unit -&gt; int" Usage="atomicInteger.DecrementAndGet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decrementAndGet", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decrementAndGet", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically decrements the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically decrements the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>Equivalent to <c>addAndGet(-1)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#decrementAndGet()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.decrementAndGet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DoubleValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DoubleValue () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double DoubleValue();" />
      <MemberSignature Language="C#" Value="public override double DoubleValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 DoubleValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.DoubleValue" />
      <MemberSignature Language="F#" Value="override this.DoubleValue : unit -&gt; double" Usage="atomicInteger.DoubleValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doubleValue", "()D", "GetDoubleValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current value of this <c>AtomicInteger</c> as a
            <c>double</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the current value of this <c>AtomicInteger</c> as a
            <c>double</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#doubleValue()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.doubleValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FloatValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FloatValue () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float FloatValue();" />
      <MemberSignature Language="C#" Value="public override float FloatValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 FloatValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.FloatValue" />
      <MemberSignature Language="F#" Value="override this.FloatValue : unit -&gt; single" Usage="atomicInteger.FloatValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("floatValue", "()F", "GetFloatValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current value of this <c>AtomicInteger</c> as a
            <c>float</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the current value of this <c>AtomicInteger</c> as a
            <c>float</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#floatValue()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.floatValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="VB.NET" Value="Public Function Get () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Get();" />
      <MemberSignature Language="C#" Value="public int Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.Get" />
      <MemberSignature Language="F#" Value="member this.Get : unit -&gt; int" Usage="atomicInteger.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current value,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>the current value</returns>
        <remarks>
          <para>Returns the current value,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#get()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndAccumulate">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndAccumulate (x As Integer, accumulatorFunction As IIntBinaryOperator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndAccumulate(int x, Java::Util::Functions::IIntBinaryOperator ^ accumulatorFunction);" />
      <MemberSignature Language="C#" Value="public int GetAndAccumulate (int x, Java.Util.Functions.IIntBinaryOperator? accumulatorFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndAccumulate(int32 x, class Java.Util.Functions.IIntBinaryOperator accumulatorFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndAccumulate(System.Int32,Java.Util.Functions.IIntBinaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndAccumulate : int * Java.Util.Functions.IIntBinaryOperator -&gt; int" Usage="atomicInteger.GetAndAccumulate (x, accumulatorFunction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAccumulate", "(ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAccumulate", "(ILjava/util/function/IntBinaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="accumulatorFunction" Type="Java.Util.Functions.IIntBinaryOperator" />
      </Parameters>
      <Docs>
        <param name="x">the update value</param>
        <param name="accumulatorFunction">a side-effect-free function of two arguments</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function to the current and given values,
            returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function to the current and given values,
            returning the previous value. The function should be
            side-effect-free, since it may be re-applied when attempted
            updates fail due to contention among threads.  The function is
            applied with the current value as its first argument, and the
            given update as the second argument.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndAccumulate(int,%20java.util.function.IntBinaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndAccumulate(int, java.util.function.IntBinaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndAdd">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndAdd (delta As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndAdd(int delta);" />
      <MemberSignature Language="C#" Value="public int GetAndAdd (int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndAdd(int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndAdd(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetAndAdd : int -&gt; int" Usage="atomicInteger.GetAndAdd delta" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndAdd", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndAdd", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delta">the value to add</param>
        <summary>Atomically adds the given value to the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically adds the given value to the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndAdd(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndAdd(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndDecrement">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndDecrement () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndDecrement();" />
      <MemberSignature Language="C#" Value="public int GetAndDecrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndDecrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndDecrement" />
      <MemberSignature Language="F#" Value="member this.GetAndDecrement : unit -&gt; int" Usage="atomicInteger.GetAndDecrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndDecrement", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndDecrement", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically decrements the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically decrements the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>Equivalent to <c>getAndAdd(-1)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndDecrement()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndDecrement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndIncrement">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndIncrement () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndIncrement();" />
      <MemberSignature Language="C#" Value="public int GetAndIncrement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndIncrement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndIncrement" />
      <MemberSignature Language="F#" Value="member this.GetAndIncrement : unit -&gt; int" Usage="atomicInteger.GetAndIncrement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndIncrement", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndIncrement", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically increments the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically increments the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>Equivalent to <c>getAndAdd(1)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndIncrement()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndIncrement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAndSet">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndSet (newValue As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndSet(int newValue);" />
      <MemberSignature Language="C#" Value="public int GetAndSet (int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndSet(int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndSet(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetAndSet : int -&gt; int" Usage="atomicInteger.GetAndSet newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndSet", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndSet", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Atomically sets the value to <c>newValue</c> and returns the old value,
            with memory effects as specified by <c>VarHandle#getAndSet</c>.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically sets the value to <c>newValue</c> and returns the old value,
            with memory effects as specified by <c>VarHandle#getAndSet</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndSet(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndSet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAndUpdate">
      <MemberSignature Language="VB.NET" Value="Public Function GetAndUpdate (updateFunction As IIntUnaryOperator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetAndUpdate(Java::Util::Functions::IIntUnaryOperator ^ updateFunction);" />
      <MemberSignature Language="C#" Value="public int GetAndUpdate (Java.Util.Functions.IIntUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetAndUpdate(class Java.Util.Functions.IIntUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.GetAndUpdate(Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.GetAndUpdate : Java.Util.Functions.IIntUnaryOperator -&gt; int" Usage="atomicInteger.GetAndUpdate updateFunction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAndUpdate", "(Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAndUpdate", "(Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function, returning the previous value.</summary>
        <returns>the previous value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function, returning the previous value. The
            function should be side-effect-free, since it may be re-applied
            when attempted updates fail due to contention among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getAndUpdate(java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getAndUpdate(java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementAndGet">
      <MemberSignature Language="VB.NET" Value="Public Function IncrementAndGet () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IncrementAndGet();" />
      <MemberSignature Language="C#" Value="public int IncrementAndGet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IncrementAndGet() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.IncrementAndGet" />
      <MemberSignature Language="F#" Value="member this.IncrementAndGet : unit -&gt; int" Usage="atomicInteger.IncrementAndGet " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("incrementAndGet", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("incrementAndGet", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Atomically increments the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically increments the current value,
            with memory effects as specified by <c>VarHandle#getAndAdd</c>.</para>
          <para>Equivalent to <c>addAndGet(1)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#incrementAndGet()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.incrementAndGet()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IntValue () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int IntValue();" />
      <MemberSignature Language="C#" Value="public override int IntValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 IntValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.IntValue" />
      <MemberSignature Language="F#" Value="override this.IntValue : unit -&gt; int" Usage="atomicInteger.IntValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("intValue", "()I", "GetIntValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current value of this <c>AtomicInteger</c> as an
            <c>int</c>,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the current value of this <c>AtomicInteger</c> as an
            <c>int</c>,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.
            
            Equivalent to <c>#get()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#intValue()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.intValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LazySet">
      <MemberSignature Language="VB.NET" Value="Public Sub LazySet (newValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LazySet(int newValue);" />
      <MemberSignature Language="C#" Value="public void LazySet (int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LazySet(int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.LazySet(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.LazySet : int -&gt; unit" Usage="atomicInteger.LazySet newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lazySet", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lazySet", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</summary>
        <remarks>
          <para>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#lazySet(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.lazySet(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="LongValue">
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LongValue () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long LongValue();" />
      <MemberSignature Language="C#" Value="public override long LongValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 LongValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.LongValue" />
      <MemberSignature Language="F#" Value="override this.LongValue : unit -&gt; int64" Usage="atomicInteger.LongValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("longValue", "()J", "GetLongValueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current value of this <c>AtomicInteger</c> as a
            <c>long</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the current value of this <c>AtomicInteger</c> as a
            <c>long</c> after a widening primitive conversion,
            with memory effects as specified by <c>VarHandle#getVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#longValue()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.longValue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Opaque">
      <MemberSignature Language="VB.NET" Value="Public Property Opaque As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Opaque { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Opaque { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Opaque" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.Opaque" />
      <MemberSignature Language="F#" Value="member this.Opaque : int with get, set" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.Opaque" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOpaque", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOpaque", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setOpaque", "(I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setOpaque", "(I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Returns the current value,
            with memory effects as specified by <c>VarHandle#getOpaque</c>. -or- Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setOpaque</c>.</summary>
        <value>the value</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current value,
            with memory effects as specified by <c>VarHandle#getOpaque</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getOpaque()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getOpaque()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setOpaque</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#setOpaque(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.setOpaque(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Plain">
      <MemberSignature Language="VB.NET" Value="Public Property Plain As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Plain { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public int Plain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Plain" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.Plain" />
      <MemberSignature Language="F#" Value="member this.Plain : int with get, set" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.Plain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlain", "()I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlain", "()I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPlain", "(I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPlain", "(I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Returns the current value, with memory semantics of reading as
            if the variable was declared non-<c>volatile</c>. -or- Sets the value to <c>newValue</c>, with memory semantics
            of setting as if the variable was declared non-<c>volatile</c>
            and non-<c>final</c>.</summary>
        <value>the value</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current value, with memory semantics of reading as
            if the variable was declared non-<c>volatile</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#getPlain()" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.getPlain()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the value to <c>newValue</c>, with memory semantics
            of setting as if the variable was declared non-<c>volatile</c>
            and non-<c>final</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#setPlain(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.setPlain(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="VB.NET" Value="Public Sub Set (newValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Set(int newValue);" />
      <MemberSignature Language="C#" Value="public void Set (int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Set(int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.Set(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Set : int -&gt; unit" Usage="atomicInteger.Set newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setVolatile</c>.</summary>
        <remarks>
          <para>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setVolatile</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#set(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.set(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRelease">
      <MemberSignature Language="VB.NET" Value="Public Sub SetRelease (newValue As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetRelease(int newValue);" />
      <MemberSignature Language="C#" Value="public void SetRelease (int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRelease(int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.SetRelease(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetRelease : int -&gt; unit" Usage="atomicInteger.SetRelease newValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRelease", "(I)V", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRelease", "(I)V", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="newValue">the new value</param>
        <summary>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</summary>
        <remarks>
          <para>Sets the value to <c>newValue</c>,
            with memory effects as specified by <c>VarHandle#setRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#setRelease(int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.setRelease(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Util.Concurrent.Atomic.AtomicInteger.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Util.Concurrent.Atomic.AtomicInteger.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateAndGet">
      <MemberSignature Language="VB.NET" Value="Public Function UpdateAndGet (updateFunction As IIntUnaryOperator) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int UpdateAndGet(Java::Util::Functions::IIntUnaryOperator ^ updateFunction);" />
      <MemberSignature Language="C#" Value="public int UpdateAndGet (Java.Util.Functions.IIntUnaryOperator? updateFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 UpdateAndGet(class Java.Util.Functions.IIntUnaryOperator updateFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.UpdateAndGet(Java.Util.Functions.IIntUnaryOperator)" />
      <MemberSignature Language="F#" Value="member this.UpdateAndGet : Java.Util.Functions.IIntUnaryOperator -&gt; int" Usage="atomicInteger.UpdateAndGet updateFunction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateAndGet", "(Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateAndGet", "(Ljava/util/function/IntUnaryOperator;)I", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="updateFunction" Type="Java.Util.Functions.IIntUnaryOperator" />
      </Parameters>
      <Docs>
        <param name="updateFunction">a side-effect-free function</param>
        <summary>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function, returning the updated value.</summary>
        <returns>the updated value</returns>
        <remarks>
          <para>Atomically updates (with memory effects as specified by <c>VarHandle#compareAndSet</c>) the current value with the results of
            applying the given function, returning the updated value. The
            function should be side-effect-free, since it may be re-applied
            when attempted updates fail due to contention among threads.</para>
          <para>Added in 1.8.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#updateAndGet(java.util.function.IntUnaryOperator)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.updateAndGet(java.util.function.IntUnaryOperator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSet">
      <MemberSignature Language="VB.NET" Value="Public Function WeakCompareAndSet (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WeakCompareAndSet(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSet (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSet(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.WeakCompareAndSet(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSet : int * int -&gt; bool" Usage="atomicInteger.WeakCompareAndSet (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSet", "(II)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSet", "(II)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</para>
          <para>This member is deprecated. This method has plain memory effects but the method
            name implies volatile memory effects (see methods such as
            <c>#compareAndExchange</c> and <c>#compareAndSet</c>).  To avoid
            confusion over plain or volatile memory effects it is recommended that
            the method <c>#weakCompareAndSetPlain</c> be used instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#weakCompareAndSet(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetAcquire">
      <MemberSignature Language="VB.NET" Value="Public Function WeakCompareAndSetAcquire (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WeakCompareAndSetAcquire(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetAcquire (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetAcquire(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.WeakCompareAndSetAcquire(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetAcquire : int * int -&gt; bool" Usage="atomicInteger.WeakCompareAndSetAcquire (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetAcquire", "(II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetAcquire", "(II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetAcquire</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetAcquire</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#weakCompareAndSetAcquire(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetAcquire(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetPlain">
      <MemberSignature Language="VB.NET" Value="Public Function WeakCompareAndSetPlain (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WeakCompareAndSetPlain(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetPlain (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetPlain(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.WeakCompareAndSetPlain(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetPlain : int * int -&gt; bool" Usage="atomicInteger.WeakCompareAndSetPlain (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetPlain", "(II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetPlain", "(II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the value to <c>newValue</c>
            if the current value <c>== expectedValue</c>,
            with memory effects as specified by <c>VarHandle#weakCompareAndSetPlain</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#weakCompareAndSetPlain(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetPlain(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetRelease">
      <MemberSignature Language="VB.NET" Value="Public Function WeakCompareAndSetRelease (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WeakCompareAndSetRelease(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetRelease (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetRelease(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.WeakCompareAndSetRelease(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetRelease : int * int -&gt; bool" Usage="atomicInteger.WeakCompareAndSetRelease (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetRelease", "(II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetRelease", "(II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetRelease</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSetRelease</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#weakCompareAndSetRelease(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetRelease(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WeakCompareAndSetVolatile">
      <MemberSignature Language="VB.NET" Value="Public Function WeakCompareAndSetVolatile (expectedValue As Integer, newValue As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WeakCompareAndSetVolatile(int expectedValue, int newValue);" />
      <MemberSignature Language="C#" Value="public bool WeakCompareAndSetVolatile (int expectedValue, int newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool WeakCompareAndSetVolatile(int32 expectedValue, int32 newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Concurrent.Atomic.AtomicInteger.WeakCompareAndSetVolatile(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WeakCompareAndSetVolatile : int * int -&gt; bool" Usage="atomicInteger.WeakCompareAndSetVolatile (expectedValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("weakCompareAndSetVolatile", "(II)Z", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("weakCompareAndSetVolatile", "(II)Z", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedValue" Type="System.Int32" />
        <Parameter Name="newValue" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expectedValue">the expected value</param>
        <param name="newValue">the new value</param>
        <summary>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSet</c>.</summary>
        <returns>
          <c>true</c> if successful</returns>
        <remarks>
          <para>Possibly atomically sets the value to <c>newValue</c> if
            the current value <c>== expectedValue</c>,
            with memory effects as specified by
            <c>VarHandle#weakCompareAndSet</c>.</para>
          <para>Added in 9.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/concurrent/atomic/AtomicInteger#weakCompareAndSetVolatile(int,%20int)" title="Reference documentation">Java documentation for <code>java.util.concurrent.atomic.AtomicInteger.weakCompareAndSetVolatile(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
