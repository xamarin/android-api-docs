<Type Name="ChangeTransform" FullName="Android.Transitions.ChangeTransform">
  <TypeSignature Language="VB.NET" Value="Public Class ChangeTransform&#xA;Inherits Transition" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChangeTransform : Android::Transitions::Transition" />
  <TypeSignature Language="C#" Value="public class ChangeTransform : Android.Transitions.Transition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChangeTransform extends Android.Transitions.Transition" />
  <TypeSignature Language="DocId" Value="T:Android.Transitions.ChangeTransform" />
  <TypeSignature Language="F#" Value="type ChangeTransform = class&#xA;    inherit Transition" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Transitions.Transition</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/transition/ChangeTransform", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/transition/ChangeTransform", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>This Transition captures scale and rotation for Views before and after the
            scene change and animates those changes during the transition.</summary>
    <remarks>
      <para>This Transition captures scale and rotation for Views before and after the
            scene change and animates those changes during the transition.</para>
      <para>A change in parent is handled as well by capturing the transforms from
            the parent before and after the scene change and animating those during the
            transition.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/transition/ChangeTransform" title="Reference documentation">Java documentation for <code>android.transition.ChangeTransform</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChangeTransform();" />
      <MemberSignature Language="C#" Value="public ChangeTransform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.ChangeTransform.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, attrs As IAttributeSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChangeTransform(Android::Content::Context ^ context, Android::Util::IAttributeSet ^ attrs);" />
      <MemberSignature Language="C#" Value="public ChangeTransform (Android.Content.Context? context, Android.Util.IAttributeSet? attrs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Util.IAttributeSet attrs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.ChangeTransform.#ctor(Android.Content.Context,Android.Util.IAttributeSet)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.ChangeTransform : Android.Content.Context * Android.Util.IAttributeSet -&gt; Android.Transitions.ChangeTransform" Usage="new Android.Transitions.ChangeTransform (context, attrs)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="attrs" Type="Android.Util.IAttributeSet" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="attrs">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChangeTransform(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected ChangeTransform (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.ChangeTransform.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Transitions.ChangeTransform : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Transitions.ChangeTransform" Usage="new Android.Transitions.ChangeTransform (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureEndValues">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CaptureEndValues (transitionValues As TransitionValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CaptureEndValues(Android::Transitions::TransitionValues ^ transitionValues);" />
      <MemberSignature Language="C#" Value="public override void CaptureEndValues (Android.Transitions.TransitionValues? transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CaptureEndValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.ChangeTransform.CaptureEndValues(Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="override this.CaptureEndValues : Android.Transitions.TransitionValues -&gt; unit" Usage="changeTransform.CaptureEndValues transitionValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("captureEndValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureEndValues_Landroid_transition_TransitionValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("captureEndValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureEndValues_Landroid_transition_TransitionValues_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the end scene for the properties that this
 transition monitors.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureStartValues">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CaptureStartValues (transitionValues As TransitionValues)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CaptureStartValues(Android::Transitions::TransitionValues ^ transitionValues);" />
      <MemberSignature Language="C#" Value="public override void CaptureStartValues (Android.Transitions.TransitionValues? transitionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CaptureStartValues(class Android.Transitions.TransitionValues transitionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Transitions.ChangeTransform.CaptureStartValues(Android.Transitions.TransitionValues)" />
      <MemberSignature Language="F#" Value="override this.CaptureStartValues : Android.Transitions.TransitionValues -&gt; unit" Usage="changeTransform.CaptureStartValues transitionValues" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("captureStartValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureStartValues_Landroid_transition_TransitionValues_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("captureStartValues", "(Landroid/transition/TransitionValues;)V", "GetCaptureStartValues_Landroid_transition_TransitionValues_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transitionValues" Type="Android.Transitions.TransitionValues" />
      </Parameters>
      <Docs>
        <param name="transitionValues">The holder for any values that the Transition
 wishes to store. Values are stored in the <c>values</c> field
 of this TransitionValues object and are keyed from
 a String value. For example, to store a view's rotation value,
 a transition might call
 <c>transitionValues.values.put("appname:transitionname:rotation",
 view.getRotation())</c>. The target view will already be stored in
 the transitionValues structure when this method is called.</param>
        <summary>Captures the values in the start scene for the properties that this
 transition monitors.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.ChangeTransform.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Transitions.ChangeTransform.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reparent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Reparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Reparent { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool Reparent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Reparent" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.ChangeTransform.Reparent" />
      <MemberSignature Language="F#" Value="member this.Reparent : bool with get, set" Usage="Android.Transitions.ChangeTransform.Reparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReparent", "()Z", "GetGetReparentHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReparent", "()Z", "GetGetReparentHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReparent", "(Z)V", "GetSetReparent_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReparent", "(Z)V", "GetSetReparent_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="reparent">Set to true to track parent changes or false to only track changes
                            of the transitioning view without considering the parent change.</param>
        <summary>Returns whether parent changes will be tracked by the ChangeTransform. -or- Sets whether parent changes will be tracked by the ChangeTransform.</summary>
        <value>whether parent changes will be tracked by the ChangeTransform.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether parent changes will be tracked by the ChangeTransform. If parent
            changes are tracked, then the transform will adjust to the transforms of the
            different parents. If they aren't tracked, only the transforms of the transitioning
            view will be tracked. Default is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/ChangeTransform#getReparent()" title="Reference documentation">Java documentation for <code>android.transition.ChangeTransform.getReparent()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether parent changes will be tracked by the ChangeTransform. If parent
            changes are tracked, then the transform will adjust to the transforms of the
            different parents. If they aren't tracked, only the transforms of the transitioning
            view will be tracked. Default is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/ChangeTransform#setReparent(boolean)" title="Reference documentation">Java documentation for <code>android.transition.ChangeTransform.setReparent(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReparentWithOverlay">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReparentWithOverlay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReparentWithOverlay { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool ReparentWithOverlay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReparentWithOverlay" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.ChangeTransform.ReparentWithOverlay" />
      <MemberSignature Language="F#" Value="member this.ReparentWithOverlay : bool with get, set" Usage="Android.Transitions.ChangeTransform.ReparentWithOverlay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getReparentWithOverlay", "()Z", "GetGetReparentWithOverlayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getReparentWithOverlay", "()Z", "GetGetReparentWithOverlayHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setReparentWithOverlay", "(Z)V", "GetSetReparentWithOverlay_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setReparentWithOverlay", "(Z)V", "GetSetReparentWithOverlay_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="reparentWithOverlay">
          <c>true</c> when a changed parent should execute the
                                       transition inside the scene root's overlay or <c>false</c>
                                       if a parent change only affects the transform of the transitioning
                                       view.</param>
        <summary>Returns whether changes to parent should use an overlay or not. -or- Sets whether changes to parent should use an overlay or not.</summary>
        <value>
          <c>true</c> when a changed parent should execute the transition
            inside the scene root's overlay or <c>false</c> if a parent change only
            affects the transform of the transitioning view.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether changes to parent should use an overlay or not. When the parent
            change doesn't use an overlay, it affects the transforms of the child. The
            default value is <c>true</c>.</para>
          <para>Note: when Overlays are not used when a parent changes, a view can be clipped when
            it moves outside the bounds of its parent. Setting
            <c>android.view.ViewGroup#setClipChildren(boolean)</c> and
            <c>android.view.ViewGroup#setClipToPadding(boolean)</c> can help. Also, when
            Overlays are not used and the parent is animating its location, the position of the
            child view will be relative to its parent's final position, so it may appear to "jump"
            at the beginning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/ChangeTransform#getReparentWithOverlay()" title="Reference documentation">Java documentation for <code>android.transition.ChangeTransform.getReparentWithOverlay()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether changes to parent should use an overlay or not. When the parent
            change doesn't use an overlay, it affects the transforms of the child. The
            default value is <c>true</c>.</para>
          <para>Note: when Overlays are not used when a parent changes, a view can be clipped when
            it moves outside the bounds of its parent. Setting
            <c>android.view.ViewGroup#setClipChildren(boolean)</c> and
            <c>android.view.ViewGroup#setClipToPadding(boolean)</c> can help. Also, when
            Overlays are not used and the parent is animating its location, the position of the
            child view will be relative to its parent's final position, so it may appear to "jump"
            at the beginning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/transition/ChangeTransform#setReparentWithOverlay(boolean)" title="Reference documentation">Java documentation for <code>android.transition.ChangeTransform.setReparentWithOverlay(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.ChangeTransform.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Transitions.ChangeTransform.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Transitions.ChangeTransform.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Transitions.ChangeTransform.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
